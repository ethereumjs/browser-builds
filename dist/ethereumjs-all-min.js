(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.EthJS = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};/* Copyright (c) 2013 Rod Vagg, MIT License */function AbstractChainedBatch(a){this._db=a,this._operations=[],this._written=!1}AbstractChainedBatch.prototype._checkWritten=function(){if(this._written)throw new Error('write() already called on this batch')},AbstractChainedBatch.prototype.put=function(a,b){this._checkWritten();var c=this._db._checkKey(a,'key',this._db._isBuffer);if(c)throw c;return this._db._isBuffer(a)||(a=a+''),this._db._isBuffer(b)||(b=b+''),'function'==typeof this._put?this._put(a,b):this._operations.push({type:'put',key:a,value:b}),this},AbstractChainedBatch.prototype.del=function(a){this._checkWritten();var b=this._db._checkKey(a,'key',this._db._isBuffer);if(b)throw b;return this._db._isBuffer(a)||(a=a+''),'function'==typeof this._del?this._del(a):this._operations.push({type:'del',key:a}),this},AbstractChainedBatch.prototype.clear=function(){return this._checkWritten(),this._operations=[],'function'==typeof this._clear&&this._clear(),this},AbstractChainedBatch.prototype.write=function(a,b){if(this._checkWritten(),'function'==typeof a&&(b=a),'function'!=typeof b)throw new Error('write() requires a callback argument');return'object'!=('undefined'==typeof a?'undefined':_typeof(a))&&(a={}),this._written=!0,'function'==typeof this._write?this._write(b):'function'==typeof this._db._batch?this._db._batch(this._operations,a,b):void process.nextTick(b)},module.exports=AbstractChainedBatch;

}).call(this,require('_process'))
},{"_process":213}],2:[function(require,module,exports){
(function (process){
'use strict';/* Copyright (c) 2013 Rod Vagg, MIT License */function AbstractIterator(a){this.db=a,this._ended=!1,this._nexting=!1}AbstractIterator.prototype.next=function(a){var b=this;if('function'!=typeof a)throw new Error('next() requires a callback argument');return b._ended?a(new Error('cannot call next() after end()')):b._nexting?a(new Error('cannot call next() before previous next() has completed')):(b._nexting=!0,'function'==typeof b._next?b._next(function(){b._nexting=!1,a.apply(null,arguments)}):void process.nextTick(function(){b._nexting=!1,a()}))},AbstractIterator.prototype.end=function(a){if('function'!=typeof a)throw new Error('end() requires a callback argument');return this._ended?a(new Error('end() already called on iterator')):(this._ended=!0,'function'==typeof this._end?this._end(a):void process.nextTick(a))},module.exports=AbstractIterator;

}).call(this,require('_process'))
},{"_process":213}],3:[function(require,module,exports){
(function (Buffer,process){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},xtend=require('xtend'),AbstractIterator=require('./abstract-iterator'),AbstractChainedBatch=require('./abstract-chained-batch');/* Copyright (c) 2013 Rod Vagg, MIT License */function AbstractLevelDOWN(a){if(!arguments.length||a===void 0)throw new Error('constructor requires at least a location argument');if('string'!=typeof a)throw new Error('constructor requires a location string argument');this.location=a,this.status='new'}AbstractLevelDOWN.prototype.open=function(a,b){var c=this,d=this.status;if('function'==typeof a&&(b=a),'function'!=typeof b)throw new Error('open() requires a callback argument');'object'!=('undefined'==typeof a?'undefined':_typeof(a))&&(a={}),a.createIfMissing=!1!=a.createIfMissing,a.errorIfExists=!!a.errorIfExists,'function'==typeof this._open?(this.status='opening',this._open(a,function(f){return f?(c.status=d,b(f)):void(c.status='open',b())})):(this.status='open',process.nextTick(b))},AbstractLevelDOWN.prototype.close=function(a){var b=this,c=this.status;if('function'!=typeof a)throw new Error('close() requires a callback argument');'function'==typeof this._close?(this.status='closing',this._close(function(d){return d?(b.status=c,a(d)):void(b.status='closed',a())})):(this.status='closed',process.nextTick(a))},AbstractLevelDOWN.prototype.get=function(a,b,c){var d;if('function'==typeof b&&(c=b),'function'!=typeof c)throw new Error('get() requires a callback argument');return(d=this._checkKey(a,'key',this._isBuffer))?c(d):(this._isBuffer(a)||(a=a+''),'object'!=('undefined'==typeof b?'undefined':_typeof(b))&&(b={}),b.asBuffer=!1!=b.asBuffer,'function'==typeof this._get?this._get(a,b,c):void process.nextTick(function(){c(new Error('NotFound'))}))},AbstractLevelDOWN.prototype.put=function(a,b,c,d){var f;if('function'==typeof c&&(d=c),'function'!=typeof d)throw new Error('put() requires a callback argument');return(f=this._checkKey(a,'key',this._isBuffer))?d(f):(this._isBuffer(a)||(a=a+''),null==b||this._isBuffer(b)||process.browser||(b=b+''),'object'!=('undefined'==typeof c?'undefined':_typeof(c))&&(c={}),'function'==typeof this._put?this._put(a,b,c,d):void process.nextTick(d))},AbstractLevelDOWN.prototype.del=function(a,b,c){var d;if('function'==typeof b&&(c=b),'function'!=typeof c)throw new Error('del() requires a callback argument');return(d=this._checkKey(a,'key',this._isBuffer))?c(d):(this._isBuffer(a)||(a=a+''),'object'!=('undefined'==typeof b?'undefined':_typeof(b))&&(b={}),'function'==typeof this._del?this._del(a,b,c):void process.nextTick(c))},AbstractLevelDOWN.prototype.batch=function(a,b,c){if(!arguments.length)return this._chainedBatch();if('function'==typeof b&&(c=b),'function'==typeof a&&(c=a),'function'!=typeof c)throw new Error('batch(array) requires a callback argument');if(!Array.isArray(a))return c(new Error('batch(array) requires an array argument'));b&&'object'==('undefined'==typeof b?'undefined':_typeof(b))||(b={});for(var g,h,d=0,f=a.length;d<f;d++)if(g=a[d],'object'==('undefined'==typeof g?'undefined':_typeof(g))){if(h=this._checkKey(g.type,'type',this._isBuffer))return c(h);if(h=this._checkKey(g.key,'key',this._isBuffer))return c(h)}return'function'==typeof this._batch?this._batch(a,b,c):void process.nextTick(c)},AbstractLevelDOWN.prototype.approximateSize=function(a,b,c){if(null==a||null==b||'function'==typeof a||'function'==typeof b)throw new Error('approximateSize() requires valid `start`, `end` and `callback` arguments');if('function'!=typeof c)throw new Error('approximateSize() requires a callback argument');return this._isBuffer(a)||(a=a+''),this._isBuffer(b)||(b=b+''),'function'==typeof this._approximateSize?this._approximateSize(a,b,c):void process.nextTick(function(){c(null,0)})},AbstractLevelDOWN.prototype._setupIteratorOptions=function(a){var b=this;return a=xtend(a),['start','end','gt','gte','lt','lte'].forEach(function(c){a[c]&&b._isBuffer(a[c])&&0===a[c].length&&delete a[c]}),a.reverse=!!a.reverse,a.keys=!1!=a.keys,a.values=!1!=a.values,a.limit='limit'in a?a.limit:-1,a.keyAsBuffer=!1!=a.keyAsBuffer,a.valueAsBuffer=!1!=a.valueAsBuffer,a},AbstractLevelDOWN.prototype.iterator=function(a){return'object'!=('undefined'==typeof a?'undefined':_typeof(a))&&(a={}),a=this._setupIteratorOptions(a),'function'==typeof this._iterator?this._iterator(a):new AbstractIterator(this)},AbstractLevelDOWN.prototype._chainedBatch=function(){return new AbstractChainedBatch(this)},AbstractLevelDOWN.prototype._isBuffer=function(a){return Buffer.isBuffer(a)},AbstractLevelDOWN.prototype._checkKey=function(a,b){if(null===a||a===void 0)return new Error(b+' cannot be `null` or `undefined`');if(this._isBuffer(a)){if(0===a.length)return new Error(b+' cannot be an empty Buffer');}else if(''===a+'')return new Error(b+' cannot be an empty String')},module.exports=AbstractLevelDOWN;

}).call(this,{"isBuffer":require("../is-buffer/index.js")},require('_process'))
},{"../is-buffer/index.js":161,"./abstract-chained-batch":1,"./abstract-iterator":2,"_process":213,"xtend":263}],4:[function(require,module,exports){
'use strict';exports.AbstractLevelDOWN=require('./abstract-leveldown'),exports.AbstractIterator=require('./abstract-iterator'),exports.AbstractChainedBatch=require('./abstract-chained-batch'),exports.isLevelDOWN=require('./is-leveldown');

},{"./abstract-chained-batch":1,"./abstract-iterator":2,"./abstract-leveldown":3,"./is-leveldown":5}],5:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},AbstractLevelDOWN=require('./abstract-leveldown');function isLevelDOWN(a){return a&&'object'==('undefined'==typeof a?'undefined':_typeof(a))&&Object.keys(AbstractLevelDOWN.prototype).filter(function(b){// TODO remove approximateSize check when method is gone
return'_'!=b[0]&&'approximateSize'!=b}).every(function(b){return'function'==typeof a[b]})}module.exports=isLevelDOWN;

},{"./abstract-leveldown":3}],6:[function(require,module,exports){
(function (Buffer){
'use strict';(function(){function b(N){var O=[];for(var P=0;P<N.length;P+=4)O.push(N[P]<<24|N[P+1]<<16|N[P+2]<<8|N[P+3]);return O}var d=this;d.mymodule;var f,e=null,g=null,h=function h(N){// Passed in a single number, the length to pre-allocate
if('number'==typeof N){var O=[];for(var P=0;P<N;P++)O.push(0);return O}// Make sure they are passing sensible data
for(var P=0;P<N.length;P++)if(0>N[P]||256<=N[P]||'number'!=typeof N[P])throw new Error('invalid byte at index '+P+'('+N[P]+')');// Most array-like things should support this
if(N.slice)return N.slice(0);// Something *weird*; copy it into an array (see PR#2)
var O=[];for(var P=0;P<N.length;P++)O.push(N[P]);return O};if('undefined'==typeof Buffer){e=h,Array.prototype.copy=function(N,O,P,Q){null==O&&(O=0),null==P&&(P=0),null==Q&&(Q=this.length);for(var R=P;R<Q;R++)N[O++]=this[R]},g=function g(N,O){// "utf8", "utf-8", "utf 8", etc
if(null==O||'utf8'==O.toLowerCase().replace(/ |-/g,'')){var P=[],Q=0;for(N=encodeURI(N);Q<N.length;){var R=N.charCodeAt(Q++);// if it is a % sign, encode the following 2 bytes as a hex value
37===R?(P.push(parseInt(N.substr(Q,2),16)),Q+=2):P.push(R)}return P;// "hex"
}// @TODO: Base64...
if('hex'==O.toLowerCase()){var P=[];for(var Q=0;Q<N.length;Q+=2)P.push(parseInt(N.substr(Q,2),16));return P}return null};// http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
var k='0123456789abcdef';f=function f(N,O){// "utf8", "utf-8", "utf 8", etc
if(null==O||'utf8'==O.toLowerCase().replace(/ |-/g,'')){for(var P=[],Q=0;Q<N.length;){var R=N[Q];128>R?(P.push(String.fromCharCode(R)),Q++):191<R&&224>R?(P.push(String.fromCharCode((31&R)<<6|63&N[Q+1])),Q+=2):(P.push(String.fromCharCode((15&R)<<12|(63&N[Q+1])<<6|63&N[Q+2])),Q+=3)}return P.join('');// "hex"
}if('hex'==O.toLowerCase()){var P=[];for(var Q=0;Q<N.length;Q++){var T=N[Q];P.push(k[(240&T)>>4]+k[15&T])}return P.join('')}return P}}else e=function e(N){return new Buffer(N)},g=function g(N,O){return new Buffer(N,O)},f=function f(N,O){return new Buffer(N).toString(O)};// Number of rounds by keysize
var l={16:10,24:12,32:14},m=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],n=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],o=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],p=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],q=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],s=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],u=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],w=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],x=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],y=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239000,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],z=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998000,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],A=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],B=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],C=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239000,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],D=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998000,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925],E=function E(N){this.key=e(N),this._prepare()};// Round constant words
// S-box and Inverse S-box (S is for Substitution)
// Transformations for encryption
// Transformations for decryption
// Transformations for decryption key expansion
E.prototype._prepare=function(){var N=l[this.key.length];if(null==N)throw new Error('invalid key size (must be length 16, 24 or 32)');// encryption round keys
this._Ke=[],this._Kd=[];for(var O=0;O<=N;O++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var P=4*(N+1),Q=this.key.length/4,R=b(this.key),T;// convert the key into ints
// copy values into round key arrays
for(var O=0;O<Q;O++)T=O>>2,this._Ke[T][O%4]=R[O],this._Kd[N-T][O%4]=R[O];// key expansion (fips-197 section 5.2)
for(var W,U=0,V=Q;V<P;){// key expansion (for non-256 bit)
if(W=R[Q-1],R[0]^=n[255&W>>16]<<24^n[255&W>>8]<<16^n[255&W]<<8^n[255&W>>24]^m[U]<<24,U+=1,8!=Q)for(var O=1;O<Q;O++)R[O]^=R[O-1];// key expansion for 256-bit keys is "slightly different" (fips-197)
else{for(var O=1;O<Q/2;O++)R[O]^=R[O-1];W=R[Q/2-1],R[Q/2]^=n[255&W]^n[255&W>>8]<<8^n[255&W>>16]<<16^n[255&W>>24]<<24;for(var O=Q/2+1;O<Q;O++)R[O]^=R[O-1]}// copy values into round key arrays
for(var X,Y,O=0;O<Q&&V<P;)X=V>>2,Y=V%4,this._Ke[X][Y]=R[O],this._Kd[N-X][Y]=R[O++],V++}// inverse-cipher-ify the decryption round key (fips-197 section 5.3)
for(var X=1;X<N;X++)for(var Y=0;4>Y;Y++)W=this._Kd[X][Y],this._Kd[X][Y]=A[255&W>>24]^B[255&W>>16]^C[255&W>>8]^D[255&W]},E.prototype.encrypt=function(N){if(16!=N.length)return new Error('plaintext must be a block of size 16');var O=this._Ke.length-1,P=[0,0,0,0],Q=b(N);// convert plaintext to (ints ^ key)
for(var R=0;4>R;R++)Q[R]^=this._Ke[0][R];// apply round transforms
for(var T=1;T<O;T++){for(var R=0;4>R;R++)P[R]=p[255&Q[R]>>24]^q[255&Q[(R+1)%4]>>16]^s[255&Q[(R+2)%4]>>8]^u[255&Q[(R+3)%4]]^this._Ke[T][R];Q=P.slice(0)}// the last round is special
var V,U=e(16);for(var R=0;4>R;R++)V=this._Ke[O][R],U[4*R]=255&(n[255&Q[R]>>24]^V>>24),U[4*R+1]=255&(n[255&Q[(R+1)%4]>>16]^V>>16),U[4*R+2]=255&(n[255&Q[(R+2)%4]>>8]^V>>8),U[4*R+3]=255&(n[255&Q[(R+3)%4]]^V);return U},E.prototype.decrypt=function(N){if(16!=N.length)return new Error('ciphertext must be a block of size 16');var O=this._Kd.length-1,P=[0,0,0,0],Q=b(N);// convert plaintext to (ints ^ key)
for(var R=0;4>R;R++)Q[R]^=this._Kd[0][R];// apply round transforms
for(var T=1;T<O;T++){for(var R=0;4>R;R++)P[R]=w[255&Q[R]>>24]^x[255&Q[(R+3)%4]>>16]^y[255&Q[(R+2)%4]>>8]^z[255&Q[(R+1)%4]]^this._Kd[T][R];Q=P.slice(0)}// the last round is special
var V,U=e(16);for(var R=0;4>R;R++)V=this._Kd[O][R],U[4*R]=255&(o[255&Q[R]>>24]^V>>24),U[4*R+1]=255&(o[255&Q[(R+3)%4]>>16]^V>>16),U[4*R+2]=255&(o[255&Q[(R+2)%4]>>8]^V>>8),U[4*R+3]=255&(o[255&Q[(R+1)%4]]^V);return U};/**
     *  Mode Of Operation - Electonic Codebook (ECB)
     */var F=function F(N){this.description='Electronic Code Block',this.name='ecb',this._aes=new E(N)};F.prototype.encrypt=function(N){return this._aes.encrypt(N)},F.prototype.decrypt=function(N,O){return this._aes.decrypt(N)};/**
     *  Mode Of Operation - Cipher Block Chaining (CBC)
     */var G=function G(N,O){if(this.description='Cipher Block Chaining',this.name='cbc',null===O)O=e([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);else if(16!=O.length)return new Error('initialation vector iv must be of length 16');this._lastCipherblock=e(O),this._aes=new E(N)};G.prototype.encrypt=function(N){if(16!=N.length)return new Error('plaintext must be a block of size 16');var O=e(N);for(var P=0;16>P;P++)O[P]^=this._lastCipherblock[P];return this._lastCipherblock=this._aes.encrypt(O),this._lastCipherblock},G.prototype.decrypt=function(N){if(16!=N.length)return new Error('ciphertext must be a block of size 16');var O=this._aes.decrypt(N);for(var P=0;16>P;P++)O[P]^=this._lastCipherblock[P];return N.copy(this._lastCipherblock),O};/**
     *  Mode Of Operation - Cipher Feedback (CFB)
     */var H=function H(N,O,P){if(this.description='Cipher Feedback',this.name='cfb',null===O)O=e([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);else if(16!=O.length)return new Error('initialation vector iv must be of length 16');P||(P=1),this.segmentSize=P,this._shiftRegister=e(O),this._aes=new E(N)};H.prototype.encrypt=function(N){if(0!=N.length%this.segmentSize)return new Error('plaintext must be a block of size module segmentSize ('+this.segmentSize+')');var O=e(N),P;for(var Q=0;Q<O.length;Q+=this.segmentSize){P=this._aes.encrypt(this._shiftRegister);for(var R=0;R<this.segmentSize;R++)O[Q+R]^=P[R];// Shift the register
this._shiftRegister.copy(this._shiftRegister,0,this.segmentSize),O.copy(this._shiftRegister,16-this.segmentSize,Q,Q+this.segmentSize)}return O},H.prototype.decrypt=function(N){if(0!=N.length%this.segmentSize)return new Error('ciphertext must be a block of size module segmentSize ('+this.segmentSize+')');var O=e(N),P;for(var Q=0;Q<O.length;Q+=this.segmentSize){P=this._aes.encrypt(this._shiftRegister);for(var R=0;R<this.segmentSize;R++)O[Q+R]^=P[R];// Shift the register
this._shiftRegister.copy(this._shiftRegister,0,this.segmentSize),N.copy(this._shiftRegister,16-this.segmentSize,Q,Q+this.segmentSize)}return O};/**
     *  Mode Of Operation - Output Feedback (OFB)
     */var I=function I(N,O){if(this.description='Output Feedback',this.name='ofb',null===O)O=e([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);else if(16!=O.length)return new Error('initialation vector iv must be of length 16');this._lastPrecipher=e(O),this._lastPrecipherIndex=16,this._aes=new E(N)};I.prototype.encrypt=function(N){var O=e(N);for(var P=0;P<O.length;P++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),O[P]^=this._lastPrecipher[this._lastPrecipherIndex++];return O},I.prototype.decrypt=I.prototype.encrypt;/**
     *  Counter object for CTR common mode of operation
     */var J=function J(N){(null===N||N===void 0)&&(N=1),'number'==typeof N?(this._counter=e([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),this.setValue(N)):this.setBytes(N)};J.prototype.setValue=function(N){if('number'!=typeof N)throw new Error('value must be a number');for(var O=15;0<=O;--O)this._counter[O]=N%256,N=N>>8},J.prototype.setBytes=function(N){if(16!=N.length)throw new Error('invalid counter bytes size (must be 16)');this._counter=e(N)},J.prototype.increment=function(){for(var N=15;0<=N;N--)if(255===this._counter[N])this._counter[N]=0;else{this._counter[N]++;break}};/**
     *  Mode Of Operation - Counter (CTR)
     */var K=function K(N,O){this.description='Counter',this.name='ctr',null===O&&(O=new J),this._counter=O,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new E(N)};K.prototype.encrypt=function(N){var O=e(N);for(var P=0;P<O.length;P++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),O[P]^=this._remainingCounter[this._remainingCounterIndex++];return O},K.prototype.decrypt=K.prototype.encrypt;// The bsic modes of operation as a map
var L={ecb:F,cbc:G,cfb:H,ofb:I,ctr:K},M={AES:E,Counter:J,ModeOfOperation:L,util:{convertBytesToString:f,convertStringToBytes:g,_slowCreateBuffer:h}};///////////////////////
// Exports
// The block cipher
'undefined'==typeof exports?d.aesjs=M:(exports.AES=E,exports.Counter=J,exports.ModeOfOperation=L,exports.util={convertBytesToString:f,convertStringToBytes:g,_slowCreateBuffer:h})}).call(void 0);

}).call(this,require("buffer").Buffer)
},{"buffer":62}],7:[function(require,module,exports){
'use strict';var asn1=exports;asn1.bignum=require('bn.js'),asn1.define=require('./asn1/api').define,asn1.base=require('./asn1/base'),asn1.constants=require('./asn1/constants'),asn1.decoders=require('./asn1/decoders'),asn1.encoders=require('./asn1/encoders');

},{"./asn1/api":8,"./asn1/base":10,"./asn1/constants":14,"./asn1/decoders":16,"./asn1/encoders":19,"bn.js":30}],8:[function(require,module,exports){
'use strict';var asn1=require('../asn1'),inherits=require('inherits'),api=exports;api.define=function(b,c){return new Entity(b,c)};function Entity(a,b){this.name=a,this.body=b,this.decoders={},this.encoders={}};Entity.prototype._createNamed=function(b){var c;try{c=require('vm').runInThisContext('(function '+this.name+'(entity) {\n  this._initNamed(entity);\n})')}catch(d){c=function c(f){this._initNamed(f)}}return inherits(c,b),c.prototype._initNamed=function(f){b.call(this,f)},new c(this)},Entity.prototype._getDecoder=function(b){return b=b||'der',this.decoders.hasOwnProperty(b)||(this.decoders[b]=this._createNamed(asn1.decoders[b])),this.decoders[b]},Entity.prototype.decode=function(b,c,d){return this._getDecoder(c).decode(b,d)},Entity.prototype._getEncoder=function(b){return b=b||'der',this.encoders.hasOwnProperty(b)||(this.encoders[b]=this._createNamed(asn1.encoders[b])),this.encoders[b]},Entity.prototype.encode=function(b,c,/* internal */d){return this._getEncoder(c).encode(b,d)};

},{"../asn1":7,"inherits":160,"vm":262}],9:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},inherits=require('inherits'),Reporter=require('../base').Reporter,Buffer=require('buffer').Buffer;function DecoderBuffer(a,b){return Reporter.call(this,b),Buffer.isBuffer(a)?void(this.base=a,this.offset=0,this.length=a.length):void this.error('Input not Buffer')}inherits(DecoderBuffer,Reporter),exports.DecoderBuffer=DecoderBuffer,DecoderBuffer.prototype.save=function(){return{offset:this.offset,reporter:Reporter.prototype.save.call(this)}},DecoderBuffer.prototype.restore=function(b){// Return skipped data
var c=new DecoderBuffer(this.base);return c.offset=b.offset,c.length=this.offset,this.offset=b.offset,Reporter.prototype.restore.call(this,b.reporter),c},DecoderBuffer.prototype.isEmpty=function(){return this.offset===this.length},DecoderBuffer.prototype.readUInt8=function(b){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(b||'DecoderBuffer overrun')},DecoderBuffer.prototype.skip=function(b,c){if(!(this.offset+b<=this.length))return this.error(c||'DecoderBuffer overrun');var d=new DecoderBuffer(this.base);// Share reporter state
return d._reporterState=this._reporterState,d.offset=this.offset,d.length=this.offset+b,this.offset+=b,d},DecoderBuffer.prototype.raw=function(b){return this.base.slice(b?b.offset:this.offset,this.length)};function EncoderBuffer(a,b){if(Array.isArray(a))this.length=0,this.value=a.map(function(c){return c instanceof EncoderBuffer||(c=new EncoderBuffer(c,b)),this.length+=c.length,c},this);else if('number'==typeof a){if(!(0<=a&&255>=a))return b.error('non-byte EncoderBuffer value');this.value=a,this.length=1}else if('string'==typeof a)this.value=a,this.length=Buffer.byteLength(a);else if(Buffer.isBuffer(a))this.value=a,this.length=a.length;else return b.error('Unsupported type: '+('undefined'==typeof a?'undefined':_typeof(a)))}exports.EncoderBuffer=EncoderBuffer,EncoderBuffer.prototype.join=function(b,c){return(b||(b=new Buffer(this.length)),c||(c=0),0===this.length)?b:(Array.isArray(this.value)?this.value.forEach(function(d){d.join(b,c),c+=d.length}):('number'==typeof this.value?b[c]=this.value:'string'==typeof this.value?b.write(this.value,c):Buffer.isBuffer(this.value)&&this.value.copy(b,c),c+=this.length),b)};

},{"../base":10,"buffer":62,"inherits":160}],10:[function(require,module,exports){
'use strict';var base=exports;base.Reporter=require('./reporter').Reporter,base.DecoderBuffer=require('./buffer').DecoderBuffer,base.EncoderBuffer=require('./buffer').EncoderBuffer,base.Node=require('./node');

},{"./buffer":9,"./node":11,"./reporter":12}],11:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},Reporter=require('../base').Reporter,EncoderBuffer=require('../base').EncoderBuffer,DecoderBuffer=require('../base').DecoderBuffer,assert=require('minimalistic-assert'),tags=['seq','seqof','set','setof','objid','bool','gentime','utctime','null_','enum','int','bitstr','bmpstr','charstr','genstr','graphstr','ia5str','iso646str','numstr','octstr','printstr','t61str','unistr','utf8str','videostr'],methods=['key','obj','use','optional','explicit','implicit','def','choice','any','contains'].concat(tags),overrided=['_peekTag','_decodeTag','_use','_decodeStr','_decodeObjid','_decodeTime','_decodeNull','_decodeInt','_decodeBool','_decodeList','_encodeComposite','_encodeStr','_encodeObjid','_encodeTime','_encodeNull','_encodeInt','_encodeBool'];// Supported tags
// Public methods list
// Overrided methods list
function Node(a,b){var c={};this._baseState=c,c.enc=a,c.parent=b||null,c.children=null,c.tag=null,c.args=null,c.reverseArgs=null,c.choice=null,c.optional=!1,c.any=!1,c.obj=!1,c.use=null,c.useDecoder=null,c.key=null,c['default']=null,c.explicit=null,c.implicit=null,c.contains=null,c.parent||(c.children=[],this._wrap())}module.exports=Node;var stateProps=['enc','parent','children','tag','args','reverseArgs','choice','optional','any','obj','use','alteredUse','key','default','explicit','implicit','contains'];Node.prototype.clone=function(){var b=this._baseState,c={};stateProps.forEach(function(f){c[f]=b[f]});var d=new this.constructor(c.parent);return d._baseState=c,d},Node.prototype._wrap=function(){var b=this._baseState;methods.forEach(function(c){this[c]=function(){var f=new this.constructor(this);return b.children.push(f),f[c].apply(f,arguments)}},this)},Node.prototype._init=function(b){var c=this._baseState;assert(null===c.parent),b.call(this),c.children=c.children.filter(function(d){return d._baseState.parent===this},this),assert.equal(c.children.length,1,'Root node can have only one child')},Node.prototype._useArgs=function(b){var c=this._baseState,d=b.filter(function(f){return f instanceof this.constructor},this);// Filter children and args
b=b.filter(function(f){return!(f instanceof this.constructor)},this),0!==d.length&&(assert(null===c.children),c.children=d,d.forEach(function(f){f._baseState.parent=this},this)),0!==b.length&&(assert(null===c.args),c.args=b,c.reverseArgs=b.map(function(f){if('object'!=('undefined'==typeof f?'undefined':_typeof(f))||f.constructor!==Object)return f;var g={};return Object.keys(f).forEach(function(h){h==(0|h)&&(h|=0);var i=f[h];g[i]=h}),g}))},overrided.forEach(function(a){Node.prototype[a]=function(){var c=this._baseState;throw new Error(a+' not implemented for encoding: '+c.enc)}}),tags.forEach(function(a){Node.prototype[a]=function(){var c=this._baseState,d=Array.prototype.slice.call(arguments);return assert(null===c.tag),c.tag=a,this._useArgs(d),this}}),Node.prototype.use=function(b){var c=this._baseState;return assert(null===c.use),c.use=b,this},Node.prototype.optional=function(){var b=this._baseState;return b.optional=!0,this},Node.prototype.def=function(b){var c=this._baseState;return assert(null===c['default']),c['default']=b,c.optional=!0,this},Node.prototype.explicit=function(b){var c=this._baseState;return assert(null===c.explicit&&null===c.implicit),c.explicit=b,this},Node.prototype.implicit=function(b){var c=this._baseState;return assert(null===c.explicit&&null===c.implicit),c.implicit=b,this},Node.prototype.obj=function(){var b=this._baseState,c=Array.prototype.slice.call(arguments);return b.obj=!0,0!==c.length&&this._useArgs(c),this},Node.prototype.key=function(b){var c=this._baseState;return assert(null===c.key),c.key=b,this},Node.prototype.any=function(){var b=this._baseState;return b.any=!0,this},Node.prototype.choice=function(b){var c=this._baseState;return assert(null===c.choice),c.choice=b,this._useArgs(Object.keys(b).map(function(d){return b[d]})),this},Node.prototype.contains=function(b){var c=this._baseState;return assert(null===c.use),c.contains=b,this},Node.prototype._decode=function(b,c){var d=this._baseState;// Decode root node
if(null===d.parent)return b.wrapResult(d.children[0]._decode(b,c));var f=d['default'],g=!0,h=null;// Check if tag is there
if(null!==d.key&&(h=b.enterKey(d.key)),d.optional){var i=null;if(null===d.explicit?null===d.implicit?null!==d.tag&&(i=d.tag):i=d.implicit:i=d.explicit,null==i&&!d.any){// Trial and Error
var j=b.save();try{null===d.choice?this._decodeGeneric(d.tag,b,c):this._decodeChoice(b,c),g=!0}catch(p){g=!1}b.restore(j)}else if(g=this._peekTag(b,i,d.any),b.isError(g))return g}// Push object on stack
var k;if(d.obj&&g&&(k=b.enterObject()),g){// Unwrap explicit values
if(null!==d.explicit){var l=this._decodeTag(b,d.explicit);if(b.isError(l))return l;b=l}var m=b.offset;// Unwrap implicit and normal values
if(null===d.use&&null===d.choice){if(d.any)var j=b.save();var n=this._decodeTag(b,null===d.implicit?d.tag:d.implicit,d.any);if(b.isError(n))return n;d.any?f=b.raw(j):b=n}if(c&&c.track&&null!==d.tag&&c.track(b.path(),m,b.length,'tagged'),c&&c.track&&null!==d.tag&&c.track(b.path(),b.offset,b.length,'content'),f=d.any?f:null===d.choice?this._decodeGeneric(d.tag,b,c):this._decodeChoice(b,c),b.isError(f))return f;// Decode children
// Decode contained/encoded by schema, only in bit or octet strings
if(d.any||null!==d.choice||null===d.children||d.children.forEach(function(q){q._decode(b,c)}),d.contains&&('octstr'===d.tag||'bitstr'===d.tag)){var o=new DecoderBuffer(f);f=this._getUse(d.contains,b._reporterState.obj)._decode(o,c)}}// Pop object
return d.obj&&g&&(f=b.leaveObject(k)),null!==d.key&&(null!==f||!0===g)?b.leaveKey(h,d.key,f):null!=h&&b.exitKey(h),f},Node.prototype._decodeGeneric=function(b,c,d){var f=this._baseState;if('seq'===b||'set'===b)return null;return'seqof'===b||'setof'===b?this._decodeList(c,b,f.args[0],d):/str$/.test(b)?this._decodeStr(c,b,d):'objid'===b&&f.args?this._decodeObjid(c,f.args[0],f.args[1],d):'objid'===b?this._decodeObjid(c,null,null,d):'gentime'===b||'utctime'===b?this._decodeTime(c,b,d):'null_'===b?this._decodeNull(c,d):'bool'===b?this._decodeBool(c,d):'int'===b||'enum'===b?this._decodeInt(c,f.args&&f.args[0],d):null===f.use?c.error('unknown tag: '+b):this._getUse(f.use,c._reporterState.obj)._decode(c,d)},Node.prototype._getUse=function(b,c){var d=this._baseState;// Create altered use decoder if implicit is set
return d.useDecoder=this._use(b,c),assert(null===d.useDecoder._baseState.parent),d.useDecoder=d.useDecoder._baseState.children[0],d.implicit!==d.useDecoder._baseState.implicit&&(d.useDecoder=d.useDecoder.clone(),d.useDecoder._baseState.implicit=d.implicit),d.useDecoder},Node.prototype._decodeChoice=function(b,c){var d=this._baseState,f=null,g=!1;return Object.keys(d.choice).some(function(h){var i=b.save(),j=d.choice[h];try{var k=j._decode(b,c);if(b.isError(k))return!1;f={type:h,value:k},g=!0}catch(l){return b.restore(i),!1}return!0},this),g?f:b.error('Choice not matched')},Node.prototype._createEncoderBuffer=function(b){return new EncoderBuffer(b,this.reporter)},Node.prototype._encode=function(b,c,d){var f=this._baseState;if(null===f['default']||f['default']!==b){var g=this._encodeValue(b,c,d);if(g!==void 0&&!this._skipDefault(g,c,d))return g}},Node.prototype._encodeValue=function(b,c,d){var f=this._baseState;// Decode root node
if(null===f.parent)return f.children[0]._encode(b,c||new Reporter);var g=null;// Set reporter to share it with a child class
// Check if data is there
if(this.reporter=c,f.optional&&void 0===b)if(null!==f['default'])b=f['default'];else return;// Encode children first
var h=null,i=!1;if(f.any)g=this._createEncoderBuffer(b);else if(f.choice)g=this._encodeChoice(b,c);else if(f.contains)h=this._getUse(f.contains,d)._encode(b,c),i=!0;else if(f.children)h=f.children.map(function(m){if('null_'===m._baseState.tag)return m._encode(null,c,b);if(null===m._baseState.key)return c.error('Child should have a key');var n=c.enterKey(m._baseState.key);if('object'!=('undefined'==typeof b?'undefined':_typeof(b)))return c.error('Child expected, but input is not object');var o=m._encode(b[m._baseState.key],c,b);return c.leaveKey(n),o},this).filter(function(m){return m}),h=this._createEncoderBuffer(h);else if('seqof'===f.tag||'setof'===f.tag){// TODO(indutny): this should be thrown on DSL level
if(!(f.args&&1===f.args.length))return c.error('Too many args for : '+f.tag);if(!Array.isArray(b))return c.error('seqof/setof, but data is not Array');var j=this.clone();j._baseState.implicit=null,h=this._createEncoderBuffer(b.map(function(m){var n=this._baseState;return this._getUse(n.args[0],b)._encode(m,c)},j))}else null===f.use?(h=this._encodePrimitive(f.tag,b),i=!0):g=this._getUse(f.use,d)._encode(b,c);// Encode data itself
var g;if(!f.any&&null===f.choice){var k=null===f.implicit?f.tag:f.implicit,l=null===f.implicit?'universal':'context';null===k?null===f.use&&c.error('Tag could be ommited only for .use()'):null===f.use&&(g=this._encodeComposite(k,i,l,h))}// Wrap in explicit
return null!==f.explicit&&(g=this._encodeComposite(f.explicit,!1,'context',g)),g},Node.prototype._encodeChoice=function(b,c){var d=this._baseState,f=d.choice[b.type];return f||assert(!1,b.type+' not found in '+JSON.stringify(Object.keys(d.choice))),f._encode(b.value,c)},Node.prototype._encodePrimitive=function(b,c){var d=this._baseState;if(/str$/.test(b))return this._encodeStr(c,b);if('objid'===b&&d.args)return this._encodeObjid(c,d.reverseArgs[0],d.args[1]);if('objid'===b)return this._encodeObjid(c,null,null);if('gentime'===b||'utctime'===b)return this._encodeTime(c,b);if('null_'===b)return this._encodeNull();if('int'===b||'enum'===b)return this._encodeInt(c,d.args&&d.reverseArgs[0]);if('bool'===b)return this._encodeBool(c);throw new Error('Unsupported tag: '+b)},Node.prototype._isNumstr=function(b){return /^[0-9 ]*$/.test(b)},Node.prototype._isPrintstr=function(b){return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(b)};

},{"../base":10,"minimalistic-assert":201}],12:[function(require,module,exports){
'use strict';var inherits=require('inherits');function Reporter(a){this._reporterState={obj:null,path:[],options:a||{},errors:[]}}exports.Reporter=Reporter,Reporter.prototype.isError=function(b){return b instanceof ReporterError},Reporter.prototype.save=function(){var b=this._reporterState;return{obj:b.obj,pathLen:b.path.length}},Reporter.prototype.restore=function(b){var c=this._reporterState;c.obj=b.obj,c.path=c.path.slice(0,b.pathLen)},Reporter.prototype.enterKey=function(b){return this._reporterState.path.push(b)},Reporter.prototype.exitKey=function(b){var c=this._reporterState;c.path=c.path.slice(0,b-1)},Reporter.prototype.leaveKey=function(b,c,d){var f=this._reporterState;this.exitKey(b),null!==f.obj&&(f.obj[c]=d)},Reporter.prototype.path=function(){return this._reporterState.path.join('/')},Reporter.prototype.enterObject=function(){var b=this._reporterState,c=b.obj;return b.obj={},c},Reporter.prototype.leaveObject=function(b){var c=this._reporterState,d=c.obj;return c.obj=b,d},Reporter.prototype.error=function(b){var c,d=this._reporterState,f=b instanceof ReporterError;if(c=f?b:new ReporterError(d.path.map(function(g){return'['+JSON.stringify(g)+']'}).join(''),b.message||b,b.stack),!d.options.partial)throw c;return f||d.errors.push(c),c},Reporter.prototype.wrapResult=function(b){var c=this._reporterState;return c.options.partial?{result:this.isError(b)?null:b,errors:c.errors}:b};function ReporterError(a,b){this.path=a,this.rethrow(b)};inherits(ReporterError,Error),ReporterError.prototype.rethrow=function(b){if(this.message=b+' at: '+(this.path||'(shallow)'),Error.captureStackTrace&&Error.captureStackTrace(this,ReporterError),!this.stack)try{// IE only adds stack when thrown
throw new Error(this.message)}catch(c){this.stack=c.stack}return this};

},{"inherits":160}],13:[function(require,module,exports){
'use strict';var constants=require('../constants');exports.tagClass={0:'universal',1:'application',2:'context',3:'private'},exports.tagClassByName=constants._reverse(exports.tagClass),exports.tag={0:'end',1:'bool',2:'int',3:'bitstr',4:'octstr',5:'null_',6:'objid',7:'objDesc',8:'external',9:'real',10:'enum',11:'embed',12:'utf8str',13:'relativeOid',16:'seq',17:'set',18:'numstr',19:'printstr',20:'t61str',21:'videostr',22:'ia5str',23:'utctime',24:'gentime',25:'graphstr',26:'iso646str',27:'genstr',28:'unistr',29:'charstr',30:'bmpstr'},exports.tagByName=constants._reverse(exports.tag);

},{"../constants":14}],14:[function(require,module,exports){
'use strict';var constants=exports;// Helper
constants._reverse=function(b){var c={};return Object.keys(b).forEach(function(d){(0|d)==d&&(d=0|d);var e=b[d];c[e]=d}),c},constants.der=require('./der');

},{"./der":13}],15:[function(require,module,exports){
'use strict';var inherits=require('inherits'),asn1=require('../../asn1'),base=asn1.base,bignum=asn1.bignum,der=asn1.constants.der;// Import DER constants
function DERDecoder(a){this.enc='der',this.name=a.name,this.entity=a,this.tree=new DERNode,this.tree._init(a.body)};module.exports=DERDecoder,DERDecoder.prototype.decode=function(b,c){return b instanceof base.DecoderBuffer||(b=new base.DecoderBuffer(b,c)),this.tree._decode(b,c)};// Tree methods
function DERNode(a){base.Node.call(this,'der',a)}inherits(DERNode,base.Node),DERNode.prototype._peekTag=function(b,c,d){if(b.isEmpty())return!1;var e=b.save(),f=derDecodeTag(b,'Failed to peek tag: "'+c+'"');return b.isError(f)?f:(b.restore(e),f.tag===c||f.tagStr===c||f.tagStr+'of'===c||d)},DERNode.prototype._decodeTag=function(b,c,d){var e=derDecodeTag(b,'Failed to decode tag of "'+c+'"');if(b.isError(e))return e;var f=derDecodeLen(b,e.primitive,'Failed to get length of "'+c+'"');// Failure
if(b.isError(f))return f;if(!d&&e.tag!==c&&e.tagStr!==c&&e.tagStr+'of'!==c)return b.error('Failed to match tag: "'+c+'"');if(e.primitive||null!==f)return b.skip(f,'Failed to match body of: "'+c+'"');// Indefinite length... find END tag
var g=b.save(),h=this._skipUntilEnd(b,'Failed to skip indefinite length body: "'+this.tag+'"');return b.isError(h)?h:(f=b.offset-g.offset,b.restore(g),b.skip(f,'Failed to match body of: "'+c+'"'))},DERNode.prototype._skipUntilEnd=function(b,c){for(;!0;){var d=derDecodeTag(b,c);if(b.isError(d))return d;var e=derDecodeLen(b,d.primitive,c);if(b.isError(e))return e;var f;// Failure
if(f=d.primitive||null!==e?b.skip(e):this._skipUntilEnd(b,c),b.isError(f))return f;if('end'===d.tagStr)break}},DERNode.prototype._decodeList=function(b,c,d,e){for(var f=[];!b.isEmpty();){var g=this._peekTag(b,'end');if(b.isError(g))return g;var h=d.decode(b,'der',e);if(b.isError(h)&&g)break;f.push(h)}return f},DERNode.prototype._decodeStr=function(b,c){if('bitstr'===c){var d=b.readUInt8();return b.isError(d)?d:{unused:d,data:b.raw()}}if('bmpstr'===c){var e=b.raw();if(1==e.length%2)return b.error('Decoding of string type: bmpstr length mismatch');var f='';for(var g=0;g<e.length/2;g++)f+=String.fromCharCode(e.readUInt16BE(2*g));return f}if('numstr'===c){var h=b.raw().toString('ascii');return this._isNumstr(h)?h:b.error('Decoding of string type: numstr unsupported characters')}if('octstr'===c)return b.raw();if('printstr'===c){var k=b.raw().toString('ascii');return this._isPrintstr(k)?k:b.error('Decoding of string type: printstr unsupported characters')}return /str$/.test(c)?b.raw().toString():b.error('Decoding of string type: '+c+' unsupported')},DERNode.prototype._decodeObjid=function(b,c,d){for(var e,f=[],g=0;!b.isEmpty();){var h=b.readUInt8();g<<=7,g|=127&h,0==(128&h)&&(f.push(g),g=0)}128&h&&f.push(g);var k=0|f[0]/40,l=f[0]%40;if(e=d?f:[k,l].concat(f.slice(1)),c){var m=c[e.join(' ')];void 0===m&&(m=c[e.join('.')]),void 0!==m&&(e=m)}return e},DERNode.prototype._decodeTime=function(b,c){var d=b.raw().toString();if('gentime'===c)var e=0|d.slice(0,4),f=0|d.slice(4,6),g=0|d.slice(6,8),h=0|d.slice(8,10),k=0|d.slice(10,12),l=0|d.slice(12,14);else if('utctime'===c){var e=0|d.slice(0,2),f=0|d.slice(2,4),g=0|d.slice(4,6),h=0|d.slice(6,8),k=0|d.slice(8,10),l=0|d.slice(10,12);e=70>e?2000+e:1900+e}else return b.error('Decoding '+c+' time is not supported yet');return Date.UTC(e,f-1,g,h,k,l,0)},DERNode.prototype._decodeNull=function(b){return null},DERNode.prototype._decodeBool=function(b){var c=b.readUInt8();return b.isError(c)?c:0!==c},DERNode.prototype._decodeInt=function(b,c){// Bigint, return as it is (assume big endian)
var d=b.raw(),e=new bignum(d);return c&&(e=c[e.toString(10)]||e),e},DERNode.prototype._use=function(b,c){return'function'==typeof b&&(b=b(c)),b._getDecoder('der').tree};// Utility methods
function derDecodeTag(a,b){var c=a.readUInt8(b);if(a.isError(c))return c;var d=der.tagClass[c>>6],e=0==(32&c);// Multi-octet tag - load
if(31==(31&c)){var f=c;for(c=0;128==(128&f);){if(f=a.readUInt8(b),a.isError(f))return f;c<<=7,c|=127&f}}else c&=31;var g=der.tag[c];return{cls:d,primitive:e,tag:c,tagStr:g}}function derDecodeLen(a,b,c){var d=a.readUInt8(c);if(a.isError(d))return d;// Indefinite form
if(!b&&128===d)return null;// Definite form
if(0==(128&d))// Short form
return d;// Long form
var e=127&d;if(4<=e)return a.error('length octect is too long');d=0;for(var f=0;f<e;f++){d<<=8;var g=a.readUInt8(c);if(a.isError(g))return g;d|=g}return d}

},{"../../asn1":7,"inherits":160}],16:[function(require,module,exports){
'use strict';var decoders=exports;decoders.der=require('./der'),decoders.pem=require('./pem');

},{"./der":15,"./pem":17}],17:[function(require,module,exports){
'use strict';var inherits=require('inherits'),Buffer=require('buffer').Buffer,DERDecoder=require('./der');function PEMDecoder(a){DERDecoder.call(this,a),this.enc='pem'};inherits(PEMDecoder,DERDecoder),module.exports=PEMDecoder,PEMDecoder.prototype.decode=function(b,c){var d=b.toString().split(/[\r\n]+/g),e=c.label.toUpperCase(),f=/^-----(BEGIN|END) ([^-]+)-----$/,g=-1,h=-1;for(var j=0;j<d.length;j++){var k=d[j].match(f);if(null!==k&&k[2]===e)if(-1==g){if('BEGIN'!==k[1])break;g=j}else{if('END'!==k[1])break;h=j;break}}if(-1===g||-1===h)throw new Error('PEM section not found for: '+e);var l=d.slice(g+1,h).join('');// Remove excessive symbols
l.replace(/[^a-z0-9\+\/=]+/gi,'');var m=new Buffer(l,'base64');return DERDecoder.prototype.decode.call(this,m,c)};

},{"./der":15,"buffer":62,"inherits":160}],18:[function(require,module,exports){
'use strict';var inherits=require('inherits'),Buffer=require('buffer').Buffer,asn1=require('../../asn1'),base=asn1.base,der=asn1.constants.der;// Import DER constants
function DEREncoder(a){this.enc='der',this.name=a.name,this.entity=a,this.tree=new DERNode,this.tree._init(a.body)};module.exports=DEREncoder,DEREncoder.prototype.encode=function(b,c){return this.tree._encode(b,c).join()};// Tree methods
function DERNode(a){base.Node.call(this,'der',a)}inherits(DERNode,base.Node),DERNode.prototype._encodeComposite=function(b,c,d,e){var f=encodeTag(b,c,d,this.reporter);// Short form
if(128>e.length){var g=new Buffer(2);return g[0]=f,g[1]=e.length,this._createEncoderBuffer([g,e])}// Long form
// Count octets required to store length
var h=1;for(var k=e.length;256<=k;k>>=8)h++;var g=new Buffer(2+h);g[0]=f,g[1]=128|h;for(var k=1+h,l=e.length;0<l;k--,l>>=8)g[k]=255&l;return this._createEncoderBuffer([g,e])},DERNode.prototype._encodeStr=function(b,c){if('bitstr'===c)return this._createEncoderBuffer([0|b.unused,b.data]);if('bmpstr'===c){var d=new Buffer(2*b.length);for(var e=0;e<b.length;e++)d.writeUInt16BE(b.charCodeAt(e),2*e);return this._createEncoderBuffer(d)}return'numstr'===c?this._isNumstr(b)?this._createEncoderBuffer(b):this.reporter.error('Encoding of string type: numstr supports only digits and space'):'printstr'===c?this._isPrintstr(b)?this._createEncoderBuffer(b):this.reporter.error('Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark'):/str$/.test(c)?this._createEncoderBuffer(b):this.reporter.error('Encoding of string type: '+c+' unsupported')},DERNode.prototype._encodeObjid=function(b,c,d){if('string'==typeof b){if(!c)return this.reporter.error('string objid given, but no values map found');if(!c.hasOwnProperty(b))return this.reporter.error('objid not found in values map');b=c[b].split(/[\s\.]+/g);for(var e=0;e<b.length;e++)b[e]|=0}else if(Array.isArray(b)){b=b.slice();for(var e=0;e<b.length;e++)b[e]|=0}if(!Array.isArray(b))return this.reporter.error('objid() should be either array or string, got: '+JSON.stringify(b));if(!d){if(40<=b[1])return this.reporter.error('Second objid identifier OOB');b.splice(0,2,40*b[0]+b[1])}// Count number of octets
var f=0;for(var e=0;e<b.length;e++){var g=b[e];for(f++;128<=g;g>>=7)f++}var h=new Buffer(f),k=h.length-1;for(var e=b.length-1;0<=e;e--){var g=b[e];for(h[k--]=127&g;0<(g>>=7);)h[k--]=128|127&g}return this._createEncoderBuffer(h)};function two(a){return 10>a?'0'+a:a}DERNode.prototype._encodeTime=function(b,c){var d,e=new Date(b);return'gentime'===c?d=[two(e.getFullYear()),two(e.getUTCMonth()+1),two(e.getUTCDate()),two(e.getUTCHours()),two(e.getUTCMinutes()),two(e.getUTCSeconds()),'Z'].join(''):'utctime'===c?d=[two(e.getFullYear()%100),two(e.getUTCMonth()+1),two(e.getUTCDate()),two(e.getUTCHours()),two(e.getUTCMinutes()),two(e.getUTCSeconds()),'Z'].join(''):this.reporter.error('Encoding '+c+' time is not supported yet'),this._encodeStr(d,'octstr')},DERNode.prototype._encodeNull=function(){return this._createEncoderBuffer('')},DERNode.prototype._encodeInt=function(b,c){if('string'==typeof b){if(!c)return this.reporter.error('String int or enum given, but no values map');if(!c.hasOwnProperty(b))return this.reporter.error('Values map doesn\'t contain: '+JSON.stringify(b));b=c[b]}// Bignum, assume big endian
if('number'!=typeof b&&!Buffer.isBuffer(b)){var d=b.toArray();!b.sign&&128&d[0]&&d.unshift(0),b=new Buffer(d)}if(Buffer.isBuffer(b)){var e=b.length;0===b.length&&e++;var f=new Buffer(e);return b.copy(f),0===b.length&&(f[0]=0),this._createEncoderBuffer(f)}if(128>b)return this._createEncoderBuffer(b);if(256>b)return this._createEncoderBuffer([0,b]);var e=1;for(var g=b;256<=g;g>>=8)e++;var f=Array(e);for(var g=f.length-1;0<=g;g--)f[g]=255&b,b>>=8;return 128&f[0]&&f.unshift(0),this._createEncoderBuffer(new Buffer(f))},DERNode.prototype._encodeBool=function(b){return this._createEncoderBuffer(b?255:0)},DERNode.prototype._use=function(b,c){return'function'==typeof b&&(b=b(c)),b._getEncoder('der').tree},DERNode.prototype._skipDefault=function(b,c,d){var f,e=this._baseState;if(null===e['default'])return!1;var g=b.join();if(void 0===e.defaultBuffer&&(e.defaultBuffer=this._encodeValue(e['default'],c,d).join()),g.length!==e.defaultBuffer.length)return!1;for(f=0;f<g.length;f++)if(g[f]!==e.defaultBuffer[f])return!1;return!0};// Utility methods
function encodeTag(a,b,c,d){var e;if('seqof'===a?a='seq':'setof'==a&&(a='set'),der.tagByName.hasOwnProperty(a))e=der.tagByName[a];else if('number'==typeof a&&(0|a)===a)e=a;else return d.error('Unknown tag: '+a);return 31<=e?d.error('Multi-octet tag encoding unsupported'):(b||(e|=32),e|=der.tagClassByName[c||'universal']<<6,e)}

},{"../../asn1":7,"buffer":62,"inherits":160}],19:[function(require,module,exports){
'use strict';var encoders=exports;encoders.der=require('./der'),encoders.pem=require('./pem');

},{"./der":18,"./pem":20}],20:[function(require,module,exports){
'use strict';var inherits=require('inherits'),DEREncoder=require('./der');function PEMEncoder(a){DEREncoder.call(this,a),this.enc='pem'};inherits(PEMEncoder,DEREncoder),module.exports=PEMEncoder,PEMEncoder.prototype.encode=function(b,c){var d=DEREncoder.prototype.encode.call(this,b),e=d.toString('base64'),f=['-----BEGIN '+c.label+'-----'];for(var g=0;g<e.length;g+=64)f.push(e.slice(g,g+64));return f.push('-----END '+c.label+'-----'),f.join('\n')};

},{"./der":18,"inherits":160}],21:[function(require,module,exports){
'use strict';// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// when used in node, this will actually load the util module we depend on
// versus loading the builtin util module as happens otherwise
// this is a bug in node module loading as far as I am concerned
var util=require('util/'),pSlice=Array.prototype.slice,hasOwn=Object.prototype.hasOwnProperty,assert=module.exports=ok;// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.
// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })
assert.AssertionError=function(d){this.name='AssertionError',this.actual=d.actual,this.expected=d.expected,this.operator=d.operator,d.message?(this.message=d.message,this.generatedMessage=!1):(this.message=getMessage(this),this.generatedMessage=!0);var f=d.stackStartFunction||fail;if(Error.captureStackTrace)Error.captureStackTrace(this,f);else{// non v8 browsers so we can have a stacktrace
var g=new Error;if(g.stack){var h=g.stack,j=f.name,k=h.indexOf('\n'+j);// try to strip useless frames
if(0<=k){// once we have located the function frame
// we need to strip out everything before it (and its line)
var l=h.indexOf('\n',k+1);h=h.substring(l+1)}this.stack=h}}},util.inherits(assert.AssertionError,Error);function replacer(c,d){return util.isUndefined(d)?''+d:util.isNumber(d)&&!isFinite(d)?d.toString():util.isFunction(d)||util.isRegExp(d)?d.toString():d}function truncate(c,d){return util.isString(c)?c.length<d?c:c.slice(0,d):c}function getMessage(c){return truncate(JSON.stringify(c.actual,replacer),128)+' '+c.operator+' '+truncate(JSON.stringify(c.expected,replacer),128)}// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.
// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.
function fail(c,d,f,g,h){throw new assert.AssertionError({message:f,actual:c,expected:d,operator:g,stackStartFunction:h})}// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail=fail;// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.
function ok(c,d){c||fail(c,!0,d,'==',assert.ok)}assert.ok=ok,assert.equal=function(d,f,g){d!=f&&fail(d,f,g,'==',assert.equal)},assert.notEqual=function(d,f,g){d==f&&fail(d,f,g,'!=',assert.notEqual)},assert.deepEqual=function(d,f,g){_deepEqual(d,f)||fail(d,f,g,'deepEqual',assert.deepEqual)};function _deepEqual(c,d){// 7.1. All identical values are equivalent, as determined by ===.
if(c===d)return!0;if(util.isBuffer(c)&&util.isBuffer(d)){if(c.length!=d.length)return!1;for(var f=0;f<c.length;f++)if(c[f]!==d[f])return!1;return!0;// 7.2. If the expected value is a Date object, the actual value is
// equivalent if it is also a Date object that refers to the same time.
}return util.isDate(c)&&util.isDate(d)?c.getTime()===d.getTime():util.isRegExp(c)&&util.isRegExp(d)?c.source===d.source&&c.global===d.global&&c.multiline===d.multiline&&c.lastIndex===d.lastIndex&&c.ignoreCase===d.ignoreCase:util.isObject(c)||util.isObject(d)?objEquiv(c,d):c==d}function isArguments(c){return'[object Arguments]'==Object.prototype.toString.call(c)}function objEquiv(c,d){if(util.isNullOrUndefined(c)||util.isNullOrUndefined(d))return!1;// an identical 'prototype' property.
if(c.prototype!==d.prototype)return!1;// if one is a primitive, the other must be same
if(util.isPrimitive(c)||util.isPrimitive(d))return c===d;var f=isArguments(c),g=isArguments(d);if(f&&!g||!f&&g)return!1;if(f)return c=pSlice.call(c),d=pSlice.call(d),_deepEqual(c,d);var k,l,h=objectKeys(c),j=objectKeys(d);// having the same number of owned properties (keys incorporates
// hasOwnProperty)
if(h.length!=j.length)return!1;//the same set of keys (although not necessarily the same order),
//~~~cheap key test
for(h.sort(),j.sort(),l=h.length-1;0<=l;l--)if(h[l]!=j[l])return!1;//equivalent values for every corresponding key, and
//~~~possibly expensive deep test
for(l=h.length-1;0<=l;l--)if(k=h[l],!_deepEqual(c[k],d[k]))return!1;return!0}// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);
assert.notDeepEqual=function(d,f,g){_deepEqual(d,f)&&fail(d,f,g,'notDeepEqual',assert.notDeepEqual)},assert.strictEqual=function(d,f,g){d!==f&&fail(d,f,g,'===',assert.strictEqual)},assert.notStrictEqual=function(d,f,g){d===f&&fail(d,f,g,'!==',assert.notStrictEqual)};function expectedException(c,d){if(!c||!d)return!1;return'[object RegExp]'==Object.prototype.toString.call(d)?d.test(c):!!(c instanceof d)||!(!0!==d.call({},c))}function _throws(c,d,f,g){var h;util.isString(f)&&(g=f,f=null);try{d()}catch(j){h=j}if(g=(f&&f.name?' ('+f.name+').':'.')+(g?' '+g:'.'),c&&!h&&fail(h,f,'Missing expected exception'+g),!c&&expectedException(h,f)&&fail(h,f,'Got unwanted exception'+g),c&&h&&f&&!expectedException(h,f)||!c&&h)throw h}// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);
assert.throws=function(c,/*optional*/d,/*optional*/f){_throws.apply(this,[!0].concat(pSlice.call(arguments)))},assert.doesNotThrow=function(c,/*optional*/d){_throws.apply(this,[!1].concat(pSlice.call(arguments)))},assert.ifError=function(c){if(c)throw c};var objectKeys=Object.keys||function(c){var d=[];for(var f in c)hasOwn.call(c,f)&&d.push(f);return d};

},{"util/":259}],22:[function(require,module,exports){
'use strict';module.exports=require('./lib/AsyncEventEmitter');

},{"./lib/AsyncEventEmitter":23}],23:[function(require,module,exports){
'use strict';var AsyncEventEmitter,EventEmitter=require('events').EventEmitter,util=require('util'),async=require('async');module.exports=exports=AsyncEventEmitter=function AsyncEventEmitter(){EventEmitter.call(this)},util.inherits(AsyncEventEmitter,EventEmitter),AsyncEventEmitter.prototype.emit=function(a,b,c){var d=this,f=d._events[a]||[];// Optional data argument
return c||'function'!=typeof b||(c=b,b=void 0),('newListener'===a||'removeListener'===a)&&(b={event:b,fn:c},c=void 0),f=Array.isArray(f)?f:[f],async.eachSeries(f,function(h,j){var k;// Support synchronous functions
if(2>h.length){try{h.call(d,b)}catch(l){k=l}return j(k)}// Async
h.call(d,b,j)},c),d},AsyncEventEmitter.prototype.once=function(a,b){var _d2,c=this;if('function'!=typeof b)throw new TypeError('listener must be a function');// Hack to support set arity
return _d2=2<=b.length?function d(f,h){c.removeListener(a,_d2),b(f,h)}:function _d(f){c.removeListener(a,_d2),b(f)},_d2.listener=b,c.on(a,_d2),c},AsyncEventEmitter.prototype.first=function(a,b){var c=this._events[a]||[];// Contract
if('function'!=typeof b)throw new TypeError('listener must be a function');// Listeners are not always an array
return Array.isArray(c)||(this._events[a]=c=[c]),c.unshift(b),this},AsyncEventEmitter.prototype.at=function(a,b,c){var d=this._events[a]||[];// Contract
if('function'!=typeof c)throw new TypeError('listener must be a function');if('number'!=typeof b||0>b)throw new TypeError('index must be a non-negative integer');// Listeners are not always an array
return Array.isArray(d)||(this._events[a]=d=[d]),d.splice(b,0,c),this},AsyncEventEmitter.prototype.before=function(a,b,c){return this._beforeOrAfter(a,b,c)},AsyncEventEmitter.prototype.after=function(a,b,c){return this._beforeOrAfter(a,b,c,'after')},AsyncEventEmitter.prototype._beforeOrAfter=function(a,b,c,d){var h,j,f=this._events[a]||[],k='after'===d?1:0;// Contract
if('function'!=typeof c)throw new TypeError('listener must be a function');if('function'!=typeof b)throw new TypeError('target must be a function');// Listeners are not always an array
for(Array.isArray(f)||(this._events[a]=f=[f]),j=f.length,h=f.length;h--;)if(f[h]===b){j=h+k;break}return f.splice(j,0,c),this};

},{"async":24,"events":148,"util":259}],24:[function(require,module,exports){
(function (process){
'use strict';(function(){function c(F){var G=!1;return function(){if(G)throw new Error('Callback was already called.');G=!0,F.apply(e,arguments)}}//// cross-browser compatiblity functions ////
var d={},e,f;// global on the server, window in the browser
e=this,null!=e&&(f=e.async),d.noConflict=function(){return e.async=f,d};var g=function g(F,G){if(F.forEach)return F.forEach(G);for(var H=0;H<F.length;H+=1)G(F[H],H,F)},h=function h(F,G){if(F.map)return F.map(G);var H=[];return g(F,function(I,J,K){H.push(G(I,J,K))}),H},j=function j(F,G,H){return F.reduce?F.reduce(G,H):(g(F,function(I,J,K){H=G(H,I,J,K)}),H)},m=function m(F){if(Object.keys)return Object.keys(F);var G=[];for(var H in F)F.hasOwnProperty(H)&&G.push(H);return G};//// exported async module functions ////
//// nextTick implementation with browser-compatible fallback ////
'undefined'!=typeof process&&process.nextTick?(d.nextTick=process.nextTick,d.setImmediate='undefined'==typeof setImmediate?d.nextTick:function(F){setImmediate(F)}):'function'==typeof setImmediate?(d.nextTick=function(F){setImmediate(F)},d.setImmediate=d.nextTick):(d.nextTick=function(F){setTimeout(F,0)},d.setImmediate=d.nextTick),d.each=function(F,G,H){if(H=H||function(){},!F.length)return H();var I=0;g(F,function(J){G(J,c(function(K){K?(H(K),H=function H(){}):(I+=1,I>=F.length&&H(null))}))})},d.forEach=d.each,d.eachSeries=function(F,G,H){if(H=H||function(){},!F.length)return H();var I=0,J=function J(){G(F[I],function(K){K?(H(K),H=function H(){}):(I+=1,I>=F.length?H(null):J())})};J()},d.forEachSeries=d.eachSeries,d.eachLimit=function(F,G,H,I){var J=n(G);J.apply(null,[F,H,I])},d.forEachLimit=d.eachLimit;var n=function n(F){return function(G,H,I){if(I=I||function(){},!G.length||0>=F)return I();var J=0,K=0,L=0;(function M(){if(J>=G.length)return I();for(;L<F&&K<G.length;)K+=1,L+=1,H(G[K-1],function(N){N?(I(N),I=function I(){}):(J+=1,L-=1,J>=G.length?I():M())})})()}},o=function o(F){return function(){var G=Array.prototype.slice.call(arguments);return F.apply(null,[d.each].concat(G))}},p=function p(F,G){return function(){var H=Array.prototype.slice.call(arguments);return G.apply(null,[n(F)].concat(H))}},s=function s(F){return function(){var G=Array.prototype.slice.call(arguments);return F.apply(null,[d.eachSeries].concat(G))}},t=function t(F,G,H,I){var J=[];G=h(G,function(K,L){return{index:L,value:K}}),F(G,function(K,L){H(K.value,function(M,N){J[K.index]=N,L(M)})},function(K){I(K,J)})};d.map=o(t),d.mapSeries=s(t),d.mapLimit=function(F,G,H,I){return u(G)(F,H,I)};var u=function u(F){return p(F,t)};// reduce only has a series version, as doing reduce in parallel won't
// work in many situations.
d.reduce=function(F,G,H,I){d.eachSeries(F,function(J,K){H(G,J,function(L,M){G=M,K(L)})},function(J){I(J,G)})},d.inject=d.reduce,d.foldl=d.reduce,d.reduceRight=function(F,G,H,I){var J=h(F,function(K){return K}).reverse();d.reduce(J,G,H,I)},d.foldr=d.reduceRight;var w=function w(F,G,H,I){var J=[];G=h(G,function(K,L){return{index:L,value:K}}),F(G,function(K,L){H(K.value,function(M){M&&J.push(K),L()})},function(K){I(h(J.sort(function(L,M){return L.index-M.index}),function(L){return L.value}))})};d.filter=o(w),d.filterSeries=s(w),d.select=d.filter,d.selectSeries=d.filterSeries;var z=function z(F,G,H,I){var J=[];G=h(G,function(K,L){return{index:L,value:K}}),F(G,function(K,L){H(K.value,function(M){M||J.push(K),L()})},function(K){I(h(J.sort(function(L,M){return L.index-M.index}),function(L){return L.value}))})};d.reject=o(z),d.rejectSeries=s(z);var A=function A(F,G,H,I){F(G,function(J,K){H(J,function(L){L?(I(J),I=function I(){}):K()})},function(J){I()})};d.detect=o(A),d.detectSeries=s(A),d.some=function(F,G,H){d.each(F,function(I,J){G(I,function(K){K&&(H(!0),H=function H(){}),J()})},function(I){H(!1)})},d.any=d.some,d.every=function(F,G,H){d.each(F,function(I,J){G(I,function(K){K||(H(!1),H=function H(){}),J()})},function(I){H(!0)})},d.all=d.every,d.sortBy=function(F,G,H){d.map(F,function(I,J){G(I,function(K,L){K?J(K):J(null,{value:I,criteria:L})})},function(I,J){if(I)return H(I);var K=function K(L,M){var N=L.criteria,O=M.criteria;return N<O?-1:N>O?1:0};H(null,h(J.sort(K),function(L){return L.value}))})},d.auto=function(F,G){G=G||function(){};var H=m(F);if(!H.length)return G(null);var I={},J=[],K=function K(N){J.unshift(N)},L=function L(N){for(var O=0;O<J.length;O+=1)J[O]===N&&J.splice(O,1)},M=function M(){g(J.slice(0),function(N){N()})};K(function(){m(I).length===H.length&&(G(null,I),G=function G(){})}),g(H,function(N){var O=F[N]instanceof Function?[F[N]]:F[N],P=function P(T){var U=Array.prototype.slice.call(arguments,1);if(1>=U.length&&(U=U[0]),T){var V={};g(m(I),function(W){V[W]=I[W]}),V[N]=U,G(T,V),G=function G(){}}else I[N]=U,d.setImmediate(M)},Q=O.slice(0,Math.abs(O.length-1))||[],R=function R(){return j(Q,function(T,U){return T&&I.hasOwnProperty(U)},!0)&&!I.hasOwnProperty(N)};if(R())O[O.length-1](P,I);else{var S=function S(){R()&&(L(S),O[O.length-1](P,I))};K(S)}})},d.waterfall=function(F,G){if(G=G||function(){},F.constructor!==Array){var H=new Error('First argument to waterfall must be an array of functions');return G(H)}if(!F.length)return G();var I=function I(J){return function(K){if(K)G.apply(null,arguments),G=function G(){};else{var L=Array.prototype.slice.call(arguments,1),M=J.next();M?L.push(I(M)):L.push(G),d.setImmediate(function(){J.apply(null,L)})}}};I(d.iterator(F))()};var B=function B(F,G,H){if(H=H||function(){},G.constructor===Array)F.map(G,function(J,K){J&&J(function(L){var M=Array.prototype.slice.call(arguments,1);1>=M.length&&(M=M[0]),K.call(null,L,M)})},H);else{var I={};F.each(m(G),function(J,K){G[J](function(L){var M=Array.prototype.slice.call(arguments,1);1>=M.length&&(M=M[0]),I[J]=M,K(L)})},function(J){H(J,I)})}};d.parallel=function(F,G){B({map:d.map,each:d.each},F,G)},d.parallelLimit=function(F,G,H){B({map:u(G),each:n(G)},F,H)},d.series=function(F,G){if(G=G||function(){},F.constructor===Array)d.mapSeries(F,function(I,J){I&&I(function(K){var L=Array.prototype.slice.call(arguments,1);1>=L.length&&(L=L[0]),J.call(null,K,L)})},G);else{var H={};d.eachSeries(m(F),function(I,J){F[I](function(K){var L=Array.prototype.slice.call(arguments,1);1>=L.length&&(L=L[0]),H[I]=L,J(K)})},function(I){G(I,H)})}},d.iterator=function(F){var G=function G(H){var I=function I(){return F.length&&F[H].apply(null,arguments),I.next()};return I.next=function(){return H<F.length-1?G(H+1):null},I};return G(0)},d.apply=function(F){var G=Array.prototype.slice.call(arguments,1);return function(){return F.apply(null,G.concat(Array.prototype.slice.call(arguments)))}};var C=function C(F,G,H,I){var J=[];F(G,function(K,L){H(K,function(M,N){J=J.concat(N||[]),L(M)})},function(K){I(K,J)})};d.concat=o(C),d.concatSeries=s(C),d.whilst=function(F,G,H){F()?G(function(I){return I?H(I):void d.whilst(F,G,H)}):H()},d.doWhilst=function(F,G,H){F(function(I){return I?H(I):void(G()?d.doWhilst(F,G,H):H())})},d.until=function(F,G,H){F()?H():G(function(I){return I?H(I):void d.until(F,G,H)})},d.doUntil=function(F,G,H){F(function(I){return I?H(I):void(G()?H():d.doUntil(F,G,H))})},d.queue=function(F,G){function H(K,L,M,N){L.constructor!==Array&&(L=[L]),g(L,function(O){var P={data:O,callback:'function'==typeof N?N:null};M?K.tasks.unshift(P):K.tasks.push(P),K.saturated&&K.tasks.length===G&&K.saturated(),d.setImmediate(K.process)})}G===void 0&&(G=1);var I=0,J={tasks:[],concurrency:G,saturated:null,empty:null,drain:null,push:function push(K,L){H(J,K,!1,L)},unshift:function unshift(K,L){H(J,K,!0,L)},process:function process(){if(I<J.concurrency&&J.tasks.length){var K=J.tasks.shift();J.empty&&0===J.tasks.length&&J.empty(),I+=1;var L=function L(){I-=1,K.callback&&K.callback.apply(K,arguments),J.drain&&0===J.tasks.length+I&&J.drain(),J.process()},M=c(L);F(K.data,M)}},length:function length(){return J.tasks.length},running:function running(){return I}};return J},d.cargo=function(F,G){var H=!1,I=[],J={tasks:I,payload:G,saturated:null,empty:null,drain:null,push:function push(K,L){K.constructor!==Array&&(K=[K]),g(K,function(M){I.push({data:M,callback:'function'==typeof L?L:null}),J.saturated&&I.length===G&&J.saturated()}),d.setImmediate(J.process)},process:function K(){if(!H){if(0===I.length)return void(J.drain&&J.drain());var L='number'==typeof G?I.splice(0,G):I.splice(0),M=h(L,function(N){return N.data});J.empty&&J.empty(),H=!0,F(M,function(){H=!1;var N=arguments;g(L,function(O){O.callback&&O.callback.apply(null,N)}),K()})}},length:function length(){return I.length},running:function running(){return H}};return J};var D=function D(F){return function(G){var H=Array.prototype.slice.call(arguments,1);G.apply(null,H.concat([function(I){var J=Array.prototype.slice.call(arguments,1);'undefined'!=typeof console&&(I?console.error&&console.error(I):console[F]&&g(J,function(K){console[F](K)}))}]))}};d.log=D('log'),d.dir=D('dir'),d.memoize=function(F,G){var H={},I={};G=G||function(K){return K};var J=function J(){var K=Array.prototype.slice.call(arguments),L=K.pop(),M=G.apply(null,K);M in H?L.apply(null,H[M]):M in I?I[M].push(L):(I[M]=[L],F.apply(null,K.concat([function(){H[M]=arguments;var N=I[M];delete I[M];for(var O=0,P=N.length;O<P;O++)N[O].apply(null,arguments)}])))};return J.memo=H,J.unmemoized=F,J},d.unmemoize=function(F){return function(){return(F.unmemoized||F).apply(null,arguments)}},d.times=function(F,G,H){var I=[];for(var J=0;J<F;J++)I.push(J);return d.map(I,G,H)},d.timesSeries=function(F,G,H){var I=[];for(var J=0;J<F;J++)I.push(J);return d.mapSeries(I,G,H)},d.compose=function()/* functions... */{var F=Array.prototype.reverse.call(arguments);return function(){var G=this,H=Array.prototype.slice.call(arguments),I=H.pop();d.reduce(F,H,function(J,K,L){K.apply(G,J.concat([function(){var M=arguments[0],N=Array.prototype.slice.call(arguments,1);L(M,N)}]))},function(J,K){I.apply(G,[J].concat(K))})}};var E=function E(F,G/*args...*/){var H=function H(){var J=this,K=Array.prototype.slice.call(arguments),L=K.pop();return F(G,function(M,N){M.apply(J,K.concat([N]))},L)};if(2<arguments.length){var I=Array.prototype.slice.call(arguments,2);return H.apply(this,I)}return H};d.applyEach=o(E),d.applyEachSeries=s(E),d.forever=function(F,G){function H(I){if(I){if(G)return G(I);throw I}F(H)}H()},'undefined'!=typeof define&&define.amd?define([],function(){return d}):'undefined'!=typeof module&&module.exports?module.exports=d:e.async=d})();

}).call(this,require('_process'))
},{"_process":213}],25:[function(require,module,exports){
(function (process,global){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};(function(){function c(){}function d(aa){return aa}function f(aa){return!!aa}function g(aa){return!aa}// global on the server, window in the browser
function h(aa){return function(){if(null===aa)throw new Error('Callback was already called.');aa.apply(this,arguments),aa=null}}function j(aa){return function(){null===aa||(aa.apply(this,arguments),aa=null)}}//// cross-browser compatiblity functions ////
function m(aa){return W(aa)||// has a positive integer length property
'number'==typeof aa.length&&0<=aa.length&&0==aa.length%1}function n(aa,ba){for(var ca=-1,da=aa.length;++ca<da;)ba(aa[ca],ca,aa)}function o(aa,ba){for(var ca=-1,da=aa.length,ea=Array(da);++ca<da;)ea[ca]=ba(aa[ca],ca,aa);return ea}function p(aa){return o(Array(aa),function(ba,ca){return ca})}function r(aa,ba,ca){return n(aa,function(da,ea,fa){ca=ba(ca,da,ea,fa)}),ca}function s(aa,ba){n(Y(aa),function(ca){ba(aa[ca],ca)})}function u(aa,ba){for(var ca=0;ca<aa.length;ca++)if(aa[ca]===ba)return ca;return-1}function z(aa){var ba=-1,ca,da;return m(aa)?(ca=aa.length,function(){return ba++,ba<ca?ba:null}):(da=Y(aa),ca=da.length,function(){return ba++,ba<ca?da[ba]:null})}// Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)
// This accumulates the arguments passed into an array, after a given index.
// From underscore.js (https://github.com/jashkenas/underscore/pull/2140).
function A(aa,ba){return ba=null==ba?aa.length-1:+ba,function(){var ca=Math.max(arguments.length-ba,0),da=Array(ca);for(var ea=0;ea<ca;ea++)da[ea]=arguments[ea+ba];return 0===ba?aa.call(this,da):1===ba?aa.call(this,arguments[0],da):void 0;// Currently unused but handle cases outside of the switch statement:
// var args = Array(startIndex + 1);
// for (index = 0; index < startIndex; index++) {
//     args[index] = arguments[index];
// }
// args[startIndex] = rest;
// return func.apply(this, args);
}}function B(aa){return function(ba,ca,da){return aa(ba,da)}}//// exported async module functions ////
//// nextTick implementation with browser-compatible fallback ////
// capture the global reference to guard against fakeTimer mocks
function C(aa){return function(ba,ca,da){da=j(da||c),ba=ba||[];var ea=z(ba);if(0>=aa)return da(null);var fa=!1,ga=0,ha=!1;(function ia(){if(fa&&0>=ga)return da(null);for(;ga<aa&&!ha;){var ja=ea();if(null===ja)return fa=!0,void(0>=ga&&da(null));ga+=1,ca(ba[ja],ja,h(function(ka){ga-=1,ka?(da(ka),ha=!0):ia()}))}})()}}function D(aa){return function(ba,ca,da){return aa(S.eachOf,ba,ca,da)}}function E(aa){return function(ba,ca,da,ea){return aa(C(ca),ba,da,ea)}}function F(aa){return function(ba,ca,da){return aa(S.eachOfSeries,ba,ca,da)}}function G(aa,ba,ca,da){da=j(da||c),ba=ba||[];var ea=m(ba)?[]:{};aa(ba,function(fa,ga,ha){ca(fa,function(ia,ja){ea[ga]=ja,ha(ia)})},function(fa){da(fa,ea)})}function H(aa,ba,ca,da){var ea=[];aa(ba,function(fa,ga,ha){ca(fa,function(ia){ia&&ea.push({index:ga,value:fa}),ha()})},function(){da(o(ea.sort(function(fa,ga){return fa.index-ga.index}),function(fa){return fa.value}))})}function I(aa,ba,ca,da){H(aa,ba,function(ea,fa){ca(ea,function(ga){fa(!ga)})},da)}function J(aa,ba,ca){return function(da,ea,fa,ga){function ha(){ga&&ga(ca(!1,void 0))}function ia(ja,ka,la){return ga?void fa(ja,function(ma){ga&&ba(ma)&&(ga(ca(!0,ja)),ga=fa=!1),la()}):la()}3<arguments.length?aa(da,ea,ia,ha):(ga=fa,fa=ea,aa(da,ia,ha))}}function K(aa,ba){return ba}function L(aa,ba,ca){ca=ca||c;var da=m(ba)?[]:{};aa(ba,function(ea,fa,ga){ea(A(function(ha,ia){1>=ia.length&&(ia=ia[0]),da[fa]=ia,ga(ha)}))},function(ea){ca(ea,da)})}function M(aa,ba,ca,da){var ea=[];aa(ba,function(fa,ga,ha){ca(fa,function(ia,ja){ea=ea.concat(ja||[]),ha(ia)})},function(fa){da(fa,ea)})}function N(aa,ba,ca){function da(ia,ja,ka,la){if(null!=la&&'function'!=typeof la)throw new Error('task callback must be a function');return ia.started=!0,W(ja)||(ja=[ja]),0===ja.length&&ia.idle()?S.setImmediate(function(){ia.drain()}):void(n(ja,function(ma){var na={data:ma,callback:la||c};ka?ia.tasks.unshift(na):ia.tasks.push(na),ia.tasks.length===ia.concurrency&&ia.saturated()}),S.setImmediate(ia.process))}function ea(ia,ja){return function(){fa-=1;var ka=!1,la=arguments;n(ja,function(ma){n(ga,function(na,oa){na!==ma||ka||(ga.splice(oa,1),ka=!0)}),ma.callback.apply(ma,la)}),0===ia.tasks.length+fa&&ia.drain(),ia.process()}}if(null==ba)ba=1;else if(0===ba)throw new Error('Concurrency must not be zero');var fa=0,ga=[],ha={tasks:[],concurrency:ba,payload:ca,saturated:c,empty:c,drain:c,started:!1,paused:!1,push:function push(ia,ja){da(ha,ia,!1,ja)},kill:function kill(){ha.drain=c,ha.tasks=[]},unshift:function unshift(ia,ja){da(ha,ia,!0,ja)},process:function process(){for(;!ha.paused&&fa<ha.concurrency&&ha.tasks.length;){var ia=ha.payload?ha.tasks.splice(0,ha.payload):ha.tasks.splice(0,ha.tasks.length),ja=o(ia,function(la){return la.data});0===ha.tasks.length&&ha.empty(),fa+=1,ga.push(ia[0]);var ka=h(ea(ha,ia));aa(ja,ka)}},length:function length(){return ha.tasks.length},running:function running(){return fa},workersList:function workersList(){return ga},idle:function idle(){return 0===ha.tasks.length+fa},pause:function pause(){ha.paused=!0},resume:function resume(){if(!1!==ha.paused){ha.paused=!1;var ia=Math.min(ha.concurrency,ha.tasks.length);// Need to call q.process once per concurrent
// worker to preserve full concurrency after pause
for(var ja=1;ja<=ia;ja++)S.setImmediate(ha.process)}}};return ha}function O(aa){return A(function(ba,ca){ba.apply(null,ca.concat([A(function(da,ea){'object'==('undefined'==typeof console?'undefined':_typeof(console))&&(da?console.error&&console.error(da):console[aa]&&n(ea,function(fa){console[aa](fa)}))})]))})}function P(aa){return function(ba,ca,da){aa(p(ba),ca,da)}}function Q(aa){return A(function(ba,ca){var da=A(function(ea){var fa=this,ga=ea.pop();return aa(ba,function(ha,ia,ja){ha.apply(fa,ea.concat([ja]))},ga)});return ca.length?da.apply(this,ca):da})}function R(aa){return A(function(ba){var ca=ba.pop();ba.push(function(){var ea=arguments;da?S.setImmediate(function(){ca.apply(null,ea)}):ca.apply(null,ea)});var da=!0;aa.apply(this,ba),da=!1})}var S={},T,U='object'==('undefined'==typeof self?'undefined':_typeof(self))&&self.self===self&&self||'object'==('undefined'==typeof global?'undefined':_typeof(global))&&global.global===global&&global||this;// Establish the root object, `window` (`self`) in the browser, `global`
// on the server, or `this` in some virtual machines. We use `self`
// instead of `window` for `WebWorker` support.
null!=U&&(T=U.async),S.noConflict=function(){return U.async=T,S};var V=Object.prototype.toString,W=Array.isArray||function(aa){return'[object Array]'===V.call(aa)},X=function X(aa){var ba='undefined'==typeof aa?'undefined':_typeof(aa);return'function'===ba||'object'===ba&&!!aa},Y=Object.keys||function(aa){var ba=[];for(var ca in aa)aa.hasOwnProperty(ca)&&ba.push(ca);return ba},Z='function'==typeof setImmediate&&setImmediate,$=Z?function(aa){Z(aa)}:function(aa){setTimeout(aa,0)};// Ported from underscore.js isObject
S.nextTick='object'==('undefined'==typeof process?'undefined':_typeof(process))&&'function'==typeof process.nextTick?process.nextTick:$,S.setImmediate=Z?$:S.nextTick,S.forEach=S.each=function(aa,ba,ca){return S.eachOf(aa,B(ba),ca)},S.forEachSeries=S.eachSeries=function(aa,ba,ca){return S.eachOfSeries(aa,B(ba),ca)},S.forEachLimit=S.eachLimit=function(aa,ba,ca,da){return C(ba)(aa,B(ca),da)},S.forEachOf=S.eachOf=function(aa,ba,ca){function da(ha){ga--,ha?ca(ha):null===fa&&0>=ga&&ca(null)}ca=j(ca||c),aa=aa||[];for(var fa,ea=z(aa),ga=0;null!=(fa=ea());)ga+=1,ba(aa[fa],fa,h(da));0===ga&&ca(null)},S.forEachOfSeries=S.eachOfSeries=function(aa,ba,ca){function da(){var ga=!0;return null===fa?ca(null):void(ba(aa[fa],fa,h(function(ha){if(ha)ca(ha);else{if(fa=ea(),null===fa)return ca(null);ga?S.setImmediate(da):da()}})),ga=!1)}ca=j(ca||c),aa=aa||[];var ea=z(aa),fa=ea();da()},S.forEachOfLimit=S.eachOfLimit=function(aa,ba,ca,da){C(ba)(aa,ca,da)},S.map=D(G),S.mapSeries=F(G),S.mapLimit=E(G),S.inject=S.foldl=S.reduce=function(aa,ba,ca,da){S.eachOfSeries(aa,function(ea,fa,ga){ca(ba,ea,function(ha,ia){ba=ia,ga(ha)})},function(ea){da(ea,ba)})},S.foldr=S.reduceRight=function(aa,ba,ca,da){var ea=o(aa,d).reverse();S.reduce(ea,ba,ca,da)},S.transform=function(aa,ba,ca,da){3===arguments.length&&(da=ca,ca=ba,ba=W(aa)?[]:{}),S.eachOf(aa,function(ea,fa,ga){ca(ba,ea,fa,ga)},function(ea){da(ea,ba)})},S.select=S.filter=D(H),S.selectLimit=S.filterLimit=E(H),S.selectSeries=S.filterSeries=F(H),S.reject=D(I),S.rejectLimit=E(I),S.rejectSeries=F(I),S.any=S.some=J(S.eachOf,f,d),S.someLimit=J(S.eachOfLimit,f,d),S.all=S.every=J(S.eachOf,g,g),S.everyLimit=J(S.eachOfLimit,g,g),S.detect=J(S.eachOf,d,K),S.detectSeries=J(S.eachOfSeries,d,K),S.detectLimit=J(S.eachOfLimit,d,K),S.sortBy=function(aa,ba,ca){function da(ea,fa){var ga=ea.criteria,ha=fa.criteria;return ga<ha?-1:ga>ha?1:0}S.map(aa,function(ea,fa){ba(ea,function(ga,ha){ga?fa(ga):fa(null,{value:ea,criteria:ha})})},function(ea,fa){return ea?ca(ea):void ca(null,o(fa.sort(da),function(ga){return ga.value}))})},S.auto=function(aa,ba,ca){function da(ma){la.unshift(ma)}function ea(ma){var na=u(la,ma);0<=na&&la.splice(na,1)}function fa(){ha--,n(la.slice(0),function(ma){ma()})}'function'==typeof arguments[1]&&(ca=ba,ba=null),ca=j(ca||c);var ga=Y(aa),ha=ga.length;if(!ha)return ca(null);ba||(ba=ha);var ia={},ja=0,ka=!1,la=[];da(function(){ha||ca(null,ia)}),n(ga,function(ma){if(!ka){var pa,qa,ra,sa,ta;(function(){var na=function na(){return ja<ba&&r(ra,function(ua,va){return ua&&ia.hasOwnProperty(va)},!0)&&!ia.hasOwnProperty(ma)},oa=function oa(){na()&&(ja++,ea(oa),pa[pa.length-1](qa,ia))};for(pa=W(aa[ma])?aa[ma]:[aa[ma]],qa=A(function(ua,va){if(ja--,1>=va.length&&(va=va[0]),ua){var wa={};s(ia,function(xa,ya){wa[ya]=xa}),wa[ma]=va,ka=!0,ca(ua,wa)}else ia[ma]=va,S.setImmediate(fa)}),ra=pa.slice(0,pa.length-1),sa=ra.length;sa--;){if(!(ta=aa[ra[sa]]))throw new Error('Has nonexistent dependency in '+ra.join(', '));if(W(ta)&&0<=u(ta,ma))throw new Error('Has cyclic dependencies')}na()?(ja++,pa[pa.length-1](qa,ia)):da(oa)})()}// prevent dead-locks
})},S.retry=function(aa,ba,ca){function da(ka,la){if('number'==typeof la)ka.times=parseInt(la,10)||fa;else if('object'==('undefined'==typeof la?'undefined':_typeof(la)))ka.times=parseInt(la.times,10)||fa,ka.interval=parseInt(la.interval,10)||ga;else throw new Error('Unsupported argument type for \'times\': '+('undefined'==typeof la?'undefined':_typeof(la)))}function ea(ka,la){function ma(pa,qa){return function(ra){pa(function(sa,ta){ra(!sa||qa,{err:sa,result:ta})},la)}}function na(pa){return function(qa){setTimeout(function(){qa(null)},pa)}}for(;ia.times;){var oa=!(ia.times-=1);ha.push(ma(ia.task,oa)),!oa&&0<ia.interval&&ha.push(na(ia.interval))}S.series(ha,function(pa,qa){qa=qa[qa.length-1],(ka||ia.callback)(qa.err,qa.result)})}// If a callback is passed, run this as a controll flow
var fa=5,ga=0,ha=[],ia={times:fa,interval:ga},ja=arguments.length;if(1>ja||3<ja)throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');else 2>=ja&&'function'==typeof aa&&(ca=ba,ba=aa);return'function'!=typeof aa&&da(ia,aa),ia.callback=ca,ia.task=ba,ia.callback?ea():ea},S.waterfall=function(aa,ba){function ca(ea){return A(function(fa,ga){if(fa)ba.apply(null,[fa].concat(ga));else{var ha=ea.next();ha?ga.push(ca(ha)):ga.push(ba),R(ea).apply(null,ga)}})}if(ba=j(ba||c),!W(aa)){var da=new Error('First argument to waterfall must be an array of functions');return ba(da)}return aa.length?void ca(S.iterator(aa))():ba()},S.parallel=function(aa,ba){L(S.eachOf,aa,ba)},S.parallelLimit=function(aa,ba,ca){L(C(ba),aa,ca)},S.series=function(aa,ba){L(S.eachOfSeries,aa,ba)},S.iterator=function(aa){function ba(ca){function da(){return aa.length&&aa[ca].apply(null,arguments),da.next()}return da.next=function(){return ca<aa.length-1?ba(ca+1):null},da}return ba(0)},S.apply=A(function(aa,ba){return A(function(ca){return aa.apply(null,ba.concat(ca))})}),S.concat=D(M),S.concatSeries=F(M),S.whilst=function(aa,ba,ca){if(ca=ca||c,aa()){var da=A(function(ea,fa){ea?ca(ea):aa.apply(this,fa)?ba(da):ca.apply(null,[null].concat(fa))});ba(da)}else ca(null)},S.doWhilst=function(aa,ba,ca){var da=0;return S.whilst(function(){return 1>=++da||ba.apply(this,arguments)},aa,ca)},S.until=function(aa,ba,ca){return S.whilst(function(){return!aa.apply(this,arguments)},ba,ca)},S.doUntil=function(aa,ba,ca){return S.doWhilst(aa,function(){return!ba.apply(this,arguments)},ca)},S.during=function(aa,ba,ca){ca=ca||c;var da=A(function(fa,ga){fa?ca(fa):(ga.push(ea),aa.apply(this,ga))}),ea=function ea(fa,ga){fa?ca(fa):ga?ba(da):ca(null)};aa(ea)},S.doDuring=function(aa,ba,ca){var da=0;S.during(function(ea){1>da++?ea(null,!0):ba.apply(this,arguments)},aa,ca)},S.queue=function(aa,ba){var ca=N(function(da,ea){aa(da[0],ea)},ba,1);return ca},S.priorityQueue=function(aa,ba){function ca(ga,ha){return ga.priority-ha.priority}function da(ga,ha,ia){for(var ja=-1,ka=ga.length-1;ja<ka;){var la=ja+(ka-ja+1>>>1);0<=ia(ha,ga[la])?ja=la:ka=la-1}return ja}function ea(ga,ha,ia,ja){if(null!=ja&&'function'!=typeof ja)throw new Error('task callback must be a function');return ga.started=!0,W(ha)||(ha=[ha]),0===ha.length?S.setImmediate(function(){ga.drain()}):void n(ha,function(ka){var la={data:ka,priority:ia,callback:'function'==typeof ja?ja:c};ga.tasks.splice(da(ga.tasks,la,ca)+1,0,la),ga.tasks.length===ga.concurrency&&ga.saturated(),S.setImmediate(ga.process)})}// Start with a normal queue
var fa=S.queue(aa,ba);// Override push to accept second parameter representing priority
return fa.push=function(ga,ha,ia){ea(fa,ga,ha,ia)},delete fa.unshift,fa},S.cargo=function(aa,ba){return N(aa,1,ba)},S.log=O('log'),S.dir=O('dir'),S.memoize=function(aa,ba){var ca={},da={},ea=Object.prototype.hasOwnProperty;ba=ba||d;var fa=A(function(ha){var ia=ha.pop(),ja=ba.apply(null,ha);ea.call(ca,ja)?S.setImmediate(function(){ia.apply(null,ca[ja])}):ea.call(da,ja)?da[ja].push(ia):(da[ja]=[ia],aa.apply(null,ha.concat([A(function(ka){ca[ja]=ka;var la=da[ja];delete da[ja];for(var ma=0,na=la.length;ma<na;ma++)la[ma].apply(null,ka)})])))});return fa.memo=ca,fa.unmemoized=aa,fa},S.unmemoize=function(aa){return function(){return(aa.unmemoized||aa).apply(null,arguments)}},S.times=P(S.map),S.timesSeries=P(S.mapSeries),S.timesLimit=function(aa,ba,ca,da){return S.mapLimit(p(aa),ba,ca,da)},S.seq=function()/* functions... */{var aa=arguments;return A(function(ba){var ca=this,da=ba[ba.length-1];'function'==typeof da?ba.pop():da=c,S.reduce(aa,ba,function(ea,fa,ga){fa.apply(ca,ea.concat([A(function(ha,ia){ga(ha,ia)})]))},function(ea,fa){da.apply(ca,[ea].concat(fa))})})},S.compose=function()/* functions... */{return S.seq.apply(null,Array.prototype.reverse.call(arguments))},S.applyEach=Q(S.eachOf),S.applyEachSeries=Q(S.eachOfSeries),S.forever=function(aa,ba){function ca(fa){return fa?da(fa):void ea(ca)}var da=h(ba||c),ea=R(aa);ca()},S.ensureAsync=R,S.constant=A(function(aa){var ba=[null].concat(aa);return function(ca){return ca.apply(this,ba)}}),S.wrapSync=S.asyncify=function(ba){return A(function(ca){var da=ca.pop(),ea;try{ea=ba.apply(this,ca)}catch(fa){return da(fa)}// if result is Promise object
X(ea)&&'function'==typeof ea.then?ea.then(function(fa){da(null,fa)})['catch'](function(fa){da(fa.message?fa:new Error(fa))}):da(null,ea)})},'object'==('undefined'==typeof module?'undefined':_typeof(module))&&module.exports?module.exports=S:'function'==typeof define&&define.amd?define([],function(){return S}):U.async=S})();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":213}],26:[function(require,module,exports){
'use strict';module.exports=function(b){var c={},d=b.length,e=b.charAt(0);// pre-compute lookup table
for(var f=0;f<b.length;f++)c[b.charAt(f)]=f;return{encode:function encode(h){if(0===h.length)return'';var l=[0];for(var m=0;m<h.length;++m){for(var n=0,o=h[m];n<l.length;++n)o+=l[n]<<8,l[n]=o%d,o=0|o/d;for(;0<o;)l.push(o%d),o=0|o/d}// deal with leading zeros
for(var p=0;0===h[p]&&p<h.length-1;++p)l.push(0);// convert digits to a string
for(var q=0,r=l.length-1;q<=r;++q,--r){var s=b[l[q]];l[q]=b[l[r]],l[r]=s}return l.join('')},decode:function decode(h){if(0===h.length)return[];var l=[0];for(var m=0;m<h.length;m++){var n=c[h[m]];if(n===void 0)throw new Error('Non-base'+d+' character');for(var o=0,p=n;o<l.length;++o)p+=l[o]*d,l[o]=255&p,p>>=8;for(;0<p;)l.push(255&p),p>>=8}// deal with leading zeros
for(var q=0;h[q]===e&&q<h.length-1;++q)l.push(0);return l.reverse()}}};

},{}],27:[function(require,module,exports){
'use strict';exports.toByteArray=toByteArray,exports.fromByteArray=fromByteArray;var lookup=[],revLookup=[],Arr='undefined'==typeof Uint8Array?Array:Uint8Array;function init(){var a='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var b=0,c=a.length;b<c;++b)lookup[b]=a[b],revLookup[a.charCodeAt(b)]=b;revLookup['-'.charCodeAt(0)]=62,revLookup['_'.charCodeAt(0)]=63}init();function toByteArray(a){var b,c,d,e,f,g,h=a.length;if(0<h%4)throw new Error('Invalid string. Length must be a multiple of 4');// the number of equal signs (place holders)
// if there are two placeholders, than the two characters before it
// represent one byte
// if there is only one, then the three characters before it represent 2 bytes
// this is just a cheap hack to not do indexOf twice
f='='===a[h-2]?2:'='===a[h-1]?1:0,g=new Arr(3*h/4-f),d=0<f?h-4:h;var k=0;for(b=0,c=0;b<d;b+=4,c+=3)e=revLookup[a.charCodeAt(b)]<<18|revLookup[a.charCodeAt(b+1)]<<12|revLookup[a.charCodeAt(b+2)]<<6|revLookup[a.charCodeAt(b+3)],g[k++]=255&e>>16,g[k++]=255&e>>8,g[k++]=255&e;return 2===f?(e=revLookup[a.charCodeAt(b)]<<2|revLookup[a.charCodeAt(b+1)]>>4,g[k++]=255&e):1==f&&(e=revLookup[a.charCodeAt(b)]<<10|revLookup[a.charCodeAt(b+1)]<<4|revLookup[a.charCodeAt(b+2)]>>2,g[k++]=255&e>>8,g[k++]=255&e),g}function tripletToBase64(a){return lookup[63&a>>18]+lookup[63&a>>12]+lookup[63&a>>6]+lookup[63&a]}function encodeChunk(a,b,c){var d,e=[];for(var f=b;f<c;f+=3)d=(a[f]<<16)+(a[f+1]<<8)+a[f+2],e.push(tripletToBase64(d));return e.join('')}function fromByteArray(a){var b,c=a.length,d=c%3,e='',f=[],g=16383;// if we have 1 byte left, pad 2 bytes
// must be multiple of 3
// go through the array every three bytes, we'll deal with trailing stuff later
for(var h=0,k=c-d;h<k;h+=g)f.push(encodeChunk(a,h,h+g>k?k:h+g));// pad the end with zeros, but make sure to not forget the extra bytes
return 1==d?(b=a[c-1],e+=lookup[b>>2],e+=lookup[63&b<<4],e+='=='):2==d&&(b=(a[c-2]<<8)+a[c-1],e+=lookup[b>>10],e+=lookup[63&b>>4],e+=lookup[63&b<<2],e+='='),f.push(e),f.join('')}

},{}],28:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};/*! bignumber.js v2.4.0 https://github.com/MikeMcl/bignumber.js/LICENCE */;(function(u){'use strict';/*
      bignumber.js v2.4.0
      A JavaScript library for arbitrary-precision arithmetic.
      https://github.com/MikeMcl/bignumber.js
      Copyright (c) 2016 Michael Mclaughlin <M8ch88l@gmail.com>
      MIT Expat Licence
    *//*
     * Create and return a BigNumber constructor.
     */function g(X){/******************************************************************************************/// CONSTRUCTOR
/*
         * The BigNumber constructor and exported function.
         * Create and return a new instance of a BigNumber object.
         *
         * n {number|string|BigNumber} A numeric value.
         * [b] {number} The base of n. Integer, 2 to 64 inclusive.
         */function Y(Re,Le){var Ae,Ee,_e,De,ve,Ie,Fe=this;// Enable constructor usage without new.
if(!(Fe instanceof Y))return fe&&te(26,'constructor call without new',Re),new Y(Re,Le);// 'new BigNumber() base not an integer: {b}'
// 'new BigNumber() base out of range: {b}'
if(null==Le||!me(Le,2,64,ce,'base')){// Duplicate.
if(Re instanceof Y)return Fe.s=Re.s,Fe.e=Re.e,Fe.c=(Re=Re.c)?Re.slice():Re,void(ce=0);if((De='number'==typeof Re)&&0==0*Re){// Fast path for integers.
if(Fe.s=0>1/Re?(Re=-Re,-1):1,Re===~~Re){for(Ee=0,_e=Re;10<=_e;_e/=10,Ee++);return Fe.e=Ee,Fe.c=[Re],void(ce=0)}Ie=Re+''}else{if(!F.test(Ie=Re+''))return I(Fe,Ie,De);Fe.s=45===Ie.charCodeAt(0)?(Ie=Ie.slice(1),-1):1}}else{// Ensure return value is rounded to DECIMAL_PLACES as with other bases.
// Allow exponential notation to be used with base 10 argument.
if(Le=0|Le,Ie=Re+'',10==Le)return Fe=new Y(Re instanceof Y?Re:Ie),se(Fe,le+Fe.e+1,ue);// Avoid potential interpretation of Infinity and NaN as base 44+ values.
// Any number in exponential form will fail due to the [Ee][+-].
if((De='number'==typeof Re)&&0!=0*Re||!new RegExp('^-?'+(Ae='['+G.slice(0,Le)+']+')+'(?:\\.'+Ae+')?$',37>Le?'i':'').test(Ie))return I(Fe,Ie,De,Le);De?(Fe.s=0>1/Re?(Ie=Ie.slice(1),-1):1,fe&&15<Ie.replace(/^0\.0*|\./,'').length&&te(ce,w,Re),De=!1):Fe.s=45===Ie.charCodeAt(0)?(Ie=Ie.slice(1),-1):1,Ie=Z(Ie,10,Le,Fe.s)}// Decimal point?
// Determine leading zeros.
for(-1<(Ee=Ie.indexOf('.'))&&(Ie=Ie.replace('.','')),0<(_e=Ie.search(/e/i))?(0>Ee&&(Ee=_e),Ee+=+Ie.slice(_e+1),Ie=Ie.substring(0,_e)):0>Ee&&(Ee=Ie.length),_e=0;48===Ie.charCodeAt(_e);_e++);// Determine trailing zeros.
for(ve=Ie.length;48===Ie.charCodeAt(--ve););if(Ie=Ie.slice(_e,ve+1),!Ie)Fe.c=[Fe.e=0];else// Overflow?
if(ve=Ie.length,De&&fe&&15<ve&&(Re>V||Re!==U(Re))&&te(ce,w,Fe.s*Re),Ee=Ee-_e-1,Ee>pe)Fe.c=Fe.e=null;else if(Ee<he)Fe.c=[Fe.e=0];else{if(Fe.e=Ee,Fe.c=[],_e=(Ee+1)%H,0>Ee&&(_e+=H),_e<ve){for(_e&&Fe.c.push(+Ie.slice(0,_e)),ve-=H;_e<ve;)Fe.c.push(+Ie.slice(_e,_e+=H));Ie=Ie.slice(_e),_e=H-Ie.length}else _e-=ve;for(;_e--;Ie+='0');Fe.c.push(+Ie)}ce=0}// CONSTRUCTOR PROPERTIES
// PRIVATE FUNCTIONS
// Convert a numeric string of baseIn to a numeric string of baseOut.
function Z(Re,Le,Ae,Ee){var _e,De,ve,Ie,Fe,Te,Ue,je=Re.indexOf('.'),Ce=le,Pe=ue;// Remove trailing zeros.
for(37>Ae&&(Re=Re.toLowerCase()),0<=je&&(ve=Ne,Ne=0,Re=Re.replace('.',''),Ue=new Y(Ae),Fe=Ue.pow(Re.length-je),Ne=ve,Ue.c=R(A(f(Fe.c),Fe.e),10,Le),Ue.e=Ue.c.length),Te=R(Re,Ae,Le),De=ve=Te.length;0==Te[--ve];Te.pop());if(!Te[0])return'0';if(0>je?--De:(Fe.c=Te,Fe.e=De,Fe.s=Ee,Fe=de(Fe,Ue,Ce,Pe,Le),Te=Fe.c,Ie=Fe.r,De=Fe.e),_e=De+Ce+1,je=Te[_e],ve=Le/2,Ie=Ie||0>_e||null!=Te[_e+1],Ie=4>Pe?(null!=je||Ie)&&(0==Pe||Pe==(0>Fe.s?3:2)):je>ve||je==ve&&(4==Pe||Ie||6==Pe&&1&Te[_e-1]||Pe==(0>Fe.s?8:7)),1>_e||!Te[0])Re=Ie?A('1',-Ce):'0';else{if(Te.length=_e,Ie)// Rounding up may mean the previous digit has to be rounded up and so on.
for(--Le;++Te[--_e]>Le;)Te[_e]=0,_e||(++De,Te.unshift(1));// Determine trailing zeros.
for(ve=Te.length;!Te[--ve];);// E.g. [4, 11, 15] becomes 4bf.
for(je=0,Re='';je<=ve;Re+=G.charAt(Te[je++]));Re=A(Re,De)}// The caller will add the sign.
return Re}// Perform division in the specified base. Called by div and convertBase.
/*
         * Return a string representing the value of BigNumber n in fixed-point or exponential
         * notation rounded to the specified decimal places or significant digits.
         *
         * n is a BigNumber.
         * i is the index of the last digit required (i.e. the digit that may be rounded up).
         * rm is the rounding mode.
         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.
         */function Q(Re,Le,Ae,Ee){var _e,De,ve,Ie,Fe;if(Ae=null!=Ae&&me(Ae,0,8,Ee,B)?0|Ae:ue,!Re.c)return Re.toString();if(_e=Re.c[0],ve=Re.e,null==Le)Fe=f(Re.c),Fe=19==Ee||24==Ee&&ve<=ae?L(Fe,ve):A(Fe,ve);else// toPrecision returns exponential notation if the number of significant digits
// specified is less than the number of digits necessary to represent the integer
// part of the value in fixed-point notation.
// Exponential notation.
if(Re=se(new Y(Re),Le,Ae),De=Re.e,Fe=f(Re.c),Ie=Fe.length,19==Ee||24==Ee&&(Le<=De||De<=ae)){// Append zeros?
for(;Ie<Le;Fe+='0',Ie++);Fe=L(Fe,De)}else// Append zeros?
if(Le-=ve,Fe=A(Fe,De),De+1>Ie){if(0<--Le)for(Fe+='.';Le--;Fe+='0');}else if(Le+=De-Ie,0<Le)for(De+1==Ie&&(Fe+='.');Le--;Fe+='0');return 0>Re.s&&_e?'-'+Fe:Fe}// Handle BigNumber.max and BigNumber.min.
function K(Re,Le){var Ae,Ee,_e=0;for(S(Re[0])&&(Re=Re[0]),Ae=new Y(Re[0]);++_e<Re.length;)// If any number is NaN, return NaN.
if(Ee=new Y(Re[_e]),!Ee.s){Ae=Ee;break}else Le.call(Ae,Ee)&&(Ae=Ee);return Ae}/*
         * Return true if n is an integer in range, otherwise throw.
         * Use for argument validation when ERRORS is true.
         */function ee(Re,Le,Ae,Ee,_e){return(Re<Le||Re>Ae||Re!=E(Re))&&te(Ee,(_e||'decimal places')+(Re<Le||Re>Ae?' out of range':' not an integer'),Re),!0}/*
         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
         * Called by minus, plus and times.
         */function ie(Re,Le,Ae){// Remove trailing zeros.
for(var Ee=1,_e=Le.length;!Le[--_e];Le.pop());// Calculate the base 10 exponent. First get the number of digits of c[0].
for(_e=Le[0];10<=_e;_e/=10,Ee++);// Overflow?
return(Ae=Ee+Ae*H-1)>pe?Re.c=Re.e=null:Ae<he?Re.c=[Re.e=0]:(Re.e=Ae,Re.c=Le),Re}// Handle values that fail the validity test in BigNumber.
// Throw a BigNumber Error.
function te(Re,Le,Ae){var Ee=new Error(['new BigNumber','cmp','config','div','divToInt','eq','gt','gte','lt','lte','minus','mod','plus','precision','random','round','shift','times','toDigits','toExponential','toFixed','toFormat','toFraction','pow','toPrecision','toString','BigNumber'][Re]+'() '+Le+': '+Ae);throw Ee.name='BigNumber Error',ce=0,Ee}/*
         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
         * If r is truthy, it is known that there are more digits after the rounding digit.
         */function se(Re,Le,Ae,Ee){var _e,De,ve,Ie,Fe,Te,Ue,je=Re.c,Ce=$;// if x is not Infinity or NaN...
if(je){// rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
// n is a base 1e14 number, the value of the element of array x.c containing rd.
// ni is the index of n within x.c.
// d is the number of digits of n.
// i is the index of rd within n including leading zeros.
// j is the actual index of rd within n (if < 0, rd is a leading zero).
out:{// Get the number of digits of the first element of xc.
for(_e=1,Ie=je[0];10<=Ie;Ie/=10,_e++);// If the rounding digit is in the first element of xc...
if(De=Le-_e,0>De)De+=H,ve=Le,Fe=je[Te=0],Ue=0|Fe/Ce[_e-ve-1]%10;else if(Te=T((De+1)/H),!(Te>=je.length)){// Get the number of digits of n.
for(Fe=Ie=je[Te],_e=1;10<=Ie;Ie/=10,_e++);// Get the index of rd within n.
De%=H,ve=De-H+_e,Ue=0>ve?0:0|Fe/Ce[_e-ve-1]%10}else if(Ee){// Needed by sqrt.
for(;je.length<=Te;je.push(0));Fe=Ue=0,_e=1,De%=H,ve=De-H+1}else break out;if(Ee=Ee||0>Le||// Are there any non-zero digits after the rounding digit?
// The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right
// of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
null!=je[Te+1]||(0>ve?Fe:Fe%Ce[_e-ve-1]),Ee=4>Ae?(Ue||Ee)&&(0==Ae||Ae==(0>Re.s?3:2)):5<Ue||5==Ue&&(4==Ae||Ee||6==Ae&&// Check whether the digit to the left of the rounding digit is odd.
1&(0<De?0<ve?Fe/Ce[_e-ve]:0:je[Te-1])%10||Ae==(0>Re.s?8:7)),1>Le||!je[0])return je.length=0,Ee?(Le-=Re.e+1,je[0]=Ce[(H-Le%H)%H],Re.e=-Le||0):je[0]=Re.e=0,Re;// Remove excess digits.
// Round up?
if(0==De?(je.length=Te,Ie=1,Te--):(je.length=Te+1,Ie=Ce[H-De],je[Te]=0<ve?U(Fe/Ce[_e-ve]%Ce[ve])*Ie:0),Ee)for(;;)// If the digit to be rounded up is in the first element of xc...
if(0==Te){// i will be the length of xc[0] before k is added.
for(De=1,ve=je[0];10<=ve;ve/=10,De++);for(ve=je[0]+=Ie,Ie=1;10<=ve;ve/=10,Ie++);// if i != k the length has increased.
De!=Ie&&(Re.e++,je[0]==M&&(je[0]=1));break}else{if(je[Te]+=Ie,je[Te]!=M)break;je[Te--]=0,Ie=1}// Remove trailing zeros.
for(De=je.length;0===je[--De];je.pop());}// Overflow? Infinity.
Re.e>pe?Re.c=Re.e=null:Re.e<he&&(Re.c=[Re.e=0])}return Re}// PROTOTYPE/INSTANCE METHODS
/*
         * Return a new BigNumber whose value is the absolute value of this BigNumber.
         */var de,// id tracks the caller function, so its name can be included in error messages.
ce=0,re=Y.prototype,oe=new Y(1),/********************************* EDITABLE DEFAULTS **********************************//*
             * The default values below must be integers within the inclusive ranges stated.
             * The values can also be changed at run-time using BigNumber.config.
             */// The maximum number of decimal places for operations involving division.
le=20,// 0 to MAX
/*
             * The rounding mode used when rounding to the above decimal places, and when using
             * toExponential, toFixed, toFormat and toPrecision, and round (default value).
             * UP         0 Away from zero.
             * DOWN       1 Towards zero.
             * CEIL       2 Towards +Infinity.
             * FLOOR      3 Towards -Infinity.
             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.
             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
             */ue=4,// 0 to 8
// EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]
// The exponent value at and beneath which toString returns exponential notation.
// Number type: -7
ae=-7,// 0 to -MAX
// The exponent value at and above which toString returns exponential notation.
// Number type: 21
ge=21,// 0 to MAX
// RANGE : [MIN_EXP, MAX_EXP]
// The minimum exponent value, beneath which underflow to zero occurs.
// Number type: -324  (5e-324)
he=-10000000,// -1 to -MAX
// The maximum exponent value, above which overflow to Infinity occurs.
// Number type:  308  (1.7976931348623157e+308)
// For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
pe=10000000,// 1 to MAX
// Whether BigNumber Errors are ever thrown.
fe=!0,// true or false
// Change to intValidatorNoErrors if ERRORS is false.
me=ee,// intValidatorWithErrors/intValidatorNoErrors
// Whether to use cryptographically-secure random number generation, if available.
be=!1,// true or false
/*
             * The modulo mode used when calculating the modulus: a mod n.
             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.
             * The remainder (r) is calculated as: r = a - n * q.
             *
             * UP        0 The remainder is positive if the dividend is negative, else is negative.
             * DOWN      1 The remainder has the same sign as the dividend.
             *             This modulo mode is commonly known as 'truncated division' and is
             *             equivalent to (a % n) in JavaScript.
             * FLOOR     3 The remainder has the same sign as the divisor (Python %).
             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
             *             The remainder is always positive.
             *
             * The truncated division, floored division, Euclidian division and IEEE 754 remainder
             * modes are commonly used for the modulus operation.
             * Although the other rounding modes can also be used, they may not give useful results.
             */Oe=1,// 0 to 9
// The maximum number of significant digits of the result of the toPower operation.
// If POW_PRECISION is 0, there will be unlimited significant digits.
Ne=100,// 0 to MAX
// The format specification used by the BigNumber.prototype.toFormat method.
Se={decimalSeparator:'.',groupSeparator:',',groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:' ',// non-breaking space
fractionGroupSize:0};return Y.another=g,Y.ROUND_UP=0,Y.ROUND_DOWN=1,Y.ROUND_CEIL=2,Y.ROUND_FLOOR=3,Y.ROUND_HALF_UP=4,Y.ROUND_HALF_DOWN=5,Y.ROUND_HALF_EVEN=6,Y.ROUND_HALF_CEIL=7,Y.ROUND_HALF_FLOOR=8,Y.EUCLID=9,Y.config=function(){var Re,Le,Ae=0,Ee={},_e=arguments,De=_e[0],ve=De&&'object'==('undefined'==typeof De?'undefined':_typeof(De))?function(){if(De.hasOwnProperty(Le))return null!=(Re=De[Le])}:function(){if(_e.length>Ae)return null!=(Re=_e[Ae++])};// DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
// 'config() DECIMAL_PLACES not an integer: {v}'
// 'config() DECIMAL_PLACES out of range: {v}'
return ve(Le='DECIMAL_PLACES')&&me(Re,0,J,2,Le)&&(le=0|Re),Ee[Le]=le,ve(Le='ROUNDING_MODE')&&me(Re,0,8,2,Le)&&(ue=0|Re),Ee[Le]=ue,ve(Le='EXPONENTIAL_AT')&&(S(Re)?me(Re[0],-J,0,2,Le)&&me(Re[1],0,J,2,Le)&&(ae=0|Re[0],ge=0|Re[1]):me(Re,-J,J,2,Le)&&(ae=-(ge=0|(0>Re?-Re:Re)))),Ee[Le]=[ae,ge],ve(Le='RANGE')&&(S(Re)?me(Re[0],-J,-1,2,Le)&&me(Re[1],1,J,2,Le)&&(he=0|Re[0],pe=0|Re[1]):me(Re,-J,J,2,Le)&&(0|Re?he=-(pe=0|(0>Re?-Re:Re)):fe&&te(2,Le+' cannot be zero',Re))),Ee[Le]=[he,pe],ve(Le='ERRORS')&&(Re===!!Re||1===Re||0===Re?(ce=0,me=(fe=!!Re)?ee:N):fe&&te(2,Le+C,Re)),Ee[Le]=fe,ve(Le='CRYPTO')&&(Re===!!Re||1===Re||0===Re?(be=!!(Re&&D),Re&&!be&&fe&&te(2,'crypto unavailable',D)):fe&&te(2,Le+C,Re)),Ee[Le]=be,ve(Le='MODULO_MODE')&&me(Re,0,9,2,Le)&&(Oe=0|Re),Ee[Le]=Oe,ve(Le='POW_PRECISION')&&me(Re,0,J,2,Le)&&(Ne=0|Re),Ee[Le]=Ne,ve(Le='FORMAT')&&('object'==('undefined'==typeof Re?'undefined':_typeof(Re))?Se=Re:fe&&te(2,Le+' not an object',Re)),Ee[Le]=Se,Ee},Y.max=function(){return K(arguments,re.lt)},Y.min=function(){return K(arguments,re.gt)},Y.random=function(){var Re=9007199254740992,Le=2097151&Math.random()*Re?function(){return U(Math.random()*Re)}:function(){return 8388608*(0|1073741824*Math.random())+(0|8388608*Math.random())};// Return a 53 bit integer n, where 0 <= n < 9007199254740992.
// Check if Math.random() produces more than 32 bits of randomness.
// If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
// 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
return function(Ae){var Ee,_e,De,ve,Ie,Fe=0,Te=[],Ue=new Y(oe);if(Ae=null!=Ae&&me(Ae,0,J,14)?0|Ae:le,ve=T(Ae/H),be)// Browsers supporting crypto.getRandomValues.
if(D&&D.getRandomValues){for(Ee=D.getRandomValues(new Uint32Array(ve*=2));Fe<ve;)Ie=131072*Ee[Fe]+(Ee[Fe+1]>>>11),9000000000000000<=Ie?(_e=D.getRandomValues(new Uint32Array(2)),Ee[Fe]=_e[0],Ee[Fe+1]=_e[1]):(Te.push(Ie%100000000000000),Fe+=2);Fe=ve/2}else if(D&&D.randomBytes){for(Ee=D.randomBytes(ve*=7);Fe<ve;)Ie=281474976710656*(31&Ee[Fe])+1099511627776*Ee[Fe+1]+4294967296*Ee[Fe+2]+16777216*Ee[Fe+3]+(Ee[Fe+4]<<16)+(Ee[Fe+5]<<8)+Ee[Fe+6],9000000000000000<=Ie?D.randomBytes(7).copy(Ee,Fe):(Te.push(Ie%100000000000000),Fe+=7);Fe=ve/7}else fe&&te(14,'crypto unavailable',D);// Use Math.random: CRYPTO is false or crypto is unavailable and ERRORS is false.
if(!Fe)for(;Fe<ve;)Ie=Le(),9000000000000000>Ie&&(Te[Fe++]=Ie%100000000000000);// Remove trailing elements which are zero.
for(ve=Te[--Fe],Ae%=H,ve&&Ae&&(Ie=$[H-Ae],Te[Fe]=U(ve/Ie)*Ie);0===Te[Fe];Te.pop(),Fe--);// Zero?
if(0>Fe)Te=[De=0];else{// Remove leading elements which are zero and adjust exponent accordingly.
for(De=-1;0===Te[0];Te.shift(),De-=H);// Count the digits of the first element of c to determine leading zeros, and...
for(Fe=1,Ie=Te[0];10<=Ie;Ie/=10,Fe++);// adjust the exponent accordingly.
Fe<H&&(De-=H-Fe)}return Ue.e=De,Ue.c=Te,Ue}}(),de=function(){// Assume non-zero x and k.
function Re(Ee,_e,De){var ve,Ie,Fe,Te,Ue=0,je=Ee.length,Ce=_e%W,Pe=0|_e/W;for(Ee=Ee.slice();je--;)Fe=Ee[je]%W,Te=0|Ee[je]/W,ve=Pe*Fe+Te*Ce,Ie=Ce*Fe+ve%W*W+Ue,Ue=(0|Ie/De)+(0|ve/W)+Pe*Te,Ee[je]=Ie%De;return Ue&&Ee.unshift(Ue),Ee}function Le(Ee,_e,De,ve){var Ie,Fe;if(De!=ve)Fe=De>ve?1:-1;else for(Ie=Fe=0;Ie<De;Ie++)if(Ee[Ie]!=_e[Ie]){Fe=Ee[Ie]>_e[Ie]?1:-1;break}return Fe}function Ae(Ee,_e,De,ve){// Subtract b from a.
for(var Ie=0;De--;)Ee[De]-=Ie,Ie=Ee[De]<_e[De]?1:0,Ee[De]=Ie*ve+Ee[De]-_e[De];// Remove leading zeros.
for(;!Ee[0]&&1<Ee.length;Ee.shift());}// x: dividend, y: divisor.
return function(Ee,_e,De,ve,Ie){var Fe,Te,Ue,je,Ce,Pe,qe,Be,we,Ge,ze,Me,He,Ve,$e,We,Je,ke=Ee.s==_e.s?1:-1,Xe=Ee.c,Ye=_e.c;// Either NaN, Infinity or 0?
if(!Xe||!Xe[0]||!Ye||!Ye[0])return new Y(// Return NaN if either NaN, or both Infinity or 0.
Ee.s&&_e.s&&(Xe?!(Ye&&Xe[0]==Ye[0]):!!Ye)?// Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
Xe&&0==Xe[0]||!Ye?0*ke:ke/0:NaN);// Result exponent may be one less then the current value of e.
// The coefficients of the BigNumbers from convertBase may have trailing zeros.
for(Be=new Y(ke),we=Be.c=[],Te=Ee.e-_e.e,ke=De+Te+1,Ie||(Ie=M,Te=h(Ee.e/H)-h(_e.e/H),ke=0|ke/H),Ue=0;Ye[Ue]==(Xe[Ue]||0);Ue++);if(Ye[Ue]>(Xe[Ue]||0)&&Te--,0>ke)we.push(1),je=!0;else{// Add zeros to make remainder as long as divisor.
for(Ve=Xe.length,We=Ye.length,Ue=0,ke+=2,Ce=U(Ie/(Ye[0]+1)),1<Ce&&(Ye=Re(Ye,Ce,Ie),Xe=Re(Xe,Ce,Ie),We=Ye.length,Ve=Xe.length),He=We,Ge=Xe.slice(0,We),ze=Ge.length;ze<We;Ge[ze++]=0);Je=Ye.slice(),Je.unshift(0),$e=Ye[0],Ye[1]>=Ie/2&&$e++;// Not necessary, but to prevent trial digit n > base, when using base 3.
// else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;
do{// If divisor < remainder.
if(Ce=0,Fe=Le(Ye,Ge,We,ze),0>Fe){//  Algorithm:
//  1. product = divisor * trial digit (n)
//  2. if product > remainder: product -= divisor, n--
//  3. remainder -= product
//  4. if product was < remainder at 2:
//    5. compare new remainder and divisor
//    6. If remainder > divisor: remainder -= divisor, n++
if(Me=Ge[0],We!=ze&&(Me=Me*Ie+(Ge[1]||0)),Ce=U(Me/$e),1<Ce)// Compare product and remainder.
// If product > remainder.
// Trial digit n too high.
// n is 1 too high about 5% of the time, and is not known to have
// ever been more than 1 too high.
for(Ce>=Ie&&(Ce=Ie-1),Pe=Re(Ye,Ce,Ie),qe=Pe.length,ze=Ge.length;1==Le(Pe,Ge,qe,ze);)Ce--,Ae(Pe,We<qe?Je:Ye,qe,Ie),qe=Pe.length,Fe=1;else 0==Ce&&(Fe=Ce=1),Pe=Ye.slice(),qe=Pe.length;// If product was < remainder.
if(qe<ze&&Pe.unshift(0),Ae(Ge,Pe,ze,Ie),ze=Ge.length,-1==Fe)// Compare divisor and new remainder.
// If divisor < new remainder, subtract divisor from remainder.
// Trial digit n too low.
// n is 1 too low about 5% of the time, and very rarely 2 too low.
for(;1>Le(Ye,Ge,We,ze);)Ce++,Ae(Ge,We<ze?Je:Ye,ze,Ie),ze=Ge.length}else 0===Fe&&(Ce++,Ge=[0]);// else cmp === 1 and n will be 0
// Add the next digit, n, to the result array.
we[Ue++]=Ce,Ge[0]?Ge[ze++]=Xe[He]||0:(Ge=[Xe[He]],ze=1)}while((He++<Ve||null!=Ge[0])&&ke--);je=null!=Ge[0],we[0]||we.shift()}if(Ie==M){// To calculate q.e, first get the number of digits of qc[0].
for(Ue=1,ke=we[0];10<=ke;ke/=10,Ue++);se(Be,De+(Be.e=Ue+Te*H-1)+1,ve,je)}else Be.e=Te,Be.r=+je;return Be}}(),I=function(){var Re=/^(-?)0([xbo])(?=\w[\w.]*$)/i,Le=/^([^.]+)\.$/,Ae=/^\.([^.]+)$/,Ee=/^-?(Infinity|NaN)$/,_e=/^\s*\+(?=[\w.])|^\s+|\s+$/g;return function(De,ve,Ie,Fe){var Te,Ue=Ie?ve:ve.replace(_e,'');// No exception on ±Infinity or NaN.
if(Ee.test(Ue))De.s=isNaN(Ue)?null:0>Ue?-1:1;else{if(!Ie&&(Ue=Ue.replace(Re,function(je,Ce,Pe){return Te='x'==(Pe=Pe.toLowerCase())?16:'b'==Pe?2:8,Fe&&Fe!=Te?je:Ce}),Fe&&(Te=Fe,Ue=Ue.replace(Le,'$1').replace(Ae,'0.$1')),ve!=Ue))return new Y(Ue,Te);// 'new BigNumber() not a number: {n}'
// 'new BigNumber() not a base {b} number: {n}'
fe&&te(ce,'not a'+(Fe?' base '+Fe:'')+' number',ve),De.s=null}De.c=De.e=null,ce=0}}(),re.absoluteValue=re.abs=function(){var Re=new Y(this);return 0>Re.s&&(Re.s=1),Re},re.ceil=function(){return se(new Y(this),this.e+1,2)},re.comparedTo=re.cmp=function(Re,Le){return ce=1,O(this,new Y(Re,Le))},re.decimalPlaces=re.dp=function(){var Re,Le,Ae=this.c;if(!Ae)return null;// Subtract the number of trailing zeros of the last number.
if(Re=((Le=Ae.length-1)-h(this.e/H))*H,Le=Ae[Le])for(;0==Le%10;Le/=10,Re--);return 0>Re&&(Re=0),Re},re.dividedBy=re.div=function(Re,Le){return ce=3,de(this,new Y(Re,Le),le,ue)},re.dividedToIntegerBy=re.divToInt=function(Re,Le){return ce=4,de(this,new Y(Re,Le),0,1)},re.equals=re.eq=function(Re,Le){return ce=5,0===O(this,new Y(Re,Le))},re.floor=function(){return se(new Y(this),this.e+1,3)},re.greaterThan=re.gt=function(Re,Le){return ce=6,0<O(this,new Y(Re,Le))},re.greaterThanOrEqualTo=re.gte=function(Re,Le){return ce=7,1===(Le=O(this,new Y(Re,Le)))||0===Le},re.isFinite=function(){return!!this.c},re.isInteger=re.isInt=function(){return!!this.c&&h(this.e/H)>this.c.length-2},re.isNaN=function(){return!this.s},re.isNegative=re.isNeg=function(){return 0>this.s},re.isZero=function(){return!!this.c&&0==this.c[0]},re.lessThan=re.lt=function(Re,Le){return ce=8,0>O(this,new Y(Re,Le))},re.lessThanOrEqualTo=re.lte=function(Re,Le){return ce=9,-1===(Le=O(this,new Y(Re,Le)))||0===Le},re.minus=re.sub=function(Re,Le){var Ae,Ee,_e,De,ve=this,Ie=ve.s;// Either NaN?
if(ce=10,Re=new Y(Re,Le),Le=Re.s,!Ie||!Le)return new Y(NaN);// Signs differ?
if(Ie!=Le)return Re.s=-Le,ve.plus(Re);var Fe=ve.e/H,Te=Re.e/H,Ue=ve.c,je=Re.c;if(!Fe||!Te){// Either Infinity?
if(!Ue||!je)return Ue?(Re.s=-Le,Re):new Y(je?ve:NaN);// Either zero?
if(!Ue[0]||!je[0])// Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
return je[0]?(Re.s=-Le,Re):new Y(Ue[0]?ve:// IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
3==ue?-0:0)}// Determine which is the bigger number.
if(Fe=h(Fe),Te=h(Te),Ue=Ue.slice(),Ie=Fe-Te){// Prepend zeros to equalise exponents.
for((De=0>Ie)?(Ie=-Ie,_e=Ue):(Te=Fe,_e=je),_e.reverse(),Le=Ie;Le--;_e.push(0));_e.reverse()}else for(Ee=(De=(Ie=Ue.length)<(Le=je.length))?Ie:Le,Ie=Le=0;Le<Ee;Le++)if(Ue[Le]!=je[Le]){De=Ue[Le]<je[Le];break}// x < y? Point xc to the array of the bigger number.
// Append zeros to xc if shorter.
// No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
if(De&&(_e=Ue,Ue=je,je=_e,Re.s=-Re.s),Le=(Ee=je.length)-(Ae=Ue.length),0<Le)for(;Le--;Ue[Ae++]=0);// Subtract yc from xc.
for(Le=M-1;Ee>Ie;){if(Ue[--Ee]<je[Ee]){for(Ae=Ee;Ae&&!Ue[--Ae];Ue[Ae]=Le);--Ue[Ae],Ue[Ee]+=M}Ue[Ee]-=je[Ee]}// Remove leading zeros and adjust exponent accordingly.
for(;0==Ue[0];Ue.shift(),--Te);// Zero?
return Ue[0]?ie(Re,Ue,Te):(Re.s=3==ue?-1:1,Re.c=[Re.e=0],Re);// No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
// for finite x and y.
},re.modulo=re.mod=function(Re,Le){var Ae,Ee,_e=this;// Return NaN if x is Infinity or NaN, or y is NaN or zero.
return(ce=11,Re=new Y(Re,Le),!_e.c||!Re.s||Re.c&&!Re.c[0])?new Y(NaN):Re.c&&(!_e.c||_e.c[0])?(9==Oe?(Ee=Re.s,Re.s=1,Ae=de(_e,Re,0,3),Re.s=Ee,Ae.s*=Ee):Ae=de(_e,Re,0,Oe),_e.minus(Ae.times(Re))):new Y(_e)},re.negated=re.neg=function(){var Re=new Y(this);return Re.s=-Re.s||null,Re},re.plus=re.add=function(Re,Le){var Ae,Ee=this,_e=Ee.s;// Either NaN?
if(ce=12,Re=new Y(Re,Le),Le=Re.s,!_e||!Le)return new Y(NaN);// Signs differ?
if(_e!=Le)return Re.s=-Le,Ee.minus(Re);var De=Ee.e/H,ve=Re.e/H,Ie=Ee.c,Fe=Re.c;if(!De||!ve){// Return ±Infinity if either ±Infinity.
if(!Ie||!Fe)return new Y(_e/0);// Either zero?
// Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
if(!Ie[0]||!Fe[0])return Fe[0]?Re:new Y(Ie[0]?Ee:0*_e)}// Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
if(De=h(De),ve=h(ve),Ie=Ie.slice(),_e=De-ve){for(0<_e?(ve=De,Ae=Fe):(_e=-_e,Ae=Ie),Ae.reverse();_e--;Ae.push(0));Ae.reverse()}// Only start adding at yc.length - 1 as the further digits of xc can be ignored.
for(_e=Ie.length,Le=Fe.length,0>_e-Le&&(Ae=Fe,Fe=Ie,Ie=Ae,Le=_e),_e=0;Le;)_e=0|(Ie[--Le]=Ie[Le]+Fe[Le]+_e)/M,Ie[Le]%=M;// No need to check for zero, as +x + +y != 0 && -x + -y != 0
// ye = MAX_EXP + 1 possible
return _e&&(Ie.unshift(_e),++ve),ie(Re,Ie,ve)},re.precision=re.sd=function(Re){var Le,Ae,Ee=this,_e=Ee.c;// 'precision() argument not a boolean or binary digit: {z}'
if(null!=Re&&Re!==!!Re&&1!==Re&&0!==Re&&(fe&&te(13,'argument'+C,Re),Re!=!!Re&&(Re=null)),!_e)return null;if(Ae=_e.length-1,Le=Ae*H+1,Ae=_e[Ae]){// Subtract the number of trailing zeros of the last element.
for(;0==Ae%10;Ae/=10,Le--);// Add the number of digits of the first element.
for(Ae=_e[0];10<=Ae;Ae/=10,Le++);}return Re&&Ee.e+1>Le&&(Le=Ee.e+1),Le},re.round=function(Re,Le){var Ae=new Y(this);return(null==Re||me(Re,0,J,15))&&se(Ae,~~Re+this.e+1,null!=Le&&me(Le,0,8,15,B)?0|Le:ue),Ae},re.shift=function(Re){var Le=this;return me(Re,-V,V,16,'argument')// k < 1e+21, or truncate(k) will produce exponential notation.
?Le.times('1e'+E(Re)):new Y(Le.c&&Le.c[0]&&(Re<-V||Re>V)?Le.s*(0>Re?0:1/0):Le)},re.squareRoot=re.sqrt=function(){var Re,Le,Ae,Ee,_e,De=this,ve=De.c,Ie=De.s,Fe=De.e,Te=le+4,Ue=new Y('0.5');// Negative/NaN/Infinity/zero?
if(1!==Ie||!ve||!ve[0])return new Y(!Ie||0>Ie&&(!ve||ve[0])?NaN:ve?De:1/0);// Initial estimate.
// Check for zero.
// r could be zero if MIN_EXP is changed after the this value was created.
// This would cause a division by zero (x/t) and hence Infinity below, which would cause
// coeffToString to throw.
if(Ie=Math.sqrt(+De),0==Ie||Ie==1/0?(Le=f(ve),0==(Le.length+Fe)%2&&(Le+='0'),Ie=Math.sqrt(Le),Fe=h((Fe+1)/2)-(0>Fe||Fe%2),Ie==1/0?Le='1e'+Fe:(Le=Ie.toExponential(),Le=Le.slice(0,Le.indexOf('e')+1)+Fe),Ae=new Y(Le)):Ae=new Y(Ie+''),Ae.c[0])// Newton-Raphson iteration.
for(Fe=Ae.e,Ie=Fe+Te,3>Ie&&(Ie=0);;)if(_e=Ae,Ae=Ue.times(_e.plus(de(De,_e,Te,1))),f(_e.c).slice(0,Ie)===(Le=f(Ae.c)).slice(0,Ie))// The 4th rounding digit may be in error by -1 so if the 4 rounding digits
// are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
// iteration.
if(Ae.e<Fe&&--Ie,Le=Le.slice(Ie-3,Ie+1),'9999'==Le||!Ee&&'4999'==Le){// On the first iteration only, check to see if rounding up gives the
// exact result as the nines may infinitely repeat.
if(!Ee&&(se(_e,_e.e+le+2,0),_e.times(_e).eq(De))){Ae=_e;break}Te+=4,Ie+=4,Ee=1}else{+Le&&(+Le.slice(1)||'5'!=Le.charAt(0))||(se(Ae,Ae.e+le+2,1),Re=!Ae.times(Ae).eq(De));break}return se(Ae,Ae.e+le+1,ue,Re)},re.times=re.mul=function(Re,Le){var Ae,Ee,_e,De,ve,Ie,Fe,Te,Ue,je,Ce,Pe,qe,Be,we,Ge=this,ze=Ge.c,Me=(ce=17,Re=new Y(Re,Le)).c;// Either NaN, ±Infinity or ±0?
if(!ze||!Me||!ze[0]||!Me[0])return Ge.s&&Re.s&&(!ze||ze[0]||Me)&&(!Me||Me[0]||ze)?(Re.s*=Ge.s,ze&&Me?(Re.c=[0],Re.e=0):Re.c=Re.e=null):Re.c=Re.e=Re.s=null,Re;// Initialise the result array with zeros.
for(Ee=h(Ge.e/H)+h(Re.e/H),Re.s*=Ge.s,Fe=ze.length,je=Me.length,Fe<je&&(qe=ze,ze=Me,Me=qe,_e=Fe,Fe=je,je=_e),(_e=Fe+je,qe=[]);_e--;qe.push(0));for(Be=M,we=W,_e=je;0<=--_e;){for(Ae=0,Ce=Me[_e]%we,Pe=0|Me[_e]/we,(ve=Fe,De=_e+ve);De>_e;)Te=ze[--ve]%we,Ue=0|ze[ve]/we,Ie=Pe*Te+Ue*Ce,Te=Ce*Te+Ie%we*we+qe[De]+Ae,Ae=(0|Te/Be)+(0|Ie/we)+Pe*Ue,qe[De--]=Te%Be;qe[De]=Ae}return Ae?++Ee:qe.shift(),ie(Re,qe,Ee)},re.toDigits=function(Re,Le){var Ae=new Y(this);return Re=null!=Re&&me(Re,1,J,18,'precision')?0|Re:null,Le=null!=Le&&me(Le,0,8,18,B)?0|Le:ue,Re?se(Ae,Re,Le):Ae},re.toExponential=function(Re,Le){return Q(this,null!=Re&&me(Re,0,J,19)?~~Re+1:null,Le,19)},re.toFixed=function(Re,Le){return Q(this,null!=Re&&me(Re,0,J,20)?~~Re+this.e+1:null,Le,20)},re.toFormat=function(Re,Le){var Ae=Q(this,null!=Re&&me(Re,0,J,21)?~~Re+this.e+1:null,Le,21);if(this.c){var Ee,_e=Ae.split('.'),De=+Se.groupSize,ve=+Se.secondaryGroupSize,Ie=Se.groupSeparator,Fe=_e[0],Te=_e[1],Ue=0>this.s,je=Ue?Fe.slice(1):Fe,Ce=je.length;if(ve&&(Ee=De,De=ve,ve=Ee,Ce-=Ee),0<De&&0<Ce){for(Ee=Ce%De||De,Fe=je.substr(0,Ee);Ee<Ce;Ee+=De)Fe+=Ie+je.substr(Ee,De);0<ve&&(Fe+=Ie+je.slice(Ee)),Ue&&(Fe='-'+Fe)}Ae=Te?Fe+Se.decimalSeparator+((ve=+Se.fractionGroupSize)?Te.replace(new RegExp('\\d{'+ve+'}\\B','g'),'$&'+Se.fractionGroupSeparator):Te):Fe}return Ae},re.toFraction=function(Re){var Le,Ae,Ee,_e,De,ve,Ie,Fe,Te,Ue=fe,je=this,Ce=je.c,Pe=new Y(oe),qe=Ae=new Y(oe),Be=Ie=new Y(oe);if(null!=Re&&(fe=!1,ve=new Y(Re),fe=Ue,(!(Ue=ve.isInt())||ve.lt(oe))&&(fe&&te(22,'max denominator '+(Ue?'out of range':'not an integer'),Re),Re=!Ue&&ve.c&&se(ve,ve.e+1,1).gte(oe)?ve:null)),!Ce)return je.toString();for(Te=f(Ce),_e=Pe.e=Te.length-je.e-1,Pe.c[0]=$[0>(De=_e%H)?H+De:De],Re=!Re||0<ve.cmp(Pe)?0<_e?Pe:qe:ve,De=pe,pe=1/0,ve=new Y(Te),Ie.c[0]=0;;){if(Fe=de(ve,Pe,0,1),Ee=Ae.plus(Fe.times(Be)),1==Ee.cmp(Re))break;Ae=Be,Be=Ee,qe=Ie.plus(Fe.times(Ee=qe)),Ie=Ee,Pe=ve.minus(Fe.times(Ee=Pe)),ve=Ee}return Ee=de(Re.minus(Ae),Be,0,1),Ie=Ie.plus(Ee.times(qe)),Ae=Ae.plus(Ee.times(Be)),Ie.s=qe.s=je.s,_e*=2,Le=1>de(qe,Be,_e,ue).minus(je).abs().cmp(de(Ie,Ae,_e,ue).minus(je).abs())?[qe.toString(),Be.toString()]:[Ie.toString(),Ae.toString()],pe=De,Le},re.toNumber=function(){return+this},re.toPower=re.pow=function(Re,Le){var Ae,Ee,_e,De=U(0>Re?-Re:+Re),ve=this;// Pass ±Infinity to Math.pow if exponent is out of range.
if(null!=Le&&(ce=23,Le=new Y(Le)),!me(Re,-V,V,23,'exponent')&&(!isFinite(Re)||De>V&&(Re/=0)||parseFloat(Re)!=Re&&!(Re=NaN))||0==Re)return Ae=Math.pow(+ve,Re),new Y(Le?Ae%Le:Ae);for(Le?1<Re&&ve.gt(oe)&&ve.isInt()&&Le.gt(oe)&&Le.isInt()?ve=ve.mod(Le):(_e=Le,Le=null):Ne&&(Ae=T(Ne/H+2)),Ee=new Y(oe);;){if(De%2){if(Ee=Ee.times(ve),!Ee.c)break;Ae?Ee.c.length>Ae&&(Ee.c.length=Ae):Le&&(Ee=Ee.mod(Le))}if(De=U(De/2),!De)break;ve=ve.times(ve),Ae?ve.c&&ve.c.length>Ae&&(ve.c.length=Ae):Le&&(ve=ve.mod(Le))}return Le?Ee:(0>Re&&(Ee=oe.div(Ee)),_e?Ee.mod(_e):Ae?se(Ee,Ne,ue):Ee)},re.toPrecision=function(Re,Le){return Q(this,null!=Re&&me(Re,1,J,24,'precision')?0|Re:null,Le,24)},re.toString=function(Re){var Le,Ae=this,Ee=Ae.s,_e=Ae.e;// Infinity or NaN?
return null===_e?Ee?(Le='Infinity',0>Ee&&(Le='-'+Le)):Le='NaN':(Le=f(Ae.c),Le=null!=Re&&me(Re,2,64,25,'base')?Z(A(Le,_e),0|Re,10,Ee):_e<=ae||_e>=ge?L(Le,_e):A(Le,_e),0>Ee&&Ae.c[0]&&(Le='-'+Le)),Le},re.truncated=re.trunc=function(){return se(new Y(this),this.e+1,1)},re.valueOf=re.toJSON=function(){var Re,Le=this,Ae=Le.e;return null===Ae?Le.toString():(Re=f(Le.c),Re=Ae<=ae||Ae>=ge?L(Re,Ae):A(Re,Ae),0>Le.s?'-'+Re:Re)},null!=X&&Y.config(X),Y}// PRIVATE HELPER FUNCTIONS
function h(X){var Y=0|X;return 0<X||X===Y?Y:Y-1}// Return a coefficient array as a string of base 10 digits.
function f(X){for(var Y,Z,Q=1,K=X.length,ee=X[0]+'';Q<K;){for(Y=X[Q++]+'',Z=H-Y.length;Z--;Y='0'+Y);ee+=Y}// Determine trailing zeros.
for(K=ee.length;48===ee.charCodeAt(--K););return ee.slice(0,K+1||1)}// Compare the value of BigNumbers x and y.
function O(X,Y){var Z,Q,K=X.c,ee=Y.c,ie=X.s,te=Y.s,se=X.e,de=Y.e;// Either NaN?
if(!ie||!te)return null;// Either zero?
if(Z=K&&!K[0],Q=ee&&!ee[0],Z||Q)return Z?Q?0:-te:ie;// Signs differ?
if(ie!=te)return ie;// Either Infinity?
if(Z=0>ie,Q=se==de,!K||!ee)return Q?0:!K^Z?1:-1;// Compare exponents.
if(!Q)return se>de^Z?1:-1;// Compare digit by digit.
for(te=(se=K.length)<(de=ee.length)?se:de,ie=0;ie<te;ie++)if(K[ie]!=ee[ie])return K[ie]>ee[ie]^Z?1:-1;// Compare lengths.
return se==de?0:se>de^Z?1:-1}/*
     * Return true if n is a valid number in range, otherwise false.
     * Use for argument validation when ERRORS is false.
     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.
     */function N(X,Y,Z){return(X=E(X))>=Y&&X<=Z}function S(X){return'[object Array]'==Object.prototype.toString.call(X)}/*
     * Convert string of baseIn to an array of numbers of baseOut.
     * Eg. convertBase('255', 10, 16) returns [15, 15].
     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].
     */function R(X,Y,Z){for(var Q,ee,K=[0],ie=0,te=X.length;ie<te;){for(ee=K.length;ee--;K[ee]*=Y);for(K[Q=0]+=G.indexOf(X.charAt(ie++));Q<K.length;Q++)K[Q]>Z-1&&(null==K[Q+1]&&(K[Q+1]=0),K[Q+1]+=0|K[Q]/Z,K[Q]%=Z)}return K.reverse()}function L(X,Y){return(1<X.length?X.charAt(0)+'.'+X.slice(1):X)+(0>Y?'e':'e+')+Y}function A(X,Y){var Z,Q;// Negative exponent?
if(0>Y){// Prepend zeros.
for(Q='0.';++Y;Q+='0');X=Q+X}else// Append zeros.
if(Z=X.length,++Y>Z){for(Q='0',Y-=Z;--Y;Q+='0');X+=Q}else Y<Z&&(X=X.slice(0,Y)+'.'+X.slice(Y));return X}function E(X){return X=parseFloat(X),0>X?T(X):U(X)}// EXPORT
var _,D,I,F=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,T=Math.ceil,U=Math.floor,C=' not a boolean or binary digit',B='rounding mode',w='number type has more than 15 significant digits',G='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',M=100000000000000,H=14,V=9007199254740991,// 2^53 - 1
// MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
$=[1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000,10000000000,100000000000,1000000000000,10000000000000],W=10000000,/*
         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an
         * exception is thrown (if ERRORS is true).
         */J=1000000000;// 0 to MAX_INT32
// AMD.
if('undefined'!=typeof crypto&&(D=crypto),_=g(),_.default=_.BigNumber=_,'function'==typeof define&&define.amd)define(function(){return _});else if(!('undefined'!=typeof module&&module.exports))u||(u='undefined'==typeof self?Function('return this')():self),u.BigNumber=_;else// Split string stops browserify adding crypto shim.
if(module.exports=_,!D)try{D=require('crypto')}catch(X){}// Browser.
})(void 0);

},{"crypto":72}],29:[function(require,module,exports){
(function (Buffer){
'use strict';// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki
// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
// NOTE: SIGHASH byte ignored AND restricted, truncate before use
function check(a){if(8>a.length)return!1;if(72<a.length)return!1;if(48!==a[0])return!1;if(a[1]!==a.length-2)return!1;if(2!==a[2])return!1;var b=a[3];if(0===b)return!1;if(5+b>=a.length)return!1;if(2!==a[4+b])return!1;var c=a[5+b];return 0!==c&&!(6+b+c!==a.length)&&!(128&a[4])&&(1<b&&0===a[4]&&!(128&a[5])?!1:!(128&a[b+6])&&(1<c&&0===a[b+6]&&!(128&a[b+7])?!1:!0))}function decode(a){if(8>a.length)throw new Error('DER sequence length is too short');if(72<a.length)throw new Error('DER sequence length is too long');if(48!==a[0])throw new Error('Expected DER sequence');if(a[1]!==a.length-2)throw new Error('DER sequence length is invalid');if(2!==a[2])throw new Error('Expected DER integer');var b=a[3];if(0===b)throw new Error('R length is zero');if(5+b>=a.length)throw new Error('R length is too long');if(2!==a[4+b])throw new Error('Expected DER integer (2)');var c=a[5+b];if(0===c)throw new Error('S length is zero');if(6+b+c!==a.length)throw new Error('S length is invalid');if(128&a[4])throw new Error('R value is negative');if(1<b&&0===a[4]&&!(128&a[5]))throw new Error('R value excessively padded');if(128&a[b+6])throw new Error('S value is negative');if(1<c&&0===a[b+6]&&!(128&a[b+7]))throw new Error('S value excessively padded');// non-BIP66 - extract R, S values
return{r:a.slice(4,4+b),s:a.slice(6+b)}}/*
 * Expects r and s to be positive DER integers.
 *
 * The DER format uses the most significant bit as a sign bit (& 0x80).
 * If the significant bit is set AND the integer is positive, a 0x00 is prepended.
 *
 * Examples:
 *
 *      0 =>     0x00
 *      1 =>     0x01
 *     -1 =>     0xff
 *    127 =>     0x7f
 *   -127 =>     0x81
 *    128 =>   0x0080
 *   -128 =>     0x80
 *    255 =>   0x00ff
 *   -255 =>   0xff01
 *  16300 =>   0x3fac
 * -16300 =>   0xc054
 *  62300 => 0x00f35c
 * -62300 => 0xff0ca4
*/function encode(a,b){var c=a.length,d=b.length;if(0===c)throw new Error('R length is zero');if(0===d)throw new Error('S length is zero');if(33<c)throw new Error('R length is too long');if(33<d)throw new Error('S length is too long');if(128&a[0])throw new Error('R value is negative');if(128&b[0])throw new Error('S value is negative');if(1<c&&0===a[0]&&!(128&a[1]))throw new Error('R value excessively padded');if(1<d&&0===b[0]&&!(128&b[1]))throw new Error('S value excessively padded');var e=new Buffer(6+c+d);// 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
return e[0]=48,e[1]=e.length-2,e[2]=2,e[3]=a.length,a.copy(e,4),e[4+c]=2,e[5+c]=b.length,b.copy(e,6+c),e}module.exports={check:check,decode:decode,encode:encode};

}).call(this,require("buffer").Buffer)
},{"buffer":62}],30:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};(function(d,f){'use strict';// Utils
function v(ii,ei){if(!ii)throw new Error(ei||'Assertion failed')}// Could use `inherits` module, but don't want to move from single file
// architecture yet.
function S(ii,ei){ii.super_=ei;var ti=function ti(){};ti.prototype=ei.prototype,ii.prototype=new ti,ii.prototype.constructor=ii}// BN
function Z(ii,ei,ti){return Z.isBN(ii)?ii:void(this.negative=0,this.words=null,this.length=0,this.red=null,null!==ii&&(('le'===ei||'be'===ei)&&(ti=ei,ei=10),this._init(ii||0,ei||10,ti||'be')))}function R(ii,ei,ti){var oi=0,li=Math.min(ii.length,ti);for(var ri=ei;ri<li;ri++){var ni=ii.charCodeAt(ri)-48;oi<<=4,oi|=49<=ni&&54>=ni?ni-49+10:17<=ni&&22>=ni?ni-17+10:15&ni}return oi}function L(ii,ei,ti,oi){var li=0,ri=Math.min(ii.length,ti);for(var ni=ei;ni<ri;ni++){var mi=ii.charCodeAt(ni)-48;li*=oi,li+=49<=mi?mi-49+10:17<=mi?mi-17+10:mi}return li}function I(ii){var ei=Array(ii.bitLength());for(var ti=0;ti<ei.length;ti++){var oi=0|ti/26,li=ti%26;ei[ti]=(ii.words[oi]&1<<li)>>>li}return ei}// Number of trailing zero bits
function T(ii,ei,ti){ti.negative=ei.negative^ii.negative;var oi=0|ii.length+ei.length;ti.length=oi,oi=0|oi-1;// Peel one iteration (compiler can't do it, because of code complexity)
var li=0|ii.words[0],ri=0|ei.words[0],ni=li*ri,mi=67108863&ni,ui=0|ni/67108864;ti.words[0]=mi;for(var di=1;di<oi;di++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,
// note that ncarry could be >= 0x3ffffff
var si=ui>>>26,pi=67108863&ui,gi=Math.min(di,ei.length-1);for(var fi=Math.max(0,di-ii.length+1);fi<=gi;fi++){var ai=0|di-fi;li=0|ii.words[ai],ri=0|ei.words[fi],ni=li*ri+pi,si+=0|ni/67108864,pi=67108863&ni}ti.words[di]=0|pi,ui=0|si}return 0==ui?ti.length--:ti.words[di]=0|ui,ti.strip()}// TODO(indutny): it may be reasonable to omit it for users who don't need
// to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
// multiplication (like elliptic secp256k1).
function O(ii,ei,ti){ti.negative=ei.negative^ii.negative,ti.length=ii.length+ei.length;var oi=0,li=0;for(var ri=0;ri<ti.length-1;ri++){// Sum all words with the same `i + j = k` and accumulate `ncarry`,
// note that ncarry could be >= 0x3ffffff
var ni=li;li=0;var mi=67108863&oi,ui=Math.min(ri,ei.length-1);for(var di=Math.max(0,ri-ii.length+1);di<=ui;di++){var si=ri-di,pi=0|ii.words[si],gi=0|ei.words[di],fi=pi*gi,ai=67108863&fi;ni=0|ni+(0|fi/67108864),ai=0|ai+mi,mi=67108863&ai,ni=0|ni+(ai>>>26),li+=ni>>>26,ni&=67108863}ti.words[ri]=mi,oi=ni,ni=li}return 0===oi?ti.length--:ti.words[ri]=oi,ti.strip()}function E(ii,ei,ti){var oi=new M;return oi.mulp(ii,ei,ti)}// Cooley-Tukey algorithm for FFT
// slightly revisited to rely on looping instead of recursion
function M(ii,ei){this.x=ii,this.y=ei}// Pseudo-Mersenne prime
function P(ii,ei){this.name=ii,this.p=new Z(ei,16),this.n=this.p.bitLength(),this.k=new Z(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function K(){P.call(this,'k256','ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f')}function F(){P.call(this,'p224','ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001')}function H(){P.call(this,'p192','ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff')}function U(){P.call(this,'25519','7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed')}//
// Base reduction engine
//
function J(ii){if('string'==typeof ii){var ei=Z._prime(ii);this.m=ei.p,this.prime=ei}else v(ii.gtn(1),'modulus must be greater than 1'),this.m=ii,this.prime=null}function G(ii){J.call(this,ii),this.shift=this.m.bitLength(),0!=this.shift%26&&(this.shift+=26-this.shift%26),this.r=new Z(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}'object'==('undefined'==typeof d?'undefined':_typeof(d))?d.exports=Z:f.BN=Z,Z.BN=Z,Z.wordSize=26;var Q;try{Q=require('buffer').Buffer}catch(ii){}Z.isBN=function(ei){return!!(ei instanceof Z)||null!==ei&&'object'==('undefined'==typeof ei?'undefined':_typeof(ei))&&ei.constructor.wordSize===Z.wordSize&&Array.isArray(ei.words)},Z.max=function(ei,ti){return 0<ei.cmp(ti)?ei:ti},Z.min=function(ei,ti){return 0>ei.cmp(ti)?ei:ti},Z.prototype._init=function(ei,ti,oi){if('number'==typeof ei)return this._initNumber(ei,ti,oi);if('object'==('undefined'==typeof ei?'undefined':_typeof(ei)))return this._initArray(ei,ti,oi);'hex'===ti&&(ti=16),v(ti===(0|ti)&&2<=ti&&36>=ti),ei=ei.toString().replace(/\s+/g,'');var li=0;'-'===ei[0]&&li++,16===ti?this._parseHex(ei,li):this._parseBase(ei,ti,li),'-'===ei[0]&&(this.negative=1),this.strip(),'le'===oi&&this._initArray(this.toArray(),ti,oi)},Z.prototype._initNumber=function(ei,ti,oi){0>ei&&(this.negative=1,ei=-ei),67108864>ei?(this.words=[67108863&ei],this.length=1):4503599627370496>ei?(this.words=[67108863&ei,67108863&ei/67108864],this.length=2):(v(9007199254740992>ei),this.words=[67108863&ei,67108863&ei/67108864,1],this.length=3),'le'===oi&&this._initArray(this.toArray(),ti,oi)},Z.prototype._initArray=function(ei,ti,oi){if(v('number'==typeof ei.length),0>=ei.length)return this.words=[0],this.length=1,this;this.length=Math.ceil(ei.length/3),this.words=Array(this.length);for(var li=0;li<this.length;li++)this.words[li]=0;var ri,ni,mi=0;if('be'===oi)for(li=ei.length-1,ri=0;0<=li;li-=3)ni=ei[li]|ei[li-1]<<8|ei[li-2]<<16,this.words[ri]|=67108863&ni<<mi,this.words[ri+1]=67108863&ni>>>26-mi,mi+=24,26<=mi&&(mi-=26,ri++);else if('le'===oi)for(li=0,ri=0;li<ei.length;li+=3)ni=ei[li]|ei[li+1]<<8|ei[li+2]<<16,this.words[ri]|=67108863&ni<<mi,this.words[ri+1]=67108863&ni>>>26-mi,mi+=24,26<=mi&&(mi-=26,ri++);return this.strip()},Z.prototype._parseHex=function(ei,ti){this.length=Math.ceil((ei.length-ti)/6),this.words=Array(this.length);for(var oi=0;oi<this.length;oi++)this.words[oi]=0;var li,ri,ni=0;// Scan 24-bit chunks and add them to the number
for(oi=ei.length-6,li=0;oi>=ti;oi-=6)ri=R(ei,oi,oi+6),this.words[li]|=67108863&ri<<ni,this.words[li+1]|=4194303&ri>>>26-ni,ni+=24,26<=ni&&(ni-=26,li++);oi+6!==ti&&(ri=R(ei,ti,oi+6),this.words[li]|=67108863&ri<<ni,this.words[li+1]|=4194303&ri>>>26-ni),this.strip()},Z.prototype._parseBase=function(ei,ti,oi){this.words=[0],this.length=1;// Find length of limb in base
for(var li=0,ri=1;67108863>=ri;ri*=ti)li++;li--,ri=0|ri/ti;var ni=ei.length-oi,mi=ni%li,ui=Math.min(ni,ni-mi)+oi,di=0;for(var si=oi;si<ui;si+=li)di=L(ei,si,si+li,ti),this.imuln(ri),67108864>this.words[0]+di?this.words[0]+=di:this._iaddn(di);if(0!=mi){var pi=1;for(di=L(ei,si,ei.length,ti),si=0;si<mi;si++)pi*=ti;this.imuln(pi),67108864>this.words[0]+di?this.words[0]+=di:this._iaddn(di)}},Z.prototype.copy=function(ei){ei.words=Array(this.length);for(var ti=0;ti<this.length;ti++)ei.words[ti]=this.words[ti];ei.length=this.length,ei.negative=this.negative,ei.red=this.red},Z.prototype.clone=function(){var ei=new Z(null);return this.copy(ei),ei},Z.prototype._expand=function(ei){for(;this.length<ei;)this.words[this.length++]=0;return this},Z.prototype.strip=function(){for(;1<this.length&&0===this.words[this.length-1];)this.length--;return this._normSign()},Z.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},Z.prototype.inspect=function(){return(this.red?'<BN-R: ':'<BN: ')+this.toString(16)+'>'};/*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */var W=['','0','00','000','0000','00000','000000','0000000','00000000','000000000','0000000000','00000000000','000000000000','0000000000000','00000000000000','000000000000000','0000000000000000','00000000000000000','000000000000000000','0000000000000000000','00000000000000000000','000000000000000000000','0000000000000000000000','00000000000000000000000','000000000000000000000000','0000000000000000000000000'],X=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],Y=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,10000000,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64000000,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,24300000,28629151,33554432,39135393,45435424,52521875,60466176];Z.prototype.toString=function(ei,ti){ei=ei||10,ti=0|ti||1;var oi;if(16===ei||'hex'===ei){oi='';var li=0,ri=0;for(var ni=0;ni<this.length;ni++){var mi=this.words[ni],ui=(16777215&(mi<<li|ri)).toString(16);ri=16777215&mi>>>24-li,oi=0!=ri||ni!==this.length-1?W[6-ui.length]+ui+oi:ui+oi,li+=2,26<=li&&(li-=26,ni--)}for(0!=ri&&(oi=ri.toString(16)+oi);0!=oi.length%ti;)oi='0'+oi;return 0!==this.negative&&(oi='-'+oi),oi}if(ei===(0|ei)&&2<=ei&&36>=ei){// var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
var di=X[ei],si=Y[ei];// var groupBase = Math.pow(base, groupSize);
oi='';var pi=this.clone();for(pi.negative=0;!pi.isZero();){var gi=pi.modn(si).toString(ei);pi=pi.idivn(si),oi=pi.isZero()?gi+oi:W[di-gi.length]+gi+oi}for(this.isZero()&&(oi='0'+oi);0!=oi.length%ti;)oi='0'+oi;return 0!==this.negative&&(oi='-'+oi),oi}v(!1,'Base should be between 2 and 36')},Z.prototype.toNumber=function(){var ei=this.words[0];return 2===this.length?ei+=67108864*this.words[1]:3===this.length&&1===this.words[2]?ei+=4503599627370496+67108864*this.words[1]:2<this.length&&v(!1,'Number can only safely store up to 53 bits'),0===this.negative?ei:-ei},Z.prototype.toJSON=function(){return this.toString(16)},Z.prototype.toBuffer=function(ei,ti){return v('undefined'!=typeof Q),this.toArrayLike(Q,ei,ti)},Z.prototype.toArray=function(ei,ti){return this.toArrayLike(Array,ei,ti)},Z.prototype.toArrayLike=function(ei,ti,oi){var li=this.byteLength(),ri=oi||Math.max(1,li);v(li<=ri,'byte array longer than desired length'),v(0<ri,'Requested array length <= 0'),this.strip();var ni=new ei(ri),mi,ui,di=this.clone();if('le'!==ti){// Assume big-endian
for(ui=0;ui<ri-li;ui++)ni[ui]=0;for(ui=0;!di.isZero();ui++)mi=di.andln(255),di.iushrn(8),ni[ri-ui-1]=mi}else{for(ui=0;!di.isZero();ui++)mi=di.andln(255),di.iushrn(8),ni[ui]=mi;for(;ui<ri;ui++)ni[ui]=0}return ni},Z.prototype._countBits=Math.clz32?function(ei){return 32-Math.clz32(ei)}:function(ei){var ti=ei,oi=0;return 4096<=ti&&(oi+=13,ti>>>=13),64<=ti&&(oi+=7,ti>>>=7),8<=ti&&(oi+=4,ti>>>=4),2<=ti&&(oi+=2,ti>>>=2),oi+ti},Z.prototype._zeroBits=function(ei){// Short-cut
if(0===ei)return 26;var ti=ei,oi=0;return 0==(8191&ti)&&(oi+=13,ti>>>=13),0==(127&ti)&&(oi+=7,ti>>>=7),0==(15&ti)&&(oi+=4,ti>>>=4),0==(3&ti)&&(oi+=2,ti>>>=2),0==(1&ti)&&oi++,oi},Z.prototype.bitLength=function(){var ei=this.words[this.length-1],ti=this._countBits(ei);return 26*(this.length-1)+ti},Z.prototype.zeroBits=function(){if(this.isZero())return 0;var ei=0;for(var ti=0;ti<this.length;ti++){var oi=this._zeroBits(this.words[ti]);if(ei+=oi,26!==oi)break}return ei},Z.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},Z.prototype.toTwos=function(ei){return 0===this.negative?this.clone():this.abs().inotn(ei).iaddn(1)},Z.prototype.fromTwos=function(ei){return this.testn(ei-1)?this.notn(ei).iaddn(1).ineg():this.clone()},Z.prototype.isNeg=function(){return 0!==this.negative},Z.prototype.neg=function(){return this.clone().ineg()},Z.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},Z.prototype.iuor=function(ei){for(;this.length<ei.length;)this.words[this.length++]=0;for(var ti=0;ti<ei.length;ti++)this.words[ti]=this.words[ti]|ei.words[ti];return this.strip()},Z.prototype.ior=function(ei){return v(0==(this.negative|ei.negative)),this.iuor(ei)},Z.prototype.or=function(ei){return this.length>ei.length?this.clone().ior(ei):ei.clone().ior(this)},Z.prototype.uor=function(ei){return this.length>ei.length?this.clone().iuor(ei):ei.clone().iuor(this)},Z.prototype.iuand=function(ei){// b = min-length(num, this)
var ti;ti=this.length>ei.length?ei:this;for(var oi=0;oi<ti.length;oi++)this.words[oi]=this.words[oi]&ei.words[oi];return this.length=ti.length,this.strip()},Z.prototype.iand=function(ei){return v(0==(this.negative|ei.negative)),this.iuand(ei)},Z.prototype.and=function(ei){return this.length>ei.length?this.clone().iand(ei):ei.clone().iand(this)},Z.prototype.uand=function(ei){return this.length>ei.length?this.clone().iuand(ei):ei.clone().iuand(this)},Z.prototype.iuxor=function(ei){// a.length > b.length
var ti,oi;this.length>ei.length?(ti=this,oi=ei):(ti=ei,oi=this);for(var li=0;li<oi.length;li++)this.words[li]=ti.words[li]^oi.words[li];if(this!==ti)for(;li<ti.length;li++)this.words[li]=ti.words[li];return this.length=ti.length,this.strip()},Z.prototype.ixor=function(ei){return v(0==(this.negative|ei.negative)),this.iuxor(ei)},Z.prototype.xor=function(ei){return this.length>ei.length?this.clone().ixor(ei):ei.clone().ixor(this)},Z.prototype.uxor=function(ei){return this.length>ei.length?this.clone().iuxor(ei):ei.clone().iuxor(this)},Z.prototype.inotn=function(ei){v('number'==typeof ei&&0<=ei);var ti=0|Math.ceil(ei/26),oi=ei%26;this._expand(ti),0<oi&&ti--;// Handle complete words
for(var li=0;li<ti;li++)this.words[li]=67108863&~this.words[li];// Handle the residue
// And remove leading zeroes
return 0<oi&&(this.words[li]=~this.words[li]&67108863>>26-oi),this.strip()},Z.prototype.notn=function(ei){return this.clone().inotn(ei)},Z.prototype.setn=function(ei,ti){v('number'==typeof ei&&0<=ei);var oi=0|ei/26,li=ei%26;return this._expand(oi+1),this.words[oi]=ti?this.words[oi]|1<<li:this.words[oi]&~(1<<li),this.strip()},Z.prototype.iadd=function(ei){var ti;// negative + positive
if(0!==this.negative&&0===ei.negative)return this.negative=0,ti=this.isub(ei),this.negative^=1,this._normSign();// positive + negative
// a.length > b.length
if(0===this.negative&&0!==ei.negative)return ei.negative=0,ti=this.isub(ei),ei.negative=1,ti._normSign();var oi,li;this.length>ei.length?(oi=this,li=ei):(oi=ei,li=this);var ri=0;for(var ni=0;ni<li.length;ni++)ti=(0|oi.words[ni])+(0|li.words[ni])+ri,this.words[ni]=67108863&ti,ri=ti>>>26;for(;0!=ri&&ni<oi.length;ni++)ti=(0|oi.words[ni])+ri,this.words[ni]=67108863&ti,ri=ti>>>26;if(this.length=oi.length,0!=ri)this.words[this.length]=ri,this.length++;else if(oi!==this)for(;ni<oi.length;ni++)this.words[ni]=oi.words[ni];return this},Z.prototype.add=function(ei){var ti;return 0!==ei.negative&&0===this.negative?(ei.negative=0,ti=this.sub(ei),ei.negative^=1,ti):0===ei.negative&&0!==this.negative?(this.negative=0,ti=ei.sub(this),this.negative=1,ti):this.length>ei.length?this.clone().iadd(ei):ei.clone().iadd(this)},Z.prototype.isub=function(ei){// this - (-num) = this + num
if(0!==ei.negative){ei.negative=0;var ti=this.iadd(ei);return ei.negative=1,ti._normSign();// -this - num = -(this + num)
}// At this point both numbers are positive
if(0!==this.negative)return this.negative=0,this.iadd(ei),this.negative=1,this._normSign();var oi=this.cmp(ei);// Optimization - zeroify
if(0===oi)return this.negative=0,this.length=1,this.words[0]=0,this;// a > b
var li,ri;0<oi?(li=this,ri=ei):(li=ei,ri=this);var ni=0;for(var mi=0;mi<ri.length;mi++)ti=(0|li.words[mi])-(0|ri.words[mi])+ni,ni=ti>>26,this.words[mi]=67108863&ti;for(;0!=ni&&mi<li.length;mi++)ti=(0|li.words[mi])+ni,ni=ti>>26,this.words[mi]=67108863&ti;// Copy rest of the words
if(0==ni&&mi<li.length&&li!==this)for(;mi<li.length;mi++)this.words[mi]=li.words[mi];return this.length=Math.max(this.length,mi),li!==this&&(this.negative=1),this.strip()},Z.prototype.sub=function(ei){return this.clone().isub(ei)};var $=function $(ei,ti,oi){var ui,di,si,li=ei.words,ri=ti.words,ni=oi.words,mi=0,pi=0|li[0],gi=8191&pi,fi=pi>>>13,ai=0|li[1],wi=8191&ai,yi=ai>>>13,vi=0|li[2],ci=8191&vi,bi=vi>>>13,_i=0|li[3],ki=8191&_i,Si=_i>>>13,xi=0|li[4],Zi=8191&xi,qi=xi>>>13,Ri=0|li[5],Bi=8191&Ri,Ai=Ri>>>13,Ni=0|li[6],Li=8191&Ni,ji=Ni>>>13,Ii=0|li[7],zi=8191&Ii,Ti=Ii>>>13,Oi=0|li[8],Ei=8191&Oi,Mi=Oi>>>13,Pi=0|li[9],Ki=8191&Pi,Fi=Pi>>>13,Ci=0|ri[0],Di=8191&Ci,Hi=Ci>>>13,Ui=0|ri[1],Ji=8191&Ui,Gi=Ui>>>13,Qi=0|ri[2],Wi=8191&Qi,Xi=Qi>>>13,Yi=0|ri[3],$i=8191&Yi,Vi=Yi>>>13,ee=0|ri[4],te=8191&ee,oe=ee>>>13,le=0|ri[5],ne=8191&le,me=le>>>13,ue=0|ri[6],de=8191&ue,se=ue>>>13,pe=0|ri[7],ge=8191&pe,he=pe>>>13,fe=0|ri[8],ae=8191&fe,we=fe>>>13,ye=0|ri[9],ve=8191&ye,ce=ye>>>13;oi.negative=ei.negative^ti.negative,oi.length=19,ui=Math.imul(gi,Di),di=Math.imul(gi,Hi),di=0|di+Math.imul(fi,Di),si=Math.imul(fi,Hi);var be=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(be>>>26),be&=67108863,ui=Math.imul(wi,Di),di=Math.imul(wi,Hi),di=0|di+Math.imul(yi,Di),si=Math.imul(yi,Hi),ui=0|ui+Math.imul(gi,Ji),di=0|di+Math.imul(gi,Gi),di=0|di+Math.imul(fi,Ji),si=0|si+Math.imul(fi,Gi);var _e=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(_e>>>26),_e&=67108863,ui=Math.imul(ci,Di),di=Math.imul(ci,Hi),di=0|di+Math.imul(bi,Di),si=Math.imul(bi,Hi),ui=0|ui+Math.imul(wi,Ji),di=0|di+Math.imul(wi,Gi),di=0|di+Math.imul(yi,Ji),si=0|si+Math.imul(yi,Gi),ui=0|ui+Math.imul(gi,Wi),di=0|di+Math.imul(gi,Xi),di=0|di+Math.imul(fi,Wi),si=0|si+Math.imul(fi,Xi);var ke=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(ke>>>26),ke&=67108863,ui=Math.imul(ki,Di),di=Math.imul(ki,Hi),di=0|di+Math.imul(Si,Di),si=Math.imul(Si,Hi),ui=0|ui+Math.imul(ci,Ji),di=0|di+Math.imul(ci,Gi),di=0|di+Math.imul(bi,Ji),si=0|si+Math.imul(bi,Gi),ui=0|ui+Math.imul(wi,Wi),di=0|di+Math.imul(wi,Xi),di=0|di+Math.imul(yi,Wi),si=0|si+Math.imul(yi,Xi),ui=0|ui+Math.imul(gi,$i),di=0|di+Math.imul(gi,Vi),di=0|di+Math.imul(fi,$i),si=0|si+Math.imul(fi,Vi);var Se=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Se>>>26),Se&=67108863,ui=Math.imul(Zi,Di),di=Math.imul(Zi,Hi),di=0|di+Math.imul(qi,Di),si=Math.imul(qi,Hi),ui=0|ui+Math.imul(ki,Ji),di=0|di+Math.imul(ki,Gi),di=0|di+Math.imul(Si,Ji),si=0|si+Math.imul(Si,Gi),ui=0|ui+Math.imul(ci,Wi),di=0|di+Math.imul(ci,Xi),di=0|di+Math.imul(bi,Wi),si=0|si+Math.imul(bi,Xi),ui=0|ui+Math.imul(wi,$i),di=0|di+Math.imul(wi,Vi),di=0|di+Math.imul(yi,$i),si=0|si+Math.imul(yi,Vi),ui=0|ui+Math.imul(gi,te),di=0|di+Math.imul(gi,oe),di=0|di+Math.imul(fi,te),si=0|si+Math.imul(fi,oe);var xe=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(xe>>>26),xe&=67108863,ui=Math.imul(Bi,Di),di=Math.imul(Bi,Hi),di=0|di+Math.imul(Ai,Di),si=Math.imul(Ai,Hi),ui=0|ui+Math.imul(Zi,Ji),di=0|di+Math.imul(Zi,Gi),di=0|di+Math.imul(qi,Ji),si=0|si+Math.imul(qi,Gi),ui=0|ui+Math.imul(ki,Wi),di=0|di+Math.imul(ki,Xi),di=0|di+Math.imul(Si,Wi),si=0|si+Math.imul(Si,Xi),ui=0|ui+Math.imul(ci,$i),di=0|di+Math.imul(ci,Vi),di=0|di+Math.imul(bi,$i),si=0|si+Math.imul(bi,Vi),ui=0|ui+Math.imul(wi,te),di=0|di+Math.imul(wi,oe),di=0|di+Math.imul(yi,te),si=0|si+Math.imul(yi,oe),ui=0|ui+Math.imul(gi,ne),di=0|di+Math.imul(gi,me),di=0|di+Math.imul(fi,ne),si=0|si+Math.imul(fi,me);var Ze=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Ze>>>26),Ze&=67108863,ui=Math.imul(Li,Di),di=Math.imul(Li,Hi),di=0|di+Math.imul(ji,Di),si=Math.imul(ji,Hi),ui=0|ui+Math.imul(Bi,Ji),di=0|di+Math.imul(Bi,Gi),di=0|di+Math.imul(Ai,Ji),si=0|si+Math.imul(Ai,Gi),ui=0|ui+Math.imul(Zi,Wi),di=0|di+Math.imul(Zi,Xi),di=0|di+Math.imul(qi,Wi),si=0|si+Math.imul(qi,Xi),ui=0|ui+Math.imul(ki,$i),di=0|di+Math.imul(ki,Vi),di=0|di+Math.imul(Si,$i),si=0|si+Math.imul(Si,Vi),ui=0|ui+Math.imul(ci,te),di=0|di+Math.imul(ci,oe),di=0|di+Math.imul(bi,te),si=0|si+Math.imul(bi,oe),ui=0|ui+Math.imul(wi,ne),di=0|di+Math.imul(wi,me),di=0|di+Math.imul(yi,ne),si=0|si+Math.imul(yi,me),ui=0|ui+Math.imul(gi,de),di=0|di+Math.imul(gi,se),di=0|di+Math.imul(fi,de),si=0|si+Math.imul(fi,se);var qe=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(qe>>>26),qe&=67108863,ui=Math.imul(zi,Di),di=Math.imul(zi,Hi),di=0|di+Math.imul(Ti,Di),si=Math.imul(Ti,Hi),ui=0|ui+Math.imul(Li,Ji),di=0|di+Math.imul(Li,Gi),di=0|di+Math.imul(ji,Ji),si=0|si+Math.imul(ji,Gi),ui=0|ui+Math.imul(Bi,Wi),di=0|di+Math.imul(Bi,Xi),di=0|di+Math.imul(Ai,Wi),si=0|si+Math.imul(Ai,Xi),ui=0|ui+Math.imul(Zi,$i),di=0|di+Math.imul(Zi,Vi),di=0|di+Math.imul(qi,$i),si=0|si+Math.imul(qi,Vi),ui=0|ui+Math.imul(ki,te),di=0|di+Math.imul(ki,oe),di=0|di+Math.imul(Si,te),si=0|si+Math.imul(Si,oe),ui=0|ui+Math.imul(ci,ne),di=0|di+Math.imul(ci,me),di=0|di+Math.imul(bi,ne),si=0|si+Math.imul(bi,me),ui=0|ui+Math.imul(wi,de),di=0|di+Math.imul(wi,se),di=0|di+Math.imul(yi,de),si=0|si+Math.imul(yi,se),ui=0|ui+Math.imul(gi,ge),di=0|di+Math.imul(gi,he),di=0|di+Math.imul(fi,ge),si=0|si+Math.imul(fi,he);var Re=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Re>>>26),Re&=67108863,ui=Math.imul(Ei,Di),di=Math.imul(Ei,Hi),di=0|di+Math.imul(Mi,Di),si=Math.imul(Mi,Hi),ui=0|ui+Math.imul(zi,Ji),di=0|di+Math.imul(zi,Gi),di=0|di+Math.imul(Ti,Ji),si=0|si+Math.imul(Ti,Gi),ui=0|ui+Math.imul(Li,Wi),di=0|di+Math.imul(Li,Xi),di=0|di+Math.imul(ji,Wi),si=0|si+Math.imul(ji,Xi),ui=0|ui+Math.imul(Bi,$i),di=0|di+Math.imul(Bi,Vi),di=0|di+Math.imul(Ai,$i),si=0|si+Math.imul(Ai,Vi),ui=0|ui+Math.imul(Zi,te),di=0|di+Math.imul(Zi,oe),di=0|di+Math.imul(qi,te),si=0|si+Math.imul(qi,oe),ui=0|ui+Math.imul(ki,ne),di=0|di+Math.imul(ki,me),di=0|di+Math.imul(Si,ne),si=0|si+Math.imul(Si,me),ui=0|ui+Math.imul(ci,de),di=0|di+Math.imul(ci,se),di=0|di+Math.imul(bi,de),si=0|si+Math.imul(bi,se),ui=0|ui+Math.imul(wi,ge),di=0|di+Math.imul(wi,he),di=0|di+Math.imul(yi,ge),si=0|si+Math.imul(yi,he),ui=0|ui+Math.imul(gi,ae),di=0|di+Math.imul(gi,we),di=0|di+Math.imul(fi,ae),si=0|si+Math.imul(fi,we);var Be=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Be>>>26),Be&=67108863,ui=Math.imul(Ki,Di),di=Math.imul(Ki,Hi),di=0|di+Math.imul(Fi,Di),si=Math.imul(Fi,Hi),ui=0|ui+Math.imul(Ei,Ji),di=0|di+Math.imul(Ei,Gi),di=0|di+Math.imul(Mi,Ji),si=0|si+Math.imul(Mi,Gi),ui=0|ui+Math.imul(zi,Wi),di=0|di+Math.imul(zi,Xi),di=0|di+Math.imul(Ti,Wi),si=0|si+Math.imul(Ti,Xi),ui=0|ui+Math.imul(Li,$i),di=0|di+Math.imul(Li,Vi),di=0|di+Math.imul(ji,$i),si=0|si+Math.imul(ji,Vi),ui=0|ui+Math.imul(Bi,te),di=0|di+Math.imul(Bi,oe),di=0|di+Math.imul(Ai,te),si=0|si+Math.imul(Ai,oe),ui=0|ui+Math.imul(Zi,ne),di=0|di+Math.imul(Zi,me),di=0|di+Math.imul(qi,ne),si=0|si+Math.imul(qi,me),ui=0|ui+Math.imul(ki,de),di=0|di+Math.imul(ki,se),di=0|di+Math.imul(Si,de),si=0|si+Math.imul(Si,se),ui=0|ui+Math.imul(ci,ge),di=0|di+Math.imul(ci,he),di=0|di+Math.imul(bi,ge),si=0|si+Math.imul(bi,he),ui=0|ui+Math.imul(wi,ae),di=0|di+Math.imul(wi,we),di=0|di+Math.imul(yi,ae),si=0|si+Math.imul(yi,we),ui=0|ui+Math.imul(gi,ve),di=0|di+Math.imul(gi,ce),di=0|di+Math.imul(fi,ve),si=0|si+Math.imul(fi,ce);var Ae=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Ae>>>26),Ae&=67108863,ui=Math.imul(Ki,Ji),di=Math.imul(Ki,Gi),di=0|di+Math.imul(Fi,Ji),si=Math.imul(Fi,Gi),ui=0|ui+Math.imul(Ei,Wi),di=0|di+Math.imul(Ei,Xi),di=0|di+Math.imul(Mi,Wi),si=0|si+Math.imul(Mi,Xi),ui=0|ui+Math.imul(zi,$i),di=0|di+Math.imul(zi,Vi),di=0|di+Math.imul(Ti,$i),si=0|si+Math.imul(Ti,Vi),ui=0|ui+Math.imul(Li,te),di=0|di+Math.imul(Li,oe),di=0|di+Math.imul(ji,te),si=0|si+Math.imul(ji,oe),ui=0|ui+Math.imul(Bi,ne),di=0|di+Math.imul(Bi,me),di=0|di+Math.imul(Ai,ne),si=0|si+Math.imul(Ai,me),ui=0|ui+Math.imul(Zi,de),di=0|di+Math.imul(Zi,se),di=0|di+Math.imul(qi,de),si=0|si+Math.imul(qi,se),ui=0|ui+Math.imul(ki,ge),di=0|di+Math.imul(ki,he),di=0|di+Math.imul(Si,ge),si=0|si+Math.imul(Si,he),ui=0|ui+Math.imul(ci,ae),di=0|di+Math.imul(ci,we),di=0|di+Math.imul(bi,ae),si=0|si+Math.imul(bi,we),ui=0|ui+Math.imul(wi,ve),di=0|di+Math.imul(wi,ce),di=0|di+Math.imul(yi,ve),si=0|si+Math.imul(yi,ce);var Ne=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Ne>>>26),Ne&=67108863,ui=Math.imul(Ki,Wi),di=Math.imul(Ki,Xi),di=0|di+Math.imul(Fi,Wi),si=Math.imul(Fi,Xi),ui=0|ui+Math.imul(Ei,$i),di=0|di+Math.imul(Ei,Vi),di=0|di+Math.imul(Mi,$i),si=0|si+Math.imul(Mi,Vi),ui=0|ui+Math.imul(zi,te),di=0|di+Math.imul(zi,oe),di=0|di+Math.imul(Ti,te),si=0|si+Math.imul(Ti,oe),ui=0|ui+Math.imul(Li,ne),di=0|di+Math.imul(Li,me),di=0|di+Math.imul(ji,ne),si=0|si+Math.imul(ji,me),ui=0|ui+Math.imul(Bi,de),di=0|di+Math.imul(Bi,se),di=0|di+Math.imul(Ai,de),si=0|si+Math.imul(Ai,se),ui=0|ui+Math.imul(Zi,ge),di=0|di+Math.imul(Zi,he),di=0|di+Math.imul(qi,ge),si=0|si+Math.imul(qi,he),ui=0|ui+Math.imul(ki,ae),di=0|di+Math.imul(ki,we),di=0|di+Math.imul(Si,ae),si=0|si+Math.imul(Si,we),ui=0|ui+Math.imul(ci,ve),di=0|di+Math.imul(ci,ce),di=0|di+Math.imul(bi,ve),si=0|si+Math.imul(bi,ce);var Le=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Le>>>26),Le&=67108863,ui=Math.imul(Ki,$i),di=Math.imul(Ki,Vi),di=0|di+Math.imul(Fi,$i),si=Math.imul(Fi,Vi),ui=0|ui+Math.imul(Ei,te),di=0|di+Math.imul(Ei,oe),di=0|di+Math.imul(Mi,te),si=0|si+Math.imul(Mi,oe),ui=0|ui+Math.imul(zi,ne),di=0|di+Math.imul(zi,me),di=0|di+Math.imul(Ti,ne),si=0|si+Math.imul(Ti,me),ui=0|ui+Math.imul(Li,de),di=0|di+Math.imul(Li,se),di=0|di+Math.imul(ji,de),si=0|si+Math.imul(ji,se),ui=0|ui+Math.imul(Bi,ge),di=0|di+Math.imul(Bi,he),di=0|di+Math.imul(Ai,ge),si=0|si+Math.imul(Ai,he),ui=0|ui+Math.imul(Zi,ae),di=0|di+Math.imul(Zi,we),di=0|di+Math.imul(qi,ae),si=0|si+Math.imul(qi,we),ui=0|ui+Math.imul(ki,ve),di=0|di+Math.imul(ki,ce),di=0|di+Math.imul(Si,ve),si=0|si+Math.imul(Si,ce);var je=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(je>>>26),je&=67108863,ui=Math.imul(Ki,te),di=Math.imul(Ki,oe),di=0|di+Math.imul(Fi,te),si=Math.imul(Fi,oe),ui=0|ui+Math.imul(Ei,ne),di=0|di+Math.imul(Ei,me),di=0|di+Math.imul(Mi,ne),si=0|si+Math.imul(Mi,me),ui=0|ui+Math.imul(zi,de),di=0|di+Math.imul(zi,se),di=0|di+Math.imul(Ti,de),si=0|si+Math.imul(Ti,se),ui=0|ui+Math.imul(Li,ge),di=0|di+Math.imul(Li,he),di=0|di+Math.imul(ji,ge),si=0|si+Math.imul(ji,he),ui=0|ui+Math.imul(Bi,ae),di=0|di+Math.imul(Bi,we),di=0|di+Math.imul(Ai,ae),si=0|si+Math.imul(Ai,we),ui=0|ui+Math.imul(Zi,ve),di=0|di+Math.imul(Zi,ce),di=0|di+Math.imul(qi,ve),si=0|si+Math.imul(qi,ce);var Ie=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Ie>>>26),Ie&=67108863,ui=Math.imul(Ki,ne),di=Math.imul(Ki,me),di=0|di+Math.imul(Fi,ne),si=Math.imul(Fi,me),ui=0|ui+Math.imul(Ei,de),di=0|di+Math.imul(Ei,se),di=0|di+Math.imul(Mi,de),si=0|si+Math.imul(Mi,se),ui=0|ui+Math.imul(zi,ge),di=0|di+Math.imul(zi,he),di=0|di+Math.imul(Ti,ge),si=0|si+Math.imul(Ti,he),ui=0|ui+Math.imul(Li,ae),di=0|di+Math.imul(Li,we),di=0|di+Math.imul(ji,ae),si=0|si+Math.imul(ji,we),ui=0|ui+Math.imul(Bi,ve),di=0|di+Math.imul(Bi,ce),di=0|di+Math.imul(Ai,ve),si=0|si+Math.imul(Ai,ce);var ze=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(ze>>>26),ze&=67108863,ui=Math.imul(Ki,de),di=Math.imul(Ki,se),di=0|di+Math.imul(Fi,de),si=Math.imul(Fi,se),ui=0|ui+Math.imul(Ei,ge),di=0|di+Math.imul(Ei,he),di=0|di+Math.imul(Mi,ge),si=0|si+Math.imul(Mi,he),ui=0|ui+Math.imul(zi,ae),di=0|di+Math.imul(zi,we),di=0|di+Math.imul(Ti,ae),si=0|si+Math.imul(Ti,we),ui=0|ui+Math.imul(Li,ve),di=0|di+Math.imul(Li,ce),di=0|di+Math.imul(ji,ve),si=0|si+Math.imul(ji,ce);var Te=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Te>>>26),Te&=67108863,ui=Math.imul(Ki,ge),di=Math.imul(Ki,he),di=0|di+Math.imul(Fi,ge),si=Math.imul(Fi,he),ui=0|ui+Math.imul(Ei,ae),di=0|di+Math.imul(Ei,we),di=0|di+Math.imul(Mi,ae),si=0|si+Math.imul(Mi,we),ui=0|ui+Math.imul(zi,ve),di=0|di+Math.imul(zi,ce),di=0|di+Math.imul(Ti,ve),si=0|si+Math.imul(Ti,ce);var Oe=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Oe>>>26),Oe&=67108863,ui=Math.imul(Ki,ae),di=Math.imul(Ki,we),di=0|di+Math.imul(Fi,ae),si=Math.imul(Fi,we),ui=0|ui+Math.imul(Ei,ve),di=0|di+Math.imul(Ei,ce),di=0|di+Math.imul(Mi,ve),si=0|si+Math.imul(Mi,ce);var Ee=0|(0|mi+ui)+((8191&di)<<13);mi=0|(0|si+(di>>>13))+(Ee>>>26),Ee&=67108863,ui=Math.imul(Ki,ve),di=Math.imul(Ki,ce),di=0|di+Math.imul(Fi,ve),si=Math.imul(Fi,ce);var Me=0|(0|mi+ui)+((8191&di)<<13);return mi=0|(0|si+(di>>>13))+(Me>>>26),Me&=67108863,ni[0]=be,ni[1]=_e,ni[2]=ke,ni[3]=Se,ni[4]=xe,ni[5]=Ze,ni[6]=qe,ni[7]=Re,ni[8]=Be,ni[9]=Ae,ni[10]=Ne,ni[11]=Le,ni[12]=je,ni[13]=Ie,ni[14]=ze,ni[15]=Te,ni[16]=Oe,ni[17]=Ee,ni[18]=Me,0!=mi&&(ni[19]=mi,oi.length++),oi};// Polyfill comb
Math.imul||($=T),Z.prototype.mulTo=function(ei,ti){var oi,li=this.length+ei.length;return oi=10===this.length&&10===ei.length?$(this,ei,ti):63>li?T(this,ei,ti):1024>li?O(this,ei,ti):E(this,ei,ti),oi},M.prototype.makeRBT=function(ei){var ti=Array(ei),oi=Z.prototype._countBits(ei)-1;for(var li=0;li<ei;li++)ti[li]=this.revBin(li,oi,ei);return ti},M.prototype.revBin=function(ei,ti,oi){if(0===ei||ei===oi-1)return ei;var li=0;for(var ri=0;ri<ti;ri++)li|=(1&ei)<<ti-ri-1,ei>>=1;return li},M.prototype.permute=function(ei,ti,oi,li,ri,ni){for(var mi=0;mi<ni;mi++)li[mi]=ti[ei[mi]],ri[mi]=oi[ei[mi]]},M.prototype.transform=function(ei,ti,oi,li,ri,ni){this.permute(ni,ei,ti,oi,li,ri);for(var mi=1;mi<ri;mi<<=1){var ui=mi<<1,di=Math.cos(2*Math.PI/ui),si=Math.sin(2*Math.PI/ui);for(var pi=0;pi<ri;pi+=ui){var gi=di,fi=si;for(var ai=0;ai<mi;ai++){var wi=oi[pi+ai],yi=li[pi+ai],vi=oi[pi+ai+mi],ci=li[pi+ai+mi],bi=gi*vi-fi*ci;ci=gi*ci+fi*vi,vi=bi,oi[pi+ai]=wi+vi,li[pi+ai]=yi+ci,oi[pi+ai+mi]=wi-vi,li[pi+ai+mi]=yi-ci,ai!==ui&&(bi=di*gi-si*fi,fi=di*fi+si*gi,gi=bi)}}}},M.prototype.guessLen13b=function(ei,ti){var oi=1|Math.max(ti,ei),li=1&oi,ri=0;for(oi=0|oi/2;oi;oi=oi>>>1)ri++;return 1<<ri+1+li},M.prototype.conjugate=function(ei,ti,oi){if(!(1>=oi))for(var li=0;li<oi/2;li++){var ri=ei[li];ei[li]=ei[oi-li-1],ei[oi-li-1]=ri,ri=ti[li],ti[li]=-ti[oi-li-1],ti[oi-li-1]=-ri}},M.prototype.normalize13b=function(ei,ti){var oi=0;for(var li=0;li<ti/2;li++){var ri=8192*Math.round(ei[2*li+1]/ti)+Math.round(ei[2*li]/ti)+oi;ei[li]=67108863&ri,oi=67108864>ri?0:0|ri/67108864}return ei},M.prototype.convert13b=function(ei,ti,oi,li){var ri=0;for(var ni=0;ni<ti;ni++)ri=ri+(0|ei[ni]),oi[2*ni]=8191&ri,ri=ri>>>13,oi[2*ni+1]=8191&ri,ri=ri>>>13;// Pad with zeroes
for(ni=2*ti;ni<li;++ni)oi[ni]=0;v(0==ri),v(0==(-8192&ri))},M.prototype.stub=function(ei){var ti=Array(ei);for(var oi=0;oi<ei;oi++)ti[oi]=0;return ti},M.prototype.mulp=function(ei,ti,oi){var li=2*this.guessLen13b(ei.length,ti.length),ri=this.makeRBT(li),ni=this.stub(li),mi=Array(li),ui=Array(li),di=Array(li),si=Array(li),pi=Array(li),gi=Array(li),fi=oi.words;fi.length=li,this.convert13b(ei.words,ei.length,mi,li),this.convert13b(ti.words,ti.length,si,li),this.transform(mi,ni,ui,di,li,ri),this.transform(si,ni,pi,gi,li,ri);for(var ai=0;ai<li;ai++){var wi=ui[ai]*pi[ai]-di[ai]*gi[ai];di[ai]=ui[ai]*gi[ai]+di[ai]*pi[ai],ui[ai]=wi}return this.conjugate(ui,di,li),this.transform(ui,di,fi,ni,li,ri),this.conjugate(fi,ni,li),this.normalize13b(fi,li),oi.negative=ei.negative^ti.negative,oi.length=ei.length+ti.length,oi.strip()},Z.prototype.mul=function(ei){var ti=new Z(null);return ti.words=Array(this.length+ei.length),this.mulTo(ei,ti)},Z.prototype.mulf=function(ei){var ti=new Z(null);return ti.words=Array(this.length+ei.length),E(this,ei,ti)},Z.prototype.imul=function(ei){return this.clone().mulTo(ei,this)},Z.prototype.imuln=function(ei){v('number'==typeof ei),v(67108864>ei);// Carry
var ti=0;for(var oi=0;oi<this.length;oi++){var li=(0|this.words[oi])*ei,ri=(67108863&li)+(67108863&ti);ti>>=26,ti+=0|li/67108864,ti+=ri>>>26,this.words[oi]=67108863&ri}return 0!=ti&&(this.words[oi]=ti,this.length++),this},Z.prototype.muln=function(ei){return this.clone().imuln(ei)},Z.prototype.sqr=function(){return this.mul(this)},Z.prototype.isqr=function(){return this.imul(this.clone())},Z.prototype.pow=function(ei){var ti=I(ei);if(0===ti.length)return new Z(1);// Skip leading zeroes
var oi=this;for(var li=0;li<ti.length&&!(0!==ti[li]);li++,oi=oi.sqr());if(++li<ti.length)for(var ri=oi.sqr();li<ti.length;li++,ri=ri.sqr())0===ti[li]||(oi=oi.mul(ri));return oi},Z.prototype.iushln=function(ei){v('number'==typeof ei&&0<=ei);var ti=ei%26,oi=(ei-ti)/26,li;if(0!=ti){var ri=0;for(li=0;li<this.length;li++){var ni=this.words[li]&67108863>>>26-ti<<26-ti,mi=(0|this.words[li])-ni<<ti;this.words[li]=mi|ri,ri=ni>>>26-ti}ri&&(this.words[li]=ri,this.length++)}if(0!=oi){for(li=this.length-1;0<=li;li--)this.words[li+oi]=this.words[li];for(li=0;li<oi;li++)this.words[li]=0;this.length+=oi}return this.strip()},Z.prototype.ishln=function(ei){return v(0===this.negative),this.iushln(ei)},Z.prototype.iushrn=function(ei,ti,oi){v('number'==typeof ei&&0<=ei);var li;li=ti?(ti-ti%26)/26:0;var ri=ei%26,ni=Math.min((ei-ri)/26,this.length),mi=oi;// Extended mode, copy masked part
if(li-=ni,li=Math.max(0,li),mi){for(var ui=0;ui<ni;ui++)mi.words[ui]=this.words[ui];mi.length=ni}if(0===ni);else if(this.length>ni)for(this.length-=ni,ui=0;ui<this.length;ui++)this.words[ui]=this.words[ui+ni];else this.words[0]=0,this.length=1;var di=0;for(ui=this.length-1;0<=ui&&(0!=di||ui>=li);ui--){var si=0|this.words[ui];this.words[ui]=di<<26-ri|si>>>ri,di=si&(67108863^67108863>>>ri<<ri)}// Push carried bits as a mask
return mi&&0!=di&&(mi.words[mi.length++]=di),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},Z.prototype.ishrn=function(ei,ti,oi){return v(0===this.negative),this.iushrn(ei,ti,oi)},Z.prototype.shln=function(ei){return this.clone().ishln(ei)},Z.prototype.ushln=function(ei){return this.clone().iushln(ei)},Z.prototype.shrn=function(ei){return this.clone().ishrn(ei)},Z.prototype.ushrn=function(ei){return this.clone().iushrn(ei)},Z.prototype.testn=function(ei){v('number'==typeof ei&&0<=ei);var ti=ei%26,oi=(ei-ti)/26;// Fast case: bit is much higher than all existing words
if(this.length<=oi)return!1;// Check bit and return
var li=this.words[oi];return!!(li&1<<ti)},Z.prototype.imaskn=function(ei){v('number'==typeof ei&&0<=ei);var ti=ei%26,oi=(ei-ti)/26;return(v(0===this.negative,'imaskn works only with positive numbers'),this.length<=oi)?this:(0!=ti&&oi++,this.length=Math.min(oi,this.length),0!=ti&&(this.words[this.length-1]&=67108863^67108863>>>ti<<ti),this.strip())},Z.prototype.maskn=function(ei){return this.clone().imaskn(ei)},Z.prototype.iaddn=function(ei){// Add without checks
return v('number'==typeof ei),v(67108864>ei),0>ei?this.isubn(-ei):0===this.negative?this._iaddn(ei):1===this.length&&(0|this.words[0])<ei?(this.words[0]=ei-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(ei),this.negative=1,this);// Possible sign change
},Z.prototype._iaddn=function(ei){this.words[0]+=ei;// Carry
for(var ti=0;ti<this.length&&67108864<=this.words[ti];ti++)this.words[ti]-=67108864,ti===this.length-1?this.words[ti+1]=1:this.words[ti+1]++;return this.length=Math.max(this.length,ti+1),this},Z.prototype.isubn=function(ei){if(v('number'==typeof ei),v(67108864>ei),0>ei)return this.iaddn(-ei);if(0!==this.negative)return this.negative=0,this.iaddn(ei),this.negative=1,this;if(this.words[0]-=ei,1===this.length&&0>this.words[0])this.words[0]=-this.words[0],this.negative=1;else// Carry
for(var ti=0;ti<this.length&&0>this.words[ti];ti++)this.words[ti]+=67108864,this.words[ti+1]-=1;return this.strip()},Z.prototype.addn=function(ei){return this.clone().iaddn(ei)},Z.prototype.subn=function(ei){return this.clone().isubn(ei)},Z.prototype.iabs=function(){return this.negative=0,this},Z.prototype.abs=function(){return this.clone().iabs()},Z.prototype._ishlnsubmul=function(ei,ti,oi){var ri,li=ei.length+oi;this._expand(li);var ni,mi=0;for(ri=0;ri<ei.length;ri++){ni=(0|this.words[ri+oi])+mi;var ui=(0|ei.words[ri])*ti;ni-=67108863&ui,mi=(ni>>26)-(0|ui/67108864),this.words[ri+oi]=67108863&ni}for(;ri<this.length-oi;ri++)ni=(0|this.words[ri+oi])+mi,mi=ni>>26,this.words[ri+oi]=67108863&ni;if(0==mi)return this.strip();// Subtraction overflow
for(v(-1==mi),mi=0,ri=0;ri<this.length;ri++)ni=-(0|this.words[ri])+mi,mi=ni>>26,this.words[ri]=67108863&ni;return this.negative=1,this.strip()},Z.prototype._wordDiv=function(ei,ti){var oi=this.length-ei.length,li=this.clone(),ri=ei,ni=0|ri.words[ri.length-1],mi=this._countBits(ni);// Normalize
oi=26-mi,0!=oi&&(ri=ri.ushln(oi),li.iushln(oi),ni=0|ri.words[ri.length-1]);// Initialize quotient
var di,ui=li.length-ri.length;if('mod'!==ti){di=new Z(null),di.length=ui+1,di.words=Array(di.length);for(var si=0;si<di.length;si++)di.words[si]=0}var pi=li.clone()._ishlnsubmul(ri,1,ui);0===pi.negative&&(li=pi,di&&(di.words[ui]=1));for(var gi=ui-1;0<=gi;gi--){var fi=67108864*(0|li.words[ri.length+gi])+(0|li.words[ri.length+gi-1]);// NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
// (0x7ffffff)
for(fi=Math.min(0|fi/ni,67108863),li._ishlnsubmul(ri,fi,gi);0!==li.negative;)fi--,li.negative=0,li._ishlnsubmul(ri,1,gi),li.isZero()||(li.negative^=1);di&&(di.words[gi]=fi)}return di&&di.strip(),li.strip(),'div'!==ti&&0!=oi&&li.iushrn(oi),{div:di||null,mod:li}},Z.prototype.divmod=function(ei,ti,oi){if(v(!ei.isZero()),this.isZero())return{div:new Z(0),mod:new Z(0)};var li,ri,ni;// Very short reduction
return 0!==this.negative&&0===ei.negative?(ni=this.neg().divmod(ei,ti),'mod'!==ti&&(li=ni.div.neg()),'div'!==ti&&(ri=ni.mod.neg(),oi&&0!==ri.negative&&ri.iadd(ei)),{div:li,mod:ri}):0===this.negative&&0!==ei.negative?(ni=this.divmod(ei.neg(),ti),'mod'!==ti&&(li=ni.div.neg()),{div:li,mod:ni.mod}):0==(this.negative&ei.negative)?ei.length>this.length||0>this.cmp(ei)?{div:new Z(0),mod:this}:1===ei.length?'div'===ti?{div:this.divn(ei.words[0]),mod:null}:'mod'===ti?{div:null,mod:new Z(this.modn(ei.words[0]))}:{div:this.divn(ei.words[0]),mod:new Z(this.modn(ei.words[0]))}:this._wordDiv(ei,ti):(ni=this.neg().divmod(ei.neg(),ti),'div'!==ti&&(ri=ni.mod.neg(),oi&&0!==ri.negative&&ri.isub(ei)),{div:ni.div,mod:ri});// Both numbers are positive at this point
// Strip both numbers to approximate shift value
},Z.prototype.div=function(ei){return this.divmod(ei,'div',!1).div},Z.prototype.mod=function(ei){return this.divmod(ei,'mod',!1).mod},Z.prototype.umod=function(ei){return this.divmod(ei,'mod',!0).mod},Z.prototype.divRound=function(ei){var ti=this.divmod(ei);// Fast case - exact division
if(ti.mod.isZero())return ti.div;var oi=0===ti.div.negative?ti.mod:ti.mod.isub(ei),li=ei.ushrn(1),ri=ei.andln(1),ni=oi.cmp(li);// Round down
return 0>ni||1===ri&&0===ni?ti.div:0===ti.div.negative?ti.div.iaddn(1):ti.div.isubn(1);// Round up
},Z.prototype.modn=function(ei){v(67108863>=ei);var ti=0;for(var oi=this.length-1;0<=oi;oi--)ti=(67108864%ei*ti+(0|this.words[oi]))%ei;return ti},Z.prototype.idivn=function(ei){v(67108863>=ei);var ti=0;for(var oi=this.length-1;0<=oi;oi--){var li=(0|this.words[oi])+67108864*ti;this.words[oi]=0|li/ei,ti=li%ei}return this.strip()},Z.prototype.divn=function(ei){return this.clone().idivn(ei)},Z.prototype.egcd=function(ei){v(0===ei.negative),v(!ei.isZero());var ti=this,oi=ei.clone();ti=0===ti.negative?ti.clone():ti.umod(ei);// A * x + B * y = x
// C * x + D * y = y
for(var li=new Z(1),ri=new Z(0),ni=new Z(0),mi=new Z(1),ui=0;ti.isEven()&&oi.isEven();)ti.iushrn(1),oi.iushrn(1),++ui;for(var di=oi.clone(),si=ti.clone();!ti.isZero();){for(var pi=0,gi=1;0==(ti.words[0]&gi)&&26>pi;++pi,gi<<=1);if(0<pi)for(ti.iushrn(pi);0<pi--;)(li.isOdd()||ri.isOdd())&&(li.iadd(di),ri.isub(si)),li.iushrn(1),ri.iushrn(1);for(var fi=0,ai=1;0==(oi.words[0]&ai)&&26>fi;++fi,ai<<=1);if(0<fi)for(oi.iushrn(fi);0<fi--;)(ni.isOdd()||mi.isOdd())&&(ni.iadd(di),mi.isub(si)),ni.iushrn(1),mi.iushrn(1);0<=ti.cmp(oi)?(ti.isub(oi),li.isub(ni),ri.isub(mi)):(oi.isub(ti),ni.isub(li),mi.isub(ri))}return{a:ni,b:mi,gcd:oi.iushln(ui)}},Z.prototype._invmp=function(ei){v(0===ei.negative),v(!ei.isZero());var ti=this,oi=ei.clone();ti=0===ti.negative?ti.clone():ti.umod(ei);for(var li=new Z(1),ri=new Z(0),ni=oi.clone();0<ti.cmpn(1)&&0<oi.cmpn(1);){for(var mi=0,ui=1;0==(ti.words[0]&ui)&&26>mi;++mi,ui<<=1);if(0<mi)for(ti.iushrn(mi);0<mi--;)li.isOdd()&&li.iadd(ni),li.iushrn(1);for(var di=0,si=1;0==(oi.words[0]&si)&&26>di;++di,si<<=1);if(0<di)for(oi.iushrn(di);0<di--;)ri.isOdd()&&ri.iadd(ni),ri.iushrn(1);0<=ti.cmp(oi)?(ti.isub(oi),li.isub(ri)):(oi.isub(ti),ri.isub(li))}var pi;return pi=0===ti.cmpn(1)?li:ri,0>pi.cmpn(0)&&pi.iadd(ei),pi},Z.prototype.gcd=function(ei){if(this.isZero())return ei.abs();if(ei.isZero())return this.abs();var ti=this.clone(),oi=ei.clone();ti.negative=0,oi.negative=0;// Remove common factor of two
for(var li=0;ti.isEven()&&oi.isEven();li++)ti.iushrn(1),oi.iushrn(1);do{for(;ti.isEven();)ti.iushrn(1);for(;oi.isEven();)oi.iushrn(1);var ri=ti.cmp(oi);if(0>ri){// Swap `a` and `b` to make `a` always bigger than `b`
var ni=ti;ti=oi,oi=ni}else if(0===ri||0===oi.cmpn(1))break;ti.isub(oi)}while(!0);return oi.iushln(li)},Z.prototype.invm=function(ei){return this.egcd(ei).a.umod(ei)},Z.prototype.isEven=function(){return 0==(1&this.words[0])},Z.prototype.isOdd=function(){return 1==(1&this.words[0])},Z.prototype.andln=function(ei){return this.words[0]&ei},Z.prototype.bincn=function(ei){v('number'==typeof ei);var ti=ei%26,oi=(ei-ti)/26,li=1<<ti;// Fast case: bit is much higher than all existing words
if(this.length<=oi)return this._expand(oi+1),this.words[oi]|=li,this;// Add bit and propagate, if needed
var ri=li;for(var ni=oi;0!=ri&&ni<this.length;ni++){var mi=0|this.words[ni];mi+=ri,ri=mi>>>26,mi&=67108863,this.words[ni]=mi}return 0!=ri&&(this.words[ni]=ri,this.length++),this},Z.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},Z.prototype.cmpn=function(ei){var ti=0>ei;if(0!==this.negative&&!ti)return-1;if(0===this.negative&&ti)return 1;this.strip();var oi;if(1<this.length)oi=1;else{ti&&(ei=-ei),v(67108863>=ei,'Number is too big');var li=0|this.words[0];oi=li===ei?0:li<ei?-1:1}return 0===this.negative?oi:0|-oi},Z.prototype.cmp=function(ei){if(0!==this.negative&&0===ei.negative)return-1;if(0===this.negative&&0!==ei.negative)return 1;var ti=this.ucmp(ei);return 0===this.negative?ti:0|-ti},Z.prototype.ucmp=function(ei){// At this point both numbers have the same sign
if(this.length>ei.length)return 1;if(this.length<ei.length)return-1;var ti=0;for(var oi=this.length-1;0<=oi;oi--){var li=0|this.words[oi],ri=0|ei.words[oi];if(li!=ri){li<ri?ti=-1:li>ri&&(ti=1);break}}return ti},Z.prototype.gtn=function(ei){return 1===this.cmpn(ei)},Z.prototype.gt=function(ei){return 1===this.cmp(ei)},Z.prototype.gten=function(ei){return 0<=this.cmpn(ei)},Z.prototype.gte=function(ei){return 0<=this.cmp(ei)},Z.prototype.ltn=function(ei){return-1===this.cmpn(ei)},Z.prototype.lt=function(ei){return-1===this.cmp(ei)},Z.prototype.lten=function(ei){return 0>=this.cmpn(ei)},Z.prototype.lte=function(ei){return 0>=this.cmp(ei)},Z.prototype.eqn=function(ei){return 0===this.cmpn(ei)},Z.prototype.eq=function(ei){return 0===this.cmp(ei)},Z.red=function(ei){return new J(ei)},Z.prototype.toRed=function(ei){return v(!this.red,'Already a number in reduction context'),v(0===this.negative,'red works only with positives'),ei.convertTo(this)._forceRed(ei)},Z.prototype.fromRed=function(){return v(this.red,'fromRed works only with numbers in reduction context'),this.red.convertFrom(this)},Z.prototype._forceRed=function(ei){return this.red=ei,this},Z.prototype.forceRed=function(ei){return v(!this.red,'Already a number in reduction context'),this._forceRed(ei)},Z.prototype.redAdd=function(ei){return v(this.red,'redAdd works only with red numbers'),this.red.add(this,ei)},Z.prototype.redIAdd=function(ei){return v(this.red,'redIAdd works only with red numbers'),this.red.iadd(this,ei)},Z.prototype.redSub=function(ei){return v(this.red,'redSub works only with red numbers'),this.red.sub(this,ei)},Z.prototype.redISub=function(ei){return v(this.red,'redISub works only with red numbers'),this.red.isub(this,ei)},Z.prototype.redShl=function(ei){return v(this.red,'redShl works only with red numbers'),this.red.shl(this,ei)},Z.prototype.redMul=function(ei){return v(this.red,'redMul works only with red numbers'),this.red._verify2(this,ei),this.red.mul(this,ei)},Z.prototype.redIMul=function(ei){return v(this.red,'redMul works only with red numbers'),this.red._verify2(this,ei),this.red.imul(this,ei)},Z.prototype.redSqr=function(){return v(this.red,'redSqr works only with red numbers'),this.red._verify1(this),this.red.sqr(this)},Z.prototype.redISqr=function(){return v(this.red,'redISqr works only with red numbers'),this.red._verify1(this),this.red.isqr(this)},Z.prototype.redSqrt=function(){return v(this.red,'redSqrt works only with red numbers'),this.red._verify1(this),this.red.sqrt(this)},Z.prototype.redInvm=function(){return v(this.red,'redInvm works only with red numbers'),this.red._verify1(this),this.red.invm(this)},Z.prototype.redNeg=function(){return v(this.red,'redNeg works only with red numbers'),this.red._verify1(this),this.red.neg(this)},Z.prototype.redPow=function(ei){return v(this.red&&!ei.red,'redPow(normalNum)'),this.red._verify1(this),this.red.pow(this,ei)};// Prime numbers with efficient reduction
var V={k256:null,p224:null,p192:null,p25519:null};P.prototype._tmp=function(){var ei=new Z(null);return ei.words=Array(Math.ceil(this.n/13)),ei},P.prototype.ireduce=function(ei){// Assumes that `num` is less than `P^2`
// num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
var oi,ti=ei;do this.split(ti,this.tmp),ti=this.imulK(ti),ti=ti.iadd(this.tmp),oi=ti.bitLength();while(oi>this.n);var li=oi<this.n?-1:ti.ucmp(this.p);return 0===li?(ti.words[0]=0,ti.length=1):0<li?ti.isub(this.p):ti.strip(),ti},P.prototype.split=function(ei,ti){ei.iushrn(this.n,0,ti)},P.prototype.imulK=function(ei){return ei.imul(this.k)},S(K,P),K.prototype.split=function(ei,ti){// 256 = 9 * 26 + 22
var oi=4194303,li=Math.min(ei.length,9);for(var ri=0;ri<li;ri++)ti.words[ri]=ei.words[ri];if(ti.length=li,9>=ei.length)return ei.words[0]=0,void(ei.length=1);// Shift by 9 limbs
var ni=ei.words[9];for(ti.words[ti.length++]=ni&oi,ri=10;ri<ei.length;ri++){var mi=0|ei.words[ri];ei.words[ri-10]=(mi&oi)<<4|ni>>>22,ni=mi}ni>>>=22,ei.words[ri-10]=ni,ei.length-=0===ni&&10<ei.length?10:9},K.prototype.imulK=function(ei){ei.words[ei.length]=0,ei.words[ei.length+1]=0,ei.length+=2;// bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
var ti=0;for(var oi=0;oi<ei.length;oi++){var li=0|ei.words[oi];ti+=977*li,ei.words[oi]=67108863&ti,ti=64*li+(0|ti/67108864)}// Fast length reduction
return 0===ei.words[ei.length-1]&&(ei.length--,0===ei.words[ei.length-1]&&ei.length--),ei},S(F,P),S(H,P),S(U,P),U.prototype.imulK=function(ei){// K = 0x13
var ti=0;for(var oi=0;oi<ei.length;oi++){var li=19*(0|ei.words[oi])+ti,ri=67108863&li;li>>>=26,ei.words[oi]=ri,ti=li}return 0!=ti&&(ei.words[ei.length++]=ti),ei},Z._prime=function(ei){// Cached version of prime
if(V[ei])return V[ei];var ii;if('k256'===ei)ii=new K;else if('p224'===ei)ii=new F;else if('p192'===ei)ii=new H;else if('p25519'===ei)ii=new U;else throw new Error('Unknown prime '+ei);return V[ei]=ii,ii},J.prototype._verify1=function(ei){v(0===ei.negative,'red works only with positives'),v(ei.red,'red works only with red numbers')},J.prototype._verify2=function(ei,ti){v(0==(ei.negative|ti.negative),'red works only with positives'),v(ei.red&&ei.red===ti.red,'red works only with red numbers')},J.prototype.imod=function(ei){return this.prime?this.prime.ireduce(ei)._forceRed(this):ei.umod(this.m)._forceRed(this)},J.prototype.neg=function(ei){return ei.isZero()?ei.clone():this.m.sub(ei)._forceRed(this)},J.prototype.add=function(ei,ti){this._verify2(ei,ti);var oi=ei.add(ti);return 0<=oi.cmp(this.m)&&oi.isub(this.m),oi._forceRed(this)},J.prototype.iadd=function(ei,ti){this._verify2(ei,ti);var oi=ei.iadd(ti);return 0<=oi.cmp(this.m)&&oi.isub(this.m),oi},J.prototype.sub=function(ei,ti){this._verify2(ei,ti);var oi=ei.sub(ti);return 0>oi.cmpn(0)&&oi.iadd(this.m),oi._forceRed(this)},J.prototype.isub=function(ei,ti){this._verify2(ei,ti);var oi=ei.isub(ti);return 0>oi.cmpn(0)&&oi.iadd(this.m),oi},J.prototype.shl=function(ei,ti){return this._verify1(ei),this.imod(ei.ushln(ti))},J.prototype.imul=function(ei,ti){return this._verify2(ei,ti),this.imod(ei.imul(ti))},J.prototype.mul=function(ei,ti){return this._verify2(ei,ti),this.imod(ei.mul(ti))},J.prototype.isqr=function(ei){return this.imul(ei,ei.clone())},J.prototype.sqr=function(ei){return this.mul(ei,ei)},J.prototype.sqrt=function(ei){if(ei.isZero())return ei.clone();var ti=this.m.andln(3);// Fast case
if(v(1==ti%2),3===ti){var oi=this.m.add(new Z(1)).iushrn(2);return this.pow(ei,oi)}// Tonelli-Shanks algorithm (Totally unoptimized and slow)
//
// Find Q and S, that Q * 2 ^ S = (P - 1)
for(var li=this.m.subn(1),ri=0;!li.isZero()&&0===li.andln(1);)ri++,li.iushrn(1);v(!li.isZero());var ni=new Z(1).toRed(this),mi=ni.redNeg(),ui=this.m.subn(1).iushrn(1),di=this.m.bitLength();// Find quadratic non-residue
// NOTE: Max is such because of generalized Riemann hypothesis.
for(di=new Z(2*di*di).toRed(this);0!==this.pow(di,ui).cmp(mi);)di.redIAdd(mi);for(var si=this.pow(di,li),pi=this.pow(ei,li.addn(1).iushrn(1)),gi=this.pow(ei,li),fi=ri;0!==gi.cmp(ni);){var ai=gi;for(var wi=0;0!==ai.cmp(ni);wi++)ai=ai.redSqr();v(wi<fi);var yi=this.pow(si,new Z(1).iushln(fi-wi-1));pi=pi.redMul(yi),si=yi.redSqr(),gi=gi.redMul(si),fi=wi}return pi},J.prototype.invm=function(ei){var ti=ei._invmp(this.m);return 0===ti.negative?this.imod(ti):(ti.negative=0,this.imod(ti).redNeg())},J.prototype.pow=function(ei,ti){if(ti.isZero())return new Z(1);if(0===ti.cmpn(1))return ei.clone();var oi=4,li=Array(1<<oi);li[0]=new Z(1).toRed(this),li[1]=ei;for(var ri=2;ri<li.length;ri++)li[ri]=this.mul(li[ri-1],ei);var ni=li[0],mi=0,ui=0,di=ti.bitLength()%26;for(0==di&&(di=26),ri=ti.length-1;0<=ri;ri--){var si=ti.words[ri];for(var pi=di-1;0<=pi;pi--){var gi=1&si>>pi;if(ni!==li[0]&&(ni=this.sqr(ni)),0==gi&&0==mi){ui=0;continue}mi<<=1,mi|=gi,ui++,ui!=oi&&(0!==ri||0!==pi)||(ni=this.mul(ni,li[mi]),ui=0,mi=0)}di=26}return ni},J.prototype.convertTo=function(ei){var ti=ei.umod(this.m);return ti===ei?ti.clone():ti},J.prototype.convertFrom=function(ei){var ti=ei.clone();return ti.red=null,ti},Z.mont=function(ei){return new G(ei)},S(G,J),G.prototype.convertTo=function(ei){return this.imod(ei.ushln(this.shift))},G.prototype.convertFrom=function(ei){var ti=this.imod(ei.mul(this.rinv));return ti.red=null,ti},G.prototype.imul=function(ei,ti){if(ei.isZero()||ti.isZero())return ei.words[0]=0,ei.length=1,ei;var oi=ei.imul(ti),li=oi.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),ri=oi.isub(li).iushrn(this.shift),ni=ri;return 0<=ri.cmp(this.m)?ni=ri.isub(this.m):0>ri.cmpn(0)&&(ni=ri.iadd(this.m)),ni._forceRed(this)},G.prototype.mul=function(ei,ti){if(ei.isZero()||ti.isZero())return new Z(0)._forceRed(this);var oi=ei.mul(ti),li=oi.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),ri=oi.isub(li).iushrn(this.shift),ni=ri;return 0<=ri.cmp(this.m)?ni=ri.isub(this.m):0>ri.cmpn(0)&&(ni=ri.iadd(this.m)),ni._forceRed(this)},G.prototype.invm=function(ei){// (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
var ti=this.imod(ei._invmp(this.m).mul(this.r2));return ti._forceRed(this)}})('undefined'==typeof module||module,void 0);

},{"buffer":62}],31:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},r;module.exports=function(b){return r||(r=new Rand(null)),r.generate(b)};function Rand(a){this.rand=a}if(module.exports.Rand=Rand,Rand.prototype.generate=function(b){return this._rand(b)},'object'==('undefined'==typeof window?'undefined':_typeof(window)))Rand.prototype._rand=window.crypto&&window.crypto.getRandomValues?function(b){var c=new Uint8Array(b);return window.crypto.getRandomValues(c),c}:window.msCrypto&&window.msCrypto.getRandomValues?function(b){var c=new Uint8Array(b);return window.msCrypto.getRandomValues(c),c}:function(){throw new Error('Not implemented yet')};else// Node.js or Web worker
try{var crypto=require('crypto');Rand.prototype._rand=function(b){return crypto.randomBytes(b)}}catch(a){Rand.prototype._rand=function(c){var d=new Uint8Array(c);for(var f=0;f<d.length;f++)d[f]=this.rand.getByte();return d}}

},{"crypto":32}],32:[function(require,module,exports){
"use strict";

},{}],33:[function(require,module,exports){
(function (Buffer){
"use strict";// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/
var uint_max=Math.pow(2,32);function fixup_uint32(a){var b,c;return b=a>uint_max||0>a?(c=Math.abs(a)%uint_max,0>a?uint_max-c:c):a,b}function scrub_vec(a){for(var b=0;b<a.length;a++)a[b]=0;return!1}function Global(){this.SBOX=[],this.INV_SBOX=[],this.SUB_MIX=[[],[],[],[]],this.INV_SUB_MIX=[[],[],[],[]],this.init(),this.RCON=[0,1,2,4,8,16,32,64,128,27,54]}Global.prototype.init=function(){var a,b,c,e,f,g,h,j,k,l;for(a=function(){var m,n;for(n=[],b=m=0;256>m;b=++m)128>b?n.push(b<<1):n.push(283^b<<1);return n}(),f=0,k=0,b=l=0;256>l;b=++l)c=k^k<<1^k<<2^k<<3^k<<4,c=99^(c>>>8^255&c),this.SBOX[f]=c,this.INV_SBOX[c]=f,g=a[f],h=a[g],j=a[h],e=257*a[c]^16843008*c,this.SUB_MIX[0][f]=e<<24|e>>>8,this.SUB_MIX[1][f]=e<<16|e>>>16,this.SUB_MIX[2][f]=e<<8|e>>>24,this.SUB_MIX[3][f]=e,e=16843009*j^65537*h^257*g^16843008*f,this.INV_SUB_MIX[0][c]=e<<24|e>>>8,this.INV_SUB_MIX[1][c]=e<<16|e>>>16,this.INV_SUB_MIX[2][c]=e<<8|e>>>24,this.INV_SUB_MIX[3][c]=e,0===f?f=k=1:(f=g^a[a[a[j^g]]],k^=a[a[k]]);return!0};var G=new Global;AES.blockSize=16,AES.prototype.blockSize=AES.blockSize,AES.keySize=32,AES.prototype.keySize=AES.keySize;function bufferToArray(a){for(var b=a.length/4,c=Array(b),e=-1;++e<b;)c[e]=a.readUInt32BE(4*e);return c}function AES(a){this._key=bufferToArray(a),this._doReset()}AES.prototype._doReset=function(){var a,b,c,e,f,g;for(c=this._key,b=c.length,this._nRounds=b+6,f=4*(this._nRounds+1),this._keySchedule=[],e=0;e<f;e++)this._keySchedule[e]=e<b?c[e]:(g=this._keySchedule[e-1],0==e%b?(g=g<<8|g>>>24,g=G.SBOX[g>>>24]<<24|G.SBOX[255&g>>>16]<<16|G.SBOX[255&g>>>8]<<8|G.SBOX[255&g],g^=G.RCON[0|e/b]<<24):6<b&&4==e%b?g=G.SBOX[g>>>24]<<24|G.SBOX[255&g>>>16]<<16|G.SBOX[255&g>>>8]<<8|G.SBOX[255&g]:void 0,this._keySchedule[e-b]^g);for(this._invKeySchedule=[],a=0;a<f;a++)e=f-a,g=this._keySchedule[e-(a%4?0:4)],this._invKeySchedule[a]=4>a||4>=e?g:G.INV_SUB_MIX[0][G.SBOX[g>>>24]]^G.INV_SUB_MIX[1][G.SBOX[255&g>>>16]]^G.INV_SUB_MIX[2][G.SBOX[255&g>>>8]]^G.INV_SUB_MIX[3][G.SBOX[255&g]];return!0},AES.prototype.encryptBlock=function(a){a=bufferToArray(new Buffer(a));var b=this._doCryptBlock(a,this._keySchedule,G.SUB_MIX,G.SBOX),c=new Buffer(16);return c.writeUInt32BE(b[0],0),c.writeUInt32BE(b[1],4),c.writeUInt32BE(b[2],8),c.writeUInt32BE(b[3],12),c},AES.prototype.decryptBlock=function(a){a=bufferToArray(new Buffer(a));var b=[a[3],a[1]];a[1]=b[0],a[3]=b[1];var c=this._doCryptBlock(a,this._invKeySchedule,G.INV_SUB_MIX,G.INV_SBOX),e=new Buffer(16);return e.writeUInt32BE(c[0],0),e.writeUInt32BE(c[3],4),e.writeUInt32BE(c[2],8),e.writeUInt32BE(c[1],12),e},AES.prototype.scrub=function(){scrub_vec(this._keySchedule),scrub_vec(this._invKeySchedule),scrub_vec(this._key)},AES.prototype._doCryptBlock=function(a,b,c,e){var f,g,h,j,k,l,m,n,o;g=a[0]^b[0],h=a[1]^b[1],j=a[2]^b[2],k=a[3]^b[3],f=4;for(var p=1;p<this._nRounds;p++)l=c[0][g>>>24]^c[1][255&h>>>16]^c[2][255&j>>>8]^c[3][255&k]^b[f++],m=c[0][h>>>24]^c[1][255&j>>>16]^c[2][255&k>>>8]^c[3][255&g]^b[f++],n=c[0][j>>>24]^c[1][255&k>>>16]^c[2][255&g>>>8]^c[3][255&h]^b[f++],o=c[0][k>>>24]^c[1][255&g>>>16]^c[2][255&h>>>8]^c[3][255&j]^b[f++],g=l,h=m,j=n,k=o;return l=(e[g>>>24]<<24|e[255&h>>>16]<<16|e[255&j>>>8]<<8|e[255&k])^b[f++],m=(e[h>>>24]<<24|e[255&j>>>16]<<16|e[255&k>>>8]<<8|e[255&g])^b[f++],n=(e[j>>>24]<<24|e[255&k>>>16]<<16|e[255&g>>>8]<<8|e[255&h])^b[f++],o=(e[k>>>24]<<24|e[255&g>>>16]<<16|e[255&h>>>8]<<8|e[255&j])^b[f++],[fixup_uint32(l),fixup_uint32(m),fixup_uint32(n),fixup_uint32(o)]},exports.AES=AES;

}).call(this,require("buffer").Buffer)
},{"buffer":62}],34:[function(require,module,exports){
(function (Buffer){
'use strict';var aes=require('./aes'),Transform=require('cipher-base'),inherits=require('inherits'),GHASH=require('./ghash'),xor=require('buffer-xor');inherits(StreamCipher,Transform),module.exports=StreamCipher;function StreamCipher(c,d,e,f){if(!(this instanceof StreamCipher))return new StreamCipher(c,d,e);Transform.call(this),this._finID=Buffer.concat([e,new Buffer([0,0,0,1])]),e=Buffer.concat([e,new Buffer([0,0,0,2])]),this._cipher=new aes.AES(d),this._prev=new Buffer(e.length),this._cache=new Buffer(''),this._secCache=new Buffer(''),this._decrypt=f,this._alen=0,this._len=0,e.copy(this._prev),this._mode=c;var g=new Buffer(4);g.fill(0),this._ghash=new GHASH(this._cipher.encryptBlock(g)),this._authTag=null,this._called=!1}StreamCipher.prototype._update=function(c){if(!this._called&&this._alen){var d=16-this._alen%16;16>d&&(d=new Buffer(d),d.fill(0),this._ghash.update(d))}this._called=!0;var e=this._mode.encrypt(this,c);return this._decrypt?this._ghash.update(c):this._ghash.update(e),this._len+=c.length,e},StreamCipher.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error('Unsupported state or unable to authenticate data');var c=xor(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(!this._decrypt)this._authTag=c;else if(xorTest(c,this._authTag))throw new Error('Unsupported state or unable to authenticate data');this._cipher.scrub()},StreamCipher.prototype.getAuthTag=function(){if(!this._decrypt&&Buffer.isBuffer(this._authTag))return this._authTag;throw new Error('Attempting to get auth tag in unsupported state')},StreamCipher.prototype.setAuthTag=function(d){if(this._decrypt)this._authTag=d;else throw new Error('Attempting to set auth tag in unsupported state')},StreamCipher.prototype.setAAD=function(d){if(!this._called)this._ghash.update(d),this._alen+=d.length;else throw new Error('Attempting to set AAD in unsupported state')};function xorTest(c,d){var e=0;c.length!==d.length&&e++;for(var f=Math.min(c.length,d.length),g=-1;++g<f;)e+=c[g]^d[g];return e}

}).call(this,require("buffer").Buffer)
},{"./aes":33,"./ghash":38,"buffer":62,"buffer-xor":61,"cipher-base":63,"inherits":160}],35:[function(require,module,exports){
'use strict';var ciphers=require('./encrypter');exports.createCipher=exports.Cipher=ciphers.createCipher,exports.createCipheriv=exports.Cipheriv=ciphers.createCipheriv;var deciphers=require('./decrypter');exports.createDecipher=exports.Decipher=deciphers.createDecipher,exports.createDecipheriv=exports.Decipheriv=deciphers.createDecipheriv;var modes=require('./modes');function getCiphers(){return Object.keys(modes)}exports.listCiphers=exports.getCiphers=getCiphers;

},{"./decrypter":36,"./encrypter":37,"./modes":39}],36:[function(require,module,exports){
(function (Buffer){
'use strict';var aes=require('./aes'),Transform=require('cipher-base'),inherits=require('inherits'),modes=require('./modes'),StreamCipher=require('./streamCipher'),AuthCipher=require('./authCipher'),ebtk=require('evp_bytestokey');inherits(Decipher,Transform);function Decipher(a,b,c){return this instanceof Decipher?void(Transform.call(this),this._cache=new Splitter,this._last=void 0,this._cipher=new aes.AES(b),this._prev=new Buffer(c.length),c.copy(this._prev),this._mode=a,this._autopadding=!0):new Decipher(a,b,c)}Decipher.prototype._update=function(a){this._cache.add(a);for(var b,c,d=[];b=this._cache.get(this._autopadding);)c=this._mode.decrypt(this,b),d.push(c);return Buffer.concat(d)},Decipher.prototype._final=function(){var a=this._cache.flush();if(this._autopadding)return unpad(this._mode.decrypt(this,a));if(a)throw new Error('data not multiple of block length')},Decipher.prototype.setAutoPadding=function(a){return this._autopadding=!!a,this};function Splitter(){return this instanceof Splitter?void(this.cache=new Buffer('')):new Splitter}Splitter.prototype.add=function(a){this.cache=Buffer.concat([this.cache,a])},Splitter.prototype.get=function(a){var b;if(a){if(16<this.cache.length)return b=this.cache.slice(0,16),this.cache=this.cache.slice(16),b;}else if(16<=this.cache.length)return b=this.cache.slice(0,16),this.cache=this.cache.slice(16),b;return null},Splitter.prototype.flush=function(){if(this.cache.length)return this.cache};function unpad(a){for(var b=a[15],c=-1;++c<b;)if(a[c+(16-b)]!==b)throw new Error('unable to decrypt data');return 16===b?void 0:a.slice(0,16-b)}var modelist={ECB:require('./modes/ecb'),CBC:require('./modes/cbc'),CFB:require('./modes/cfb'),CFB8:require('./modes/cfb8'),CFB1:require('./modes/cfb1'),OFB:require('./modes/ofb'),CTR:require('./modes/ctr'),GCM:require('./modes/ctr')};function createDecipheriv(a,b,c){var d=modes[a.toLowerCase()];if(!d)throw new TypeError('invalid suite type');if('string'==typeof c&&(c=new Buffer(c)),'string'==typeof b&&(b=new Buffer(b)),b.length!==d.key/8)throw new TypeError('invalid key length '+b.length);if(c.length!==d.iv)throw new TypeError('invalid iv length '+c.length);return'stream'===d.type?new StreamCipher(modelist[d.mode],b,c,!0):'auth'===d.type?new AuthCipher(modelist[d.mode],b,c,!0):new Decipher(modelist[d.mode],b,c)}function createDecipher(a,b){var c=modes[a.toLowerCase()];if(!c)throw new TypeError('invalid suite type');var d=ebtk(b,!1,c.key,c.iv);return createDecipheriv(a,d.key,d.iv)}exports.createDecipher=createDecipher,exports.createDecipheriv=createDecipheriv;

}).call(this,require("buffer").Buffer)
},{"./aes":33,"./authCipher":34,"./modes":39,"./modes/cbc":40,"./modes/cfb":41,"./modes/cfb1":42,"./modes/cfb8":43,"./modes/ctr":44,"./modes/ecb":45,"./modes/ofb":46,"./streamCipher":47,"buffer":62,"cipher-base":63,"evp_bytestokey":149,"inherits":160}],37:[function(require,module,exports){
(function (Buffer){
'use strict';var aes=require('./aes'),Transform=require('cipher-base'),inherits=require('inherits'),modes=require('./modes'),ebtk=require('evp_bytestokey'),StreamCipher=require('./streamCipher'),AuthCipher=require('./authCipher');inherits(Cipher,Transform);function Cipher(a,b,c){return this instanceof Cipher?void(Transform.call(this),this._cache=new Splitter,this._cipher=new aes.AES(b),this._prev=new Buffer(c.length),c.copy(this._prev),this._mode=a,this._autopadding=!0):new Cipher(a,b,c)}Cipher.prototype._update=function(a){this._cache.add(a);for(var b,c,d=[];b=this._cache.get();)c=this._mode.encrypt(this,b),d.push(c);return Buffer.concat(d)},Cipher.prototype._final=function(){var a=this._cache.flush();if(this._autopadding)return a=this._mode.encrypt(this,a),this._cipher.scrub(),a;if('10101010101010101010101010101010'!==a.toString('hex'))throw this._cipher.scrub(),new Error('data not multiple of block length')},Cipher.prototype.setAutoPadding=function(a){return this._autopadding=!!a,this};function Splitter(){return this instanceof Splitter?void(this.cache=new Buffer('')):new Splitter}Splitter.prototype.add=function(a){this.cache=Buffer.concat([this.cache,a])},Splitter.prototype.get=function(){if(15<this.cache.length){var a=this.cache.slice(0,16);return this.cache=this.cache.slice(16),a}return null},Splitter.prototype.flush=function(){for(var a=16-this.cache.length,b=new Buffer(a),c=-1;++c<a;)b.writeUInt8(a,c);var d=Buffer.concat([this.cache,b]);return d};var modelist={ECB:require('./modes/ecb'),CBC:require('./modes/cbc'),CFB:require('./modes/cfb'),CFB8:require('./modes/cfb8'),CFB1:require('./modes/cfb1'),OFB:require('./modes/ofb'),CTR:require('./modes/ctr'),GCM:require('./modes/ctr')};function createCipheriv(a,b,c){var d=modes[a.toLowerCase()];if(!d)throw new TypeError('invalid suite type');if('string'==typeof c&&(c=new Buffer(c)),'string'==typeof b&&(b=new Buffer(b)),b.length!==d.key/8)throw new TypeError('invalid key length '+b.length);if(c.length!==d.iv)throw new TypeError('invalid iv length '+c.length);return'stream'===d.type?new StreamCipher(modelist[d.mode],b,c):'auth'===d.type?new AuthCipher(modelist[d.mode],b,c):new Cipher(modelist[d.mode],b,c)}function createCipher(a,b){var c=modes[a.toLowerCase()];if(!c)throw new TypeError('invalid suite type');var d=ebtk(b,!1,c.key,c.iv);return createCipheriv(a,d.key,d.iv)}exports.createCipheriv=createCipheriv,exports.createCipher=createCipher;

}).call(this,require("buffer").Buffer)
},{"./aes":33,"./authCipher":34,"./modes":39,"./modes/cbc":40,"./modes/cfb":41,"./modes/cfb1":42,"./modes/cfb8":43,"./modes/ctr":44,"./modes/ecb":45,"./modes/ofb":46,"./streamCipher":47,"buffer":62,"cipher-base":63,"evp_bytestokey":149,"inherits":160}],38:[function(require,module,exports){
(function (Buffer){
'use strict';var zeros=new Buffer(16);zeros.fill(0),module.exports=GHASH;function GHASH(c){this.h=c,this.state=new Buffer(16),this.state.fill(0),this.cache=new Buffer('')}// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash=function(c){for(var d=-1;++d<c.length;)this.state[d]^=c[d];this._multiply()},GHASH.prototype._multiply=function(){for(var e,f,g,c=toArray(this.h),d=[0,0,0,0],h=-1;128>++h;){// V_i+1 = V_i >> 1
for(f=0!=(this.state[~~(h/8)]&1<<7-h%8),f&&(d=xor(d,c)),g=0!=(1&c[3]),e=3;0<e;e--)c[e]=c[e]>>>1|(1&c[e-1])<<31;c[0]=c[0]>>>1,g&&(c[0]=c[0]^-520093696)}this.state=fromArray(d)},GHASH.prototype.update=function(c){this.cache=Buffer.concat([this.cache,c]);for(var d;16<=this.cache.length;)d=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(d)},GHASH.prototype.final=function(c,d){return this.cache.length&&this.ghash(Buffer.concat([this.cache,zeros],16)),this.ghash(fromArray([0,c,0,d])),this.state};function toArray(c){return[c.readUInt32BE(0),c.readUInt32BE(4),c.readUInt32BE(8),c.readUInt32BE(12)]}function fromArray(c){c=c.map(fixup_uint32);var d=new Buffer(16);return d.writeUInt32BE(c[0],0),d.writeUInt32BE(c[1],4),d.writeUInt32BE(c[2],8),d.writeUInt32BE(c[3],12),d}var uint_max=Math.pow(2,32);function fixup_uint32(c){var d,e;return d=c>uint_max||0>c?(e=Math.abs(c)%uint_max,0>c?uint_max-e:e):c,d}function xor(c,d){return[c[0]^d[0],c[1]^d[1],c[2]^d[2],c[3]^d[3]]}

}).call(this,require("buffer").Buffer)
},{"buffer":62}],39:[function(require,module,exports){
'use strict';exports['aes-128-ecb']={cipher:'AES',key:128,iv:0,mode:'ECB',type:'block'},exports['aes-192-ecb']={cipher:'AES',key:192,iv:0,mode:'ECB',type:'block'},exports['aes-256-ecb']={cipher:'AES',key:256,iv:0,mode:'ECB',type:'block'},exports['aes-128-cbc']={cipher:'AES',key:128,iv:16,mode:'CBC',type:'block'},exports['aes-192-cbc']={cipher:'AES',key:192,iv:16,mode:'CBC',type:'block'},exports['aes-256-cbc']={cipher:'AES',key:256,iv:16,mode:'CBC',type:'block'},exports.aes128=exports['aes-128-cbc'],exports.aes192=exports['aes-192-cbc'],exports.aes256=exports['aes-256-cbc'],exports['aes-128-cfb']={cipher:'AES',key:128,iv:16,mode:'CFB',type:'stream'},exports['aes-192-cfb']={cipher:'AES',key:192,iv:16,mode:'CFB',type:'stream'},exports['aes-256-cfb']={cipher:'AES',key:256,iv:16,mode:'CFB',type:'stream'},exports['aes-128-cfb8']={cipher:'AES',key:128,iv:16,mode:'CFB8',type:'stream'},exports['aes-192-cfb8']={cipher:'AES',key:192,iv:16,mode:'CFB8',type:'stream'},exports['aes-256-cfb8']={cipher:'AES',key:256,iv:16,mode:'CFB8',type:'stream'},exports['aes-128-cfb1']={cipher:'AES',key:128,iv:16,mode:'CFB1',type:'stream'},exports['aes-192-cfb1']={cipher:'AES',key:192,iv:16,mode:'CFB1',type:'stream'},exports['aes-256-cfb1']={cipher:'AES',key:256,iv:16,mode:'CFB1',type:'stream'},exports['aes-128-ofb']={cipher:'AES',key:128,iv:16,mode:'OFB',type:'stream'},exports['aes-192-ofb']={cipher:'AES',key:192,iv:16,mode:'OFB',type:'stream'},exports['aes-256-ofb']={cipher:'AES',key:256,iv:16,mode:'OFB',type:'stream'},exports['aes-128-ctr']={cipher:'AES',key:128,iv:16,mode:'CTR',type:'stream'},exports['aes-192-ctr']={cipher:'AES',key:192,iv:16,mode:'CTR',type:'stream'},exports['aes-256-ctr']={cipher:'AES',key:256,iv:16,mode:'CTR',type:'stream'},exports['aes-128-gcm']={cipher:'AES',key:128,iv:12,mode:'GCM',type:'auth'},exports['aes-192-gcm']={cipher:'AES',key:192,iv:12,mode:'GCM',type:'auth'},exports['aes-256-gcm']={cipher:'AES',key:256,iv:12,mode:'GCM',type:'auth'};

},{}],40:[function(require,module,exports){
'use strict';var xor=require('buffer-xor');exports.encrypt=function(a,b){var c=xor(b,a._prev);return a._prev=a._cipher.encryptBlock(c),a._prev},exports.decrypt=function(a,b){var c=a._prev;a._prev=b;var d=a._cipher.decryptBlock(b);return xor(d,c)};

},{"buffer-xor":61}],41:[function(require,module,exports){
(function (Buffer){
'use strict';var xor=require('buffer-xor');exports.encrypt=function(a,b,c){for(var e,d=new Buffer('');b.length;)if(0===a._cache.length&&(a._cache=a._cipher.encryptBlock(a._prev),a._prev=new Buffer('')),a._cache.length<=b.length)e=a._cache.length,d=Buffer.concat([d,encryptStart(a,b.slice(0,e),c)]),b=b.slice(e);else{d=Buffer.concat([d,encryptStart(a,b,c)]);break}return d};function encryptStart(a,b,c){var d=b.length,e=xor(b,a._cache);return a._cache=a._cache.slice(d),a._prev=Buffer.concat([a._prev,c?b:e]),e}

}).call(this,require("buffer").Buffer)
},{"buffer":62,"buffer-xor":61}],42:[function(require,module,exports){
(function (Buffer){
"use strict";function encryptByte(a,b,c){for(var d,g,h,e=-1,f=0;8>++e;)d=a._cipher.encryptBlock(a._prev),g=b&1<<7-e?128:0,h=d[0]^g,f+=(128&h)>>e%8,a._prev=shiftIn(a._prev,c?g:h);return f}exports.encrypt=function(a,b,c){for(var d=b.length,e=new Buffer(d),f=-1;++f<d;)e[f]=encryptByte(a,b[f],c);return e};function shiftIn(a,b){var c=a.length,d=-1,e=new Buffer(a.length);for(a=Buffer.concat([a,new Buffer([b])]);++d<c;)e[d]=a[d]<<1|a[d+1]>>7;return e}

}).call(this,require("buffer").Buffer)
},{"buffer":62}],43:[function(require,module,exports){
(function (Buffer){
"use strict";function encryptByte(a,b,c){var d=a._cipher.encryptBlock(a._prev),e=d[0]^b;return a._prev=Buffer.concat([a._prev.slice(1),new Buffer([c?b:e])]),e}exports.encrypt=function(a,b,c){for(var d=b.length,e=new Buffer(d),f=-1;++f<d;)e[f]=encryptByte(a,b[f],c);return e};

}).call(this,require("buffer").Buffer)
},{"buffer":62}],44:[function(require,module,exports){
(function (Buffer){
'use strict';var xor=require('buffer-xor');function incr32(a){for(var c,b=a.length;b--;)if(c=a.readUInt8(b),255===c)a.writeUInt8(0,b);else{c++,a.writeUInt8(c,b);break}}function getBlock(a){var b=a._cipher.encryptBlock(a._prev);return incr32(a._prev),b}exports.encrypt=function(a,b){for(;a._cache.length<b.length;)a._cache=Buffer.concat([a._cache,getBlock(a)]);var c=a._cache.slice(0,b.length);return a._cache=a._cache.slice(b.length),xor(b,c)};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"buffer-xor":61}],45:[function(require,module,exports){
"use strict";exports.encrypt=function(a,b){return a._cipher.encryptBlock(b)},exports.decrypt=function(a,b){return a._cipher.decryptBlock(b)};

},{}],46:[function(require,module,exports){
(function (Buffer){
'use strict';var xor=require('buffer-xor');function getBlock(a){return a._prev=a._cipher.encryptBlock(a._prev),a._prev}exports.encrypt=function(a,b){for(;a._cache.length<b.length;)a._cache=Buffer.concat([a._cache,getBlock(a)]);var c=a._cache.slice(0,b.length);return a._cache=a._cache.slice(b.length),xor(b,c)};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"buffer-xor":61}],47:[function(require,module,exports){
(function (Buffer){
'use strict';var aes=require('./aes'),Transform=require('cipher-base'),inherits=require('inherits');inherits(StreamCipher,Transform),module.exports=StreamCipher;function StreamCipher(a,b,c,d){return this instanceof StreamCipher?void(Transform.call(this),this._cipher=new aes.AES(b),this._prev=new Buffer(c.length),this._cache=new Buffer(''),this._secCache=new Buffer(''),this._decrypt=d,c.copy(this._prev),this._mode=a):new StreamCipher(a,b,c)}StreamCipher.prototype._update=function(a){return this._mode.encrypt(this,a,this._decrypt)},StreamCipher.prototype._final=function(){this._cipher.scrub()};

}).call(this,require("buffer").Buffer)
},{"./aes":33,"buffer":62,"cipher-base":63,"inherits":160}],48:[function(require,module,exports){
'use strict';var ebtk=require('evp_bytestokey'),aes=require('browserify-aes/browser'),DES=require('browserify-des'),desModes=require('browserify-des/modes'),aesModes=require('browserify-aes/modes');function createCipher(a,b){var c,d;if(a=a.toLowerCase(),aesModes[a])c=aesModes[a].key,d=aesModes[a].iv;else if(desModes[a])c=8*desModes[a].key,d=desModes[a].iv;else throw new TypeError('invalid suite type');var e=ebtk(b,!1,c,d);return createCipheriv(a,e.key,e.iv)}function createDecipher(a,b){var c,d;if(a=a.toLowerCase(),aesModes[a])c=aesModes[a].key,d=aesModes[a].iv;else if(desModes[a])c=8*desModes[a].key,d=desModes[a].iv;else throw new TypeError('invalid suite type');var e=ebtk(b,!1,c,d);return createDecipheriv(a,e.key,e.iv)}function createCipheriv(a,b,c){if(a=a.toLowerCase(),aesModes[a])return aes.createCipheriv(a,b,c);if(desModes[a])return new DES({key:b,iv:c,mode:a});throw new TypeError('invalid suite type')}function createDecipheriv(a,b,c){if(a=a.toLowerCase(),aesModes[a])return aes.createDecipheriv(a,b,c);if(desModes[a])return new DES({key:b,iv:c,mode:a,decrypt:!0});throw new TypeError('invalid suite type')}exports.createCipher=exports.Cipher=createCipher,exports.createCipheriv=exports.Cipheriv=createCipheriv,exports.createDecipher=exports.Decipher=createDecipher,exports.createDecipheriv=exports.Decipheriv=createDecipheriv;function getCiphers(){return Object.keys(desModes).concat(aes.getCiphers())}exports.listCiphers=exports.getCiphers=getCiphers;

},{"browserify-aes/browser":35,"browserify-aes/modes":39,"browserify-des":49,"browserify-des/modes":50,"evp_bytestokey":149}],49:[function(require,module,exports){
(function (Buffer){
'use strict';var CipherBase=require('cipher-base'),des=require('des.js'),inherits=require('inherits'),modes={'des-ede3-cbc':des.CBC.instantiate(des.EDE),'des-ede3':des.EDE,'des-ede-cbc':des.CBC.instantiate(des.EDE),'des-ede':des.EDE,'des-cbc':des.CBC.instantiate(des.DES),'des-ecb':des.DES};modes.des=modes['des-cbc'],modes.des3=modes['des-ede3-cbc'],module.exports=DES,inherits(DES,CipherBase);function DES(a){CipherBase.call(this);var b=a.mode.toLowerCase(),c=modes[b],d;d=a.decrypt?'decrypt':'encrypt';var e=a.key;('des-ede'===b||'des-ede-cbc'===b)&&(e=Buffer.concat([e,e.slice(0,8)]));var f=a.iv;this._des=c.create({key:e,iv:f,type:d})}DES.prototype._update=function(a){return new Buffer(this._des.update(a))},DES.prototype._final=function(){return new Buffer(this._des.final())};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"cipher-base":63,"des.js":75,"inherits":160}],50:[function(require,module,exports){
'use strict';exports['des-ecb']={key:8,iv:0},exports['des-cbc']=exports.des={key:8,iv:8},exports['des-ede3-cbc']=exports.des3={key:24,iv:8},exports['des-ede3']={key:24,iv:0},exports['des-ede-cbc']={key:16,iv:8},exports['des-ede']={key:16,iv:0};

},{}],51:[function(require,module,exports){
(function (Buffer){
'use strict';var bn=require('bn.js'),randomBytes=require('randombytes');module.exports=crt;function blind(a){var b=getr(a),c=b.toRed(bn.mont(a.modulus)).redPow(new bn(a.publicExponent)).fromRed();return{blinder:c,unblinder:b.invm(a.modulus)}}function crt(a,b){var c=blind(b),d=b.modulus.byteLength();bn.mont(b.modulus);var e=new bn(a).mul(c.blinder).umod(b.modulus),f=e.toRed(bn.mont(b.prime1)),g=e.toRed(bn.mont(b.prime2)),i=b.coefficient,j=b.prime1,k=b.prime2,l=f.redPow(b.exponent1),m=g.redPow(b.exponent2);l=l.fromRed(),m=m.fromRed();var n=l.isub(m).imul(i).umod(j);return n.imul(k),m.iadd(n),new Buffer(m.imul(c.unblinder).umod(b.modulus).toArray(!1,d))}crt.getr=getr;function getr(a){for(var b=a.modulus.byteLength(),c=new bn(randomBytes(b));0<=c.cmp(a.modulus)||!c.umod(a.prime1)||!c.umod(a.prime2);)c=new bn(randomBytes(b));return c}

}).call(this,require("buffer").Buffer)
},{"bn.js":30,"buffer":62,"randombytes":221}],52:[function(require,module,exports){
(function (Buffer){
'use strict';var Sha3=require('js-sha3'),hashLengths=[224,256,384,512],hash=function hash(a){if(a!==void 0&&-1==hashLengths.indexOf(a))throw new Error('Unsupported hash length');this.content=[],this.bitcount=a?'keccak_'+a:'keccak_512'};hash.prototype.update=function(a){if(Buffer.isBuffer(a))this.content.push(a);else if('string'==typeof a)this.content.push(new Buffer(a));else throw new Error('Unsupported argument to update');return this},hash.prototype.digest=function(a){var b=Sha3[this.bitcount](Buffer.concat(this.content));if('hex'===a)return b;if('binary'===a||void 0===a)return new Buffer(b,'hex').toString('binary');throw new Error('Unsupported encoding for digest: '+a)},module.exports={SHA3Hash:hash};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"js-sha3":163}],53:[function(require,module,exports){
(function (Buffer){
'use strict';exports['RSA-SHA224']=exports.sha224WithRSAEncryption={sign:'rsa',hash:'sha224',id:new Buffer('302d300d06096086480165030402040500041c','hex')},exports['RSA-SHA256']=exports.sha256WithRSAEncryption={sign:'rsa',hash:'sha256',id:new Buffer('3031300d060960864801650304020105000420','hex')},exports['RSA-SHA384']=exports.sha384WithRSAEncryption={sign:'rsa',hash:'sha384',id:new Buffer('3041300d060960864801650304020205000430','hex')},exports['RSA-SHA512']=exports.sha512WithRSAEncryption={sign:'rsa',hash:'sha512',id:new Buffer('3051300d060960864801650304020305000440','hex')},exports['RSA-SHA1']={sign:'rsa',hash:'sha1',id:new Buffer('3021300906052b0e03021a05000414','hex')},exports['ecdsa-with-SHA1']={sign:'ecdsa',hash:'sha1',id:new Buffer('','hex')},exports.DSA=exports['DSA-SHA1']=exports['DSA-SHA']={sign:'dsa',hash:'sha1',id:new Buffer('','hex')},exports['DSA-SHA224']=exports['DSA-WITH-SHA224']={sign:'dsa',hash:'sha224',id:new Buffer('','hex')},exports['DSA-SHA256']=exports['DSA-WITH-SHA256']={sign:'dsa',hash:'sha256',id:new Buffer('','hex')},exports['DSA-SHA384']=exports['DSA-WITH-SHA384']={sign:'dsa',hash:'sha384',id:new Buffer('','hex')},exports['DSA-SHA512']=exports['DSA-WITH-SHA512']={sign:'dsa',hash:'sha512',id:new Buffer('','hex')},exports['DSA-RIPEMD160']={sign:'dsa',hash:'rmd160',id:new Buffer('','hex')},exports['RSA-RIPEMD160']=exports.ripemd160WithRSA={sign:'rsa',hash:'rmd160',id:new Buffer('3021300906052b2403020105000414','hex')},exports['RSA-MD5']=exports.md5WithRSAEncryption={sign:'rsa',hash:'md5',id:new Buffer('3020300c06082a864886f70d020505000410','hex')};

}).call(this,require("buffer").Buffer)
},{"buffer":62}],54:[function(require,module,exports){
(function (Buffer){
'use strict';var _algos=require('./algos'),createHash=require('create-hash'),inherits=require('inherits'),sign=require('./sign'),stream=require('stream'),verify=require('./verify'),algos={};Object.keys(_algos).forEach(function(a){algos[a]=algos[a.toLowerCase()]=_algos[a]});function Sign(a){stream.Writable.call(this);var b=algos[a];if(!b)throw new Error('Unknown message digest');this._hashType=b.hash,this._hash=createHash(b.hash),this._tag=b.id,this._signType=b.sign}inherits(Sign,stream.Writable),Sign.prototype._write=function(b,c,d){this._hash.update(b),d()},Sign.prototype.update=function(b,c){return'string'==typeof b&&(b=new Buffer(b,c)),this._hash.update(b),this},Sign.prototype.sign=function(b,c){this.end();var d=this._hash.digest(),e=sign(Buffer.concat([this._tag,d]),b,this._hashType,this._signType);return c?e.toString(c):e};function Verify(a){stream.Writable.call(this);var b=algos[a];if(!b)throw new Error('Unknown message digest');this._hash=createHash(b.hash),this._tag=b.id,this._signType=b.sign}inherits(Verify,stream.Writable),Verify.prototype._write=function(b,c,d){this._hash.update(b),d()},Verify.prototype.update=function(b,c){return'string'==typeof b&&(b=new Buffer(b,c)),this._hash.update(b),this},Verify.prototype.verify=function(b,c,d){'string'==typeof c&&(c=new Buffer(c,d)),this.end();var e=this._hash.digest();return verify(c,Buffer.concat([this._tag,e]),b,this._signType)};function createSign(a){return new Sign(a)}function createVerify(a){return new Verify(a)}module.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify};

}).call(this,require("buffer").Buffer)
},{"./algos":53,"./sign":56,"./verify":57,"buffer":62,"create-hash":68,"inherits":160,"stream":252}],55:[function(require,module,exports){
'use strict';exports['1.3.132.0.10']='secp256k1',exports['1.3.132.0.33']='p224',exports['1.2.840.10045.3.1.1']='p192',exports['1.2.840.10045.3.1.7']='p256',exports['1.3.132.0.34']='p384',exports['1.3.132.0.35']='p521';

},{}],56:[function(require,module,exports){
(function (Buffer){
'use strict';// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac=require('create-hmac'),crt=require('browserify-rsa'),curves=require('./curves'),elliptic=require('elliptic'),parseKeys=require('parse-asn1'),BN=require('bn.js'),EC=elliptic.ec;function sign(a,b,c,d){var e=parseKeys(b);if(e.curve){if('ecdsa'!==d)throw new Error('wrong private key type');return ecSign(a,e)}if('dsa'===e.type){if('dsa'!==d)throw new Error('wrong private key type');return dsaSign(a,e,c)}if('rsa'!==d)throw new Error('wrong private key type');for(var f=e.modulus.byteLength(),h=[0,1];a.length+h.length+1<f;)h.push(255);h.push(0);for(var j=-1;++j<a.length;)h.push(a[j]);var l=crt(h,e);return l}function ecSign(a,b){var c=curves[b.curve.join('.')];if(!c)throw new Error('unknown curve '+b.curve.join('.'));var d=new EC(c),e=d.genKeyPair();e._importPrivate(b.privateKey);var f=e.sign(a);return new Buffer(f.toDER())}function dsaSign(a,b,c){for(var l,d=b.params.priv_key,e=b.params.p,f=b.params.q,h=b.params.g,j=new BN(0),m=bits2int(a,f).mod(f),n=!1,o=getKey(d,f,a,c);!1==n;)l=makeKey(f,o,c),j=makeR(h,l,e,f),n=l.invm(f).imul(m.add(d.mul(j))).mod(f),n.cmpn(0)||(n=!1,j=new BN(0));return toDER(j,n)}function toDER(a,b){a=a.toArray(),b=b.toArray(),128&a[0]&&(a=[0].concat(a)),128&b[0]&&(b=[0].concat(b));var c=a.length+b.length+4,d=[48,c,2,a.length];return d=d.concat(a,[2,b.length],b),new Buffer(d)}function getKey(a,b,c,d){if(a=new Buffer(a.toArray()),a.length<b.byteLength()){var e=new Buffer(b.byteLength()-a.length);e.fill(0),a=Buffer.concat([e,a])}var f=c.length,h=bits2octets(c,b),j=new Buffer(f);j.fill(1);var l=new Buffer(f);return l.fill(0),l=createHmac(d,l).update(j).update(new Buffer([0])).update(a).update(h).digest(),j=createHmac(d,l).update(j).digest(),l=createHmac(d,l).update(j).update(new Buffer([1])).update(a).update(h).digest(),j=createHmac(d,l).update(j).digest(),{k:l,v:j}}function bits2int(a,b){var c=new BN(a),d=(a.length<<3)-b.bitLength();return 0<d&&c.ishrn(d),c}function bits2octets(a,b){a=bits2int(a,b),a=a.mod(b);var c=new Buffer(a.toArray());if(c.length<b.byteLength()){var d=new Buffer(b.byteLength()-c.length);d.fill(0),c=Buffer.concat([d,c])}return c}function makeKey(a,b,c){var d,e;do{for(d=new Buffer('');8*d.length<a.bitLength();)b.v=createHmac(c,b.k).update(b.v).digest(),d=Buffer.concat([d,b.v]);e=bits2int(d,a),b.k=createHmac(c,b.k).update(b.v).update(new Buffer([0])).digest(),b.v=createHmac(c,b.k).update(b.v).digest()}while(-1!==e.cmp(a));return e}function makeR(a,b,c,d){return a.toRed(BN.mont(c)).redPow(b).fromRed().mod(d)}module.exports=sign,module.exports.getKey=getKey,module.exports.makeKey=makeKey;

}).call(this,require("buffer").Buffer)
},{"./curves":55,"bn.js":30,"browserify-rsa":51,"buffer":62,"create-hmac":71,"elliptic":85,"parse-asn1":209}],57:[function(require,module,exports){
(function (Buffer){
'use strict';// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var curves=require('./curves'),elliptic=require('elliptic'),parseKeys=require('parse-asn1'),BN=require('bn.js'),EC=elliptic.ec;function verify(a,c,d,e){var f=parseKeys(d);if('ec'===f.type){if('ecdsa'!==e)throw new Error('wrong public key type');return ecVerify(a,c,f)}if('dsa'===f.type){if('dsa'!==e)throw new Error('wrong public key type');return dsaVerify(a,c,f)}if('rsa'!==e)throw new Error('wrong public key type');for(var h=f.modulus.byteLength(),j=[1],k=0;c.length+j.length+2<h;)j.push(255),k++;j.push(0);for(var l=-1;++l<c.length;)j.push(c[l]);j=new Buffer(j);var m=BN.mont(f.modulus);a=new BN(a).toRed(m),a=a.redPow(new BN(f.publicExponent)),a=new Buffer(a.fromRed().toArray());var n=0;for(8>k&&(n=1),h=Math.min(a.length,j.length),a.length!==j.length&&(n=1),l=-1;++l<h;)n|=a[l]^j[l];return 0==n}function ecVerify(a,c,d){var e=curves[d.data.algorithm.curve.join('.')];if(!e)throw new Error('unknown curve '+d.data.algorithm.curve.join('.'));var f=new EC(e),h=d.data.subjectPrivateKey.data;return f.verify(c,a,h)}function dsaVerify(a,c,d){var e=d.data.p,f=d.data.q,h=d.data.g,j=d.data.pub_key,k=parseKeys.signature.decode(a,'der'),l=k.s,m=k.r;checkValue(l,f),checkValue(m,f);var n=BN.mont(e),o=l.invm(f),t=h.toRed(n).redPow(new BN(c).mul(o).mod(f)).fromRed().mul(j.toRed(n).redPow(m.mul(o).mod(f)).fromRed()).mod(e).mod(f);return!t.cmp(m)}function checkValue(a,c){if(0>=a.cmpn(0))throw new Error('invalid sig');if(a.cmp(c)>=c)throw new Error('invalid sig')}module.exports=verify;

}).call(this,require("buffer").Buffer)
},{"./curves":55,"bn.js":30,"buffer":62,"elliptic":85,"parse-asn1":209}],58:[function(require,module,exports){
'use strict';// Base58 encoding/decoding
// Originally written by Mike Hearn for BitcoinJ
// Copyright (c) 2011 Google Inc
// Ported to JavaScript by Stefan Thomas
// Merged Buffer refactorings from base58-native by Stephen Pair
// Copyright (c) 2013 BitPay Inc
var ALPHABET='123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',ALPHABET_MAP={};for(var i=0;i<ALPHABET.length;i++)ALPHABET_MAP[ALPHABET.charAt(i)]=i;var BASE=58;function encode(a){if(0===a.length)return'';var b,d,e=[0];for(b=0;b<a.length;b++){for(d=0;d<e.length;d++)e[d]<<=8;e[0]+=a[b];var f=0;for(d=0;d<e.length;++d)e[d]+=f,f=0|e[d]/BASE,e[d]%=BASE;for(;f;)e.push(f%BASE),f=0|f/BASE}// deal with leading zeros
for(b=0;0===a[b]&&b<a.length-1;b++)e.push(0);// convert digits to a string
var g='';for(var b=e.length-1;0<=b;b--)g=g+ALPHABET[e[b]];return g}function decode(a){if(0===a.length)return[];var b,d,e=[0];for(b=0;b<a.length;b++){var f=a[b];if(!(f in ALPHABET_MAP))throw new Error('Non-base58 character');for(d=0;d<e.length;d++)e[d]*=BASE;e[0]+=ALPHABET_MAP[f];var g=0;for(d=0;d<e.length;++d)e[d]+=g,g=e[d]>>8,e[d]&=255;for(;g;)e.push(255&g),g>>=8}// deal with leading zeros
for(b=0;'1'===a[b]&&b<a.length-1;b++)e.push(0);return e.reverse()}module.exports={encode:encode,decode:decode};

},{}],59:[function(require,module,exports){
(function (Buffer){
'use strict';var base58=require('bs58'),createHash=require('create-hash');// SHA256(SHA256(buffer))
function sha256x2(a){var b=createHash('sha256').update(a).digest();return createHash('sha256').update(b).digest()}// Encode a buffer as a base58-check encoded string
function encode(a){var b=sha256x2(a);return base58.encode(Buffer.concat([a,b],a.length+4))}// Decode a base58-check encoded string to a buffer
function decode(a){var b=new Buffer(base58.decode(a)),c=b.slice(0,-4),d=b.slice(-4),e=sha256x2(c);if(d[0]^e[0]|d[1]^e[1]|d[2]^e[2]|d[3]^e[3])throw new Error('Invalid checksum');return c}module.exports={encode:encode,decode:decode};

}).call(this,require("buffer").Buffer)
},{"bs58":58,"buffer":62,"create-hash":68}],60:[function(require,module,exports){
(function (global){
'use strict';var buffer=require('buffer'),Buffer=buffer.Buffer,SlowBuffer=buffer.SlowBuffer,MAX_LEN=buffer.kMaxLength||2147483647;exports.alloc=function(b,c,d){if('function'==typeof Buffer.alloc)return Buffer.alloc(b,c,d);if('number'==typeof d)throw new TypeError('encoding must not be number');if('number'!=typeof b)throw new TypeError('size must be a number');if(b>MAX_LEN)throw new RangeError('size is too large');var e=d,f=c;f===void 0&&(e=void 0,f=0);var g=new Buffer(b);if('string'==typeof f)for(var h=new Buffer(f,e),j=h.length,k=-1;++k<b;)g[k]=h[k%j];else g.fill(f);return g},exports.allocUnsafe=function(b){if('function'==typeof Buffer.allocUnsafe)return Buffer.allocUnsafe(b);if('number'!=typeof b)throw new TypeError('size must be a number');if(b>MAX_LEN)throw new RangeError('size is too large');return new Buffer(b)},exports.from=function(b,c,d){if('function'==typeof Buffer.from&&(!global.Uint8Array||Uint8Array.from!==Buffer.from))return Buffer.from(b,c,d);if('number'==typeof b)throw new TypeError('"value" argument must not be a number');if('string'==typeof b)return new Buffer(b,c);if('undefined'!=typeof ArrayBuffer&&b instanceof ArrayBuffer){var e=c;if(1===arguments.length)return new Buffer(b);'undefined'==typeof e&&(e=0);var f=d;if('undefined'==typeof f&&(f=b.byteLength-e),e>=b.byteLength)throw new RangeError('\'offset\' is out of bounds');if(f>b.byteLength-e)throw new RangeError('\'length\' is out of bounds');return new Buffer(b.slice(e,e+f))}if(Buffer.isBuffer(b)){var g=new Buffer(b.length);return b.copy(g,0,0,b.length),g}if(b){if(Array.isArray(b)||'undefined'!=typeof ArrayBuffer&&b.buffer instanceof ArrayBuffer||'length'in b)return new Buffer(b);if('Buffer'===b.type&&Array.isArray(b.data))return new Buffer(b.data)}throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')},exports.allocUnsafeSlow=function(b){if('function'==typeof Buffer.allocUnsafeSlow)return Buffer.allocUnsafeSlow(b);if('number'!=typeof b)throw new TypeError('size must be a number');if(b>=MAX_LEN)throw new RangeError('size is too large');return new SlowBuffer(b)};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"buffer":62}],61:[function(require,module,exports){
(function (Buffer){
"use strict";module.exports=function(d,e){var f=Math.min(d.length,e.length),g=new Buffer(f);for(var h=0;h<f;++h)g[h]=d[h]^e[h];return g};

}).call(this,require("buffer").Buffer)
},{"buffer":62}],62:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 *//* eslint-disable no-proto */'use strict';var base64=require('base64-js'),ieee754=require('ieee754'),isArray=require('isarray');exports.Buffer=Buffer,exports.SlowBuffer=SlowBuffer,exports.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=global.TYPED_ARRAY_SUPPORT===void 0?typedArraySupport():global.TYPED_ARRAY_SUPPORT,exports.kMaxLength=kMaxLength();function typedArraySupport(){try{var d=new Uint8Array(1);return d.__proto__={__proto__:Uint8Array.prototype,foo:function foo(){return 42}},42===d.foo()&&// typed array instances can be augmented
'function'==typeof d.subarray&&// chrome 9-10 lack `subarray`
0===d.subarray(1,1).byteLength;// ie10 has broken `subarray`
}catch(f){return!1}}function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(d,f){if(kMaxLength()<f)throw new RangeError('Invalid typed array length');return Buffer.TYPED_ARRAY_SUPPORT?(d=new Uint8Array(f),d.__proto__=Buffer.prototype):(null===d&&(d=new Buffer(f)),d.length=f),d}/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */function Buffer(d,f,g){if(!Buffer.TYPED_ARRAY_SUPPORT&&!(this instanceof Buffer))return new Buffer(d,f,g);// Common case.
if('number'==typeof d){if('string'==typeof f)throw new Error('If encoding is specified then the first argument must be a string');return allocUnsafe(this,d)}return from(this,d,f,g)}Buffer.poolSize=8192,Buffer._augment=function(d){return d.__proto__=Buffer.prototype,d};function from(d,f,g,h){if('number'==typeof f)throw new TypeError('"value" argument must not be a number');return'undefined'!=typeof ArrayBuffer&&f instanceof ArrayBuffer?fromArrayBuffer(d,f,g,h):'string'==typeof f?fromString(d,f,g):fromObject(d,f)}/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/Buffer.from=function(d,f,g){return from(null,d,f,g)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,'undefined'!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0}));function assertSize(d){if('number'!=typeof d)throw new TypeError('"size" argument must be a number');else if(0>d)throw new RangeError('"size" argument must not be negative')}function alloc(d,f,g,h){return assertSize(f),0>=f?createBuffer(d,f):void 0===g?createBuffer(d,f):'string'==typeof h?createBuffer(d,f).fill(g,h):createBuffer(d,f).fill(g)}/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/Buffer.alloc=function(d,f,g){return alloc(null,d,f,g)};function allocUnsafe(d,f){if(assertSize(f),d=createBuffer(d,0>f?0:0|checked(f)),!Buffer.TYPED_ARRAY_SUPPORT)for(var g=0;g<f;++g)d[g]=0;return d}/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */Buffer.allocUnsafe=function(d){return allocUnsafe(null,d)},Buffer.allocUnsafeSlow=function(d){return allocUnsafe(null,d)};function fromString(d,f,g){if(('string'!=typeof g||''===g)&&(g='utf8'),!Buffer.isEncoding(g))throw new TypeError('"encoding" must be a valid string encoding');var h=0|byteLength(f,g);d=createBuffer(d,h);var k=d.write(f,g);return k!==h&&(d=d.slice(0,k)),d}function fromArrayLike(d,f){var g=0>f.length?0:0|checked(f.length);d=createBuffer(d,g);for(var h=0;h<g;h+=1)d[h]=255&f[h];return d}function fromArrayBuffer(d,f,g,h){// this throws if `array` is not a valid ArrayBuffer
if(f.byteLength,0>g||f.byteLength<g)throw new RangeError('\'offset\' is out of bounds');if(f.byteLength<g+(h||0))throw new RangeError('\'length\' is out of bounds');return f=void 0===g&&void 0===h?new Uint8Array(f):void 0===h?new Uint8Array(f,g):new Uint8Array(f,g,h),Buffer.TYPED_ARRAY_SUPPORT?(d=f,d.__proto__=Buffer.prototype):d=fromArrayLike(d,f),d}function fromObject(d,f){if(Buffer.isBuffer(f)){var g=0|checked(f.length);return(d=createBuffer(d,g),0===d.length)?d:(f.copy(d,0,0,g),d)}if(f){if('undefined'!=typeof ArrayBuffer&&f.buffer instanceof ArrayBuffer||'length'in f)return'number'!=typeof f.length||isnan(f.length)?createBuffer(d,0):fromArrayLike(d,f);if('Buffer'===f.type&&isArray(f.data))return fromArrayLike(d,f.data)}throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')}function checked(d){// Note: cannot use `length < kMaxLength()` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(d>=kMaxLength())throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x'+kMaxLength().toString(16)+' bytes');return 0|d}function SlowBuffer(d){return+d!=d&&(d=0),Buffer.alloc(+d)}Buffer.isBuffer=function(f){return!!(null!=f&&f._isBuffer)},Buffer.compare=function(f,g){if(!Buffer.isBuffer(f)||!Buffer.isBuffer(g))throw new TypeError('Arguments must be Buffers');if(f===g)return 0;var h=f.length,k=g.length;for(var l=0,o=Math.min(h,k);l<o;++l)if(f[l]!==g[l]){h=f[l],k=g[l];break}return h<k?-1:k<h?1:0},Buffer.isEncoding=function(f){switch((f+'').toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return!0;default:return!1;}},Buffer.concat=function(f,g){if(!isArray(f))throw new TypeError('"list" argument must be an Array of Buffers');if(0===f.length)return Buffer.alloc(0);var h;if(g===void 0)for(g=0,h=0;h<f.length;++h)g+=f[h].length;var k=Buffer.allocUnsafe(g),l=0;for(h=0;h<f.length;++h){var o=f[h];if(!Buffer.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(k,l),l+=o.length}return k};function byteLength(d,f){if(Buffer.isBuffer(d))return d.length;if('undefined'!=typeof ArrayBuffer&&'function'==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(d)||d instanceof ArrayBuffer))return d.byteLength;'string'!=typeof d&&(d=''+d);var g=d.length;if(0===g)return 0;// Use a for loop to avoid recursion
for(var h=!1;;)switch(f){case'ascii':case'latin1':case'binary':return g;case'utf8':case'utf-8':case void 0:return utf8ToBytes(d).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return 2*g;case'hex':return g>>>1;case'base64':return base64ToBytes(d).length;default:if(h)return utf8ToBytes(d).length;// assume utf8
f=(''+f).toLowerCase(),h=!0;}}Buffer.byteLength=byteLength;function slowToString(d,f,g){var h=!1;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// property of a typed array.
// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
// undefined is handled specially as per ECMA-262 6th Edition,
// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if((void 0===f||0>f)&&(f=0),f>this.length)return'';if((void 0===g||g>this.length)&&(g=this.length),0>=g)return'';// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
if(g>>>=0,f>>>=0,g<=f)return'';for(d||(d='utf8');!0;)switch(d){case'hex':return hexSlice(this,f,g);case'utf8':case'utf-8':return utf8Slice(this,f,g);case'ascii':return asciiSlice(this,f,g);case'latin1':case'binary':return latin1Slice(this,f,g);case'base64':return base64Slice(this,f,g);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,f,g);default:if(h)throw new TypeError('Unknown encoding: '+d);d=(d+'').toLowerCase(),h=!0;}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer=!0;function swap(d,f,g){var h=d[f];d[f]=d[g],d[g]=h}Buffer.prototype.swap16=function(){var f=this.length;if(0!=f%2)throw new RangeError('Buffer size must be a multiple of 16-bits');for(var g=0;g<f;g+=2)swap(this,g,g+1);return this},Buffer.prototype.swap32=function(){var f=this.length;if(0!=f%4)throw new RangeError('Buffer size must be a multiple of 32-bits');for(var g=0;g<f;g+=4)swap(this,g,g+3),swap(this,g+1,g+2);return this},Buffer.prototype.swap64=function(){var f=this.length;if(0!=f%8)throw new RangeError('Buffer size must be a multiple of 64-bits');for(var g=0;g<f;g+=8)swap(this,g,g+7),swap(this,g+1,g+6),swap(this,g+2,g+5),swap(this,g+3,g+4);return this},Buffer.prototype.toString=function(){var f=0|this.length;return 0==f?'':0===arguments.length?utf8Slice(this,0,f):slowToString.apply(this,arguments)},Buffer.prototype.equals=function(f){if(!Buffer.isBuffer(f))throw new TypeError('Argument must be a Buffer');return this===f||0===Buffer.compare(this,f)},Buffer.prototype.inspect=function(){var f='',g=exports.INSPECT_MAX_BYTES;return 0<this.length&&(f=this.toString('hex',0,g).match(/.{2}/g).join(' '),this.length>g&&(f+=' ... ')),'<Buffer '+f+'>'},Buffer.prototype.compare=function(f,g,h,k,l){if(!Buffer.isBuffer(f))throw new TypeError('Argument must be a Buffer');if(void 0===g&&(g=0),void 0===h&&(h=f?f.length:0),void 0===k&&(k=0),void 0===l&&(l=this.length),0>g||h>f.length||0>k||l>this.length)throw new RangeError('out of range index');if(k>=l&&g>=h)return 0;if(k>=l)return-1;if(g>=h)return 1;if(g>>>=0,h>>>=0,k>>>=0,l>>>=0,this===f)return 0;var o=l-k,p=h-g,q=Math.min(o,p),r=this.slice(k,l),s=f.slice(g,h);for(var t=0;t<q;++t)if(r[t]!==s[t]){o=r[t],p=s[t];break}return o<p?-1:p<o?1:0};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(d,f,g,h,k){// Empty buffer means no match
if(0===d.length)return-1;// Normalize byteOffset
if('string'==typeof g?(h=g,g=0):2147483647<g?g=2147483647:-2147483648>g&&(g=-2147483648),g=+g,isNaN(g)&&(g=k?0:d.length-1),0>g&&(g=d.length+g),g>=d.length){if(k)return-1;g=d.length-1}else if(0>g)if(k)g=0;else return-1;// Normalize val
// Finally, search either indexOf (if dir is true) or lastIndexOf
if('string'==typeof f&&(f=Buffer.from(f,h)),Buffer.isBuffer(f))// Special case: looking for empty string/buffer always fails
return 0===f.length?-1:arrayIndexOf(d,f,g,h,k);if('number'==typeof f)// Search for a byte value [0-255]
return(f=255&f,Buffer.TYPED_ARRAY_SUPPORT&&'function'==typeof Uint8Array.prototype.indexOf)?k?Uint8Array.prototype.indexOf.call(d,f,g):Uint8Array.prototype.lastIndexOf.call(d,f,g):arrayIndexOf(d,[f],g,h,k);throw new TypeError('val must be string, number or Buffer')}function arrayIndexOf(d,f,g,h,k){function l(v,w){return 1===o?v[w]:v.readUInt16BE(w*o)}var o=1,p=d.length,q=f.length;if(void 0!==h&&(h=(h+'').toLowerCase(),'ucs2'===h||'ucs-2'===h||'utf16le'===h||'utf-16le'===h)){if(2>d.length||2>f.length)return-1;o=2,p/=2,q/=2,g/=2}var r;if(k){var s=-1;for(r=g;r<p;r++)if(l(d,r)!==l(f,-1==s?0:r-s))-1!=s&&(r-=r-s),s=-1;else if(-1==s&&(s=r),r-s+1===q)return s*o}else for(g+q>p&&(g=p-q),r=g;0<=r;r--){var t=!0;for(var u=0;u<q;u++)if(l(d,r+u)!==l(f,u)){t=!1;break}if(t)return r}return-1}Buffer.prototype.includes=function(f,g,h){return-1!==this.indexOf(f,g,h)},Buffer.prototype.indexOf=function(f,g,h){return bidirectionalIndexOf(this,f,g,h,!0)},Buffer.prototype.lastIndexOf=function(f,g,h){return bidirectionalIndexOf(this,f,g,h,!1)};function hexWrite(d,f,g,h){g=+g||0;var k=d.length-g;h?(h=+h,h>k&&(h=k)):h=k;// must be an even number of digits
var l=f.length;if(0!=l%2)throw new TypeError('Invalid hex string');h>l/2&&(h=l/2);for(var o=0;o<h;++o){var p=parseInt(f.substr(2*o,2),16);if(isNaN(p))return o;d[g+o]=p}return o}function utf8Write(d,f,g,h){return blitBuffer(utf8ToBytes(f,d.length-g),d,g,h)}function asciiWrite(d,f,g,h){return blitBuffer(asciiToBytes(f),d,g,h)}function latin1Write(d,f,g,h){return asciiWrite(d,f,g,h)}function base64Write(d,f,g,h){return blitBuffer(base64ToBytes(f),d,g,h)}function ucs2Write(d,f,g,h){return blitBuffer(utf16leToBytes(f,d.length-g),d,g,h)}Buffer.prototype.write=function(f,g,h,k){// Buffer#write(string)
if(void 0===g)k='utf8',h=this.length,g=0;else if(void 0===h&&'string'==typeof g)k=g,h=this.length,g=0;else if(isFinite(g))g=0|g,isFinite(h)?(h=0|h,void 0===k&&(k='utf8')):(k=h,h=void 0);else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');var l=this.length-g;if((void 0===h||h>l)&&(h=l),0<f.length&&(0>h||0>g)||g>this.length)throw new RangeError('Attempt to write outside buffer bounds');k||(k='utf8');for(var o=!1;;)switch(k){case'hex':return hexWrite(this,f,g,h);case'utf8':case'utf-8':return utf8Write(this,f,g,h);case'ascii':return asciiWrite(this,f,g,h);case'latin1':case'binary':return latin1Write(this,f,g,h);case'base64':// Warning: maxLength not taken into account in base64Write
return base64Write(this,f,g,h);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,f,g,h);default:if(o)throw new TypeError('Unknown encoding: '+k);k=(''+k).toLowerCase(),o=!0;}},Buffer.prototype.toJSON=function(){return{type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(d,f,g){return 0===f&&g===d.length?base64.fromByteArray(d):base64.fromByteArray(d.slice(f,g))}function utf8Slice(d,f,g){g=Math.min(d.length,g);for(var h=[],k=f;k<g;){var l=d[k],o=null,p=239<l?4:223<l?3:191<l?2:1;if(k+p<=g){var q,r,s,t;1==p?128>l&&(o=l):2==p?(q=d[k+1],128==(192&q)&&(t=(31&l)<<6|63&q,127<t&&(o=t))):3==p?(q=d[k+1],r=d[k+2],128==(192&q)&&128==(192&r)&&(t=(15&l)<<12|(63&q)<<6|63&r,2047<t&&(55296>t||57343<t)&&(o=t))):4==p?(q=d[k+1],r=d[k+2],s=d[k+3],128==(192&q)&&128==(192&r)&&128==(192&s)&&(t=(15&l)<<18|(63&q)<<12|(63&r)<<6|63&s,65535<t&&1114112>t&&(o=t))):void 0}null===o?(o=65533,p=1):65535<o&&(o-=65536,h.push(55296|1023&o>>>10),o=56320|1023&o),h.push(o),k+=p}return decodeCodePointsArray(h)}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(d){var f=d.length;if(f<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,d);// avoid extra slice()
// Decode in chunks to avoid "call stack size exceeded".
for(var g='',h=0;h<f;)g+=String.fromCharCode.apply(String,d.slice(h,h+=MAX_ARGUMENTS_LENGTH));return g}function asciiSlice(d,f,g){var h='';g=Math.min(d.length,g);for(var k=f;k<g;++k)h+=String.fromCharCode(127&d[k]);return h}function latin1Slice(d,f,g){var h='';g=Math.min(d.length,g);for(var k=f;k<g;++k)h+=String.fromCharCode(d[k]);return h}function hexSlice(d,f,g){var h=d.length;(!f||0>f)&&(f=0),(!g||0>g||g>h)&&(g=h);var k='';for(var l=f;l<g;++l)k+=toHex(d[l]);return k}function utf16leSlice(d,f,g){var h=d.slice(f,g),k='';for(var l=0;l<h.length;l+=2)k+=String.fromCharCode(h[l]+256*h[l+1]);return k}Buffer.prototype.slice=function(f,g){var h=this.length;f=~~f,g=g===void 0?h:~~g,0>f?(f+=h,0>f&&(f=0)):f>h&&(f=h),0>g?(g+=h,0>g&&(g=0)):g>h&&(g=h),g<f&&(g=f);var k;if(Buffer.TYPED_ARRAY_SUPPORT)k=this.subarray(f,g),k.__proto__=Buffer.prototype;else{var l=g-f;k=new Buffer(l,void 0);for(var o=0;o<l;++o)k[o]=this[o+f]}return k};/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */function checkOffset(d,f,g){if(0!=d%1||0>d)throw new RangeError('offset is not uint');if(d+f>g)throw new RangeError('Trying to access beyond buffer length')}Buffer.prototype.readUIntLE=function(f,g,h){f=0|f,g=0|g,h||checkOffset(f,g,this.length);for(var k=this[f],l=1,o=0;++o<g&&(l*=256);)k+=this[f+o]*l;return k},Buffer.prototype.readUIntBE=function(f,g,h){f=0|f,g=0|g,h||checkOffset(f,g,this.length);for(var k=this[f+--g],l=1;0<g&&(l*=256);)k+=this[f+--g]*l;return k},Buffer.prototype.readUInt8=function(f,g){return g||checkOffset(f,1,this.length),this[f]},Buffer.prototype.readUInt16LE=function(f,g){return g||checkOffset(f,2,this.length),this[f]|this[f+1]<<8},Buffer.prototype.readUInt16BE=function(f,g){return g||checkOffset(f,2,this.length),this[f]<<8|this[f+1]},Buffer.prototype.readUInt32LE=function(f,g){return g||checkOffset(f,4,this.length),(this[f]|this[f+1]<<8|this[f+2]<<16)+16777216*this[f+3]},Buffer.prototype.readUInt32BE=function(f,g){return g||checkOffset(f,4,this.length),16777216*this[f]+(this[f+1]<<16|this[f+2]<<8|this[f+3])},Buffer.prototype.readIntLE=function(f,g,h){f=0|f,g=0|g,h||checkOffset(f,g,this.length);for(var k=this[f],l=1,o=0;++o<g&&(l*=256);)k+=this[f+o]*l;return l*=128,k>=l&&(k-=Math.pow(2,8*g)),k},Buffer.prototype.readIntBE=function(f,g,h){f=0|f,g=0|g,h||checkOffset(f,g,this.length);for(var k=g,l=1,o=this[f+--k];0<k&&(l*=256);)o+=this[f+--k]*l;return l*=128,o>=l&&(o-=Math.pow(2,8*g)),o},Buffer.prototype.readInt8=function(f,g){return g||checkOffset(f,1,this.length),128&this[f]?-1*(255-this[f]+1):this[f]},Buffer.prototype.readInt16LE=function(f,g){g||checkOffset(f,2,this.length);var h=this[f]|this[f+1]<<8;return 32768&h?4294901760|h:h},Buffer.prototype.readInt16BE=function(f,g){g||checkOffset(f,2,this.length);var h=this[f+1]|this[f]<<8;return 32768&h?4294901760|h:h},Buffer.prototype.readInt32LE=function(f,g){return g||checkOffset(f,4,this.length),this[f]|this[f+1]<<8|this[f+2]<<16|this[f+3]<<24},Buffer.prototype.readInt32BE=function(f,g){return g||checkOffset(f,4,this.length),this[f]<<24|this[f+1]<<16|this[f+2]<<8|this[f+3]},Buffer.prototype.readFloatLE=function(f,g){return g||checkOffset(f,4,this.length),ieee754.read(this,f,!0,23,4)},Buffer.prototype.readFloatBE=function(f,g){return g||checkOffset(f,4,this.length),ieee754.read(this,f,!1,23,4)},Buffer.prototype.readDoubleLE=function(f,g){return g||checkOffset(f,8,this.length),ieee754.read(this,f,!0,52,8)},Buffer.prototype.readDoubleBE=function(f,g){return g||checkOffset(f,8,this.length),ieee754.read(this,f,!1,52,8)};function checkInt(d,f,g,h,k,l){if(!Buffer.isBuffer(d))throw new TypeError('"buffer" argument must be a Buffer instance');if(f>k||f<l)throw new RangeError('"value" argument is out of bounds');if(g+h>d.length)throw new RangeError('Index out of range')}Buffer.prototype.writeUIntLE=function(f,g,h,k){if(f=+f,g=0|g,h=0|h,!k){var l=Math.pow(2,8*h)-1;checkInt(this,f,g,h,l,0)}var o=1,p=0;for(this[g]=255&f;++p<h&&(o*=256);)this[g+p]=255&f/o;return g+h},Buffer.prototype.writeUIntBE=function(f,g,h,k){if(f=+f,g=0|g,h=0|h,!k){var l=Math.pow(2,8*h)-1;checkInt(this,f,g,h,l,0)}var o=h-1,p=1;for(this[g+o]=255&f;0<=--o&&(p*=256);)this[g+o]=255&f/p;return g+h},Buffer.prototype.writeUInt8=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(f=Math.floor(f)),this[g]=255&f,g+1};function objectWriteUInt16(d,f,g,h){0>f&&(f=65535+f+1);for(var k=0,l=Math.min(d.length-g,2);k<l;++k)d[g+k]=(f&255<<8*(h?k:1-k))>>>8*(h?k:1-k)}Buffer.prototype.writeUInt16LE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=255&f,this[g+1]=f>>>8):objectWriteUInt16(this,f,g,!0),g+2},Buffer.prototype.writeUInt16BE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=f>>>8,this[g+1]=255&f):objectWriteUInt16(this,f,g,!1),g+2};function objectWriteUInt32(d,f,g,h){0>f&&(f=4294967295+f+1);for(var k=0,l=Math.min(d.length-g,4);k<l;++k)d[g+k]=255&f>>>8*(h?k:3-k)}Buffer.prototype.writeUInt32LE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[g+3]=f>>>24,this[g+2]=f>>>16,this[g+1]=f>>>8,this[g]=255&f):objectWriteUInt32(this,f,g,!0),g+4},Buffer.prototype.writeUInt32BE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=f>>>24,this[g+1]=f>>>16,this[g+2]=f>>>8,this[g+3]=255&f):objectWriteUInt32(this,f,g,!1),g+4},Buffer.prototype.writeIntLE=function(f,g,h,k){if(f=+f,g=0|g,!k){var l=Math.pow(2,8*h-1);checkInt(this,f,g,h,l-1,-l)}var o=0,p=1,q=0;for(this[g]=255&f;++o<h&&(p*=256);)0>f&&0==q&&0!==this[g+o-1]&&(q=1),this[g+o]=255&(f/p>>0)-q;return g+h},Buffer.prototype.writeIntBE=function(f,g,h,k){if(f=+f,g=0|g,!k){var l=Math.pow(2,8*h-1);checkInt(this,f,g,h,l-1,-l)}var o=h-1,p=1,q=0;for(this[g+o]=255&f;0<=--o&&(p*=256);)0>f&&0==q&&0!==this[g+o+1]&&(q=1),this[g+o]=255&(f/p>>0)-q;return g+h},Buffer.prototype.writeInt8=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(f=Math.floor(f)),0>f&&(f=255+f+1),this[g]=255&f,g+1},Buffer.prototype.writeInt16LE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=255&f,this[g+1]=f>>>8):objectWriteUInt16(this,f,g,!0),g+2},Buffer.prototype.writeInt16BE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=f>>>8,this[g+1]=255&f):objectWriteUInt16(this,f,g,!1),g+2},Buffer.prototype.writeInt32LE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=255&f,this[g+1]=f>>>8,this[g+2]=f>>>16,this[g+3]=f>>>24):objectWriteUInt32(this,f,g,!0),g+4},Buffer.prototype.writeInt32BE=function(f,g,h){return f=+f,g=0|g,h||checkInt(this,f,g,4,2147483647,-2147483648),0>f&&(f=4294967295+f+1),Buffer.TYPED_ARRAY_SUPPORT?(this[g]=f>>>24,this[g+1]=f>>>16,this[g+2]=f>>>8,this[g+3]=255&f):objectWriteUInt32(this,f,g,!1),g+4};function checkIEEE754(d,f,g,h,k,l){if(g+h>d.length)throw new RangeError('Index out of range');if(0>g)throw new RangeError('Index out of range')}function writeFloat(d,f,g,h,k){return k||checkIEEE754(d,f,g,4,3.4028234663852886e+38,-3.4028234663852886e+38),ieee754.write(d,f,g,h,23,4),g+4}Buffer.prototype.writeFloatLE=function(f,g,h){return writeFloat(this,f,g,!0,h)},Buffer.prototype.writeFloatBE=function(f,g,h){return writeFloat(this,f,g,!1,h)};function writeDouble(d,f,g,h,k){return k||checkIEEE754(d,f,g,8,1.7976931348623157e+308,-1.7976931348623157e+308),ieee754.write(d,f,g,h,52,8),g+8}Buffer.prototype.writeDoubleLE=function(f,g,h){return writeDouble(this,f,g,!0,h)},Buffer.prototype.writeDoubleBE=function(f,g,h){return writeDouble(this,f,g,!1,h)},Buffer.prototype.copy=function(f,g,h,k){// Copy 0 bytes; we're done
if(h||(h=0),k||0===k||(k=this.length),g>=f.length&&(g=f.length),g||(g=0),0<k&&k<h&&(k=h),k===h)return 0;if(0===f.length||0===this.length)return 0;// Fatal error conditions
if(0>g)throw new RangeError('targetStart out of bounds');if(0>h||h>=this.length)throw new RangeError('sourceStart out of bounds');if(0>k)throw new RangeError('sourceEnd out of bounds');// Are we oob?
k>this.length&&(k=this.length),f.length-g<k-h&&(k=f.length-g+h);var o,l=k-h;if(this===f&&h<g&&g<k)// descending copy from end
for(o=l-1;0<=o;--o)f[o+g]=this[o+h];else if(1000>l||!Buffer.TYPED_ARRAY_SUPPORT)// ascending copy from start
for(o=0;o<l;++o)f[o+g]=this[o+h];else Uint8Array.prototype.set.call(f,this.subarray(h,h+l),g);return l},Buffer.prototype.fill=function(f,g,h,k){// Handle string cases:
if('string'==typeof f){if('string'==typeof g?(k=g,g=0,h=this.length):'string'==typeof h&&(k=h,h=this.length),1===f.length){var l=f.charCodeAt(0);256>l&&(f=l)}if(void 0!==k&&'string'!=typeof k)throw new TypeError('encoding must be a string');if('string'==typeof k&&!Buffer.isEncoding(k))throw new TypeError('Unknown encoding: '+k)}else'number'==typeof f&&(f=255&f);// Invalid ranges are not set to a default, so can range check early.
if(0>g||this.length<g||this.length<h)throw new RangeError('Out of range index');if(h<=g)return this;g=g>>>0,h=h===void 0?this.length:h>>>0,f||(f=0);var o;if('number'==typeof f)for(o=g;o<h;++o)this[o]=f;else{var p=Buffer.isBuffer(f)?f:utf8ToBytes(new Buffer(f,k).toString()),q=p.length;for(o=0;o<h-g;++o)this[o+g]=p[o%q]}return this};// HELPER FUNCTIONS
// ================
var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;function base64clean(d){// Node converts strings with length < 2 to ''
if(d=stringtrim(d).replace(INVALID_BASE64_RE,''),2>d.length)return'';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
for(;0!=d.length%4;)d=d+'=';return d}function stringtrim(d){return d.trim?d.trim():d.replace(/^\s+|\s+$/g,'')}function toHex(d){return 16>d?'0'+d.toString(16):d.toString(16)}function utf8ToBytes(d,f){f=f||1/0;var g,h=d.length,k=null,l=[];for(var o=0;o<h;++o){// is surrogate component
if(g=d.charCodeAt(o),55295<g&&57344>g){// last char was a lead
if(!k){// no lead yet
if(56319<g){-1<(f-=3)&&l.push(239,191,189);continue}else if(o+1===h){-1<(f-=3)&&l.push(239,191,189);continue}// valid lead
k=g;continue}// 2 leads in a row
if(56320>g){-1<(f-=3)&&l.push(239,191,189),k=g;continue}// valid surrogate pair
g=(k-55296<<10|g-56320)+65536}else k&&-1<(f-=3)&&l.push(239,191,189);// encode utf8
if(k=null,128>g){if(0>(f-=1))break;l.push(g)}else if(2048>g){if(0>(f-=2))break;l.push(192|g>>6,128|63&g)}else if(65536>g){if(0>(f-=3))break;l.push(224|g>>12,128|63&g>>6,128|63&g)}else if(1114112>g){if(0>(f-=4))break;l.push(240|g>>18,128|63&g>>12,128|63&g>>6,128|63&g)}else throw new Error('Invalid code point')}return l}function asciiToBytes(d){var f=[];for(var g=0;g<d.length;++g)f.push(255&d.charCodeAt(g));return f}function utf16leToBytes(d,f){var g,h,k,l=[];for(var o=0;o<d.length&&!(0>(f-=2));++o)g=d.charCodeAt(o),h=g>>8,k=g%256,l.push(k),l.push(h);return l}function base64ToBytes(d){return base64.toByteArray(base64clean(d))}function blitBuffer(d,f,g,h){for(var k=0;k<h&&!(k+g>=f.length||k>=d.length);++k)f[k+g]=d[k];return k}function isnan(d){return d!==d;// eslint-disable-line no-self-compare
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":27,"ieee754":158,"isarray":162}],63:[function(require,module,exports){
(function (Buffer){
'use strict';var Transform=require('stream').Transform,inherits=require('inherits'),StringDecoder=require('string_decoder').StringDecoder;module.exports=CipherBase,inherits(CipherBase,Transform);function CipherBase(a){Transform.call(this),this.hashMode='string'==typeof a,this.hashMode?this[a]=this._finalOrDigest:this.final=this._finalOrDigest,this._decoder=null,this._encoding=null}CipherBase.prototype.update=function(a,b,c){'string'==typeof a&&(a=new Buffer(a,b));var d=this._update(a);return this.hashMode?this:(c&&(d=this._toString(d,c)),d)},CipherBase.prototype.setAutoPadding=function(){},CipherBase.prototype.getAuthTag=function(){throw new Error('trying to get auth tag in unsupported state')},CipherBase.prototype.setAuthTag=function(){throw new Error('trying to set auth tag in unsupported state')},CipherBase.prototype.setAAD=function(){throw new Error('trying to set aad in unsupported state')},CipherBase.prototype._transform=function(a,b,c){var d;try{this.hashMode?this._update(a):this.push(this._update(a))}catch(f){d=f}finally{c(d)}},CipherBase.prototype._flush=function(a){var b;try{this.push(this._final())}catch(c){b=c}finally{a(b)}},CipherBase.prototype._finalOrDigest=function(a){var b=this._final()||new Buffer('');return a&&(b=this._toString(b,a,!0)),b},CipherBase.prototype._toString=function(a,b,c){if(this._decoder||(this._decoder=new StringDecoder(b),this._encoding=b),this._encoding!==b)throw new Error('can\'t switch encodings');var d=this._decoder.write(a);return c&&(d+=this._decoder.end()),d};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"inherits":160,"stream":252,"string_decoder":253}],64:[function(require,module,exports){
(function (Buffer){
'use strict';var base58=require('bs58'),createHash=require('create-hash');function encode(a,b){(Array.isArray(a)||a instanceof Uint8Array)&&(a=new Buffer(a));var c;null==b?c=a:('number'==typeof b&&(b=new Buffer([b])),c=Buffer.concat([b,a]));var d=sha256x2(c).slice(0,4),f=Buffer.concat([c,d]);return base58.encode(f)}function decode(a,b){var c=base58.decode(a),d=new Buffer(c),f;if(null==b)f=0;else{'number'==typeof b&&(b=new Buffer([b])),f=b.length;var g=d.slice(0,f);if(g.toString('hex')!==b.toString('hex'))throw new Error('Invalid version')}var h=d.slice(-4),i=d.length-4,j=d.slice(0,i),k=sha256x2(j).slice(0,4);if(h.toString('hex')!==k.toString('hex'))throw new Error('Invalid checksum');return j.slice(f)}function isValid(a,b){try{decode(a,b)}catch(c){return!1}return!0}function createEncoder(a){return function(b){return encode(b,a)}}function createDecoder(a){return function(b){return decode(b,a)}}function createValidator(a){return function(b){return isValid(b,a)}}function sha256x2(a){var b=createHash('sha256').update(a).digest();return createHash('sha256').update(b).digest()}module.exports={encode:encode,decode:decode,isValid:isValid,createEncoder:createEncoder,createDecoder:createDecoder,createValidator:createValidator};

}).call(this,require("buffer").Buffer)
},{"bs58":58,"buffer":62,"create-hash":68}],65:[function(require,module,exports){
'use strict';!function(a){'use strict';// PRIVATE
function b(e){return e.map(function(f){return c(f.toString(16),2)}).join('')}function c(e,f){return e.length>f?e:Array(f-e.length+1).join('0')+e}var d={bytesToHex:function bytesToHex(e){/*if (typeof bytes.byteLength != 'undefined') {
      var newBytes = []

      if (typeof bytes.buffer != 'undefined')
        bytes = new DataView(bytes.buffer)
      else
        bytes = new DataView(bytes)

      for (var i = 0; i < bytes.byteLength; ++i) {
        newBytes.push(bytes.getUint8(i))
      }
      bytes = newBytes
    }*/return b(e)},hexToBytes:function hexToBytes(e){if(1==e.length%2)throw new Error('hexToBytes can\'t have a string with an odd number of characters.');return 0===e.indexOf('0x')&&(e=e.slice(2)),e.match(/../g).map(function(f){return parseInt(f,16)})}};'undefined'!=typeof module&&module.exports?module.exports=d:a.convertHex=d}(void 0);

},{}],66:[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(a){return Array.isArray?Array.isArray(a):'[object Array]'===objectToString(a)}exports.isArray=isArray;function isBoolean(a){return'boolean'==typeof a}exports.isBoolean=isBoolean;function isNull(a){return null===a}exports.isNull=isNull;function isNullOrUndefined(a){return null==a}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(a){return'number'==typeof a}exports.isNumber=isNumber;function isString(a){return'string'==typeof a}exports.isString=isString;function isSymbol(a){return'symbol'==('undefined'==typeof a?'undefined':_typeof(a))}exports.isSymbol=isSymbol;function isUndefined(a){return void 0===a}exports.isUndefined=isUndefined;function isRegExp(a){return'[object RegExp]'===objectToString(a)}exports.isRegExp=isRegExp;function isObject(a){return'object'==('undefined'==typeof a?'undefined':_typeof(a))&&null!==a}exports.isObject=isObject;function isDate(a){return'[object Date]'===objectToString(a)}exports.isDate=isDate;function isError(a){return'[object Error]'===objectToString(a)||a instanceof Error}exports.isError=isError;function isFunction(a){return'function'==typeof a}exports.isFunction=isFunction;function isPrimitive(a){return null===a||'boolean'==typeof a||'number'==typeof a||'string'==typeof a||'symbol'==('undefined'==typeof a?'undefined':_typeof(a))||// ES6 symbol
'undefined'==typeof a}exports.isPrimitive=isPrimitive,exports.isBuffer=Buffer.isBuffer;function objectToString(a){return Object.prototype.toString.call(a)}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":161}],67:[function(require,module,exports){
(function (Buffer){
'use strict';var elliptic=require('elliptic'),BN=require('bn.js');module.exports=function(b){return new ECDH(b)};var aliases={secp256k1:{name:'secp256k1',byteLength:32},secp224r1:{name:'p224',byteLength:28},prime256v1:{name:'p256',byteLength:32},prime192v1:{name:'p192',byteLength:24},ed25519:{name:'ed25519',byteLength:32},secp384r1:{name:'p384',byteLength:48},secp521r1:{name:'p521',byteLength:66}};aliases.p224=aliases.secp224r1,aliases.p256=aliases.secp256r1=aliases.prime256v1,aliases.p192=aliases.secp192r1=aliases.prime192v1,aliases.p384=aliases.secp384r1,aliases.p521=aliases.secp521r1;function ECDH(a){this.curveType=aliases[a],this.curveType||(this.curveType={name:a}),this.curve=new elliptic.ec(this.curveType.name),this.keys=void 0}ECDH.prototype.generateKeys=function(a,b){return this.keys=this.curve.genKeyPair(),this.getPublicKey(a,b)},ECDH.prototype.computeSecret=function(a,b,c){b=b||'utf8',Buffer.isBuffer(a)||(a=new Buffer(a,b));var d=this.curve.keyFromPublic(a).getPublic(),e=d.mul(this.keys.getPrivate()).getX();return formatReturnValue(e,c,this.curveType.byteLength)},ECDH.prototype.getPublicKey=function(a,b){var c=this.keys.getPublic('compressed'===b,!0);return'hybrid'===b&&(c[c.length-1]%2?c[0]=7:c[0]=6),formatReturnValue(c,a)},ECDH.prototype.getPrivateKey=function(a){return formatReturnValue(this.keys.getPrivate(),a)},ECDH.prototype.setPublicKey=function(a,b){return b=b||'utf8',Buffer.isBuffer(a)||(a=new Buffer(a,b)),this.keys._importPublic(a),this},ECDH.prototype.setPrivateKey=function(a,b){b=b||'utf8',Buffer.isBuffer(a)||(a=new Buffer(a,b));var c=new BN(a);return c=c.toString(16),this.keys._importPrivate(c),this};function formatReturnValue(a,b,c){Array.isArray(a)||(a=a.toArray());var d=new Buffer(a);if(c&&d.length<c){var e=new Buffer(c-d.length);e.fill(0),d=Buffer.concat([e,d])}return b?d.toString(b):d}

}).call(this,require("buffer").Buffer)
},{"bn.js":30,"buffer":62,"elliptic":85}],68:[function(require,module,exports){
(function (Buffer){
'use strict';var inherits=require('inherits'),md5=require('./md5'),rmd160=require('ripemd160'),sha=require('sha.js'),Base=require('cipher-base');function HashNoConstructor(a){Base.call(this,'digest'),this._hash=a,this.buffers=[]}inherits(HashNoConstructor,Base),HashNoConstructor.prototype._update=function(a){this.buffers.push(a)},HashNoConstructor.prototype._final=function(){var a=Buffer.concat(this.buffers),b=this._hash(a);return this.buffers=null,b};function Hash(a){Base.call(this,'digest'),this._hash=a}inherits(Hash,Base),Hash.prototype._update=function(a){this._hash.update(a)},Hash.prototype._final=function(){return this._hash.digest()},module.exports=function(b){return b=b.toLowerCase(),'md5'===b?new HashNoConstructor(md5):'rmd160'===b||'ripemd160'===b?new HashNoConstructor(rmd160):new Hash(sha(b))};

}).call(this,require("buffer").Buffer)
},{"./md5":70,"buffer":62,"cipher-base":63,"inherits":160,"ripemd160":233,"sha.js":245}],69:[function(require,module,exports){
(function (Buffer){
'use strict';var intSize=4,zeroBuffer=new Buffer(intSize);zeroBuffer.fill(0);var chrsz=8;function toArray(a,b){if(0!=a.length%intSize){var c=a.length+(intSize-a.length%intSize);a=Buffer.concat([a,zeroBuffer],c)}var d=[],e=b?a.readInt32BE:a.readInt32LE;for(var f=0;f<a.length;f+=intSize)d.push(e.call(a,f));return d}function toBuffer(a,b,c){var d=new Buffer(b),e=c?d.writeInt32BE:d.writeInt32LE;for(var f=0;f<a.length;f++)e.call(d,a[f],4*f,!0);return d}function hash(a,b,c,d){Buffer.isBuffer(a)||(a=new Buffer(a));var e=b(toArray(a,d),a.length*chrsz);return toBuffer(e,c,d)}exports.hash=hash;

}).call(this,require("buffer").Buffer)
},{"buffer":62}],70:[function(require,module,exports){
'use strict';/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */var helpers=require('./helpers');/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */function core_md5(e,f){e[f>>5]|=128<<f%32,e[(f+64>>>9<<4)+14]=f;var g=1732584193,h=-271733879,j=-1732584194,k=271733878;for(var l=0;l<e.length;l+=16){var m=g,n=h,o=j,p=k;g=md5_ff(g,h,j,k,e[l+0],7,-680876936),k=md5_ff(k,g,h,j,e[l+1],12,-389564586),j=md5_ff(j,k,g,h,e[l+2],17,606105819),h=md5_ff(h,j,k,g,e[l+3],22,-1044525330),g=md5_ff(g,h,j,k,e[l+4],7,-176418897),k=md5_ff(k,g,h,j,e[l+5],12,1200080426),j=md5_ff(j,k,g,h,e[l+6],17,-1473231341),h=md5_ff(h,j,k,g,e[l+7],22,-45705983),g=md5_ff(g,h,j,k,e[l+8],7,1770035416),k=md5_ff(k,g,h,j,e[l+9],12,-1958414417),j=md5_ff(j,k,g,h,e[l+10],17,-42063),h=md5_ff(h,j,k,g,e[l+11],22,-1990404162),g=md5_ff(g,h,j,k,e[l+12],7,1804603682),k=md5_ff(k,g,h,j,e[l+13],12,-40341101),j=md5_ff(j,k,g,h,e[l+14],17,-1502002290),h=md5_ff(h,j,k,g,e[l+15],22,1236535329),g=md5_gg(g,h,j,k,e[l+1],5,-165796510),k=md5_gg(k,g,h,j,e[l+6],9,-1069501632),j=md5_gg(j,k,g,h,e[l+11],14,643717713),h=md5_gg(h,j,k,g,e[l+0],20,-373897302),g=md5_gg(g,h,j,k,e[l+5],5,-701558691),k=md5_gg(k,g,h,j,e[l+10],9,38016083),j=md5_gg(j,k,g,h,e[l+15],14,-660478335),h=md5_gg(h,j,k,g,e[l+4],20,-405537848),g=md5_gg(g,h,j,k,e[l+9],5,568446438),k=md5_gg(k,g,h,j,e[l+14],9,-1019803690),j=md5_gg(j,k,g,h,e[l+3],14,-187363961),h=md5_gg(h,j,k,g,e[l+8],20,1163531501),g=md5_gg(g,h,j,k,e[l+13],5,-1444681467),k=md5_gg(k,g,h,j,e[l+2],9,-51403784),j=md5_gg(j,k,g,h,e[l+7],14,1735328473),h=md5_gg(h,j,k,g,e[l+12],20,-1926607734),g=md5_hh(g,h,j,k,e[l+5],4,-378558),k=md5_hh(k,g,h,j,e[l+8],11,-2022574463),j=md5_hh(j,k,g,h,e[l+11],16,1839030562),h=md5_hh(h,j,k,g,e[l+14],23,-35309556),g=md5_hh(g,h,j,k,e[l+1],4,-1530992060),k=md5_hh(k,g,h,j,e[l+4],11,1272893353),j=md5_hh(j,k,g,h,e[l+7],16,-155497632),h=md5_hh(h,j,k,g,e[l+10],23,-1094730640),g=md5_hh(g,h,j,k,e[l+13],4,681279174),k=md5_hh(k,g,h,j,e[l+0],11,-358537222),j=md5_hh(j,k,g,h,e[l+3],16,-722521979),h=md5_hh(h,j,k,g,e[l+6],23,76029189),g=md5_hh(g,h,j,k,e[l+9],4,-640364487),k=md5_hh(k,g,h,j,e[l+12],11,-421815835),j=md5_hh(j,k,g,h,e[l+15],16,530742520),h=md5_hh(h,j,k,g,e[l+2],23,-995338651),g=md5_ii(g,h,j,k,e[l+0],6,-198630844),k=md5_ii(k,g,h,j,e[l+7],10,1126891415),j=md5_ii(j,k,g,h,e[l+14],15,-1416354905),h=md5_ii(h,j,k,g,e[l+5],21,-57434055),g=md5_ii(g,h,j,k,e[l+12],6,1700485571),k=md5_ii(k,g,h,j,e[l+3],10,-1894986606),j=md5_ii(j,k,g,h,e[l+10],15,-1051523),h=md5_ii(h,j,k,g,e[l+1],21,-2054922799),g=md5_ii(g,h,j,k,e[l+8],6,1873313359),k=md5_ii(k,g,h,j,e[l+15],10,-30611744),j=md5_ii(j,k,g,h,e[l+6],15,-1560198380),h=md5_ii(h,j,k,g,e[l+13],21,1309151649),g=md5_ii(g,h,j,k,e[l+4],6,-145523070),k=md5_ii(k,g,h,j,e[l+11],10,-1120210379),j=md5_ii(j,k,g,h,e[l+2],15,718787259),h=md5_ii(h,j,k,g,e[l+9],21,-343485551),g=safe_add(g,m),h=safe_add(h,n),j=safe_add(j,o),k=safe_add(k,p)}return[g,h,j,k]}/*
 * These functions implement the four basic operations the algorithm uses.
 */function md5_cmn(e,f,g,h,j,k){return safe_add(bit_rol(safe_add(safe_add(f,e),safe_add(h,k)),j),g)}function md5_ff(e,f,g,h,j,k,l){return md5_cmn(f&g|~f&h,e,f,j,k,l)}function md5_gg(e,f,g,h,j,k,l){return md5_cmn(f&h|g&~h,e,f,j,k,l)}function md5_hh(e,f,g,h,j,k,l){return md5_cmn(f^g^h,e,f,j,k,l)}function md5_ii(e,f,g,h,j,k,l){return md5_cmn(g^(f|~h),e,f,j,k,l)}/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */function safe_add(e,f){var g=(65535&e)+(65535&f);return(e>>16)+(f>>16)+(g>>16)<<16|65535&g}/*
 * Bitwise rotate a 32-bit number to the left.
 */function bit_rol(e,f){return e<<f|e>>>32-f}module.exports=function(f){return helpers.hash(f,core_md5,16)};

},{"./helpers":69}],71:[function(require,module,exports){
(function (Buffer){
'use strict';var createHash=require('create-hash/browser'),inherits=require('inherits'),Transform=require('stream').Transform,ZEROS=new Buffer(128);ZEROS.fill(0);function Hmac(a,b){Transform.call(this),a=a.toLowerCase(),'string'==typeof b&&(b=new Buffer(b));var c='sha512'===a||'sha384'===a?128:64;this._alg=a,this._key=b,b.length>c?b=createHash(a).update(b).digest():b.length<c&&(b=Buffer.concat([b,ZEROS],c));var d=this._ipad=new Buffer(c),e=this._opad=new Buffer(c);for(var f=0;f<c;f++)d[f]=54^b[f],e[f]=92^b[f];this._hash=createHash(a).update(d)}inherits(Hmac,Transform),Hmac.prototype.update=function(a,b){return this._hash.update(a,b),this},Hmac.prototype._transform=function(a,b,c){this._hash.update(a),c()},Hmac.prototype._flush=function(a){this.push(this.digest()),a()},Hmac.prototype.digest=function(a){var b=this._hash.digest();return createHash(this._alg).update(this._opad).update(b).digest(a)},module.exports=function(b,c){return new Hmac(b,c)};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"create-hash/browser":68,"inherits":160,"stream":252}],72:[function(require,module,exports){
'use strict';exports.randomBytes=exports.rng=exports.pseudoRandomBytes=exports.prng=require('randombytes'),exports.createHash=exports.Hash=require('create-hash'),exports.createHmac=exports.Hmac=require('create-hmac');var hashes=['sha1','sha224','sha256','sha384','sha512','md5','rmd160'].concat(Object.keys(require('browserify-sign/algos')));exports.getHashes=function(){return hashes};var p=require('pbkdf2');exports.pbkdf2=p.pbkdf2,exports.pbkdf2Sync=p.pbkdf2Sync;var aes=require('browserify-cipher');['Cipher','createCipher','Cipheriv','createCipheriv','Decipher','createDecipher','Decipheriv','createDecipheriv','getCiphers','listCiphers'].forEach(function(a){exports[a]=aes[a]});var dh=require('diffie-hellman');['DiffieHellmanGroup','createDiffieHellmanGroup','getDiffieHellman','createDiffieHellman','DiffieHellman'].forEach(function(a){exports[a]=dh[a]});var sign=require('browserify-sign');['createSign','Sign','createVerify','Verify'].forEach(function(a){exports[a]=sign[a]}),exports.createECDH=require('create-ecdh');var publicEncrypt=require('public-encrypt');['publicEncrypt','privateEncrypt','publicDecrypt','privateDecrypt'].forEach(function(a){exports[a]=publicEncrypt[a]})// the least I can do is make error messages for the rest of the node.js/crypto api.
,['createCredentials'].forEach(function(a){exports[a]=function(){throw new Error(['sorry, '+a+' is not implemented yet','we accept pull requests','https://github.com/crypto-browserify/crypto-browserify'].join('\n'))}});

},{"browserify-cipher":48,"browserify-sign":54,"browserify-sign/algos":53,"create-ecdh":67,"create-hash":68,"create-hmac":71,"diffie-hellman":81,"pbkdf2":210,"public-encrypt":215,"randombytes":221}],73:[function(require,module,exports){
'use strict';var util=require('util'),AbstractIterator=require('abstract-leveldown').AbstractIterator;function DeferredIterator(a){AbstractIterator.call(this,a),this._options=a,this._iterator=null,this._operations=[]}util.inherits(DeferredIterator,AbstractIterator),DeferredIterator.prototype.setDb=function(a){var b=this._iterator=a.iterator(this._options);this._operations.forEach(function(c){b[c.method].apply(b,c.args)})},DeferredIterator.prototype._operation=function(a,b){return this._iterator?this._iterator[a].apply(this._iterator,b):void this._operations.push({method:a,args:b})},'next end'.split(' ').forEach(function(a){DeferredIterator.prototype['_'+a]=function(){this._operation(a,arguments)}}),module.exports=DeferredIterator;

},{"abstract-leveldown":4,"util":259}],74:[function(require,module,exports){
(function (Buffer,process){
'use strict';var util=require('util'),AbstractLevelDOWN=require('abstract-leveldown').AbstractLevelDOWN,DeferredIterator=require('./deferred-iterator');function DeferredLevelDOWN(a){AbstractLevelDOWN.call(this,'string'==typeof a?a:''),this._db=void 0,this._operations=[],this._iterators=[]}util.inherits(DeferredLevelDOWN,AbstractLevelDOWN),DeferredLevelDOWN.prototype.setDb=function(a){this._db=a,this._operations.forEach(function(b){a[b.method].apply(a,b.args)}),this._iterators.forEach(function(b){b.setDb(a)})},DeferredLevelDOWN.prototype._open=function(a,b){return process.nextTick(b)},DeferredLevelDOWN.prototype._operation=function(a,b){return this._db?this._db[a].apply(this._db,b):void this._operations.push({method:a,args:b})},'put get del batch approximateSize'.split(' ').forEach(function(a){DeferredLevelDOWN.prototype['_'+a]=function(){this._operation(a,arguments)}}),DeferredLevelDOWN.prototype._isBuffer=function(a){return Buffer.isBuffer(a)},DeferredLevelDOWN.prototype._iterator=function(a){if(this._db)return this._db.iterator.apply(this._db,arguments);var b=new DeferredIterator(a);return this._iterators.push(b),b},module.exports=DeferredLevelDOWN,module.exports.DeferredIterator=DeferredIterator;

}).call(this,{"isBuffer":require("../is-buffer/index.js")},require('_process'))
},{"../is-buffer/index.js":161,"./deferred-iterator":73,"_process":213,"abstract-leveldown":4,"util":259}],75:[function(require,module,exports){
'use strict';exports.utils=require('./des/utils'),exports.Cipher=require('./des/cipher'),exports.DES=require('./des/des'),exports.CBC=require('./des/cbc'),exports.EDE=require('./des/ede');

},{"./des/cbc":76,"./des/cipher":77,"./des/des":78,"./des/ede":79,"./des/utils":80}],76:[function(require,module,exports){
'use strict';var assert=require('minimalistic-assert'),inherits=require('inherits'),proto={};function CBCState(a){assert.equal(a.length,8,'Invalid IV length'),this.iv=Array(8);for(var b=0;b<this.iv.length;b++)this.iv[b]=a[b]}function instantiate(a){function b(f){a.call(this,f),this._cbcInit()}inherits(b,a);var c=Object.keys(proto);for(var d=0;d<c.length;d++){var e=c[d];b.prototype[e]=proto[e]}return b.create=function(g){return new b(g)},b}exports.instantiate=instantiate,proto._cbcInit=function(){var b=new CBCState(this.options.iv);this._cbcState=b},proto._update=function(b,c,d,e){var f=this._cbcState,g=this.constructor.super_.prototype,h=f.iv;if('encrypt'===this.type){for(var j=0;j<this.blockSize;j++)h[j]^=b[c+j];g._update.call(this,h,0,d,e);for(var j=0;j<this.blockSize;j++)h[j]=d[e+j]}else{g._update.call(this,b,c,d,e);for(var j=0;j<this.blockSize;j++)d[e+j]^=h[j];for(var j=0;j<this.blockSize;j++)h[j]=b[c+j]}};

},{"inherits":160,"minimalistic-assert":201}],77:[function(require,module,exports){
'use strict';var assert=require('minimalistic-assert');function Cipher(a){this.options=a,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=Array(this.blockSize),this.bufferOff=0}module.exports=Cipher,Cipher.prototype._init=function(){// Might be overrided
},Cipher.prototype.update=function(b){return 0===b.length?[]:'decrypt'===this.type?this._updateDecrypt(b):this._updateEncrypt(b)},Cipher.prototype._buffer=function(b,c){// Append data to buffer
var d=Math.min(this.buffer.length-this.bufferOff,b.length-c);for(var e=0;e<d;e++)this.buffer[this.bufferOff+e]=b[c+e];// Shift next
return this.bufferOff+=d,d},Cipher.prototype._flushBuffer=function(b,c){return this._update(this.buffer,0,b,c),this.bufferOff=0,this.blockSize},Cipher.prototype._updateEncrypt=function(b){var c=0,d=0,e=0|(this.bufferOff+b.length)/this.blockSize,f=Array(e*this.blockSize);0!==this.bufferOff&&(c+=this._buffer(b,c),this.bufferOff===this.buffer.length&&(d+=this._flushBuffer(f,d)));// Write blocks
for(var g=b.length-(b.length-c)%this.blockSize;c<g;c+=this.blockSize)this._update(b,c,f,d),d+=this.blockSize;// Queue rest
for(;c<b.length;c++,this.bufferOff++)this.buffer[this.bufferOff]=b[c];return f},Cipher.prototype._updateDecrypt=function(b){// TODO(indutny): optimize it, this is far from optimal
for(var c=0,d=0,e=Math.ceil((this.bufferOff+b.length)/this.blockSize)-1,f=Array(e*this.blockSize);0<e;e--)c+=this._buffer(b,c),d+=this._flushBuffer(f,d);// Buffer rest of the input
return c+=this._buffer(b,c),f},Cipher.prototype.final=function(b){var c;b&&(c=this.update(b));var d;return d='encrypt'===this.type?this._finalEncrypt():this._finalDecrypt(),c?c.concat(d):d},Cipher.prototype._pad=function(b,c){if(0===c)return!1;for(;c<b.length;)b[c++]=0;return!0},Cipher.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var b=Array(this.blockSize);return this._update(this.buffer,0,b,0),b},Cipher.prototype._unpad=function(b){return b},Cipher.prototype._finalDecrypt=function(){assert.equal(this.bufferOff,this.blockSize,'Not enough data to decrypt');var b=Array(this.blockSize);return this._flushBuffer(b,0),this._unpad(b)};

},{"minimalistic-assert":201}],78:[function(require,module,exports){
'use strict';var assert=require('minimalistic-assert'),inherits=require('inherits'),des=require('../des'),utils=des.utils,Cipher=des.Cipher;function DESState(){this.tmp=[,,],this.keys=null}function DES(a){Cipher.call(this,a);var b=new DESState;this._desState=b,this.deriveKeys(b,a.key)}inherits(DES,Cipher),module.exports=DES,DES.create=function(b){return new DES(b)};var shiftTable=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];DES.prototype.deriveKeys=function(b,c){b.keys=Array(32),assert.equal(c.length,this.blockSize,'Invalid key length');var d=utils.readUInt32BE(c,0),e=utils.readUInt32BE(c,4);utils.pc1(d,e,b.tmp,0),d=b.tmp[0],e=b.tmp[1];for(var g=0;g<b.keys.length;g+=2){var h=shiftTable[g>>>1];d=utils.r28shl(d,h),e=utils.r28shl(e,h),utils.pc2(d,e,b.keys,g)}},DES.prototype._update=function(b,c,d,e){var g=this._desState,h=utils.readUInt32BE(b,c),j=utils.readUInt32BE(b,c+4);// Initial Permutation
utils.ip(h,j,g.tmp,0),h=g.tmp[0],j=g.tmp[1],'encrypt'===this.type?this._encrypt(g,h,j,g.tmp,0):this._decrypt(g,h,j,g.tmp,0),h=g.tmp[0],j=g.tmp[1],utils.writeUInt32BE(d,h,e),utils.writeUInt32BE(d,j,e+4)},DES.prototype._pad=function(b,c){var d=b.length-c;for(var e=c;e<b.length;e++)b[e]=d;return!0},DES.prototype._unpad=function(b){var c=b[b.length-1];for(var d=b.length-c;d<b.length;d++)assert.equal(b[d],c);return b.slice(0,b.length-c)},DES.prototype._encrypt=function(b,c,d,e,g){var h=c,j=d;// Apply f() x16 times
for(var k=0;k<b.keys.length;k+=2){var m=b.keys[k],n=b.keys[k+1];// f(r, k)
utils.expand(j,b.tmp,0),m^=b.tmp[0],n^=b.tmp[1];var o=utils.substitute(m,n),p=utils.permute(o),q=j;j=(h^p)>>>0,h=q}// Reverse Initial Permutation
utils.rip(j,h,e,g)},DES.prototype._decrypt=function(b,c,d,e,g){var h=d,j=c;// Apply f() x16 times
for(var k=b.keys.length-2;0<=k;k-=2){var m=b.keys[k],n=b.keys[k+1];// f(r, k)
utils.expand(h,b.tmp,0),m^=b.tmp[0],n^=b.tmp[1];var o=utils.substitute(m,n),p=utils.permute(o),q=h;h=(j^p)>>>0,j=q}// Reverse Initial Permutation
utils.rip(h,j,e,g)};

},{"../des":75,"inherits":160,"minimalistic-assert":201}],79:[function(require,module,exports){
'use strict';var assert=require('minimalistic-assert'),inherits=require('inherits'),des=require('../des'),Cipher=des.Cipher,DES=des.DES;function EDEState(a,b){assert.equal(b.length,24,'Invalid key length');var c=b.slice(0,8),d=b.slice(8,16),e=b.slice(16,24);this.ciphers='encrypt'===a?[DES.create({type:'encrypt',key:c}),DES.create({type:'decrypt',key:d}),DES.create({type:'encrypt',key:e})]:[DES.create({type:'decrypt',key:e}),DES.create({type:'encrypt',key:d}),DES.create({type:'decrypt',key:c})]}function EDE(a){Cipher.call(this,a);var b=new EDEState(this.type,this.options.key);this._edeState=b}inherits(EDE,Cipher),module.exports=EDE,EDE.create=function(b){return new EDE(b)},EDE.prototype._update=function(b,c,d,e){var f=this._edeState;f.ciphers[0]._update(b,c,d,e),f.ciphers[1]._update(d,e,d,e),f.ciphers[2]._update(d,e,d,e)},EDE.prototype._pad=DES.prototype._pad,EDE.prototype._unpad=DES.prototype._unpad;

},{"../des":75,"inherits":160,"minimalistic-assert":201}],80:[function(require,module,exports){
'use strict';exports.readUInt32BE=function(c,d){var e=c[0+d]<<24|c[1+d]<<16|c[2+d]<<8|c[3+d];return e>>>0},exports.writeUInt32BE=function(c,d,e){c[0+e]=d>>>24,c[1+e]=255&d>>>16,c[2+e]=255&d>>>8,c[3+e]=255&d},exports.ip=function(c,d,e,f){var g=0,h=0;for(var k=6;0<=k;k-=2){for(var l=0;24>=l;l+=8)g<<=1,g|=1&d>>>l+k;for(var l=0;24>=l;l+=8)g<<=1,g|=1&c>>>l+k}for(var k=6;0<=k;k-=2){for(var l=1;25>=l;l+=8)h<<=1,h|=1&d>>>l+k;for(var l=1;25>=l;l+=8)h<<=1,h|=1&c>>>l+k}e[f+0]=g>>>0,e[f+1]=h>>>0},exports.rip=function(c,d,e,f){var g=0,h=0;for(var k=0;4>k;k++)for(var l=24;0<=l;l-=8)g<<=1,g|=1&d>>>l+k,g<<=1,g|=1&c>>>l+k;for(var k=4;8>k;k++)for(var l=24;0<=l;l-=8)h<<=1,h|=1&d>>>l+k,h<<=1,h|=1&c>>>l+k;e[f+0]=g>>>0,e[f+1]=h>>>0},exports.pc1=function(c,d,e,f){var g=0,h=0;// 7, 15, 23, 31, 39, 47, 55, 63
// 6, 14, 22, 30, 39, 47, 55, 63
// 5, 13, 21, 29, 39, 47, 55, 63
// 4, 12, 20, 28
for(var k=7;5<=k;k--){for(var l=0;24>=l;l+=8)g<<=1,g|=1&d>>l+k;for(var l=0;24>=l;l+=8)g<<=1,g|=1&c>>l+k}for(var l=0;24>=l;l+=8)g<<=1,g|=1&d>>l+k;// 1, 9, 17, 25, 33, 41, 49, 57
// 2, 10, 18, 26, 34, 42, 50, 58
// 3, 11, 19, 27, 35, 43, 51, 59
// 36, 44, 52, 60
for(var k=1;3>=k;k++){for(var l=0;24>=l;l+=8)h<<=1,h|=1&d>>l+k;for(var l=0;24>=l;l+=8)h<<=1,h|=1&c>>l+k}for(var l=0;24>=l;l+=8)h<<=1,h|=1&c>>l+k;e[f+0]=g>>>0,e[f+1]=h>>>0},exports.r28shl=function(c,d){return 268435455&c<<d|c>>>28-d};var pc2table=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];exports.pc2=function(c,d,e,f){var g=0,h=0,k=pc2table.length>>>1;for(var l=0;l<k;l++)g<<=1,g|=1&c>>>pc2table[l];for(var l=k;l<pc2table.length;l++)h<<=1,h|=1&d>>>pc2table[l];e[f+0]=g>>>0,e[f+1]=h>>>0},exports.expand=function(c,d,e){var f=0,g=0;f=(1&c)<<5|c>>>27;for(var h=23;15<=h;h-=4)f<<=6,f|=63&c>>>h;for(var h=11;3<=h;h-=4)g|=63&c>>>h,g<<=6;g|=(31&c)<<1|c>>>31,d[e+0]=f>>>0,d[e+1]=g>>>0};var sTable=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];exports.substitute=function(c,d){var e=0;for(var f=0;4>f;f++){var g=63&c>>>18-6*f,h=sTable[64*f+g];e<<=4,e|=h}for(var f=0;4>f;f++){var g=63&d>>>18-6*f,h=sTable[256+64*f+g];e<<=4,e|=h}return e>>>0};var permuteTable=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];exports.permute=function(c){var d=0;for(var e=0;e<permuteTable.length;e++)d<<=1,d|=1&c>>>permuteTable[e];return d>>>0},exports.padSplit=function(c,d,e){for(var f=c.toString(2);f.length<d;)f='0'+f;var g=[];for(var h=0;h<d;h+=e)g.push(f.slice(h,h+e));return g.join(' ')};

},{}],81:[function(require,module,exports){
(function (Buffer){
'use strict';var generatePrime=require('./lib/generatePrime'),primes=require('./lib/primes.json'),DH=require('./lib/dh');function getDiffieHellman(a){var b=new Buffer(primes[a].prime,'hex'),c=new Buffer(primes[a].gen,'hex');return new DH(b,c)}var ENCODINGS={binary:!0,hex:!0,base64:!0};function createDiffieHellman(a,b,c,d){return Buffer.isBuffer(b)||void 0===ENCODINGS[b]?createDiffieHellman(a,'binary',b,c):(b=b||'binary',d=d||'binary',c=c||new Buffer([2]),Buffer.isBuffer(c)||(c=new Buffer(c,d)),'number'==typeof a)?new DH(generatePrime(a,c),c,!0):(Buffer.isBuffer(a)||(a=new Buffer(a,b)),new DH(a,c,!0))}exports.DiffieHellmanGroup=exports.createDiffieHellmanGroup=exports.getDiffieHellman=getDiffieHellman,exports.createDiffieHellman=exports.DiffieHellman=createDiffieHellman;

}).call(this,require("buffer").Buffer)
},{"./lib/dh":82,"./lib/generatePrime":83,"./lib/primes.json":84,"buffer":62}],82:[function(require,module,exports){
(function (Buffer){
'use strict';var BN=require('bn.js'),MillerRabin=require('miller-rabin'),millerRabin=new MillerRabin,TWENTYFOUR=new BN(24),ELEVEN=new BN(11),TEN=new BN(10),THREE=new BN(3),SEVEN=new BN(7),primes=require('./generatePrime'),randomBytes=require('randombytes');module.exports=DH;function setPublicKey(a,b){return b=b||'utf8',Buffer.isBuffer(a)||(a=new Buffer(a,b)),this._pub=new BN(a),this}function setPrivateKey(a,b){return b=b||'utf8',Buffer.isBuffer(a)||(a=new Buffer(a,b)),this._priv=new BN(a),this}var primeCache={};function checkPrime(a,b){var c=b.toString('hex'),d=[c,a.toString(16)].join('_');if(d in primeCache)return primeCache[d];var e=0;if(a.isEven()||!primes.simpleSieve||!primes.fermatTest(a)||!millerRabin.test(a))return e+=1,e+='02'===c||'05'===c?8:4,primeCache[d]=e,e;millerRabin.test(a.shrn(1))||(e+=2);var f;return'02'===c?a.mod(TWENTYFOUR).cmp(ELEVEN)&&(e+=8):'05'===c?(f=a.mod(TEN),f.cmp(THREE)&&f.cmp(SEVEN)&&(e+=8)):e+=4,primeCache[d]=e,e}function DH(a,b,c){this.setGenerator(b),this.__prime=new BN(a),this._prime=BN.mont(this.__prime),this._primeLen=a.length,this._pub=void 0,this._priv=void 0,this._primeCode=void 0,c?(this.setPublicKey=setPublicKey,this.setPrivateKey=setPrivateKey):this._primeCode=8}Object.defineProperty(DH.prototype,'verifyError',{enumerable:!0,get:function get(){return'number'!=typeof this._primeCode&&(this._primeCode=checkPrime(this.__prime,this.__gen)),this._primeCode}}),DH.prototype.generateKeys=function(){return this._priv||(this._priv=new BN(randomBytes(this._primeLen))),this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed(),this.getPublicKey()},DH.prototype.computeSecret=function(a){a=new BN(a),a=a.toRed(this._prime);var b=a.redPow(this._priv).fromRed(),c=new Buffer(b.toArray()),d=this.getPrime();if(c.length<d.length){var e=new Buffer(d.length-c.length);e.fill(0),c=Buffer.concat([e,c])}return c},DH.prototype.getPublicKey=function(b){return formatReturnValue(this._pub,b)},DH.prototype.getPrivateKey=function(b){return formatReturnValue(this._priv,b)},DH.prototype.getPrime=function(a){return formatReturnValue(this.__prime,a)},DH.prototype.getGenerator=function(a){return formatReturnValue(this._gen,a)},DH.prototype.setGenerator=function(a,b){return b=b||'utf8',Buffer.isBuffer(a)||(a=new Buffer(a,b)),this.__gen=a,this._gen=new BN(a),this};function formatReturnValue(a,b){var c=new Buffer(a.toArray());return b?c.toString(b):c}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":83,"bn.js":30,"buffer":62,"miller-rabin":200,"randombytes":221}],83:[function(require,module,exports){
'use strict';var randomBytes=require('randombytes');module.exports=findPrime,findPrime.simpleSieve=simpleSieve,findPrime.fermatTest=fermatTest;var BN=require('bn.js'),TWENTYFOUR=new BN(24),MillerRabin=require('miller-rabin'),millerRabin=new MillerRabin,ONE=new BN(1),TWO=new BN(2),FIVE=new BN(5),SIXTEEN=new BN(16),EIGHT=new BN(8),TEN=new BN(10),THREE=new BN(3),SEVEN=new BN(7),ELEVEN=new BN(11),FOUR=new BN(4),TWELVE=new BN(12),primes=null;function _getPrimes(){if(null!=primes)return primes;var a=[];a[0]=2;for(var b=1,c=3;1048576>c;c+=2){var d=Math.ceil(Math.sqrt(c));for(var e=0;e<b&&a[e]<=d&&0!=c%a[e];e++);b!==e&&a[e]<=d||(a[b++]=c)}return primes=a,a}function simpleSieve(a){var b=_getPrimes();for(var c=0;c<b.length;c++)if(0===a.modn(b[c]))return 0===a.cmpn(b[c]);return!0}function fermatTest(a){var b=BN.mont(a);return 0===TWO.toRed(b).redPow(a.subn(1)).fromRed().cmpn(1)}function findPrime(a,b){if(16>a){// this is what openssl does
if(2===b||5===b)return new BN([140,123]);return new BN([140,39])}b=new BN(b);for(var c,d;!0;){for(c=new BN(randomBytes(Math.ceil(a/8)));c.bitLength()>a;)c.ishrn(1);if(c.isEven()&&c.iadd(ONE),c.testn(1)||c.iadd(TWO),!b.cmp(TWO))for(;c.mod(TWENTYFOUR).cmp(ELEVEN);)c.iadd(FOUR);else if(!b.cmp(FIVE))for(;c.mod(TEN).cmp(THREE);)c.iadd(FOUR);if(d=c.shrn(1),simpleSieve(d)&&simpleSieve(c)&&fermatTest(d)&&fermatTest(c)&&millerRabin.test(d)&&millerRabin.test(c))return c}}

},{"bn.js":30,"miller-rabin":200,"randombytes":221}],84:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],85:[function(require,module,exports){
'use strict';var elliptic=exports;elliptic.version=require('../package.json').version,elliptic.utils=require('./elliptic/utils'),elliptic.rand=require('brorand'),elliptic.hmacDRBG=require('./elliptic/hmac-drbg'),elliptic.curve=require('./elliptic/curve'),elliptic.curves=require('./elliptic/curves'),elliptic.ec=require('./elliptic/ec'),elliptic.eddsa=require('./elliptic/eddsa');

},{"../package.json":101,"./elliptic/curve":88,"./elliptic/curves":91,"./elliptic/ec":92,"./elliptic/eddsa":95,"./elliptic/hmac-drbg":98,"./elliptic/utils":100,"brorand":31}],86:[function(require,module,exports){
'use strict';var BN=require('bn.js'),elliptic=require('../../elliptic'),utils=elliptic.utils,getNAF=utils.getNAF,getJSF=utils.getJSF,assert=utils.assert;function BaseCurve(c,d){this.type=c,this.p=new BN(d.p,16),this.red=d.prime?BN.red(d.prime):BN.mont(this.p),this.zero=new BN(0).toRed(this.red),this.one=new BN(1).toRed(this.red),this.two=new BN(2).toRed(this.red),this.n=d.n&&new BN(d.n,16),this.g=d.g&&this.pointFromJSON(d.g,d.gRed),this._wnafT1=[,,,,],this._wnafT2=[,,,,],this._wnafT3=[,,,,],this._wnafT4=[,,,,];// Generalized Greg Maxwell's trick
var e=this.n&&this.p.div(this.n);!e||0<e.cmpn(100)?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}module.exports=BaseCurve,BaseCurve.prototype.point=function(){throw new Error('Not implemented')},BaseCurve.prototype.validate=function(){throw new Error('Not implemented')},BaseCurve.prototype._fixedNafMul=function(d,e){assert(d.precomputed);var f=d._getDoubles(),g=getNAF(e,1),h=(1<<f.step+1)-(0==f.step%2?2:1);h/=3;// Translate into more windowed form
var l=[];for(var m=0;m<g.length;m+=f.step){var n=0;for(var e=m+f.step-1;e>=m;e--)n=(n<<1)+g[e];l.push(n)}var o=this.jpoint(null,null,null),q=this.jpoint(null,null,null);for(var s=h;0<s;s--){for(var m=0;m<l.length;m++){var n=l[m];n===s?q=q.mixedAdd(f.points[m]):n===-s&&(q=q.mixedAdd(f.points[m].neg()))}o=o.add(q)}return o.toP()},BaseCurve.prototype._wnafMul=function(d,e){var f=4,g=d._getNAFPoints(f);// Precompute window
f=g.wnd;var h=g.points,l=getNAF(e,f),m=this.jpoint(null,null,null);// Get NAF form
// Add `this`*(N+1) for every w-NAF index
for(var n=l.length-1;0<=n;n--){// Count zeroes
for(var e=0;0<=n&&0===l[n];n--)e++;if(0<=n&&e++,m=m.dblp(e),0>n)break;var o=l[n];assert(0!==o),m='affine'===d.type?0<o?m.mixedAdd(h[o-1>>1]):m.mixedAdd(h[-o-1>>1].neg()):0<o?m.add(h[o-1>>1]):m.add(h[-o-1>>1].neg())}return'affine'===d.type?m.toP():m},BaseCurve.prototype._wnafMulAdd=function(d,e,f,g,h){var l=this._wnafT1,m=this._wnafT2,n=this._wnafT3,o=0;// Fill all arrays
for(var q=0;q<g;q++){var s=e[q],t=s._getNAFPoints(d);l[q]=t.wnd,m[q]=t.points}// Comb small window NAFs
for(var q=g-1;1<=q;q-=2){var u=q-1,v=q;if(1!==l[u]||1!==l[v]){n[u]=getNAF(f[u],l[u]),n[v]=getNAF(f[v],l[v]),o=Math.max(n[u].length,o),o=Math.max(n[v].length,o);continue}var y=[e[u],/* 1 */null,/* 3 */null,/* 5 */e[v]/* 7 */];// Try to avoid Projective points, if possible
0===e[u].y.cmp(e[v].y)?(y[1]=e[u].add(e[v]),y[2]=e[u].toJ().mixedAdd(e[v].neg())):0===e[u].y.cmp(e[v].y.redNeg())?(y[1]=e[u].toJ().mixedAdd(e[v]),y[2]=e[u].add(e[v].neg())):(y[1]=e[u].toJ().mixedAdd(e[v]),y[2]=e[u].toJ().mixedAdd(e[v].neg()));var A=[-3,-1,-5,-7,0,7,5,1,3],B=getJSF(f[u],f[v]);o=Math.max(B[0].length,o),n[u]=Array(o),n[v]=Array(o);for(var C=0;C<o;C++){var D=0|B[0][C],E=0|B[1][C];n[u][C]=A[3*(D+1)+(E+1)],n[v][C]=0,m[u]=y}}var F=this.jpoint(null,null,null),G=this._wnafT4;for(var q=o;0<=q;q--){for(var H=0;0<=q;){var J=!0;for(var C=0;C<g;C++)G[C]=0|n[C][q],0!==G[C]&&(J=!1);if(!J)break;H++,q--}if(0<=q&&H++,F=F.dblp(H),0>q)break;for(var C=0;C<g;C++){var s,K=G[C];if(0===K)continue;else 0<K?s=m[C][K-1>>1]:0>K&&(s=m[C][-K-1>>1].neg());F='affine'===s.type?F.mixedAdd(s):F.add(s)}}// Zeroify references
for(var q=0;q<g;q++)m[q]=null;return h?F:F.toP()};function BasePoint(c,d){this.curve=c,this.type=d,this.precomputed=null}BaseCurve.BasePoint=BasePoint,BasePoint.prototype.eq=function()/*other*/{throw new Error('Not implemented')},BasePoint.prototype.validate=function(){return this.curve.validate(this)},BaseCurve.prototype.decodePoint=function(d,e){d=utils.toArray(d,e);var f=this.p.byteLength();// uncompressed, hybrid-odd, hybrid-even
if((4===d[0]||6===d[0]||7===d[0])&&d.length-1==2*f){6===d[0]?assert(0==d[d.length-1]%2):7===d[0]&&assert(1==d[d.length-1]%2);var g=this.point(d.slice(1,1+f),d.slice(1+f,1+2*f));return g}if((2===d[0]||3===d[0])&&d.length-1===f)return this.pointFromX(d.slice(1,1+f),3===d[0]);throw new Error('Unknown point format')},BasePoint.prototype.encodeCompressed=function(d){return this.encode(d,!0)},BasePoint.prototype._encode=function(d){var e=this.curve.p.byteLength(),f=this.getX().toArray('be',e);return d?[this.getY().isEven()?2:3].concat(f):[4].concat(f,this.getY().toArray('be',e))},BasePoint.prototype.encode=function(d,e){return utils.encode(this._encode(e),d)},BasePoint.prototype.precompute=function(d){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,d),e.beta=this._getBeta(),this.precomputed=e,this},BasePoint.prototype._hasDoubles=function(d){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((d.bitLength()+1)/e.step)},BasePoint.prototype._getDoubles=function(d,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var f=[this],g=this;for(var h=0;h<e;h+=d){for(var l=0;l<d;l++)g=g.dbl();f.push(g)}return{step:d,points:f}},BasePoint.prototype._getNAFPoints=function(d){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var e=[this],f=(1<<d)-1,g=1===f?null:this.dbl();for(var h=1;h<f;h++)e[h]=e[h-1].add(g);return{wnd:d,points:e}},BasePoint.prototype._getBeta=function(){return null},BasePoint.prototype.dblp=function(d){var e=this;for(var f=0;f<d;f++)e=e.dbl();return e};

},{"../../elliptic":85,"bn.js":30}],87:[function(require,module,exports){
'use strict';var curve=require('../curve'),elliptic=require('../../elliptic'),BN=require('bn.js'),inherits=require('inherits'),Base=curve.base,assert=elliptic.utils.assert;function EdwardsCurve(i){this.twisted=1!=(0|i.a),this.mOneA=this.twisted&&-1==(0|i.a),this.extended=this.mOneA,Base.call(this,'edwards',i),this.a=new BN(i.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new BN(i.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new BN(i.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),assert(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|i.c)}inherits(EdwardsCurve,Base),module.exports=EdwardsCurve,EdwardsCurve.prototype._mulA=function(l){return this.mOneA?l.redNeg():this.a.redMul(l)},EdwardsCurve.prototype._mulC=function(l){return this.oneC?l:this.c.redMul(l)},EdwardsCurve.prototype.jpoint=function(l,m,n,o){return this.point(l,m,n,o)},EdwardsCurve.prototype.pointFromX=function(l,m){l=new BN(l,16),l.red||(l=l.toRed(this.red));var n=l.redSqr(),o=this.c2.redSub(this.a.redMul(n)),q=this.one.redSub(this.c2.redMul(this.d).redMul(n)),r=o.redMul(q.redInvm()),s=r.redSqrt();if(0!==s.redSqr().redSub(r).cmp(this.zero))throw new Error('invalid point');var u=s.fromRed().isOdd();return(m&&!u||!m&&u)&&(s=s.redNeg()),this.point(l,s)},EdwardsCurve.prototype.pointFromY=function(l,m){l=new BN(l,16),l.red||(l=l.toRed(this.red));// x^2 = (y^2 - 1) / (d y^2 + 1)
var n=l.redSqr(),o=n.redSub(this.one),q=n.redMul(this.d).redAdd(this.one),r=o.redMul(q.redInvm());if(0===r.cmp(this.zero))if(m)throw new Error('invalid point');else return this.point(this.zero,l);var s=r.redSqrt();if(0!==s.redSqr().redSub(r).cmp(this.zero))throw new Error('invalid point');return s.isOdd()!==m&&(s=s.redNeg()),this.point(s,l)},EdwardsCurve.prototype.validate=function(l){if(l.isInfinity())return!0;// Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
l.normalize();var m=l.x.redSqr(),n=l.y.redSqr(),o=m.redMul(this.a).redAdd(n),q=this.c2.redMul(this.one.redAdd(this.d.redMul(m).redMul(n)));return 0===o.cmp(q)};function Point(i,l,m,n,o){Base.BasePoint.call(this,i,'projective'),null===l&&null===m&&null===n?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new BN(l,16),this.y=new BN(m,16),this.z=n?new BN(n,16):this.curve.one,this.t=o&&new BN(o,16),!this.x.red&&(this.x=this.x.toRed(this.curve.red)),!this.y.red&&(this.y=this.y.toRed(this.curve.red)),!this.z.red&&(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),!this.zOne&&(this.t=this.t.redMul(this.z.redInvm()))))}inherits(Point,Base.BasePoint),EdwardsCurve.prototype.pointFromJSON=function(l){return Point.fromJSON(this,l)},EdwardsCurve.prototype.point=function(l,m,n,o){return new Point(this,l,m,n,o)},Point.fromJSON=function(l,m){return new Point(l,m[0],m[1],m[2])},Point.prototype.inspect=function(){return this.isInfinity()?'<EC Point Infinity>':'<EC Point x: '+this.x.fromRed().toString(16,2)+' y: '+this.y.fromRed().toString(16,2)+' z: '+this.z.fromRed().toString(16,2)+'>'},Point.prototype.isInfinity=function(){// XXX This code assumes that zero is always zero in red
return 0===this.x.cmpn(0)&&0===this.y.cmp(this.z)},Point.prototype._extDbl=function(){// hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
//     #doubling-dbl-2008-hwcd
// 4M + 4S
// A = X1^2
var l=this.x.redSqr(),m=this.y.redSqr(),n=this.z.redSqr();// B = Y1^2
// C = 2 * Z1^2
n=n.redIAdd(n);// D = a * A
var o=this.curve._mulA(l),q=this.x.redAdd(this.y).redSqr().redISub(l).redISub(m),r=o.redAdd(m),s=r.redSub(n),u=o.redSub(m),v=q.redMul(s),w=r.redMul(u),A=q.redMul(u),B=s.redMul(r);// E = (X1 + Y1)^2 - A - B
// G = D + B
// F = G - C
// H = D - B
// X3 = E * F
// Y3 = G * H
// T3 = E * H
// Z3 = F * G
return this.curve.point(v,w,B,A)},Point.prototype._projDbl=function(){// hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
//     #doubling-dbl-2008-bbjlp
//     #doubling-dbl-2007-bl
// and others
// Generally 3M + 4S or 2M + 4S
// B = (X1 + Y1)^2
var l=this.x.redAdd(this.y).redSqr(),m=this.x.redSqr(),n=this.y.redSqr(),o,q,r;// C = X1^2
// D = Y1^2
if(this.curve.twisted){// E = a * C
var s=this.curve._mulA(m),u=s.redAdd(n);// F = E + D
if(this.zOne)o=l.redSub(m).redSub(n).redMul(u.redSub(this.curve.two)),q=u.redMul(s.redSub(n)),r=u.redSqr().redSub(u).redSub(u);else{// H = Z1^2
var v=this.z.redSqr(),w=u.redSub(v).redISub(v);// J = F - 2 * H
// X3 = (B-C-D)*J
o=l.redSub(m).redISub(n).redMul(w),q=u.redMul(s.redSub(n)),r=u.redMul(w)}}else{// E = C + D
var s=m.redAdd(n),v=this.curve._mulC(this.c.redMul(this.z)).redSqr(),w=s.redSub(v).redSub(v);// H = (c * Z1)^2
// J = E - 2 * H
// X3 = c * (B - E) * J
o=this.curve._mulC(l.redISub(s)).redMul(w),q=this.curve._mulC(s).redMul(m.redISub(n)),r=s.redMul(w)}return this.curve.point(o,q,r)},Point.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl();// Double in extended coordinates
},Point.prototype._extAdd=function(l){// hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
//     #addition-add-2008-hwcd-3
// 8M
// A = (Y1 - X1) * (Y2 - X2)
var m=this.y.redSub(this.x).redMul(l.y.redSub(l.x)),n=this.y.redAdd(this.x).redMul(l.y.redAdd(l.x)),o=this.t.redMul(this.curve.dd).redMul(l.t),q=this.z.redMul(l.z.redAdd(l.z)),r=n.redSub(m),s=q.redSub(o),u=q.redAdd(o),v=n.redAdd(m),w=r.redMul(s),A=u.redMul(v),B=r.redMul(v),C=s.redMul(u);// B = (Y1 + X1) * (Y2 + X2)
// C = T1 * k * T2
// D = Z1 * 2 * Z2
// E = B - A
// F = D - C
// G = D + C
// H = B + A
// X3 = E * F
// Y3 = G * H
// T3 = E * H
// Z3 = F * G
return this.curve.point(w,A,C,B)},Point.prototype._projAdd=function(l){// hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
//     #addition-add-2008-bbjlp
//     #addition-add-2007-bl
// 10M + 1S
// A = Z1 * Z2
var A,B,m=this.z.redMul(l.z),n=m.redSqr(),o=this.x.redMul(l.x),q=this.y.redMul(l.y),r=this.curve.d.redMul(o).redMul(q),s=n.redSub(r),u=n.redAdd(r),v=this.x.redAdd(this.y).redMul(l.x.redAdd(l.y)).redISub(o).redISub(q),w=m.redMul(s).redMul(v);// B = A^2
// C = X1 * X2
// D = Y1 * Y2
// E = d * C * D
// F = B - E
// G = B + E
// X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
return this.curve.twisted?(A=m.redMul(u).redMul(q.redSub(this.curve._mulA(o))),B=s.redMul(u)):(A=m.redMul(u).redMul(q.redSub(o)),B=this.curve._mulC(s).redMul(u)),this.curve.point(w,A,B)},Point.prototype.add=function(l){return this.isInfinity()?l:l.isInfinity()?this:this.curve.extended?this._extAdd(l):this._projAdd(l)},Point.prototype.mul=function(l){return this._hasDoubles(l)?this.curve._fixedNafMul(this,l):this.curve._wnafMul(this,l)},Point.prototype.mulAdd=function(l,m,n){return this.curve._wnafMulAdd(1,[this,m],[l,n],2,!1)},Point.prototype.jmulAdd=function(l,m,n){return this.curve._wnafMulAdd(1,[this,m],[l,n],2,!0)},Point.prototype.normalize=function(){if(this.zOne)return this;// Normalize coordinates
var l=this.z.redInvm();return this.x=this.x.redMul(l),this.y=this.y.redMul(l),this.t&&(this.t=this.t.redMul(l)),this.z=this.curve.one,this.zOne=!0,this},Point.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},Point.prototype.getX=function(){return this.normalize(),this.x.fromRed()},Point.prototype.getY=function(){return this.normalize(),this.y.fromRed()},Point.prototype.eq=function(l){return this===l||0===this.getX().cmp(l.getX())&&0===this.getY().cmp(l.getY())},Point.prototype.eqXToP=function(l){var m=l.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(m))return!0;for(var n=l.clone(),o=this.curve.redN.redMul(this.z);;){if(n.iadd(this.curve.n),0<=n.cmp(this.curve.p))return!1;if(m.redIAdd(o),0===this.x.cmp(m))return!0}return!1},Point.prototype.toP=Point.prototype.normalize,Point.prototype.mixedAdd=Point.prototype.add;

},{"../../elliptic":85,"../curve":88,"bn.js":30,"inherits":160}],88:[function(require,module,exports){
'use strict';var curve=exports;curve.base=require('./base'),curve.short=require('./short'),curve.mont=require('./mont'),curve.edwards=require('./edwards');

},{"./base":86,"./edwards":87,"./mont":89,"./short":90}],89:[function(require,module,exports){
'use strict';var curve=require('../curve'),BN=require('bn.js'),inherits=require('inherits'),Base=curve.base,elliptic=require('../../elliptic'),utils=elliptic.utils;function MontCurve(e){Base.call(this,'mont',e),this.a=new BN(e.a,16).toRed(this.red),this.b=new BN(e.b,16).toRed(this.red),this.i4=new BN(4).toRed(this.red).redInvm(),this.two=new BN(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}inherits(MontCurve,Base),module.exports=MontCurve,MontCurve.prototype.validate=function(f){var g=f.normalize().x,h=g.redSqr(),j=h.redMul(g).redAdd(h.redMul(this.a)).redAdd(g),l=j.redSqrt();return 0===l.redSqr().cmp(j)};function Point(e,f,g){Base.BasePoint.call(this,e,'projective'),null===f&&null===g?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new BN(f,16),this.z=new BN(g,16),!this.x.red&&(this.x=this.x.toRed(this.curve.red)),!this.z.red&&(this.z=this.z.toRed(this.curve.red)))}inherits(Point,Base.BasePoint),MontCurve.prototype.decodePoint=function(f,g){return this.point(utils.toArray(f,g),1)},MontCurve.prototype.point=function(f,g){return new Point(this,f,g)},MontCurve.prototype.pointFromJSON=function(f){return Point.fromJSON(this,f)},Point.prototype.precompute=function(){// No-op
},Point.prototype._encode=function(){return this.getX().toArray('be',this.curve.p.byteLength())},Point.fromJSON=function(f,g){return new Point(f,g[0],g[1]||f.one)},Point.prototype.inspect=function(){return this.isInfinity()?'<EC Point Infinity>':'<EC Point x: '+this.x.fromRed().toString(16,2)+' z: '+this.z.fromRed().toString(16,2)+'>'},Point.prototype.isInfinity=function(){// XXX This code assumes that zero is always zero in red
return 0===this.z.cmpn(0)},Point.prototype.dbl=function(){// http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
// 2M + 2S + 4A
// A = X1 + Z1
var f=this.x.redAdd(this.z),g=f.redSqr(),h=this.x.redSub(this.z),j=h.redSqr(),l=g.redSub(j),m=g.redMul(j),n=l.redMul(j.redAdd(this.curve.a24.redMul(l)));// AA = A^2
// B = X1 - Z1
// BB = B^2
// C = AA - BB
// X3 = AA * BB
// Z3 = C * (BB + A24 * C)
return this.curve.point(m,n)},Point.prototype.add=function(){throw new Error('Not supported on Montgomery curve')},Point.prototype.diffAdd=function(f,g){// http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
// 4M + 2S + 6A
// A = X2 + Z2
var h=this.x.redAdd(this.z),j=this.x.redSub(this.z),l=f.x.redAdd(f.z),m=f.x.redSub(f.z),n=m.redMul(h),o=l.redMul(j),q=g.z.redMul(n.redAdd(o).redSqr()),r=g.x.redMul(n.redISub(o).redSqr());// B = X2 - Z2
// C = X3 + Z3
// D = X3 - Z3
// DA = D * A
// CB = C * B
// X5 = Z1 * (DA + CB)^2
// Z5 = X1 * (DA - CB)^2
return this.curve.point(q,r)},Point.prototype.mul=function(f){var g=f.clone(),h=this,j=this.curve.point(null,null),l=this;// (N / 2) * Q + Q
// (N / 2) * Q
// Q
for(var m=[];0!==g.cmpn(0);g.iushrn(1))m.push(g.andln(1));for(var n=m.length-1;0<=n;n--)0===m[n]?(h=h.diffAdd(j,l),j=j.dbl()):(j=h.diffAdd(j,l),h=h.dbl());return j},Point.prototype.mulAdd=function(){throw new Error('Not supported on Montgomery curve')},Point.prototype.jumlAdd=function(){throw new Error('Not supported on Montgomery curve')},Point.prototype.eq=function(f){return 0===this.getX().cmp(f.getX())},Point.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},Point.prototype.getX=function(){return this.normalize(),this.x.fromRed()};

},{"../../elliptic":85,"../curve":88,"bn.js":30,"inherits":160}],90:[function(require,module,exports){
'use strict';var curve=require('../curve'),elliptic=require('../../elliptic'),BN=require('bn.js'),inherits=require('inherits'),Base=curve.base,assert=elliptic.utils.assert;function ShortCurve(g){Base.call(this,'short',g),this.a=new BN(g.a,16).toRed(this.red),this.b=new BN(g.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(g),this._endoWnafT1=[,,,,],this._endoWnafT2=[,,,,]}inherits(ShortCurve,Base),module.exports=ShortCurve,ShortCurve.prototype._getEndomorphism=function(l){// No efficient endomorphism
if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){// Compute beta and lambda, that lambda * P = (beta * Px; Py)
var n,o;if(l.beta)n=new BN(l.beta,16).toRed(this.red);else{var w=this._getEndoRoots(this.p);// Choose the smallest beta
n=0>w[0].cmp(w[1])?w[0]:w[1],n=n.toRed(this.red)}if(l.lambda)o=new BN(l.lambda,16);else{// Choose the lambda that is matching selected beta
var A=this._getEndoRoots(this.n);0===this.g.mul(A[0]).x.cmp(this.g.x.redMul(n))?o=A[0]:(o=A[1],assert(0===this.g.mul(o).x.cmp(this.g.x.redMul(n))))}// Get basis vectors, used for balanced length-two representation
var B;return B=l.basis?l.basis.map(function(C){return{a:new BN(C.a,16),b:new BN(C.b,16)}}):this._getEndoBasis(o),{beta:n,lambda:o,basis:B}}},ShortCurve.prototype._getEndoRoots=function(l){// Find roots of for x^2 + x + 1 in F
// Root = (-1 +- Sqrt(-3)) / 2
//
var n=l===this.p?this.red:BN.mont(l),o=new BN(2).toRed(n).redInvm(),w=o.redNeg(),A=new BN(3).toRed(n).redNeg().redSqrt().redMul(o),B=w.redAdd(A).fromRed(),C=w.redSub(A).fromRed();return[B,C]},ShortCurve.prototype._getEndoBasis=function(l){// 3.74
// Run EGCD, until r(L + 1) < aprxSqrt
// NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
// First vector
// Second vector
for(// aprxSqrt >= sqrt(this.n)
var E,F,G,H,I,J,K,M,N,n=this.n.ushrn(Math.floor(this.n.bitLength()/2)),o=l,w=this.n.clone(),A=new BN(1),B=new BN(0),C=new BN(0),D=new BN(1),L=0;0!==o.cmpn(0);){var O=w.div(o);M=w.sub(O.mul(o)),N=C.sub(O.mul(A));var P=D.sub(O.mul(B));if(!G&&0>M.cmp(n))E=K.neg(),F=A,G=M.neg(),H=N;else if(G&&2==++L)break;K=M,w=o,o=M,C=A,A=N,D=B,B=P}I=M.neg(),J=N;var Q=G.sqr().add(H.sqr()),R=I.sqr().add(J.sqr());return 0<=R.cmp(Q)&&(I=E,J=F),G.negative&&(G=G.neg(),H=H.neg()),I.negative&&(I=I.neg(),J=J.neg()),[{a:G,b:H},{a:I,b:J}]},ShortCurve.prototype._endoSplit=function(l){var n=this.endo.basis,o=n[0],w=n[1],A=w.b.mul(l).divRound(this.n),B=o.b.neg().mul(l).divRound(this.n),C=A.mul(o.a),D=B.mul(w.a),E=A.mul(o.b),F=B.mul(w.b),G=l.sub(C).sub(D),H=E.add(F).neg();// Calculate answer
return{k1:G,k2:H}},ShortCurve.prototype.pointFromX=function(l,n){l=new BN(l,16),l.red||(l=l.toRed(this.red));var o=l.redSqr().redMul(l).redIAdd(l.redMul(this.a)).redIAdd(this.b),w=o.redSqrt();if(0!==w.redSqr().redSub(o).cmp(this.zero))throw new Error('invalid point');// XXX Is there any way to tell if the number is odd without converting it
// to non-red form?
var A=w.fromRed().isOdd();return(n&&!A||!n&&A)&&(w=w.redNeg()),this.point(l,w)},ShortCurve.prototype.validate=function(l){if(l.inf)return!0;var n=l.x,o=l.y,w=this.a.redMul(n),A=n.redSqr().redMul(n).redIAdd(w).redIAdd(this.b);return 0===o.redSqr().redISub(A).cmpn(0)},ShortCurve.prototype._endoWnafMulAdd=function(l,n,o){var w=this._endoWnafT1,A=this._endoWnafT2;for(var B=0;B<l.length;B++){var C=this._endoSplit(n[B]),D=l[B],E=D._getBeta();C.k1.negative&&(C.k1.ineg(),D=D.neg(!0)),C.k2.negative&&(C.k2.ineg(),E=E.neg(!0)),w[2*B]=D,w[2*B+1]=E,A[2*B]=C.k1,A[2*B+1]=C.k2}var F=this._wnafMulAdd(1,w,A,2*B,o);// Clean-up references to points and coefficients
for(var G=0;G<2*B;G++)w[G]=null,A[G]=null;return F};function Point(g,l,n,o){Base.BasePoint.call(this,g,'affine'),null===l&&null===n?(this.x=null,this.y=null,this.inf=!0):(this.x=new BN(l,16),this.y=new BN(n,16),o&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),!this.x.red&&(this.x=this.x.toRed(this.curve.red)),!this.y.red&&(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}inherits(Point,Base.BasePoint),ShortCurve.prototype.point=function(l,n,o){return new Point(this,l,n,o)},ShortCurve.prototype.pointFromJSON=function(l,n){return Point.fromJSON(this,l,n)},Point.prototype._getBeta=function(){if(this.curve.endo){var l=this.precomputed;if(l&&l.beta)return l.beta;var n=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(l){var o=this.curve,w=function w(A){return o.point(A.x.redMul(o.endo.beta),A.y)};l.beta=n,n.precomputed={beta:null,naf:l.naf&&{wnd:l.naf.wnd,points:l.naf.points.map(w)},doubles:l.doubles&&{step:l.doubles.step,points:l.doubles.points.map(w)}}}return n}},Point.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},Point.fromJSON=function(l,n,o){function w(C){return l.point(C[0],C[1],o)}'string'==typeof n&&(n=JSON.parse(n));var A=l.point(n[0],n[1],o);if(!n[2])return A;var B=n[2];return A.precomputed={beta:null,doubles:B.doubles&&{step:B.doubles.step,points:[A].concat(B.doubles.points.map(w))},naf:B.naf&&{wnd:B.naf.wnd,points:[A].concat(B.naf.points.map(w))}},A},Point.prototype.inspect=function(){return this.isInfinity()?'<EC Point Infinity>':'<EC Point x: '+this.x.fromRed().toString(16,2)+' y: '+this.y.fromRed().toString(16,2)+'>'},Point.prototype.isInfinity=function(){return this.inf},Point.prototype.add=function(l){// O + P = P
if(this.inf)return l;// P + O = P
if(l.inf)return this;// P + P = 2P
if(this.eq(l))return this.dbl();// P + (-P) = O
if(this.neg().eq(l))return this.curve.point(null,null);// P + Q = O
if(0===this.x.cmp(l.x))return this.curve.point(null,null);var n=this.y.redSub(l.y);0!==n.cmpn(0)&&(n=n.redMul(this.x.redSub(l.x).redInvm()));var o=n.redSqr().redISub(this.x).redISub(l.x),w=n.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,w)},Point.prototype.dbl=function(){if(this.inf)return this;// 2P = O
var l=this.y.redAdd(this.y);if(0===l.cmpn(0))return this.curve.point(null,null);var n=this.curve.a,o=this.x.redSqr(),w=l.redInvm(),A=o.redAdd(o).redIAdd(o).redIAdd(n).redMul(w),B=A.redSqr().redISub(this.x.redAdd(this.x)),C=A.redMul(this.x.redSub(B)).redISub(this.y);return this.curve.point(B,C)},Point.prototype.getX=function(){return this.x.fromRed()},Point.prototype.getY=function(){return this.y.fromRed()},Point.prototype.mul=function(l){return(l=new BN(l,16),this._hasDoubles(l))?this.curve._fixedNafMul(this,l):this.curve.endo?this.curve._endoWnafMulAdd([this],[l]):this.curve._wnafMul(this,l)},Point.prototype.mulAdd=function(l,n,o){var w=[this,n],A=[l,o];return this.curve.endo?this.curve._endoWnafMulAdd(w,A):this.curve._wnafMulAdd(1,w,A,2)},Point.prototype.jmulAdd=function(l,n,o){var w=[this,n],A=[l,o];return this.curve.endo?this.curve._endoWnafMulAdd(w,A,!0):this.curve._wnafMulAdd(1,w,A,2,!0)},Point.prototype.eq=function(l){return this===l||this.inf===l.inf&&(this.inf||0===this.x.cmp(l.x)&&0===this.y.cmp(l.y))},Point.prototype.neg=function(l){if(this.inf)return this;var n=this.curve.point(this.x,this.y.redNeg());if(l&&this.precomputed){var o=this.precomputed,w=function w(A){return A.neg()};n.precomputed={naf:o.naf&&{wnd:o.naf.wnd,points:o.naf.points.map(w)},doubles:o.doubles&&{step:o.doubles.step,points:o.doubles.points.map(w)}}}return n},Point.prototype.toJ=function(){if(this.inf)return this.curve.jpoint(null,null,null);var l=this.curve.jpoint(this.x,this.y,this.curve.one);return l};function JPoint(g,l,n,o){Base.BasePoint.call(this,g,'jacobian'),null===l&&null===n&&null===o?(this.x=this.curve.one,this.y=this.curve.one,this.z=new BN(0)):(this.x=new BN(l,16),this.y=new BN(n,16),this.z=new BN(o,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}inherits(JPoint,Base.BasePoint),ShortCurve.prototype.jpoint=function(l,n,o){return new JPoint(this,l,n,o)},JPoint.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var l=this.z.redInvm(),n=l.redSqr(),o=this.x.redMul(n),w=this.y.redMul(n).redMul(l);return this.curve.point(o,w)},JPoint.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},JPoint.prototype.add=function(l){// O + P = P
if(this.isInfinity())return l;// P + O = P
if(l.isInfinity())return this;// 12M + 4S + 7A
var n=l.z.redSqr(),o=this.z.redSqr(),w=this.x.redMul(n),A=l.x.redMul(o),B=this.y.redMul(n.redMul(l.z)),C=l.y.redMul(o.redMul(this.z)),D=w.redSub(A),E=B.redSub(C);if(0===D.cmpn(0)){if(0!==E.cmpn(0))return this.curve.jpoint(null,null,null);return this.dbl()}var F=D.redSqr(),G=F.redMul(D),H=w.redMul(F),I=E.redSqr().redIAdd(G).redISub(H).redISub(H),J=E.redMul(H.redISub(I)).redISub(B.redMul(G)),K=this.z.redMul(l.z).redMul(D);return this.curve.jpoint(I,J,K)},JPoint.prototype.mixedAdd=function(l){// O + P = P
if(this.isInfinity())return l.toJ();// P + O = P
if(l.isInfinity())return this;// 8M + 3S + 7A
var n=this.z.redSqr(),o=this.x,w=l.x.redMul(n),A=this.y,B=l.y.redMul(n).redMul(this.z),C=o.redSub(w),D=A.redSub(B);if(0===C.cmpn(0)){if(0!==D.cmpn(0))return this.curve.jpoint(null,null,null);return this.dbl()}var E=C.redSqr(),F=E.redMul(C),G=o.redMul(E),H=D.redSqr().redIAdd(F).redISub(G).redISub(G),I=D.redMul(G.redISub(H)).redISub(A.redMul(F)),J=this.z.redMul(C);return this.curve.jpoint(H,I,J)},JPoint.prototype.dblp=function(l){if(0===l)return this;if(this.isInfinity())return this;if(!l)return this.dbl();if(this.curve.zeroA||this.curve.threeA){var n=this;for(var o=0;o<l;o++)n=n.dbl();return n}// 1M + 2S + 1A + N * (4S + 5M + 8A)
// N = 1 => 6M + 6S + 9A
var w=this.curve.a,A=this.curve.tinv,B=this.x,C=this.y,D=this.z,E=D.redSqr().redSqr(),F=C.redAdd(C);// Reuse results
for(var o=0;o<l;o++){var G=B.redSqr(),H=F.redSqr(),I=H.redSqr(),J=G.redAdd(G).redIAdd(G).redIAdd(w.redMul(E)),K=B.redMul(H),L=J.redSqr().redISub(K.redAdd(K)),M=K.redISub(L),N=J.redMul(M);N=N.redIAdd(N).redISub(I);var O=F.redMul(D);o+1<l&&(E=E.redMul(I)),B=L,D=O,F=N}return this.curve.jpoint(B,F.redMul(A),D)},JPoint.prototype.dbl=function(){if(this.isInfinity())return this;return this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},JPoint.prototype._zeroDbl=function(){var l,n,o;// Z = 1
if(this.zOne){// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
//     #doubling-mdbl-2007-bl
// 1M + 5S + 14A
// XX = X1^2
var w=this.x.redSqr(),A=this.y.redSqr(),B=A.redSqr(),C=this.x.redAdd(A).redSqr().redISub(w).redISub(B);// YY = Y1^2
// YYYY = YY^2
// S = 2 * ((X1 + YY)^2 - XX - YYYY)
C=C.redIAdd(C);// M = 3 * XX + a; a = 0
var D=w.redAdd(w).redIAdd(w),E=D.redSqr().redISub(C).redISub(C),F=B.redIAdd(B);// T = M ^ 2 - 2*S
// 8 * YYYY
F=F.redIAdd(F),F=F.redIAdd(F),l=E,n=D.redMul(C.redISub(E)).redISub(F),o=this.y.redAdd(this.y)}else{// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
//     #doubling-dbl-2009-l
// 2M + 5S + 13A
// A = X1^2
var G=this.x.redSqr(),H=this.y.redSqr(),I=H.redSqr(),J=this.x.redAdd(H).redSqr().redISub(G).redISub(I);// B = Y1^2
// C = B^2
// D = 2 * ((X1 + B)^2 - A - C)
J=J.redIAdd(J);// E = 3 * A
var K=G.redAdd(G).redIAdd(G),L=K.redSqr(),M=I.redIAdd(I);// F = E^2
// 8 * C
M=M.redIAdd(M),M=M.redIAdd(M),l=L.redISub(J).redISub(J),n=K.redMul(J.redISub(l)).redISub(M),o=this.y.redMul(this.z),o=o.redIAdd(o)}return this.curve.jpoint(l,n,o)},JPoint.prototype._threeDbl=function(){var l,n,o;// Z = 1
if(this.zOne){// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
//     #doubling-mdbl-2007-bl
// 1M + 5S + 15A
// XX = X1^2
var w=this.x.redSqr(),A=this.y.redSqr(),B=A.redSqr(),C=this.x.redAdd(A).redSqr().redISub(w).redISub(B);// YY = Y1^2
// YYYY = YY^2
// S = 2 * ((X1 + YY)^2 - XX - YYYY)
C=C.redIAdd(C);// M = 3 * XX + a
var D=w.redAdd(w).redIAdd(w).redIAdd(this.curve.a),E=D.redSqr().redISub(C).redISub(C);// T = M^2 - 2 * S
// X3 = T
l=E;// Y3 = M * (S - T) - 8 * YYYY
var F=B.redIAdd(B);F=F.redIAdd(F),F=F.redIAdd(F),n=D.redMul(C.redISub(E)).redISub(F),o=this.y.redAdd(this.y)}else{// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
// 3M + 5S
// delta = Z1^2
var G=this.z.redSqr(),H=this.y.redSqr(),I=this.x.redMul(H),J=this.x.redSub(G).redMul(this.x.redAdd(G));// gamma = Y1^2
// beta = X1 * gamma
// alpha = 3 * (X1 - delta) * (X1 + delta)
J=J.redAdd(J).redIAdd(J);// X3 = alpha^2 - 8 * beta
var K=I.redIAdd(I);K=K.redIAdd(K);var L=K.redAdd(K);l=J.redSqr().redISub(L),o=this.y.redAdd(this.z).redSqr().redISub(H).redISub(G);// Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
var M=H.redSqr();M=M.redIAdd(M),M=M.redIAdd(M),M=M.redIAdd(M),n=J.redMul(K.redISub(l)).redISub(M)}return this.curve.jpoint(l,n,o)},JPoint.prototype._dbl=function(){var l=this.curve.a,n=this.x,o=this.y,w=this.z,A=w.redSqr().redSqr(),B=n.redSqr(),C=o.redSqr(),D=B.redAdd(B).redIAdd(B).redIAdd(l.redMul(A)),E=n.redAdd(n);// 4M + 6S + 10A
E=E.redIAdd(E);var F=E.redMul(C),G=D.redSqr().redISub(F.redAdd(F)),H=F.redISub(G),I=C.redSqr();I=I.redIAdd(I),I=I.redIAdd(I),I=I.redIAdd(I);var J=D.redMul(H).redISub(I),K=o.redAdd(o).redMul(w);return this.curve.jpoint(G,J,K)},JPoint.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
// 5M + 10S + ...
// XX = X1^2
var l=this.x.redSqr(),n=this.y.redSqr(),o=this.z.redSqr(),w=n.redSqr(),A=l.redAdd(l).redIAdd(l),B=A.redSqr(),C=this.x.redAdd(n).redSqr().redISub(l).redISub(w);// YY = Y1^2
// ZZ = Z1^2
// YYYY = YY^2
// M = 3 * XX + a * ZZ2; a = 0
// MM = M^2
// E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
C=C.redIAdd(C),C=C.redAdd(C).redIAdd(C),C=C.redISub(B);// EE = E^2
var D=C.redSqr(),E=w.redIAdd(w);// T = 16*YYYY
E=E.redIAdd(E),E=E.redIAdd(E),E=E.redIAdd(E);// U = (M + E)^2 - MM - EE - T
var F=A.redIAdd(C).redSqr().redISub(B).redISub(D).redISub(E),G=n.redMul(F);// X3 = 4 * (X1 * EE - 4 * YY * U)
G=G.redIAdd(G),G=G.redIAdd(G);var H=this.x.redMul(D).redISub(G);H=H.redIAdd(H),H=H.redIAdd(H);// Y3 = 8 * Y1 * (U * (T - U) - E * EE)
var I=this.y.redMul(F.redMul(E.redISub(F)).redISub(C.redMul(D)));I=I.redIAdd(I),I=I.redIAdd(I),I=I.redIAdd(I);// Z3 = (Z1 + E)^2 - ZZ - EE
var J=this.z.redAdd(C).redSqr().redISub(o).redISub(D);return this.curve.jpoint(H,I,J)},JPoint.prototype.mul=function(l,n){return l=new BN(l,n),this.curve._wnafMul(this,l)},JPoint.prototype.eq=function(l){if('affine'===l.type)return this.eq(l.toJ());if(this===l)return!0;// x1 * z2^2 == x2 * z1^2
var n=this.z.redSqr(),o=l.z.redSqr();if(0!==this.x.redMul(o).redISub(l.x.redMul(n)).cmpn(0))return!1;// y1 * z2^3 == y2 * z1^3
var w=n.redMul(this.z),A=o.redMul(l.z);return 0===this.y.redMul(A).redISub(l.y.redMul(w)).cmpn(0)},JPoint.prototype.eqXToP=function(l){var n=this.z.redSqr(),o=l.toRed(this.curve.red).redMul(n);if(0===this.x.cmp(o))return!0;for(var w=l.clone(),A=this.curve.redN.redMul(n);;){if(w.iadd(this.curve.n),0<=w.cmp(this.curve.p))return!1;if(o.redIAdd(A),0===this.x.cmp(o))return!0}return!1},JPoint.prototype.inspect=function(){return this.isInfinity()?'<EC JPoint Infinity>':'<EC JPoint x: '+this.x.toString(16,2)+' y: '+this.y.toString(16,2)+' z: '+this.z.toString(16,2)+'>'},JPoint.prototype.isInfinity=function(){// XXX This code assumes that zero is always zero in red
return 0===this.z.cmpn(0)};

},{"../../elliptic":85,"../curve":88,"bn.js":30,"inherits":160}],91:[function(require,module,exports){
'use strict';var curves=exports,hash=require('hash.js'),elliptic=require('../elliptic'),assert=elliptic.utils.assert;function PresetCurve(a){this.curve='short'===a.type?new elliptic.curve.short(a):'edwards'===a.type?new elliptic.curve.edwards(a):new elliptic.curve.mont(a),this.g=this.curve.g,this.n=this.curve.n,this.hash=a.hash,assert(this.g.validate(),'Invalid curve'),assert(this.g.mul(this.n).isInfinity(),'Invalid curve, G*N != O')}curves.PresetCurve=PresetCurve;function defineCurve(a,b){Object.defineProperty(curves,a,{configurable:!0,enumerable:!0,get:function get(){var c=new PresetCurve(b);return Object.defineProperty(curves,a,{configurable:!0,enumerable:!0,value:c}),c}})}defineCurve('p192',{type:'short',prime:'p192',p:'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',a:'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',b:'64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',n:'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',hash:hash.sha256,gRed:!1,g:['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012','07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']}),defineCurve('p224',{type:'short',prime:'p224',p:'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',a:'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',b:'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',n:'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',hash:hash.sha256,gRed:!1,g:['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21','bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']}),defineCurve('p256',{type:'short',prime:null,p:'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',a:'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',b:'5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',n:'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',hash:hash.sha256,gRed:!1,g:['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296','4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']}),defineCurve('p384',{type:'short',prime:null,p:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff',a:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc',b:'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',n:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',hash:hash.sha384,gRed:!1,g:['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7','3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']}),defineCurve('p521',{type:'short',prime:null,p:'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff',a:'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc',b:'00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',n:'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',hash:hash.sha512,gRed:!1,g:['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66','00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650']}),defineCurve('curve25519',{type:'mont',prime:'p25519',p:'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',a:'76d06',b:'0',n:'1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',hash:hash.sha256,gRed:!1,g:['9']}),defineCurve('ed25519',{type:'edwards',prime:'p25519',p:'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',a:'-1',c:'1',// -121665 * (121666^(-1)) (mod P)
d:'52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',n:'1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',hash:hash.sha256,gRed:!1,g:['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a','6666666666666666666666666666666666666666666666666666666666666658']});var pre;try{pre=require('./precomputed/secp256k1')}catch(a){pre=void 0}defineCurve('secp256k1',{type:'short',prime:'k256',p:'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',a:'0',b:'7',n:'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',h:'1',hash:hash.sha256,// Precomputed endomorphism
beta:'7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',lambda:'5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',basis:[{a:'3086d221a7d46bcde86c90e49284eb15',b:'-e4437ed6010e88286f547fa90abfe4c3'},{a:'114ca50f7a8e2f3f657c1108d9d44cfd8',b:'3086d221a7d46bcde86c90e49284eb15'}],gRed:!1,g:['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798','483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',pre]});

},{"../elliptic":85,"./precomputed/secp256k1":99,"hash.js":151}],92:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},BN=require('bn.js'),elliptic=require('../../elliptic'),utils=elliptic.utils,assert=utils.assert,KeyPair=require('./key'),Signature=require('./signature');function EC(a){return this instanceof EC?void('string'==typeof a&&(assert(elliptic.curves.hasOwnProperty(a),'Unknown curve '+a),a=elliptic.curves[a]),a instanceof elliptic.curves.PresetCurve&&(a={curve:a}),this.curve=a.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=a.curve.g,this.g.precompute(a.curve.n.bitLength()+1),this.hash=a.hash||a.curve.hash):new EC(a);// Shortcut `elliptic.ec(curve-name)`
}module.exports=EC,EC.prototype.keyPair=function(b){return new KeyPair(this,b)},EC.prototype.keyFromPrivate=function(b,c){return KeyPair.fromPrivate(this,b,c)},EC.prototype.keyFromPublic=function(b,c){return KeyPair.fromPublic(this,b,c)},EC.prototype.genKeyPair=function(b){b||(b={});// Instantiate Hmac_DRBG
var c=new elliptic.hmacDRBG({hash:this.hash,pers:b.pers,entropy:b.entropy||elliptic.rand(this.hash.hmacStrength),nonce:this.n.toArray()}),d=this.n.byteLength(),f=this.n.sub(new BN(2));do{var g=new BN(c.generate(d));if(0<g.cmp(f))continue;return g.iaddn(1),this.keyFromPrivate(g)}while(!0)},EC.prototype._truncateToN=function(b,c){var d=8*b.byteLength()-this.n.bitLength();return 0<d&&(b=b.ushrn(d)),!c&&0<=b.cmp(this.n)?b.sub(this.n):b},EC.prototype.sign=function(b,c,d,f){'object'==('undefined'==typeof d?'undefined':_typeof(d))&&(f=d,d=null),f||(f={}),c=this.keyFromPrivate(c,d),b=this._truncateToN(new BN(b,16));// Zero-extend key to provide enough entropy
var g=this.n.byteLength(),h=c.getPrivate().toArray('be',g),l=b.toArray('be',g),m=new elliptic.hmacDRBG({hash:this.hash,entropy:h,nonce:l,pers:f.pers,persEnc:f.persEnc}),o=this.n.sub(new BN(1));// Zero-extend nonce to have the same byte size as N
// Instantiate Hmac_DRBG
// Number of bytes to generate
for(var q=0;;q++){var t=f.k?f.k(q):new BN(m.generate(this.n.byteLength()));// Use complement of `s`, if it is > `n / 2`
if(t=this._truncateToN(t,!0),!(0>=t.cmpn(1)||0<=t.cmp(o))){var u=this.g.mul(t);if(!u.isInfinity()){var v=u.getX(),w=v.umod(this.n);if(0!==w.cmpn(0)){var x=t.invm(this.n).mul(w.mul(c.getPrivate()).iadd(b));if(x=x.umod(this.n),0!==x.cmpn(0)){var y=(u.getY().isOdd()?1:0)|(0===v.cmp(w)?0:2);return f.canonical&&0<x.cmp(this.nh)&&(x=this.n.sub(x),y^=1),new Signature({r:w,s:x,recoveryParam:y})}}}}}},EC.prototype.verify=function(b,c,d,f){b=this._truncateToN(new BN(b,16)),d=this.keyFromPublic(d,f),c=new Signature(c,'hex');// Perform primitive values validation
var g=c.r,h=c.s;if(0>g.cmpn(1)||0<=g.cmp(this.n))return!1;if(0>h.cmpn(1)||0<=h.cmp(this.n))return!1;// Validate signature
var l=h.invm(this.n),m=l.mul(b).umod(this.n),o=l.mul(g).umod(this.n);if(!this.curve._maxwellTrick){var q=this.g.mulAdd(m,d.getPublic(),o);return!q.isInfinity()&&0===q.getX().umod(this.n).cmp(g)}// NOTE: Greg Maxwell's trick, inspired by:
// https://git.io/vad3K
var q=this.g.jmulAdd(m,d.getPublic(),o);return!q.isInfinity()&&q.eqXToP(g);// Compare `p.x` of Jacobian point with `r`,
// this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
// inverse of `p.z^2`
},EC.prototype.recoverPubKey=function(a,b,c,d){assert((3&c)===c,'The recovery param is more than two bits'),b=new Signature(b,d);var f=this.n,g=new BN(a),h=b.r,l=b.s,m=1&c,o=c>>1;// A set LSB signifies that the y-coordinate is odd
if(0<=h.cmp(this.curve.p.umod(this.curve.n))&&o)throw new Error('Unable to find sencond key candinate');// 1.1. Let x = r + jn.
h=o?this.curve.pointFromX(h.add(this.curve.n),m):this.curve.pointFromX(h,m);var q=b.r.invm(f),t=f.sub(g).mul(q).umod(f),u=l.mul(q).umod(f);// 1.6.1 Compute Q = r^-1 (sR -  eG)
//               Q = r^-1 (sR + -eG)
return this.g.mulAdd(t,h,u)},EC.prototype.getKeyRecoveryParam=function(a,b,c,d){if(b=new Signature(b,d),null!==b.recoveryParam)return b.recoveryParam;for(var f=0;4>f;f++){var g;try{g=this.recoverPubKey(a,b,f)}catch(h){continue}if(g.eq(c))return f}throw new Error('Unable to find valid recovery factor')};

},{"../../elliptic":85,"./key":93,"./signature":94,"bn.js":30}],93:[function(require,module,exports){
'use strict';var BN=require('bn.js');function KeyPair(a,b){this.ec=a,this.priv=null,this.pub=null,b.priv&&this._importPrivate(b.priv,b.privEnc),b.pub&&this._importPublic(b.pub,b.pubEnc)}module.exports=KeyPair,KeyPair.fromPublic=function(b,c,d){return c instanceof KeyPair?c:new KeyPair(b,{pub:c,pubEnc:d})},KeyPair.fromPrivate=function(b,c,d){return c instanceof KeyPair?c:new KeyPair(b,{priv:c,privEnc:d})},KeyPair.prototype.validate=function(){var b=this.getPublic();return b.isInfinity()?{result:!1,reason:'Invalid public key'}:b.validate()?b.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:'Public key * N != O'}:{result:!1,reason:'Public key is not a point'}},KeyPair.prototype.getPublic=function(b,c){return'string'==typeof b&&(c=b,b=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),c?this.pub.encode(c,b):this.pub},KeyPair.prototype.getPrivate=function(b){return'hex'===b?this.priv.toString(16,2):this.priv},KeyPair.prototype._importPrivate=function(b,c){this.priv=new BN(b,c||16),this.priv=this.priv.umod(this.ec.curve.n)},KeyPair.prototype._importPublic=function(b,c){return b.x||b.y?void(this.pub=this.ec.curve.point(b.x,b.y)):void(this.pub=this.ec.curve.decodePoint(b,c))},KeyPair.prototype.derive=function(b){return b.mul(this.priv).getX()},KeyPair.prototype.sign=function(b,c,d){return this.ec.sign(b,this,c,d)},KeyPair.prototype.verify=function(b,c){return this.ec.verify(b,c,this)},KeyPair.prototype.inspect=function(){return'<Key priv: '+(this.priv&&this.priv.toString(16,2))+' pub: '+(this.pub&&this.pub.inspect())+' >'};

},{"bn.js":30}],94:[function(require,module,exports){
'use strict';var BN=require('bn.js'),elliptic=require('../../elliptic'),utils=elliptic.utils,assert=utils.assert;function Signature(a,b){return a instanceof Signature?a:void(!this._importDER(a,b)&&(assert(a.r&&a.s,'Signature without r or s'),this.r=new BN(a.r,16),this.s=new BN(a.s,16),this.recoveryParam=void 0===a.recoveryParam?null:a.recoveryParam))}module.exports=Signature;function Position(){this.place=0}function getLength(a,b){var c=a[b.place++];if(!(128&c))return c;var d=0;for(var e=0,f=b.place;e<(15&c);e++,f++)d<<=8,d|=a[f];return b.place=f,d}function rmPadding(a){for(var b=0,c=a.length-1;!a[b]&&!(128&a[b+1])&&b<c;)b++;return 0===b?a:a.slice(b)}Signature.prototype._importDER=function(b,c){b=utils.toArray(b,c);var d=new Position;if(48!==b[d.place++])return!1;var e=getLength(b,d);if(e+d.place!==b.length)return!1;if(2!==b[d.place++])return!1;var f=getLength(b,d),g=b.slice(d.place,f+d.place);if(d.place+=f,2!==b[d.place++])return!1;var h=getLength(b,d);if(b.length!==h+d.place)return!1;var j=b.slice(d.place,h+d.place);return 0===g[0]&&128&g[1]&&(g=g.slice(1)),0===j[0]&&128&j[1]&&(j=j.slice(1)),this.r=new BN(g),this.s=new BN(j),this.recoveryParam=null,!0};function constructLength(a,b){if(128>b)return void a.push(b);var c=1+(Math.log(b)/Math.LN2>>>3);for(a.push(128|c);--c;)a.push(255&b>>>(c<<3));a.push(b)}Signature.prototype.toDER=function(b){var c=this.r.toArray(),d=this.s.toArray();// Pad values
for(128&c[0]&&(c=[0].concat(c)),128&d[0]&&(d=[0].concat(d)),c=rmPadding(c),d=rmPadding(d);!d[0]&&!(128&d[1]);)d=d.slice(1);var e=[2];constructLength(e,c.length),e=e.concat(c),e.push(2),constructLength(e,d.length);var f=e.concat(d),g=[48];return constructLength(g,f.length),g=g.concat(f),utils.encode(g,b)};

},{"../../elliptic":85,"bn.js":30}],95:[function(require,module,exports){
'use strict';var hash=require('hash.js'),elliptic=require('../../elliptic'),utils=elliptic.utils,assert=utils.assert,parseBytes=utils.parseBytes,KeyPair=require('./key'),Signature=require('./signature');function EDDSA(a){if(assert('ed25519'===a,'only tested with ed25519 so far'),!(this instanceof EDDSA))return new EDDSA(a);var a=elliptic.curves[a].curve;this.curve=a,this.g=a.g,this.g.precompute(a.n.bitLength()+1),this.pointClass=a.point().constructor,this.encodingLength=Math.ceil(a.n.bitLength()/8),this.hash=hash.sha512}module.exports=EDDSA,EDDSA.prototype.sign=function(b,c){b=parseBytes(b);var d=this.keyFromSecret(c),e=this.hashInt(d.messagePrefix(),b),f=this.g.mul(e),g=this.encodePoint(f),j=this.hashInt(g,d.pubBytes(),b).mul(d.priv()),k=e.add(j).umod(this.curve.n);return this.makeSignature({R:f,S:k,Rencoded:g})},EDDSA.prototype.verify=function(b,c,d){b=parseBytes(b),c=this.makeSignature(c);var e=this.keyFromPublic(d),f=this.hashInt(c.Rencoded(),e.pubBytes(),b),g=this.g.mul(c.S()),j=c.R().add(e.pub().mul(f));return j.eq(g)},EDDSA.prototype.hashInt=function(){var b=this.hash();for(var c=0;c<arguments.length;c++)b.update(arguments[c]);return utils.intFromLE(b.digest()).umod(this.curve.n)},EDDSA.prototype.keyFromPublic=function(b){return KeyPair.fromPublic(this,b)},EDDSA.prototype.keyFromSecret=function(b){return KeyPair.fromSecret(this,b)},EDDSA.prototype.makeSignature=function(b){return b instanceof Signature?b:new Signature(this,b)},EDDSA.prototype.encodePoint=function(b){var c=b.getY().toArray('le',this.encodingLength);return c[this.encodingLength-1]|=b.getX().isOdd()?128:0,c},EDDSA.prototype.decodePoint=function(b){b=utils.parseBytes(b);var c=b.length-1,d=b.slice(0,c).concat(-129&b[c]),e=0!=(128&b[c]),f=utils.intFromLE(d);return this.curve.pointFromY(f,e)},EDDSA.prototype.encodeInt=function(b){return b.toArray('le',this.encodingLength)},EDDSA.prototype.decodeInt=function(b){return utils.intFromLE(b)},EDDSA.prototype.isPoint=function(b){return b instanceof this.pointClass};

},{"../../elliptic":85,"./key":96,"./signature":97,"hash.js":151}],96:[function(require,module,exports){
'use strict';var elliptic=require('../../elliptic'),utils=elliptic.utils,assert=utils.assert,parseBytes=utils.parseBytes,cachedProperty=utils.cachedProperty;/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/function KeyPair(b,c){this.eddsa=b,this._secret=parseBytes(c.secret),b.isPoint(c.pub)?this._pub=c.pub:this._pubBytes=parseBytes(c.pub)}KeyPair.fromPublic=function(c,d){return d instanceof KeyPair?d:new KeyPair(c,{pub:d})},KeyPair.fromSecret=function(c,d){return d instanceof KeyPair?d:new KeyPair(c,{secret:d})},KeyPair.prototype.secret=function(){return this._secret},cachedProperty(KeyPair,'pubBytes',function(){return this.eddsa.encodePoint(this.pub())}),cachedProperty(KeyPair,'pub',function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())}),cachedProperty(KeyPair,'privBytes',function(){var c=this.eddsa,d=this.hash(),e=c.encodingLength-1,f=d.slice(0,c.encodingLength);return f[0]&=248,f[e]&=127,f[e]|=64,f}),cachedProperty(KeyPair,'priv',function(){return this.eddsa.decodeInt(this.privBytes())}),cachedProperty(KeyPair,'hash',function(){return this.eddsa.hash().update(this.secret()).digest()}),cachedProperty(KeyPair,'messagePrefix',function(){return this.hash().slice(this.eddsa.encodingLength)}),KeyPair.prototype.sign=function(c){return assert(this._secret,'KeyPair can only verify'),this.eddsa.sign(c,this)},KeyPair.prototype.verify=function(c,d){return this.eddsa.verify(c,d,this)},KeyPair.prototype.getSecret=function(c){return assert(this._secret,'KeyPair is public only'),utils.encode(this.secret(),c)},KeyPair.prototype.getPublic=function(c){return utils.encode(this.pubBytes(),c)},module.exports=KeyPair;

},{"../../elliptic":85}],97:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},BN=require('bn.js'),elliptic=require('../../elliptic'),utils=elliptic.utils,assert=utils.assert,cachedProperty=utils.cachedProperty,parseBytes=utils.parseBytes;/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/function Signature(a,b){this.eddsa=a,'object'!=('undefined'==typeof b?'undefined':_typeof(b))&&(b=parseBytes(b)),Array.isArray(b)&&(b={R:b.slice(0,a.encodingLength),S:b.slice(a.encodingLength)}),assert(b.R&&b.S,'Signature without R or S'),a.isPoint(b.R)&&(this._R=b.R),b.S instanceof BN&&(this._S=b.S),this._Rencoded=Array.isArray(b.R)?b.R:b.Rencoded,this._Sencoded=Array.isArray(b.S)?b.S:b.Sencoded}cachedProperty(Signature,'S',function(){return this.eddsa.decodeInt(this.Sencoded())}),cachedProperty(Signature,'R',function(){return this.eddsa.decodePoint(this.Rencoded())}),cachedProperty(Signature,'Rencoded',function(){return this.eddsa.encodePoint(this.R())}),cachedProperty(Signature,'Sencoded',function(){return this.eddsa.encodeInt(this.S())}),Signature.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},Signature.prototype.toHex=function(){return utils.encode(this.toBytes(),'hex').toUpperCase()},module.exports=Signature;

},{"../../elliptic":85,"bn.js":30}],98:[function(require,module,exports){
'use strict';var hash=require('hash.js'),elliptic=require('../elliptic'),utils=elliptic.utils,assert=utils.assert;function HmacDRBG(a){if(!(this instanceof HmacDRBG))return new HmacDRBG(a);this.hash=a.hash,this.predResist=!!a.predResist,this.outLen=this.hash.outSize,this.minEntropy=a.minEntropy||this.hash.hmacStrength,this.reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var b=utils.toArray(a.entropy,a.entropyEnc),c=utils.toArray(a.nonce,a.nonceEnc),d=utils.toArray(a.pers,a.persEnc);assert(b.length>=this.minEntropy/8,'Not enough entropy. Minimum is: '+this.minEntropy+' bits'),this._init(b,c,d)}module.exports=HmacDRBG,HmacDRBG.prototype._init=function(b,c,d){var e=b.concat(c).concat(d);this.K=Array(this.outLen/8),this.V=Array(this.outLen/8);for(var f=0;f<this.V.length;f++)this.K[f]=0,this.V[f]=1;this._update(e),this.reseed=1,this.reseedInterval=281474976710656},HmacDRBG.prototype._hmac=function(){return new hash.hmac(this.hash,this.K)},HmacDRBG.prototype._update=function(b){var c=this._hmac().update(this.V).update([0]);b&&(c=c.update(b)),this.K=c.digest(),this.V=this._hmac().update(this.V).digest(),b&&(this.K=this._hmac().update(this.V).update([1]).update(b).digest(),this.V=this._hmac().update(this.V).digest())},HmacDRBG.prototype.reseed=function(b,c,d,e){'string'!=typeof c&&(e=d,d=c,c=null),b=utils.toBuffer(b,c),d=utils.toBuffer(d,e),assert(b.length>=this.minEntropy/8,'Not enough entropy. Minimum is: '+this.minEntropy+' bits'),this._update(b.concat(d||[])),this.reseed=1},HmacDRBG.prototype.generate=function(b,c,d,e){if(this.reseed>this.reseedInterval)throw new Error('Reseed is required');// Optional encoding
'string'!=typeof c&&(e=d,d=c,c=null),d&&(d=utils.toArray(d,e),this._update(d));for(var f=[];f.length<b;)this.V=this._hmac().update(this.V).digest(),f=f.concat(this.V);var g=f.slice(0,b);return this._update(d),this.reseed++,utils.encode(g,c)};

},{"../elliptic":85,"hash.js":151}],99:[function(require,module,exports){
'use strict';module.exports={doubles:{step:4,points:[['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a','f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'],['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508','11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'],['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739','d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'],['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640','4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'],['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c','4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'],['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda','96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'],['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa','5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'],['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0','cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'],['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d','9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'],['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d','e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'],['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1','9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'],['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0','5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'],['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047','10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'],['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862','283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'],['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7','7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'],['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd','56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'],['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83','7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'],['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a','53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'],['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8','bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'],['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d','4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'],['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725','7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'],['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754','4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'],['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c','17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'],['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6','6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'],['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39','c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'],['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891','893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'],['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b','febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'],['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03','2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'],['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d','eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'],['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070','7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'],['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4','e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'],['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da','662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'],['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11','1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'],['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e','efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'],['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41','2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'],['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef','67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'],['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8','db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'],['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d','648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'],['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96','35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'],['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd','ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'],['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5','9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'],['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266','40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'],['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71','34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'],['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac','c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'],['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751','1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'],['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e','493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'],['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241','c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'],['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3','be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'],['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f','4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'],['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19','aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'],['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be','b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'],['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9','6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'],['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2','8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'],['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13','7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'],['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c','ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'],['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba','2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'],['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151','e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'],['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073','d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'],['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458','38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'],['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b','69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'],['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366','d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'],['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa','40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'],['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0','620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'],['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787','7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'],['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e','ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]},naf:{wnd:7,points:[['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9','388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'],['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4','d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'],['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc','6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'],['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe','cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'],['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb','d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'],['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8','ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'],['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e','581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'],['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34','4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'],['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c','85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'],['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5','321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'],['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f','2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'],['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714','73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'],['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729','a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'],['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db','2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'],['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4','e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'],['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5','b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'],['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479','2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'],['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d','80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'],['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f','1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'],['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb','d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'],['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9','eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'],['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963','758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'],['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74','958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'],['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530','e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'],['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b','5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'],['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247','cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'],['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1','cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'],['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120','4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'],['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435','91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'],['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18','673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'],['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8','59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'],['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb','3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'],['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f','55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'],['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143','efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'],['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba','e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'],['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45','f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'],['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a','744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'],['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e','c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'],['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8','e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'],['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c','30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'],['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519','e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'],['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab','100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'],['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca','ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'],['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf','8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'],['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610','68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'],['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4','f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'],['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c','d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'],['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940','edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'],['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980','a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'],['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3','66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'],['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf','9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'],['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63','4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'],['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448','fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'],['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf','5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'],['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5','8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'],['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6','8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'],['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5','5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'],['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99','f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'],['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51','f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'],['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5','42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'],['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5','204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'],['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997','4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'],['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881','73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'],['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5','39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'],['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66','d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'],['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726','ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'],['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede','6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'],['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94','60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'],['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31','3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'],['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51','b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'],['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252','ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'],['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5','cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'],['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b','6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'],['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4','322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'],['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f','6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'],['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889','2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'],['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246','b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'],['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984','998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'],['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a','b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'],['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030','bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'],['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197','6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'],['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593','c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'],['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef','21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'],['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38','60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'],['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a','49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'],['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111','5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'],['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502','7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'],['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea','be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'],['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26','8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'],['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986','39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'],['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e','62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'],['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4','25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'],['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda','ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'],['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859','cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'],['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f','f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'],['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c','6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'],['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942','fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'],['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a','1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'],['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80','5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'],['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d','438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'],['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1','cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'],['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63','c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'],['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352','6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'],['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193','ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'],['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00','9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'],['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58','ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'],['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7','d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'],['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8','c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'],['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e','67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'],['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d','cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'],['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b','299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'],['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f','f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'],['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6','462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'],['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297','62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'],['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a','7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'],['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c','ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'],['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52','4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'],['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb','bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'],['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065','bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'],['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917','603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'],['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9','cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'],['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3','553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'],['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57','712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'],['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66','ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'],['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8','9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'],['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721','9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'],['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180','4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]}};

},{}],100:[function(require,module,exports){
'use strict';var utils=exports,BN=require('bn.js');utils.assert=function(b,d){if(!b)throw new Error(d||'Assertion failed')};function toArray(a,b){if(Array.isArray(a))return a.slice();if(!a)return[];var d=[];if('string'!=typeof a){for(var e=0;e<a.length;e++)d[e]=0|a[e];return d}if(!b)for(var e=0;e<a.length;e++){var f=a.charCodeAt(e),g=f>>8,h=255&f;g?d.push(g,h):d.push(h)}else if('hex'===b){a=a.replace(/[^a-z0-9]+/ig,''),0!=a.length%2&&(a='0'+a);for(var e=0;e<a.length;e+=2)d.push(parseInt(a[e]+a[e+1],16))}return d}utils.toArray=toArray;function zero2(a){return 1===a.length?'0'+a:a}utils.zero2=zero2;function toHex(a){var b='';for(var d=0;d<a.length;d++)b+=zero2(a[d].toString(16));return b}utils.toHex=toHex,utils.encode=function(b,d){return'hex'===d?toHex(b):b};// Represent num in a w-NAF form
function getNAF(a,b){for(var d=[],e=1<<b+1,f=a.clone();0<=f.cmpn(1);){var g;if(f.isOdd()){var h=f.andln(e-1);g=h>(e>>1)-1?(e>>1)-h:h,f.isubn(g)}else g=0;d.push(g);// Optimization, shift by word if possible
var j=0!==f.cmpn(0)&&0===f.andln(e-1)?b+1:1;for(var l=1;l<j;l++)d.push(0);f.iushrn(j)}return d}utils.getNAF=getNAF;// Represent k1, k2 in a Joint Sparse Form
function getJSF(a,b){var d=[[],[]];a=a.clone(),b=b.clone();for(var e=0,f=0;0<a.cmpn(-e)||0<b.cmpn(-f);){// First phase
var g=3&a.andln(3)+e,h=3&b.andln(3)+f;3==g&&(g=-1),3==h&&(h=-1);var j;if(0==(1&g))j=0;else{var l=7&a.andln(7)+e;j=(3==l||5==l)&&2==h?-g:g}d[0].push(j);var m;if(0==(1&h))m=0;else{var l=7&b.andln(7)+f;m=(3==l||5==l)&&2==g?-h:h}d[1].push(m),2*e===j+1&&(e=1-e),2*f===m+1&&(f=1-f),a.iushrn(1),b.iushrn(1)}return d}utils.getJSF=getJSF;function cachedProperty(a,b,d){var e='_'+b;a.prototype[b]=function(){return this[e]===void 0?this[e]=d.call(this):this[e]}}utils.cachedProperty=cachedProperty;function parseBytes(a){return'string'==typeof a?utils.toArray(a,'hex'):a}utils.parseBytes=parseBytes;function intFromLE(a){return new BN(a,'hex','le')}utils.intFromLE=intFromLE;

},{"bn.js":30}],101:[function(require,module,exports){
module.exports={
  "_args": [
    [
      {
        "raw": "elliptic@^6.0.0",
        "scope": null,
        "escapedName": "elliptic",
        "name": "elliptic",
        "rawSpec": "^6.0.0",
        "spec": ">=6.0.0 <7.0.0",
        "type": "range"
      },
      "/Users/pelleb/code/browser-builds/node_modules/browserify-sign"
    ]
  ],
  "_from": "elliptic@>=6.0.0 <7.0.0",
  "_id": "elliptic@6.3.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/elliptic",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/elliptic-6.3.2.tgz_1473938837205_0.3108903462998569"
  },
  "_npmUser": {
    "name": "indutny",
    "email": "fedor@indutny.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "elliptic@^6.0.0",
    "scope": null,
    "escapedName": "elliptic",
    "name": "elliptic",
    "rawSpec": "^6.0.0",
    "spec": ">=6.0.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/browserify-sign",
    "/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz",
  "_shasum": "e4c81e0829cf0a65ab70e998b8232723b5c1bc48",
  "_shrinkwrap": null,
  "_spec": "elliptic@^6.0.0",
  "_where": "/Users/pelleb/code/browser-builds/node_modules/browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e4c81e0829cf0a65ab70e998b8232723b5c1bc48",
    "tarball": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "cbace4683a4a548dc0306ef36756151a20299cd5",
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "name": "elliptic",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.3.2"
}

},{}],102:[function(require,module,exports){
'use strict';var prr=require('prr');function init(a,b,c){prr(this,{type:a,name:a// can be passed just a 'cause'
,cause:'string'==typeof b?c:b,message:!b||'string'==typeof b?b:b.message},'ewr')}// generic prototype, not intended to be actually used - helpful for `instanceof`
function CustomError(a,b){Error.call(this),Error.captureStackTrace&&Error.captureStackTrace(this,arguments.callee),init.call(this,'CustomError',a,b)}CustomError.prototype=new Error;function createError(a,b,c){var d=function d(e,f){init.call(this,b,e,f),'FilesystemError'==b&&(this.code=this.cause.code,this.path=this.cause.path,this.errno=this.cause.errno,this.message=(a.errno[this.cause.errno]?a.errno[this.cause.errno].description:this.cause.message)+(this.cause.path?' ['+this.cause.path+']':'')),Error.call(this),Error.captureStackTrace&&Error.captureStackTrace(this,arguments.callee)};return d.prototype=c?new c:new CustomError,d}module.exports=function(a){var b=function b(c,d){return createError(a,c,d)};return{CustomError:CustomError,FilesystemError:b('FilesystemError'),createError:b}};

},{"prr":104}],103:[function(require,module,exports){
'use strict';var all=module.exports.all=[{errno:-2,code:'ENOENT',description:'no such file or directory'},{errno:-1,code:'UNKNOWN',description:'unknown error'},{errno:0,code:'OK',description:'success'},{errno:1,code:'EOF',description:'end of file'},{errno:2,code:'EADDRINFO',description:'getaddrinfo error'},{errno:3,code:'EACCES',description:'permission denied'},{errno:4,code:'EAGAIN',description:'resource temporarily unavailable'},{errno:5,code:'EADDRINUSE',description:'address already in use'},{errno:6,code:'EADDRNOTAVAIL',description:'address not available'},{errno:7,code:'EAFNOSUPPORT',description:'address family not supported'},{errno:8,code:'EALREADY',description:'connection already in progress'},{errno:9,code:'EBADF',description:'bad file descriptor'},{errno:10,code:'EBUSY',description:'resource busy or locked'},{errno:11,code:'ECONNABORTED',description:'software caused connection abort'},{errno:12,code:'ECONNREFUSED',description:'connection refused'},{errno:13,code:'ECONNRESET',description:'connection reset by peer'},{errno:14,code:'EDESTADDRREQ',description:'destination address required'},{errno:15,code:'EFAULT',description:'bad address in system call argument'},{errno:16,code:'EHOSTUNREACH',description:'host is unreachable'},{errno:17,code:'EINTR',description:'interrupted system call'},{errno:18,code:'EINVAL',description:'invalid argument'},{errno:19,code:'EISCONN',description:'socket is already connected'},{errno:20,code:'EMFILE',description:'too many open files'},{errno:21,code:'EMSGSIZE',description:'message too long'},{errno:22,code:'ENETDOWN',description:'network is down'},{errno:23,code:'ENETUNREACH',description:'network is unreachable'},{errno:24,code:'ENFILE',description:'file table overflow'},{errno:25,code:'ENOBUFS',description:'no buffer space available'},{errno:26,code:'ENOMEM',description:'not enough memory'},{errno:27,code:'ENOTDIR',description:'not a directory'},{errno:28,code:'EISDIR',description:'illegal operation on a directory'},{errno:29,code:'ENONET',description:'machine is not on the network'},{errno:31,code:'ENOTCONN',description:'socket is not connected'},{errno:32,code:'ENOTSOCK',description:'socket operation on non-socket'},{errno:33,code:'ENOTSUP',description:'operation not supported on socket'},{errno:34,code:'ENOENT',description:'no such file or directory'},{errno:35,code:'ENOSYS',description:'function not implemented'},{errno:36,code:'EPIPE',description:'broken pipe'},{errno:37,code:'EPROTO',description:'protocol error'},{errno:38,code:'EPROTONOSUPPORT',description:'protocol not supported'},{errno:39,code:'EPROTOTYPE',description:'protocol wrong type for socket'},{errno:40,code:'ETIMEDOUT',description:'connection timed out'},{errno:41,code:'ECHARSET',description:'invalid Unicode character'},{errno:42,code:'EAIFAMNOSUPPORT',description:'address family for hostname not supported'},{errno:44,code:'EAISERVICE',description:'servname not supported for ai_socktype'},{errno:45,code:'EAISOCKTYPE',description:'ai_socktype not supported'},{errno:46,code:'ESHUTDOWN',description:'cannot send after transport endpoint shutdown'},{errno:47,code:'EEXIST',description:'file already exists'},{errno:48,code:'ESRCH',description:'no such process'},{errno:49,code:'ENAMETOOLONG',description:'name too long'},{errno:50,code:'EPERM',description:'operation not permitted'},{errno:51,code:'ELOOP',description:'too many symbolic links encountered'},{errno:52,code:'EXDEV',description:'cross-device link not permitted'},{errno:53,code:'ENOTEMPTY',description:'directory not empty'},{errno:54,code:'ENOSPC',description:'no space left on device'},{errno:55,code:'EIO',description:'i/o error'},{errno:56,code:'EROFS',description:'read-only file system'},{errno:57,code:'ENODEV',description:'no such device'},{errno:58,code:'ESPIPE',description:'invalid seek'},{errno:59,code:'ECANCELED',description:'operation canceled'}];module.exports.errno={},module.exports.code={},all.forEach(function(a){module.exports.errno[a.errno]=a,module.exports.code[a.code]=a}),module.exports.custom=require('./custom')(module.exports),module.exports.create=module.exports.custom.createError;

},{"./custom":102}],104:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};(function(a,b,c){'undefined'!=typeof module&&module.exports?module.exports=c():b[a]=c()})('prr',void 0,function(){var a='function'==typeof Object.defineProperty?function(c,d,e){return Object.defineProperty(c,d,e),c}:function(c,d,e){return c[d]=e.value,c},b=function b(c,d){var e='object'==('undefined'==typeof d?'undefined':_typeof(d)),f=function f(g){return e?!!d[g]:e||'string'!=typeof d?!1:-1<d.indexOf(g[0])};return{enumerable:f('enumerable'),configurable:f('configurable'),writable:f('writable'),value:c}};return function(c,d,e,f){if(f=b(e,f),'object'==('undefined'==typeof d?'undefined':_typeof(d))){for(var g in d)Object.hasOwnProperty.call(d,g)&&(f.value=d[g],a(c,g,f));return c}return a(c,d,f)}});

},{}],105:[function(require,module,exports){
module.exports={
  "genesisGasLimit": {
    "v": 5000,
    "d": "Gas limit of the Genesis block."
  },
  "genesisDifficulty": {
    "v": 17179869184,
    "d": "Difficulty of the Genesis block."
  },
  "genesisNonce": {
    "v": "0x0000000000000042",
    "d": "the geneis nonce"
  },
  "genesisExtraData": {
    "v": "0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",
    "d": "extra data "
  },
  "genesisHash": {
    "v": "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
    "d": "genesis hash"
  },
  "genesisStateRoot": {
    "v": "0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544",
    "d": "the genesis state root"
  },
  "minGasLimit": {
    "v": 5000,
    "d": "Minimum the gas limit may ever be."
  },
  "gasLimitBoundDivisor": {
    "v": 1024,
    "d": "The bound divisor of the gas limit, used in update calculations."
  },
  "minimumDifficulty": {
    "v": 131072,
    "d": "The minimum that the difficulty may ever be."
  },
  "difficultyBoundDivisor": {
    "v": 2048,
    "d": "The bound divisor of the difficulty, used in the update calculations."
  },
  "durationLimit": {
    "v": 13,
    "d": "The decision boundary on the blocktime duration used to determine whether difficulty should go up or not."
  },
  "maximumExtraDataSize": {
    "v": 32,
    "d": "Maximum size extra data may be after Genesis."
  },
  "epochDuration": {
    "v": 30000,
    "d": "Duration between proof-of-work epochs."
  },
  "stackLimit": {
    "v": 1024,
    "d": "Maximum size of VM stack allowed."
  },
  "callCreateDepth": {
    "v": 1024,
    "d": "Maximum depth of call/create stack."
  },

  "tierStepGas": {
    "v": [0, 2, 3, 5, 8, 10, 20],
    "d": "Once per operation, for a selection of them."
  },
  "expGas": {
    "v": 10,
    "d": "Once per EXP instuction."
  },
  "expByteGas": {
    "v": 10,
    "d": "Times ceil(log256(exponent)) for the EXP instruction."
  },

  "sha3Gas": {
    "v": 30,
    "d": "Once per SHA3 operation."
  },
  "sha3WordGas": {
    "v": 6,
    "d": "Once per word of the SHA3 operation's data."
  },
  "sloadGas": {
    "v": 50,
    "d": "Once per SLOAD operation."
  },
  "sstoreSetGas": {
    "v": 20000,
    "d": "Once per SSTORE operation if the zeroness changes from zero."
  },
  "sstoreResetGas": {
    "v": 5000,
    "d": "Once per SSTORE operation if the zeroness does not change from zero."
  },
  "sstoreRefundGas": {
    "v": 15000,
    "d": "Once per SSTORE operation if the zeroness changes to zero."
  },
  "jumpdestGas": {
    "v": 1,
    "d": "Refunded gas, once per SSTORE operation if the zeroness changes to zero."
  },

  "logGas": {
    "v": 375,
    "d": "Per LOG* operation."
  },
  "logDataGas": {
    "v": 8,
    "d": "Per byte in a LOG* operation's data."
  },
  "logTopicGas": {
    "v": 375,
    "d": "Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas."
  },

  "createGas": {
    "v": 32000,
    "d": "Once per CREATE operation & contract-creation transaction."
  },

  "callGas": {
    "v": 40,
    "d": "Once per CALL operation & message call transaction."
  },
  "callStipend": {
    "v": 2300,
    "d": "Free gas given at beginning of call."
  },
  "callValueTransferGas": {
    "v": 9000,
    "d": "Paid for CALL when the value transfor is non-zero."
  },
  "callNewAccountGas": {
    "v": 25000,
    "d": "Paid for CALL when the destination address didn't exist prior."
  },

  "suicideRefundGas": {
    "v": 24000,
    "d": "Refunded following a suicide operation."
  },

  "memoryGas": {
    "v": 3,
    "d": "Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL."
  },
  "quadCoeffDiv": {
    "v": 512,
    "d": "Divisor for the quadratic particle of the memory cost equation."
  },

  "createDataGas": {
    "v": 200,
    "d": ""
  },
  "txGas": {
    "v": 21000,
    "d": "Per transaction. NOTE: Not payable on data of calls between transactions."
  },
  "txCreation": {
    "v": 32000,
    "d": "the cost of creating a contract via tx"
  },
  "txDataZeroGas": {
    "v": 4,
    "d": "Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions."
  },
  "txDataNonZeroGas": {
    "v": 68,
    "d": "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions."
  },

  "copyGas": {
    "v": 3,
    "d": "Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added."
  },

  "ecrecoverGas": {
    "v": 3000,
    "d": ""
  },
  "sha256Gas": {
    "v": 60,
    "d": ""
  },
  "sha256WordGas": {
    "v": 12,
    "d": ""
  },
  "ripemd160Gas": {
    "v": 600,
    "d": ""
  },
  "ripemd160WordGas": {
    "v": 120,
    "d": ""
  },
  "identityGas": {
    "v": 15,
    "d": ""
  },
  "identityWordGas": {
    "v": 3,
    "d": ""
  },
  "minerReward": {
    "v": "5000000000000000000",
    "d": "the amount a miner get rewarded for mining a block"
  },
  "ommerReward": {
    "v": "625000000000000000",
    "d": "The amount of wei a miner of an uncle block gets for being inculded in the blockchain"
  },
  "niblingReward": {
    "v": "156250000000000000",
    "d": "the amount a miner gets for inculding a uncle"
  },
  "homeSteadForkNumber": {
    "v": 1000000,
    "d": "the block that the homestead fork started at"
  },
  "timebombPeriod": {
    "v": 100000,
    "d": "Exponential difficulty timebomb period"
  },
  "freeBlockPeriod": {
    "v": 2
  }
}

},{}],106:[function(require,module,exports){
'use strict';module.exports=require('./params.json');

},{"./params.json":105}],107:[function(require,module,exports){
'use strict';module.exports=require('./lib/index.js');

},{"./lib/index.js":108}],108:[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},utils=require('ethereumjs-util'),BN=require('bn.js'),ABI=function ABI(){};// Convert from short to canonical names
// FIXME: optimise or make this nicer?
function elementaryName(a){if(a.startsWith('int['))return'int256'+a.slice(3);return'int'===a?'int256':a.startsWith('uint[')?'uint256'+a.slice(4):'uint'===a?'uint256':a.startsWith('fixed[')?'fixed128x128'+a.slice(5):'fixed'===a?'fixed128x128':a.startsWith('ufixed[')?'ufixed128x128'+a.slice(6):'ufixed'===a?'ufixed128x128':a}ABI.eventID=function(a,b){// FIXME: use node.js util.format?
var d=a+'('+b.map(elementaryName).join(',')+')';return utils.sha3(new Buffer(d))},ABI.methodID=function(a,b){return ABI.eventID(a,b).slice(0,4)};// Parse N from type<N>
function parseTypeN(a){return parseInt(/^\D+(\d+)$/.exec(a)[1],10)}// Parse N,M from type<N>x<M>
function parseTypeNxM(a){var b=/^\D+(\d+)x(\d+)$/.exec(a);return[parseInt(b[1],10),parseInt(b[2],10)]}// Parse N from type[<N>]
function parseTypeArray(a){var b=/^\w+\[(\d*)\]$/.exec(a)[1];return 0===b.length?0:parseInt(b,10)}function parseNumber(a){var b='undefined'==typeof a?'undefined':_typeof(a);if('string'===b){if(utils.isHexPrefixed(a))return new BN(utils.stripHexPrefix(a),16);return new BN(a,10)}if('number'===b)return new BN(a);if(a.toArray)// assume this is a BN for the moment, replace with BN.isBN soon
return a;throw new Error('Argument is not a number')}// someMethod(bytes,uint)
// someMethod(bytes,uint):(boolean)
function parseSignature(a){var b=/^(\w+)\((.+)\)$/.exec(a);if(3!==b.length)throw new Error('Invalid method signature');var d=/^(.+)\):\((.+)$/.exec(b[2]);return null!==d&&3===d.length?{method:b[1],args:d[1].split(','),retargs:d[2].split(',')}:{method:b[1],args:b[2].split(',')}}// Encodes a single item (can be dynamic array)
// @returns: Buffer
function encodeSingle(a,b){var d,e,f,g;if('address'===a)return encodeSingle('uint160',parseNumber(b));if('bool'===a)return encodeSingle('uint8',b?1:0);if('string'===a)return encodeSingle('bytes',new Buffer(b,'utf8'));if(a.match(/\w+\[\d+\]/)){// this part handles fixed-length arrays ([2])
// NOTE: we catch here all calls to arrays, that simplifies the rest
if('undefined'==typeof b.length)throw new Error('Not an array?');if(d=parseTypeArray(a),0!==d&&b.length>d)throw new Error('Elements exceed array size: '+d);for(g in a=a.slice(0,a.indexOf('[')),f=[],b)f.push(encodeSingle(a,b[g]));return Buffer.concat(f)}if(a.match(/\w+\[\]/)){// this part handles variable length ([])
// NOTE: we catch here all calls to arrays, that simplifies the rest
if('undefined'==typeof b.length)throw new Error('Not an array?');for(g in a=a.slice(0,a.indexOf('[')),f=[encodeSingle('uint256',b.length)],b)f.push(encodeSingle(a,b[g]));return Buffer.concat(f)}if('bytes'===a)return b=new Buffer(b),f=Buffer.concat([encodeSingle('uint256',b.length),b]),0!=b.length%32&&(f=Buffer.concat([f,utils.zeros(32-b.length%32)])),f;if(a.startsWith('bytes')){if(d=parseTypeN(a),1>d||32<d)throw new Error('Invalid bytes<N> width: '+d);return utils.setLengthRight(b,32)}if(a.startsWith('uint')){if(d=parseTypeN(a),d%8||8>d||256<d)throw new Error('Invalid uint<N> width: '+d);if(e=parseNumber(b),e.bitLength()>d)throw new Error('Supplied uint exceeds width: '+d+' vs '+e.bitLength());if(0>e)throw new Error('Supplied uint is negative');return e.toArrayLike(Buffer,'be',32)}if(a.startsWith('int')){if(d=parseTypeN(a),d%8||8>d||256<d)throw new Error('Invalid int<N> width: '+d);if(e=parseNumber(b),e.bitLength()>d)throw new Error('Supplied int exceeds width: '+d+' vs '+e.bitLength());return e.toTwos(256).toArrayLike(Buffer,'be',32)}if(a.startsWith('ufixed')){if(d=parseTypeNxM(a),e=parseNumber(b),0>e)throw new Error('Supplied ufixed is negative');return encodeSingle('uint256',e.mul(new BN(2).pow(new BN(d[1]))))}if(a.startsWith('fixed'))return d=parseTypeNxM(a),encodeSingle('int256',parseNumber(b).mul(new BN(2).pow(new BN(d[1]))));throw new Error('Unsupported or invalid type: '+a)}// Decodes a single item (can be dynamic array)
// @returns: array
// FIXME: this method will need a lot of attention at checking limits and validation
function decodeSingle(a,b){var d,e,f,g;if('address'===a)return decodeSingle('uint160',b);if('bool'===a)return decodeSingle('uint8',b).toString()===new BN(1).toString();if('string'===a)return new Buffer(decodeSingle('bytes',b),'utf8').toString();if(a.match(/\w+\[\d+\]/)){for(d=parseTypeArray(a),a=a.slice(0,a.indexOf('[')),f=[],g=0;g<d;g++)f.push(decodeSingle(a,b.slice(32*g)));return f}if(a.match(/\w+\[\]/)){a=a.slice(0,a.indexOf('['));var h=decodeSingle('uint256',b.slice(0,32)).toNumber();for(f=[],g=1;g<h+1;g++)f.push(decodeSingle(a,b.slice(32*g)));return f}if('bytes'===a)return d=decodeSingle('uint256',b.slice(0,32)).toNumber(),b.slice(32,32+d);if(a.startsWith('bytes')){if(d=parseTypeN(a),1>d||32<d)throw new Error('Invalid bytes<N> width: '+d);return b.slice(0,d)}if(a.startsWith('uint')){if(d=parseTypeN(a),d%8||8>d||256<d)throw new Error('Invalid uint<N> width: '+d);if(e=new BN(b.slice(0,32),16,'be'),e.bitLength()>d)throw new Error('Decoded int exceeds width: '+d+' vs '+e.bitLength());return e}if(a.startsWith('int')){if(d=parseTypeN(a),d%8||8>d||256<d)throw new Error('Invalid uint<N> width: '+d);if(e=new BN(b.slice(0,32),16,'be').fromTwos(256),e.bitLength()>d)throw new Error('Decoded uint exceeds width: '+d+' vs '+e.bitLength());return e}if(a.startsWith('ufixed')){if(d=parseTypeNxM(a),d=new BN(2).pow(new BN(d[1])),e=decodeSingle('uint256',b),!e.mod(d).isZero())throw new Error('Decimals not supported yet');return e.div(d)}if(a.startsWith('fixed')){if(d=parseTypeNxM(a),d=new BN(2).pow(new BN(d[1])),e=decodeSingle('int256',b),!e.mod(d).isZero())throw new Error('Decimals not supported yet');return e.div(d)}throw new Error('Unsupported or invalid type: '+a)}// Is a type dynamic?
function isDynamic(a){// FIXME: handle all types? I don't think anything is missing now
return'string'===a||'bytes'===a||a.match(/\w+\[\]/)}// Encode a method/event with arguments
// @types an array of string type names
// @args  an array of the appropriate values
ABI.rawEncode=function(a,b){var d=[],e=[],f=32*a.length;for(var g in a){var h=elementaryName(a[g]),k=b[g],l=encodeSingle(h,k);// Use the head/tail method for storing dynamic data
isDynamic(h)?(d.push(encodeSingle('uint256',f)),e.push(l),f+=l.length):d.push(l)}return Buffer.concat(d.concat(e))},ABI.rawDecode=function(a,b){var d=[];b=new Buffer(b);var e=0;for(var f in a){var g=elementaryName(a[f]),h=b.slice(e,e+32);if(isDynamic(g)){var k=decodeSingle('uint256',h).toNumber();// We will read at least 32 bytes
if(k>b.length-32)throw new Error('Invalid offset: '+k);h=b.slice(k)}else if(g.match(/\w+\[\d+\]/)){var l=parseTypeArray(g);1<l&&(h=b.slice(e,e+32*l),e+=32*(l-1))}d.push(decodeSingle(g,h)),e+=32}return d},ABI.simpleEncode=function(a){var b=Array.prototype.slice.call(arguments).slice(1),d=parseSignature(a);// FIXME: validate/convert arguments
if(b.length!==d.args.length)throw new Error('Argument count mismatch');return Buffer.concat([ABI.methodID(d.method,d.args),ABI.rawEncode(d.args,b)])},ABI.simpleDecode=function(a,b){var d=parseSignature(a);// FIXME: validate/convert arguments
if(!d.retargs)throw new Error('No return values in method');return ABI.rawDecode(d.retargs,b)};function stringify(a,b){return a.startsWith('address')||a.startsWith('bytes')?'0x'+b.toString('hex'):b.toString()}ABI.stringify=function(a,b){var d=[];for(var e in a){var f=a[e],g=b[e];// if it is an array type, concat the items
g=/^[^\[]+\[.*\]$/.test(f)?g.map(function(h){return stringify(f,h)}).join(', '):stringify(f,g),d.push(g)}return d},ABI.solidityPack=function(a,b){if(a.length!==b.length)throw new Error('Number of types are not matching the values');var d,e,f=[];for(var g=0;g<a.length;g++){var h=elementaryName(a[g]),k=b[g];if('bytes'===h)f.push(k);else if('string'===h)f.push(new Buffer(k,'utf8'));else if('bool'===h)f.push(new Buffer(k?'01':'00','hex'));else if('address'===h)f.push(utils.setLengthLeft(k,20));else{if(h.startsWith('bytes')){if(d=parseTypeN(h),1>d||32<d)throw new Error('Invalid bytes<N> width: '+d);return utils.setLengthRight(k,d)}if(h.startsWith('uint')){if(d=parseTypeN(h),d%8||8>d||256<d)throw new Error('Invalid uint<N> width: '+d);if(e=parseNumber(k),e.bitLength()>d)throw new Error('Supplied uint exceeds width: '+d+' vs '+e.bitLength());f.push(e.toArrayLike(Buffer,'be',d/8))}else if(h.startsWith('int')){if(d=parseTypeN(h),d%8||8>d||256<d)throw new Error('Invalid int<N> width: '+d);if(e=parseNumber(k),e.bitLength()>d)throw new Error('Supplied int exceeds width: '+d+' vs '+e.bitLength());f.push(e.toTwos(d).toArrayLike(Buffer,'be',d/8))}else// FIXME: support all other types
throw new Error('Unsupported or invalid type: '+h)}}return Buffer.concat(f)},ABI.soliditySHA3=function(a,b){return utils.sha3(ABI.solidityPack(a,b))},ABI.soliditySHA256=function(a,b){return utils.sha256(ABI.solidityPack(a,b))},ABI.solidityRIPEMD160=function(a,b){return utils.ripemd160(ABI.solidityPack(a,b),!0)};// Serpent's users are familiar with this encoding
// - s: string
// - b: bytes
// - b<N>: bytes<N>
// - i: int256
// - a: int256[]
function isNumeric(a){// FIXME: is this correct? Seems to work
return'0'<=a&&'9'>=a}// For a "documentation" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp
ABI.fromSerpent=function(a){var b=[];for(var d=0;d<a.length;d++){var e=a[d];if('s'===e)b.push('bytes');else if('b'===e){for(var f='bytes',g=d+1;g<a.length&&isNumeric(a[g]);)f+=a[g]-'0',g++;d=g-1,b.push(f)}else if('i'===e)b.push('int256');else if('a'===e)b.push('int256[]');else throw new Error('Unsupported or invalid type: '+e)}return b},ABI.toSerpent=function(a){var b=[];for(var d=0;d<a.length;d++){var e=a[d];if('bytes'===e)b.push('s');else if(e.startsWith('bytes'))b.push('b'+parseTypeN(e));else if('int256'===e)b.push('i');else if('int256[]'===e)b.push('a');else throw new Error('Unsupported or invalid type: '+e)}return b.join('')},module.exports=ABI;

}).call(this,require("buffer").Buffer)
},{"bn.js":30,"buffer":62,"ethereumjs-util":120}],109:[function(require,module,exports){
(function (Buffer){
'use strict';var ethUtil=require('ethereumjs-util'),rlp=require('rlp'),Account=module.exports=function(a){// Define Properties
var b=[{name:'nonce',default:new Buffer([])},{name:'balance',default:new Buffer([])},{name:'stateRoot',length:32,default:ethUtil.SHA3_RLP},{name:'codeHash',length:32,default:ethUtil.SHA3_NULL}];ethUtil.defineProperties(this,b,a)};Account.prototype.serialize=function(){return rlp.encode(this.raw)},Account.prototype.isContract=function(){return this.codeHash.toString('hex')!==ethUtil.SHA3_NULL_S},Account.prototype.getCode=function(a,b){return this.isContract()?void a.getRaw(this.codeHash,b):void b(null,new Buffer([]))},Account.prototype.setCode=function(a,b,c){var d=this;return this.codeHash=ethUtil.sha3(b),this.codeHash.toString('hex')===ethUtil.SHA3_NULL_S?void c(null,new Buffer([])):void a.putRaw(this.codeHash,b,function(e){c(e,d.codeHash)})},Account.prototype.getStorage=function(a,b,c){var d=a.copy();d.root=this.stateRoot,d.get(b,c)},Account.prototype.setStorage=function(a,b,c,d){var e=this,f=a.copy();f.root=e.stateRoot,f.put(b,c,function(g){return g?d():void(e.stateRoot=f.root,d())})},Account.prototype.isEmpty=function(){return''===this.balance.toString('hex')&&''===this.nonce.toString('hex')&&this.stateRoot.toString('hex')===ethUtil.SHA3_RLP_S&&this.codeHash.toString('hex')===ethUtil.SHA3_NULL_S};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"ethereumjs-util":120,"rlp":234}],110:[function(require,module,exports){
(function (Buffer){
'use strict';var utils=require('ethereumjs-util'),params=require('ethereum-common'),BN=utils.BN,BlockHeader=module.exports=function(b){var c=[{name:'parentHash',length:32,default:utils.zeros(32)},{name:'uncleHash',default:utils.SHA3_RLP_ARRAY},{name:'coinbase',length:20,default:utils.zeros(20)},{name:'stateRoot',length:32,default:utils.zeros(32)},{name:'transactionsTrie',length:32,default:utils.SHA3_RLP},{name:'receiptTrie',length:32,default:utils.SHA3_RLP},{name:'bloom',default:utils.zeros(256)},{name:'difficulty',default:new Buffer([])},{name:'number',default:utils.intToBuffer(params.homeSteadForkNumber.v)},{name:'gasLimit',default:new Buffer('ffffffffffffff','hex')},{name:'gasUsed',empty:!0,default:new Buffer([])},{name:'timestamp',default:new Buffer([])},{name:'extraData',allowZero:!0,empty:!0,default:new Buffer([])},{name:'mixHash',default:utils.zeros(32)// length: 32
},{name:'nonce',default:new Buffer([])// sha3(42)
}];utils.defineProperties(this,c,b)};/**
   * An object that repersents the block header
   * @constructor
   * @param {Array} data raw data, deserialized
   * @prop {Buffer} parentHash the blocks' parent's hash
   * @prop {Buffer} uncleHash sha3(rlp_encode(uncle_list))
   * @prop {Buffer} coinbase the miner address
   * @prop {Buffer} stateRoot The root of a Merkle Patricia tree
   * @prop {Buffer} transactionTrie the root of a Trie containing the transactions
   * @prop {Buffer} receiptTrie the root of a Trie containing the transaction Reciept
   * @prop {Buffer} bloom
   * @prop {Buffer} difficulty
   * @prop {Buffer} number the block's height
   * @prop {Buffer} gasLimit
   * @prop {Buffer} gasUsed
   * @prop {Buffer} timestamp
   * @prop {Buffer} extraData
   * @prop {Array.<Buffer>} raw an array of buffers containing the raw blocks.
   *//**
 * Returns the canoncical difficulty of the block
 * @method canonicalDifficulty
 * @param {Block} parentBlock the parent `Block` of the this header
 * @return {BN}
 */BlockHeader.prototype.canonicalDifficulty=function(b){var c=new BN(this.timestamp),d=new BN(b.header.timestamp),e=new BN(b.header.difficulty),f=new BN(params.minimumDifficulty.v),g=e.div(new BN(params.difficultyBoundDivisor.v)),h=void 0;if(this.isHomestead()){// homestead
// 1 - (block_timestamp - parent_timestamp) // 10
var i=c.sub(d).divn(10).neg().addn(1),j=new BN(-99);1===j.cmp(i)&&(i=j),h=e.add(g.mul(i))}else h=1===d.addn(params.durationLimit.v).cmp(c)?g.add(e):e.sub(g);var k=new BN(this.number).divn(100000).subn(2);return k.isNeg()||h.iadd(new BN(2).pow(k)),-1===h.cmp(f)&&(h=f),h},BlockHeader.prototype.validateDifficulty=function(b){var c=this.canonicalDifficulty(b);return 0===c.cmp(new BN(this.difficulty))},BlockHeader.prototype.validateGasLimit=function(b){var c=utils.bufferToInt(b.header.gasLimit),d=utils.bufferToInt(this.gasLimit),e=Math.floor(c/params.gasLimitBoundDivisor.v);return c+e>d&&c-e<d&&params.minGasLimit.v<d},BlockHeader.prototype.validate=function(b,c,d){var e=this;return 2===arguments.length&&(d=c,c=!1),this.isGenesis()?d():void b.getBlock(e.parentHash,function(f,g){if(f)return d('could not find parent block');e.parentBlock=g;var h=new BN(e.number);if(0!==h.cmp(new BN(g.header.number).addn(1)))return d('invalid number');if(c){var i=c.sub(new BN(g.header.number));if(-1!==i.cmpn(8)||1!==i.cmpn(1))return d('uncle block has a parent that is too old or to young')}return e.validateDifficulty(g)?e.validateGasLimit(g)?utils.bufferToInt(g.header.number)+1===utils.bufferToInt(e.number)?utils.bufferToInt(e.timestamp)<=utils.bufferToInt(g.header.timestamp)?d('invalid timestamp'):e.extraData.length>params.maximumExtraDataSize.v?d('invalid amount of extra data'):void d():d('invalid heigth'):d('invalid gas limit'):d('invalid Difficulty')});// find the blocks parent
},BlockHeader.prototype.hash=function(){return utils.rlphash(this.raw)},BlockHeader.prototype.isGenesis=function(){return''===this.number.toString('hex')},BlockHeader.prototype.isHomestead=function(){return utils.bufferToInt(this.number)>=params.homeSteadForkNumber.v};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"ethereum-common":114,"ethereumjs-util":120}],111:[function(require,module,exports){
(function (Buffer){
'use strict';var ethUtil=require('ethereumjs-util'),Tx=require('ethereumjs-tx'),Trie=require('merkle-patricia-tree'),BN=ethUtil.BN,rlp=ethUtil.rlp,async=require('async'),BlockHeader=require('./header'),params=require('ethereum-common'),Block=module.exports=function(a){this.transactions=[],this.uncleHeaders=[],this._inBlockChain=!1,this.txTrie=new Trie,Object.defineProperty(this,'raw',{get:function get(){return this.serialize(!1)}});var b,c;// defaults
a||(a=[[],[],[]]),Buffer.isBuffer(a)&&(a=rlp.decode(a)),Array.isArray(a)?(this.header=new BlockHeader(a[0]),b=a[1],c=a[2]):(this.header=new BlockHeader(a.header),b=a.transactions,c=a.uncleHeaders);// parse uncle headers
for(var d=0;d<c.length;d++)this.uncleHeaders.push(new BlockHeader(c[d]));var f=this.isHomestead();// parse transactions
for(d=0;d<b.length;d++){var g=new Tx(b[d]);g._homestead=f,this.transactions.push(g)}};/**
 * Creates a new block object
 * @constructor the raw serialized or the deserialized block.
 * @param {Array|Buffer|Object} data
 * @prop {Header} header the block's header
 * @prop {Array.<Header>} uncleList an array of uncle headers
 * @prop {Array.<Buffer>} raw an array of buffers containing the raw blocks.
 *//**
 * Produces a hash the RLP of the block
 * @method hash
 */Block.prototype.hash=function(){return this.header.hash()},Block.prototype.isGenesis=function(){return this.header.isGenesis()},Block.prototype.isHomestead=function(){return this.header.isHomestead()},Block.prototype.setGenesisParams=function(){this.header.gasLimit=params.genesisGasLimit.v,this.header.difficulty=params.genesisDifficulty.v,this.header.extraData=params.genesisExtraData.v,this.header.nonce=params.genesisNonce.v,this.header.stateRoot=params.genesisStateRoot.v,this.header.number=new Buffer([])},Block.prototype.serialize=function(a){var b=[this.header.raw,[],[]];// rlpEnode defaults to true
return'undefined'==typeof a&&(a=!0),this.transactions.forEach(function(c){b[1].push(c.raw)}),this.uncleHeaders.forEach(function(c){b[2].push(c.raw)}),a?rlp.encode(b):b},Block.prototype.genTxTrie=function(a){var b=0,c=this;async.eachSeries(this.transactions,function(d,f){c.txTrie.put(rlp.encode(b),d.serialize(),f),b++},a)},Block.prototype.validateTransactionsTrie=function(){var a=this.header.transactionsTrie.toString('hex');return this.transactions.length?a===this.txTrie.root.toString('hex'):a===ethUtil.SHA3_RLP.toString('hex')},Block.prototype.validateTransactions=function(a){var b=[];return this.transactions.forEach(function(c,d){var f=c.validate(!0);f&&(f+=' at tx '+d),b.push(f)}),void 0===a||!1===a?0===b.length:arrayToString(b)},Block.prototype.validate=function(a,b){var c=this,d=[];async.parallel([// validate uncles
c.validateUncles.bind(c,a),// validate block
c.header.validate.bind(c.header,a),// generate the transaction trie
c.genTxTrie.bind(c)],function(f){f&&d.push(f),c.validateTransactionsTrie()||d.push('invalid transaction true');var g=c.validateTransactions(!0);''!==g&&d.push(g),c.validateUnclesHash()||d.push('invild uncle hash'),b(arrayToString(d))})},Block.prototype.validateUnclesHash=function(){var a=[];return this.uncleHeaders.forEach(function(b){a.push(b.raw)}),a=rlp.encode(a),ethUtil.sha3(a).toString('hex')===this.header.uncleHash.toString('hex')},Block.prototype.validateUncles=function(a,b){if(this.isGenesis())return b();var c=this;if(2<c.uncleHeaders.length)return b('too many uncle headers');var d=c.uncleHeaders.map(function(f){return f.hash().toString('hex')});return new Set(d).size===d.length?void async.each(c.uncleHeaders,function(f,g){var h=new BN(c.header.number);async.parallel([f.validate.bind(f,a,h),// check to make sure the uncle is not already in the blockchain
function(j){a.getDetails(f.hash(),function(k,l){l&&l.isUncle?j(k||'uncle already included'):j()})}],g)},b):b('dublicate unlces')},Block.prototype.toJSON=function(a){if(a){var b={header:this.header.toJSON(!0),transactions:[],uncleHeaders:[]};return this.transactions.forEach(function(c){b.transactions.push(c.toJSON(a))}),this.uncleHeaders.forEach(function(c){b.uncleHeaders.push(c.toJSON())}),b}return ethUtil.baToJSON(this.raw)};function arrayToString(a){try{return a.reduce(function(b,c){return b&&(b+=' '),b+c})}catch(b){return''}}

}).call(this,require("buffer").Buffer)
},{"./header":110,"async":25,"buffer":62,"ethereum-common":114,"ethereumjs-tx":117,"ethereumjs-util":120,"merkle-patricia-tree":194}],112:[function(require,module,exports){
module.exports=[
  {
    "ip": "52.16.188.185",
    "port": "30303",
    "id": "a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c"
  },
  {
    "ip": "54.94.239.50",
    "port": "30303",
    "id": "de471bccee3d042261d52e9bff31458daecc406142b401d4cd848f677479f73104b9fdeb090af9583d3391b7f10cb2ba9e26865dd5fca4fcdc0fb1e3b723c786"
  },
  {
    "ip": "52.74.57.123",
    "port": "30303",
    "id": "1118980bf48b0a3640bdba04e0fe78b1add18e1cd99bf22d53daac1fd9972ad650df52176e7c7d89d1114cfef2bc23a2959aa54998a46afcf7d91809f0855082"
  },
  {
    "ip": "5.1.83.226",
    "port": "30303",
    "id": "979b7fa28feeb35a4741660a16076f1943202cb72b6af70d327f053e248bab9ba81760f39d0701ef1d8f89cc1fbd2cacba0710a12cd5314d5e0c9021aa3637f9"
  }
]

},{}],113:[function(require,module,exports){
module.exports={
  "3282791d6fd713f1e94f4bfd565eaa78b3a0599d": "1337000000000000000000",
  "17961d633bcf20a7b029a7d94b7df4da2ec5427f": "229427000000000000000",
  "493a67fe23decc63b10dda75f3287695a81bd5ab": "880000000000000000000",
  "01fb8ec12425a04f813e46c54c05748ca6b29aa9": "259800000000000000000",
  "d2a030ac8952325f9e1db378a71485a24e1b07b2": "2000000000000000000000",
  "77a34907f305a54c85db09c363fde3c47e6ae21f": "985000000000000000000",
  "391a77405c09a72b5e8436237aaaf95d68da1709": "49082000000000000000",
  "00aada25ea2286709abb422d41923fd380cd04c7": "650100000000000000000",
  "acc46a2a555c74ded4a2bd094e821b97843b40c0": "1940000000000000000000",
  "de07fb5b7a464e3ba7fbe09e9acb271af5338c58": "50000000000000000000",
  "4c696be99f3a690440c3436a59a7d7e937d6ba0d": "3460000000000000000000",
  "fa33553285a973719a0d5f956ff861b2d89ed304": "20000000000000000000",
  "67cfda6e70bf7657d39059b59790e5145afdbe61": "646000000000000000000",
  "a321091d3018064279db399d2b2a88a6f440ae24": "3200000000000000000000",
  "fb3fa1ac08aba9cc3bf0fe9d483820688f65b410": "30000000000000000000000",
  "6715c14035fb57bb3d667f7b707498c41074b855": "700000000000000000000",
  "d4344f7d5cad65d17e5c2d0e7323943d6f62fe92": "267400000000000000000",
  "a3294626ec2984c43b43da4d5d8e4669b11d4b59": "1008000000000000000000",
  "656018584130db83ab0591a8128d9381666a8d0e": "63960000000000000000",
  "0fa010ce0c731d3b628e36b91f571300e49dbeab": "999800000000000000000",
  "3098b65db93ecacaf7353c48808390a223d57684": "449965000000000000000",
  "ae635bf73831119d2d29c0d04ff8f8d8d0a57a46": "1337000000000000000000",
  "0f7515ff0e808f695e0c20485ff96ed2f7b79310": "1000169000000000000000",
  "8b30c04098d7a7e6420c357ea7bfa49bac9a8a18": "8000200000000000000000",
  "64dba2d6615b8bd7571836dc75bc79d314f5ecee": "10000000000000000000000",
  "e7912d4cf4562c573ddc5b71e37310e378ef86c9": "394000000000000000000",
  "a4da34450d22ec0ffcede0004b02f7872ee0b73a": "93342000000000000000",
  "34437d1465640b136cb5841c3f934f9ba0b7097d": "173000000000000000000",
  "c652871d192422c6bc235fa063b44a7e1d43e385": "155000000000000000000",
  "a8a708e84f82db86a35502193b4c6ee9a76ebe8f": "1015200000000000000000",
  "5c3f567faff7bad1b5120022e8cbcaa82b4917b3": "2000000000000000000000",
  "dbc1d0ee2bab531140de137722cd36bdb4e47194": "200000000000000000000",
  "f59dab1bf8df11327e61f9b7a14b563a96ec3554": "6000000000000000000000",
  "456f8d746682b224679349064d1b368c7c05b176": "3700000000000000000000",
  "5f13154631466dcb1353c890932a7c97e0878e90": "6000000000000000000000",
  "f4b1626e24f30bcad9273c527fcc714b5d007b8f": "200000000000000000000",
  "a8db0b9b201453333c757f6ad9bcb555c02da93b": "2199970000000000000000",
  "a0fc7e53c5ebd27a2abdac45261f84ab3b51aefb": "3008250000000000000000",
  "1b636b7a496f044d7359596e353a104616436f6b": "360354000000000000000",
  "74bce9ec38362d6c94ccac26d5c0e13a8b3b1d40": "999954000000000000000",
  "9834682180b982d166badb9d9d1d9bbf016d87ee": "2000000000000000000000",
  "1e6e0153fc161bc05e656bbb144c7187bf4fe84d": "2000000000000000000000",
  "989c0ccff654da03aeb11af701054561d6297e1d": "4000000000000000000000",
  "78a1e254409fb1b55a7cb4dd8eba3b30c8bad9ef": "100000000000000000000",
  "9ef1896b007c32a15114fb89d73dbd47f9122b69": "4000000000000000000000",
  "33320dd90f2baa110dd334872a998f148426453c": "999972000000000000000",
  "e72e1d335cc29a96b9b1c02f003a16d971e90b9d": "1580000000000000000000",
  "0921605f99164e3bcc28f31caece78973182561d": "793744000000000000000",
  "fc00a420a36107dfd5f495128a5fe5abb2db0f34": "5960000000000000000000",
  "dfcbdf09454e1a5e4a40d3eef7c5cf1cd3de9486": "4000000000000000000000",
  "646e043d0597a664948fbb0dc15475a3a4f3a6ed": "20000000000000000000",
  "79aeb34566b974c35a5881dec020927da7df5d25": "2000000000000000000000",
  "dbadc61ed5f0460a7f18e51b2fb2614d9264a0e0": "40000000000000000000",
  "97b91efe7350c2d57e7e406bab18f3617bcde14a": "9999980000000000000000",
  "8398e07ebcb4f75ff2116de77c1c2a99f303a4cf": "500000000000000000000",
  "f02796295101674288c1d93467053d042219b794": "740000000000000000000",
  "f4ed848ec961739c2c7e352f435ba70a7cd5db38": "1970000000000000000000",
  "82485728d0e281563758c75ab27ed9e882a0002d": "147000000000000000000",
  "427ec668ac9404e895cc861511d1620a4912be98": "40000000000000000000000",
  "1bbc199e586790be87afedc849c04726745c5d7b": "4000000000000000000000",
  "10d945334ecde47beb9ca3816c173dfbbd0b5333": "1400000000000000000000",
  "1dcebcb7656df5dcaa3368a055d22f9ed6cdd940": "499800000000000000000",
  "2ac1f8d7bf721f3cfe74d20fea9b87a28aaa982c": "161000000000000000000",
  "0a47ad9059a249fc936b2662353da6905f75c2b9": "2000000000000000000000",
  "768498934e37e905f1d0e77b44b574bcf3ec4ae8": "20000000000000000000000",
  "f46b6b9c7cb552829c1d3dfd8ffb11aabae782f6": "21000000000000000000",
  "7aea25d42b2612286e99c53697c6bc4100e2dbbf": "2000000000000000000000",
  "af3615c789d0b1152ad4db25fe5dcf222804cf62": "1000000000000000000000",
  "92e6581e1da1f9b846e09347333dc818e2d2ac66": "3640000000000000000000",
  "240305727313d01e73542c775ff59d11cd35f819": "5931229000000000000000",
  "b95cfda8465ba9c2661b249fc3ab661bdfa35ff0": "318949000000000000000",
  "1b0d076817e8d68ee2df4e1da1c1142d198c4435": "1550000000000000000000",
  "93c2e64e5de5589ed25006e843196ee9b1cf0b3e": "1670000000000000000000",
  "0e2e504a2d1122b5a9feee5cb1451bf4c2ace87b": "3940000000000000000000",
  "22b96ab2cad55db100b53001f9e4db378104c807": "10000000000000000000000",
  "a927d48bb6cb814bc609cbcaa9151f5d459a27e1": "271600000000000000000",
  "5cbd8daf27ddf704cdd0d909a789ba36ed4f37b2": "13400000000000000000",
  "9adbd3bc7b0afc05d1d2eda49ff863939c48db46": "199955000000000000000",
  "ac7e03702723cb16ee27e22dd0b815dc2d5cae9f": "16000000000000000000000",
  "1e210e7047886daa52aaf70f4b991dac68e3025e": "200000000000000000000",
  "c98048687f2bfcc9bd90ed18736c57edd352b65d": "1000000000000000000000",
  "81c18c2a238ddc4cba230a072dd7dc101e620273": "1337000000000000000000",
  "cb3d766c983f192bcecac70f4ee03dd9ff714d51": "100000000000000000000",
  "44a63d18424587b9b307bfc3c364ae10cd04c713": "20000000000000000000",
  "4ab2d34f04834fbf7479649cab923d2c4725c553": "3520000000000000000000",
  "b834acf3015322c58382eeb2b79638906e88b6de": "24000000000000000000000",
  "7d551397f79a2988b064afd0efebee802c7721bc": "39400000000000000000000",
  "b537d36a70eeb8d3e5c80de815225c1158cb92c4": "1500000000000000000000",
  "805ce51297a0793b812067f017b3e7b2df9bb1f9": "100000000000000000000",
  "085ba65febe23eefc2c802666ab1262382cfc494": "400000000000000000000",
  "b1c0d08b36e184f9952a4037e3e53a667d070a4e": "1000000000000000000000",
  "83fe5a1b328bae440711beaf6aad6026eda6d220": "20000000000000000000000",
  "7fd679e5fb0da2a5d116194dcb508318edc580f3": "6560000000000000000000",
  "41ad369f758fef38a19aa3149379832c818ef2a0": "1000060000000000000000",
  "6d846dc12657e91af25008519c3e857f51707dd6": "4590000000000000000000",
  "c02d6eadeacf1b78b3ca85035c637bb1ce01f490": "4000000000000000000000",
  "826eb7cd7319b82dd07a1f3b409071d96e39677f": "1000000000000000000000",
  "4ac9905a4cb6ab1cfd62546ee5917300b87c4fde": "1015200000000000000000",
  "cf6e52e6b77480b1867efec6446d9fc3cc3577e8": "222010000000000000000",
  "2476b2bb751ce748e1a4c4ff7b230be0c15d2245": "4000000000000000000000",
  "1a505e62a74e87e577473e4f3afa16bedd3cfa52": "500000000000000000000",
  "21d02705f3f64905d80ed9147913ea8c7307d695": "1363740000000000000000",
  "7b1daf14891b8a1e1bd429d8b36b9a4aa1d9afbf": "500000000000000000000",
  "5338ef70eac9dd9af5a0503b5efad1039e67e725": "2674000000000000000000",
  "50ca86b5eb1d01874df8e5f34945d49c6c1ab848": "1000000000000000000000",
  "f3cc8bcb559465f81bfe583bd7ab0a2306453b9e": "20000000000000000000000",
  "5c323457e187761a8276e359b7b7af3f3b6e3df6": "10000000000000000000000",
  "4d82d7700c123bb919419bbaf046799c6b0e2c66": "20000000000000000000000",
  "8a66abbc2d30ce21a833b0db8e561d5105e0a72c": "699958000000000000000",
  "2ae53866fc2d14d572ab73b4a065a1188267f527": "8000000000000000000000",
  "9af5c9894c33e42c2c518e3ac670ea9505d1b53e": "18200000000000000000",
  "cba25c7a503cc8e0d04971ca05c762f9b762b48b": "500000000000000000000",
  "fda3042819af3e662900e1b92b4358eda6e92590": "118200000000000000000000",
  "9bd7c38a4210304a4d653edeff1b3ce45fce7843": "282000000000000000000",
  "edc22fb92c638e1e21ff5cf039daa6e734dafb29": "298000000000000000000",
  "a1f193a0592f1feb9fdfc90aa813784eb80471c9": "1400000000000000000000",
  "e97fde0b67716325cf0ecce8a191a3761b2c791d": "1004700000000000000000",
  "110237cf9117e767922fc4a1b78d7964da82df20": "3940000000000000000000",
  "e32f95766d57b5cd4b173289d6876f9e64558194": "100000000000000000000",
  "f2d59c8923759073d6f415aaf8eb065ff2f3b685": "7880000000000000000000",
  "c53d79f7cb9b70952fd30fce58d54b9f0b59f647": "5089200000000000000000",
  "9eb281c32719c40fdb3e216db0f37fbc73a026b7": "20000000000000000000",
  "2d6511fd7a3800b26854c7ec39c0dcb5f4c4e8e8": "399910000000000000000",
  "61ba87c77e9b596de7ba0e326fddfeec2163ef66": "200000000000000000000",
  "de1121829c9a08284087a43fbd2fc1142a3233b4": "1000000000000000000000",
  "22a25812ab56dcc423175ed1d8adacce33cd1810": "1850000000000000000000",
  "518cef27b10582b6d14f69483ddaa0dd3c87bb5c": "600000000000000000000",
  "59161749fedcf1c721f2202d13ade2abcf460b3d": "2000000000000000000000",
  "3e36c17253c11cf38974ed0db1b759160da63783": "7000000000000000000000",
  "cbfa76db04ce38fb205d37b8d377cf1380da0317": "1430000000000000000000",
  "a7e83772bc200f9006aa2a260dbaa8483dc52b30": "207730000000000000000",
  "e87eac6d602b4109c9671bf57b950c2cfdb99d55": "49932000000000000000",
  "9b06ad841dffbe4ccf46f1039fc386f3c321446e": "2000000000000000000000",
  "e0f903c1e48ac421ab48528f3d4a2648080fe043": "1015200000000000000000",
  "5d872b122e994ef27c71d7deb457bf65429eca6c": "7999973000000000000000",
  "f34083ecea385017aa40bdd35ef7effb4ce7762d": "400000000000000000000",
  "7f3709391f3fbeba3592d175c740e87a09541d02": "480000000000000000000",
  "888e94917083d152202b53163939869d271175b4": "4000000000000000000000",
  "bed4c8f006a27c1e5f7ce205de75f516bfb9f764": "16000000000000000000000",
  "b3a6bd41f9d9c3201e050b87198fbda399342210": "3622615000000000000000",
  "550aadae1221b07afea39fba2ed62e05e5b7b5f9": "20000000000000000000",
  "bcedc4267ccb89b31bb764d7211171008d94d44d": "200000000000000000000",
  "6229dcc203b1edccfdf06e87910c452a1f4d7a72": "32500000000000000000000",
  "94be3ae54f62d663b0d4cc9e1ea8fe9556ea9ebf": "23280000000000000000",
  "0e0c9d005ea016c295cd795cc9213e87febc33eb": "198000000000000000000",
  "55d057bcc04bd0f4af9642513aa5090bb3ff93fe": "1106680000000000000000",
  "ed9e030ca75cb1d29ea01d0d4cdfdccd3844b6e4": "30895000000000000000",
  "86c4ce06d9ac185bb148d96f7b7abe73f441006d": "10000000000000000000000",
  "2c04115c3e52961b0dc0b0bf31fba4546f5966fd": "200000000000000000000",
  "b959dce02e91d9db02b1bd8b7d17a9c41a97af09": "8000000000000000000000",
  "e01547ba42fcafaf93938becf7699f74290af74f": "2000000000000000000000",
  "c593d6e37d14b566643ac4135f243caa0787c182": "12000000000000000000000",
  "2c0ee134d8b36145b47beee7af8d2738dbda08e8": "201000000000000000000",
  "0ef54ac7264d2254abbb5f8b41adde875157db7c": "40000000000000000000",
  "0349634dc2a9e80c3f7721ee2b5046aeaaedfbb5": "4000000000000000000000",
  "873e49135c3391991060290aa7f6ccb8f85a78db": "20000000000000000000",
  "05236d4c90d065f9e3938358aaffd777b86aec49": "500000000000000000000",
  "d2abd84a181093e5e229136f42d835e8235de109": "100007000000000000000",
  "b56a780028039c81caf37b6775c620e786954764": "2000000000000000000000",
  "86df73bd377f2c09de63c45d67f283eaefa0f4ab": "1000000000000000000000",
  "7670b02f2c3cf8fd4f4730f3381a71ea431c33c7": "267400000000000000000",
  "24aa1151bb765fa3a89ca50eb6e1b1c706417fd4": "3100000000000000000000",
  "43227d65334e691cf231b4a4e1d339b95d598afb": "10000000000000000000000",
  "695550656cbf90b75d92ad9122d90d23ca68ca4d": "1000000000000000000000",
  "5281733473e00d87f11e9955e589b59f4ac28e7a": "660360000000000000000000",
  "99a96bf2242ea1b39ece6fcc0d18aed00c0179f3": "300000000000000000000",
  "b1cf94f8091505055f010ab4bac696e0ca0f67a1": "1580000000000000000000",
  "54391b4d176d476cea164e5fb535c69700cb2535": "100076000000000000000",
  "152f2bd229ddf3cb0fdaf455c183209c0e1e39a2": "2000000000000000000000",
  "affc99d5ebb4a84fe7788d97dce274b038240438": "5000000000000000000000",
  "23df8f48ee009256ea797e1fa369beebcf6bc663": "2302671000000000000000",
  "3a72d635aadeee4382349db98a1813a4cfeb3df1": "200000000000000000000000",
  "ce26f9a5305f8381094354dbfc92664e84f902b5": "230200000000000000000",
  "d283b8edb10a25528a4404de1c65e7410dbcaa67": "12000000000000000000000",
  "a7859fc07f756ea7dcebbccd42f05817582d973f": "10000000000000000000000",
  "b28181a458a440f1c6bb1de8400281a3148f4c35": "376000000000000000000",
  "27b1694eafa165ebd7cc7bc99e74814a951419dc": "800000000000000000000",
  "66cc8ab23c00d1b82acd7d73f38c99e0d05a4fa6": "100000000000000000000",
  "926082cb7eed4b1993ad245a477267e1c33cd568": "374300000000000000000",
  "4a47fc3e177f567a1e3893e000e36bba23520ab8": "2000000000000000000000",
  "594a76f06935388dde5e234696a0668bc20d2ddc": "2800000000000000000000",
  "e91fa0badaddb9a97e88d3f4db7c55d6bb7430fe": "376000000000000000000",
  "574de1b3f38d915846ae3718564a5ada20c2f3ed": "4000000000000000000000",
  "5816c2687777b6d7d2a2432d59a41fa059e3a406": "133700000000000000000000",
  "b50955aa6e341571986608bdc891c2139f540cdf": "1970000000000000000000",
  "6d44974a31d187eda16ddd47b9c7ec5002d61fbe": "940000000000000000000",
  "80abec5aa36e5c9d098f1b942881bd5acac6963d": "2000000000000000000000",
  "294f494b3f2e143c2ffc9738cbfd9501850b874e": "2240000000000000000000",
  "bca3ffd4683fba0ad3bbc90734b611da9cfb457e": "200000000000000000000",
  "5992624c54cdec60a5ae938033af8be0c50cbb0a": "3621678000000000000000",
  "6560941328ff587cbc56c38c78238a7bb5f442f6": "744900000000000000000",
  "74b7e0228baed65957aebb4d916d333aae164f0e": "2000000000000000000000",
  "8516fcaf77c893970fcd1a958ba9a00e49044019": "196279000000000000000",
  "b992a967308c02b98af91ee760fd3b6b4824ab0e": "2000000000000000000000",
  "30bb4357cd6910c86d2238bf727cbe8156680e62": "100014000000000000000",
  "b8cc0f060aad92d4eb8b36b3b95ce9e90eb383d7": "150000000000000000000000",
  "28d4ebf41e3d3c451e943bdd7e1f175fae932a3d": "6000000000000000000000",
  "8c83d424a3cf24d51f01923dd54a18d6b6fede7b": "4000000000000000000000",
  "7efc90766a00bc52372cac97fabd8a3c831f8ecd": "158000000000000000000",
  "7c2b9603884a4f2e464eceb97d17938d828bc02c": "3000000000000000000000",
  "9d250ae4f110d71cafc7b0adb52e8d9acb6679b8": "9840000000000000000000",
  "61b3df2e9e9fd968131f1e88f0a0eb5bd765464d": "4000000000000000000000",
  "9ae13bd882f2576575921a94974cbea861ba0d35": "3160000000000000000000",
  "3d09688d93ad07f3abe68c722723cd680990435e": "29999948000000000000000",
  "5e58e255fc19870a04305ff2a04631f2ff294bb1": "17600000000000000000",
  "bcaed0acb6a76f113f7c613555a2c3b0f5bf34a5": "193600000000000000000",
  "159adce27aa10b47236429a34a5ac42cad5b6416": "31867951000000000000000",
  "e834c64318205ca7dd4a21abcb08266cb21ff02c": "999999000000000000000",
  "7b6a84718dd86e63338429ac811d7c8a860f21f1": "1790000000000000000000",
  "2118c116ab0cdf6fd11d54a4309307b477c3fc0f": "10000000000000000000000",
  "34a901a69f036bcf9f7843c0ba01b426e8c3dc2b": "4000000000000000000000",
  "c7d44fe32c7f8cd5f1a97427b6cd3afc9e45023e": "1580000000000000000000",
  "c6045b3c350b4ce9ca0c6b754fb41a69b97e9900": "925000000000000000000",
  "cf5a6f9df75579c644f794711215b30d77a0ce40": "2000000000000000000000",
  "e2904b1aefa056398b6234cb35811288d736db67": "40000000000000000000",
  "7101bd799e411cde14bdfac25b067ac890eab8e8": "1450054000000000000000",
  "cc45fb3a555bad807b388a0357c855205f7c75e8": "865000000000000000000",
  "ff0c3c7798e8733dd2668152891bab80a8be955c": "80220000000000000000",
  "3536453322c1466cb905af5c335ca8db74bff1e6": "447000000000000000000",
  "08cac8952641d8fc526ec1ab4f2df826a5e7710f": "300000000000000000000",
  "0d8aab8f74ea862cdf766805009d3f3e42d8d00b": "5820000000000000000000",
  "8908760cd39b9c1e8184e6a752ee888e3f0b7045": "6000000000000000000000",
  "8156360bbd370961ceca6b6691d75006ad204cf2": "40000000000000000000000",
  "a304588f0d850cd8d38f76e9e83c1bf63e333ede": "39800000000000000000",
  "14c63ba2dcb1dd4df33ddab11c4f0007fa96a62d": "15500000000000000000000",
  "a009bf076f1ba3fa57d2a7217218bed5565a7a7a": "1000000000000000000000",
  "1c89060f987c518fa079ec2c0a5ebfa30f5d20f7": "38000000000000000000000",
  "8895eb726226edc3f78cc6a515077b3296fdb95e": "3940000000000000000000",
  "7919e7627f9b7d54ea3b14bb4dd4649f4f39dee0": "1670000000000000000000",
  "b3c65b845aba6cd816fbaae983e0e46c82aa8622": "1000000000000000000000",
  "eff51d72adfae143edf3a42b1aec55a2ccdd0b90": "300000000000000000000",
  "05bb64a916be66f460f5e3b64332110d209e19ae": "4200000000000000000000",
  "d5b117ec116eb846418961eb7edb629cd0dd697f": "3000000000000000000000",
  "05e97b09492cd68f63b12b892ed1d11d152c0eca": "1015200000000000000000",
  "84cc7878da605fdb019fab9b4ccfc157709cdda5": "1336922000000000000000",
  "79cac6494f11ef2798748cb53285bd8e22f97cda": "2000000000000000000000",
  "bd5a8c94bd8be6470644f70c8f8a33a8a55c6341": "200000000000000000000",
  "b119e79aa9b916526581cbf521ef474ae84dcff4": "1470700000000000000000",
  "aff1045adf27a1aa329461b24de1bae9948a698b": "33400000000000000000",
  "4398628ea6632d393e929cbd928464c568aa4a0c": "1400000000000000000000",
  "99997668f7c1a4ff9e31f9977ae3224bcb887a85": "291200000000000000000",
  "bc0e8745c3a549445c2be900f52300804ab56289": "33104697000000000000000",
  "e5bab4f0afd8a9d1a381b45761aa18f3d3cce105": "1508010000000000000000",
  "be60037e90714a4b917e61f193d834906703b13a": "1700000000000000000000",
  "8ed4284c0f47449c15b8d9b3245de8beb6ce80bf": "800000000000000000000",
  "333ad1596401e05aea2d36ca47318ef4cd2cb3df": "2910000000000000000000",
  "22db559f2c3c1475a2e6ffe83a5979599196a7fa": "1000000000000000000000",
  "fdf449f108c6fb4f5a2b081eed7e45e6919e4d25": "2000000000000000000000",
  "0be1bcb90343fae5303173f461bd914a4839056c": "6000000000000000000000",
  "b981ad5e6b7793a23fc6c1e8692eb2965d18d0da": "9999924000000000000000",
  "c75d2259306aec7df022768c69899a652185dbc4": "4000000000000000000000",
  "6c2e9be6d4ab450fd12531f33f028c614674f197": "3580000000000000000000",
  "6dcc7e64fcafcbc2dc6c0e5e662cb347bffcd702": "20000000000000000000000",
  "aabdb35c1514984a039213793f3345a168e81ff1": "309760000000000000000",
  "d315deea1d8c1271f9d1311263ab47c007afb6f5": "69760000000000000000",
  "4faf90b76ecfb9631bf9022176032d8b2c207009": "1000032000000000000000",
  "3e7a966b5dc357ffb07e9fe067c45791fd8e3049": "59100000000000000000",
  "2e64a8d71111a22f4c5de1e039b336f68d398a7c": "2000000000000000000000",
  "181fbba852a7f50178b1c7f03ed9e58d54162929": "666000000000000000000",
  "4f7330096f79ed264ee0127f5d30d2f73c52b3d8": "499970000000000000000",
  "a8a8dbdd1a85d1beee2569e91ccc4d09ae7f6ea1": "5800000000000000000000",
  "1f9c3268458da301a2be5ab08257f77bb5a98aa4": "200000000000000000000",
  "fc372ff6927cb396d9cf29803500110da632bc52": "2000000000000000000000",
  "4fa554ab955c249217386a4d3263bbf72895434e": "19982000000000000000",
  "2a59e47ea5d8f0e7c028a3e8e093a49c1b50b9a3": "2000000000000000000000",
  "5e32c72191b8392c55f510d8e3326e3a60501d62": "44000000000000000000000",
  "1dfaee077212f1beaf0e6f2f1840537ae154ad86": "1000000000000000000000",
  "7eaba035e2af3793fd74674b102540cf190addb9": "1273000000000000000000",
  "d62edb96fce2969aaf6c545e967cf1c0bc805205": "85705000000000000000",
  "220dc68df019b6b0ccbffb784b5a5ab4b15d4060": "3940000000000000000000",
  "45bb829652d8bfb58b8527f0ecb621c29e212ec3": "2000000000000000000000",
  "79b120eb8806732321288f675a27a9225f1cd2eb": "2465000000000000000000",
  "740af1eefd3365d78ba7b12cb1a673e06a077246": "19700000000000000000000",
  "0f042c9c2fb18766f836bb59f735f27dc329fe3c": "10000000000000000000000",
  "6dda5f788a6c688ddf921fa3852eb6d6c6c62966": "40000000000000000000",
  "96ad579bbfa8db8ebec9d286a72e4661eed8e356": "1070750000000000000000",
  "0c2073ba44d3ddbdb639c04e191039a71716237f": "1430000000000000000000",
  "1a3520453582c718a21c42375bc50773255253e1": "790000000000000000000",
  "efcaae9ff64d2cd95b5249dcffe7faa0a0c0e44d": "401100000000000000000",
  "0a3de155d5ecd8e81c1ff9bbf0378301f8d4c623": "4000000000000000000000",
  "80f07ac09e7b2c3c0a3d1e9413a544c73a41becb": "20000000000000000000",
  "c3631c7698b6c5111989bf452727b3f9395a6dea": "10683500000000000000000",
  "4cc22c9bc9ad05d875a397dbe847ed221c920c67": "2000000000000000000000",
  "1a987e3f83de75a42f1bde7c997c19217b4a5f24": "2000000000000000000000",
  "5b2b64e9c058e382a8b299224eecaa16e09c8d92": "161000000000000000000",
  "86caafacf32aa0317c032ac36babed974791dc03": "40000000000000000000000",
  "1cd1f0a314cbb200de0a0cb1ef97e920709d97c2": "2000000000000000000000",
  "7d980f4b566bb045517e4c14c87750de9346744b": "1337000000000000000000",
  "8b5f29cc2faa262cdef30ef554f50eb488146eac": "5818250000000000000000",
  "5153a0c3c8912881bf1c3501bf64b45649e48222": "4000000000000000000000",
  "d21a7341eb84fd151054e5e387bb25d36e499c09": "14000000000000000000000",
  "9560e8ac6718a6a1cdcff189d603c9063e413da6": "4000000000000000000000",
  "e49ba0cd96816c4607773cf8a5970bb5bc16a1e6": "1670000000000000000000",
  "b8ac117d9f0dba80901445823c4c9d4fa3fedc6e": "15759015000000000000000",
  "af67fd3e127fd9dc36eb3fcd6a80c7be4f7532b2": "1670000000000000000000",
  "b43c27f7a0a122084b98f483922541c8836cee2c": "715000000000000000000",
  "4d9279962029a8bd45639737e98b511eff074c21": "1337000000000000000000",
  "c667441e7f29799aba616451d53b3f489f9e0f48": "13920000000000000000000",
  "275875ff4fbb0cf3a430213127487f7608d04cba": "500080000000000000000",
  "9a953b5bcc709379fcb559d7b916afdaa50cadcc": "100000000000000000000",
  "7ea791ebab0445a00efdfc4e4a8e9a7e7565136d": "18200000000000000000",
  "6ffe5cf82cc9ea5e36cad7c2974ce7249f3749e6": "1940000000000000000000",
  "f1b4ecc63525f7432c3d834ffe2b970fbeb87212": "3000064000000000000000",
  "6b72a8f061cfe6996ad447d3c72c28c0c08ab3a7": "4271316000000000000000",
  "bba3c68004248e489573abb2743677066b24c8a7": "2000000000000000000000",
  "b7c0d0cc0b4d342d4062bac624ccc3c70cc6da3f": "4000000000000000000000",
  "fe98c664c3e447a95e69bd582171b7176ea2a685": "4000000000000000000000",
  "ce71086d4c602554b82dcbfce88d20634d53cc4d": "43250000000000000000000",
  "1c601993789207f965bb865cbb4cd657cce76fc0": "98294000000000000000",
  "476b5599089a3fb6f29c6c72e49b2e4740ea808d": "2800000000000000000000",
  "3439998b247cb4bf8bc80a6d2b3527f1dfe9a6d2": "140000000000000000000",
  "c4f7d2e2e22084c44f70feaab6c32105f3da376f": "1970000000000000000000",
  "c1eba5684aa1b24cba63150263b7a9131aeec28d": "20000000000000000000",
  "94ad4bad824bd0eb9ea49c58cebcc0ff5e08346b": "1940000000000000000000",
  "ded877378407b94e781c4ef4af7cfc5bc220b516": "372500000000000000000",
  "699c9ee47195511f35f862ca4c22fd35ae8ffbf4": "80000000000000000000",
  "e3a89a1927cc4e2d43fbcda1e414d324a7d9e057": "205500000000000000000",
  "4d93696fa24859f5d2939aebfa54b4b51ae1dccc": "19100000000000000000",
  "0af65f14784e55a6f95667fd73252a1c94072d2a": "192987000000000000000",
  "5b70c49cc98b3df3fbe2b1597f5c1b6347a388b7": "970000000000000000000",
  "426f78f70db259ac8534145b2934f4ef1098b5d8": "360000000000000000000",
  "58b8ae8f63ef35ed0762f0b6233d4ac14e64b64d": "2000000000000000000000",
  "8eae29435598ba8f1c93428cdb3e2b4d31078e00": "2000000000000000000000",
  "17fd9b551a98cb61c2e07fbf41d3e8c9a530cba5": "26989000000000000000",
  "ab3e78294ba886a0cfd5d3487fb3a3078d338d6e": "1970000000000000000000",
  "bdf6e68c0cd7584080e847d72cbb23aad46aeb1d": "1970000000000000000000",
  "f989346772995ec1906faffeba2a7fe7de9c6bab": "6685000000000000000000",
  "dc5f5ad663a6f263327d64cac9cb133d2c960597": "2000000000000000000000",
  "68fe1357218d095849cd579842c4aa02ff888d93": "2000000000000000000000",
  "e09c68e61998d9c81b14e4ee802ba7adf6d74cdb": "4000000000000000000000",
  "890fe11f3c24db8732d6c2e772e2297c7e65f139": "62980000000000000000000",
  "a76929890a7b47fb859196016c6fdd8289ceb755": "5000000000000000000000",
  "2dc79d6e7f55bce2e2d0c02ad07ceca8bb529354": "1580000000000000000000",
  "19687daa39c368139b6e7be60dc1753a9f0cbea3": "8000000000000000000000",
  "c69be440134d6280980144a9f64d84748a37f349": "715000000000000000000",
  "3d8d0723721e73a6c0d860aa0557abd14c1ee362": "5000000000000000000000",
  "2b241f037337eb4acc61849bd272ac133f7cdf4b": "378000000000000000000000",
  "24b95ebef79500baa0eda72e77f877415df75c33": "910000000000000000000",
  "106ed5c719b5261477890425ae7551dc59bd255c": "11979600000000000000000",
  "5b2e2f1618552eab0db98add55637c2951f1fb19": "12000000000000000000000",
  "403145cb4ae7489fcc90cd985c6dc782b3cc4e44": "5999800000000000000000",
  "e8be24f289443ee473bc76822f55098d89b91cc5": "2000000000000000000000",
  "f6bc37b1d2a3788d589b6de212dc1713b2f6e78e": "5000000000000000000000",
  "67fc527dce1785f0fb8bc7e518b1c669f7ecdfb5": "240000000000000000000",
  "6580b1bc94390f04b397bd73e95d96ef11eaf3a8": "20000000000000000000",
  "98bf4af3810b842387db70c14d46099626003d10": "4000000000000000000000",
  "17993d312aa1106957868f6a55a5e8f12f77c843": "450065000000000000000",
  "0729b4b47c09eb16158464c8aa7fd9690b438839": "1999800000000000000000",
  "ae70e69d2c4a0af818807b1a2705f79fd0b5dbc4": "985000000000000000000",
  "38b50146e71916a5448de12a4d742135dcf39833": "32200000000000000000000",
  "38439aaa24e3636f3a18e020ea1da7e145160d86": "2600000000000000000000",
  "54b4429b182f0377be7e626939c5db6440f75d7a": "1970000000000000000000",
  "7179726f5c71ae1b6d16a68428174e6b34b23646": "7353500000000000000000",
  "c2ee91d3ef58c9d1a589844ea1ae3125d6c5ba69": "970000000000000000000",
  "912304118b80473d9e9fe3ee458fbe610ffda2bb": "200000000000000000000",
  "3308b03466c27a17dfe1aafceb81e16d2934566f": "17000000000000000000000",
  "10346414bec6d3dcc44e50e54d54c2b8c3734e3e": "4000000000000000000000",
  "4fee50c5f988206b09a573469fb1d0b42ebb6dce": "2009400000000000000000",
  "9ece1400800936c7c6485fcdd3626017d09afbf6": "310000000000000000000",
  "ddf3ad76353810be6a89d731b787f6f17188612b": "20000000000000000000000",
  "72402300e81d146c2e644e2bbda1da163ca3fb56": "7000000000000000000000",
  "bb4b4a4b548070ff41432c9e08a0ca6fa7bc9f76": "850000000000000000000",
  "c3dd58903886303b928625257ae1a013d71ae216": "2000000000000000000000",
  "ca6c818befd251361e02744068be99d8aa60b84a": "6000000000000000000000",
  "b8d2ddc66f308c0158ae3ccb7b869f7d199d7b32": "844800000000000000000",
  "8e486a0442d171c8605be348fee57eb5085eff0d": "4000000000000000000000",
  "a807104f2703d679f8deafc442befe849e42950b": "2000000000000000000000",
  "bb61a04bffd57c10470d45c39103f64650347616": "1000000000000000000000",
  "d1c45954a62b911ad701ff2e90131e8ceb89c95c": "1394000000000000000000",
  "5e65458be964ae449f71773704979766f8898761": "528600000000000000000",
  "f9b37825f03073d31e249378c30c795c33f83af2": "200152000000000000000",
  "e309974ce39d60aadf2e69673251bf0e04760a10": "254030000000000000000",
  "d541ac187ad7e090522de6da3213e9a7f4439673": "2000000000000000000000",
  "f33efc6397aa65fb53a8f07a0f893aae30e8bcee": "2304850000000000000000",
  "d2f1998e1cb1580cec4f6c047dcd3dcec54cf73c": "200000000000000000000",
  "0ed76c2c3b5d50ff8fb50b3eeacd681590be1c2d": "100000000000000000000",
  "637d67d87f586f0a5a479e20ee13ea310a10b647": "48300000000000000000000",
  "1a5ee533acbfb3a2d76d5b685277b796c56a052b": "2000000000000000000000",
  "323fca5ed77f699f9d9930f5ceeff8e56f59f03c": "1337000000000000000000",
  "a5fe2ce97f0e8c3856be0de5f4dcb2ce5d389a16": "22892000000000000000",
  "93258255b37c7f58f4b10673a932dd3afd90f4f2": "1000000000000000000000",
  "950fe9c6cad50c18f11a9ed9c45740a6180612d0": "8000000000000000000000",
  "ee31167f9cc93b3c6465609d79db0cde90e8484c": "2000000000000000000000",
  "6ebb5e6957aa821ef659b6018a393a504cae4450": "2000000000000000000000",
  "be305a796e33bbf7f9aeae6512959066efda1010": "10880000000000000000000",
  "537f9d4d31ef70839d84b0d9cdb72b9afedbdf35": "70000000000000000000000",
  "fe9e1197d7974a7648dcc7a03112a88edbc9045d": "4925000000000000000000",
  "99f77f998b20e0bcdcd9fc838641526cf25918ef": "1790000000000000000000",
  "76ffc157ad6bf8d56d9a1a7fddbc0fea010aabf4": "1000000000000000000000",
  "defe9141f4704599159d7b223de42bffd80496b3": "100000000000000000000",
  "7b1bf53a9cbe83a7dea434579fe72aac8d2a0cd0": "199800000000000000000",
  "23ccc3c6acd85c2e460c4ffdd82bc75dc849ea14": "4000000000000000000000",
  "9f86a066edb61fcb5856de93b75c8c791864b97b": "2000000000000000000000",
  "871b8a8b51dea1989a5921f13ec1a955a515ad47": "8000000000000000000000",
  "4efcd9c79fb4334ca6247b0a33bd9cc33208e272": "1337000000000000000000",
  "35ac1d3ed7464fa3db14e7729213ceaa378c095e": "1520000000000000000000",
  "c69d663c8d60908391c8d236191533fdf7775613": "485000000000000000000",
  "c2ed5ffdd1add855a2692fe062b5d618742360d4": "1200000000000000000000",
  "454f0141d721d33cbdc41018bd01119aa4784818": "6000000000000000000000",
  "6c8687e3417710bb8a93559021a1469e6a86bc77": "11126675000000000000000",
  "ec5b198a00cfb55a97b5d53644cffa8a04d2ab45": "2000000000000000000000",
  "cd59f3dde77e09940befb6ee58031965cae7a336": "10000000000000000000000",
  "8eebec1a62c08b05a7d1d59180af9ff0d18e3f36": "500000000000000000000",
  "92a971a739799f8cb48ea8475d72b2d2474172e6": "3940000000000000000000",
  "bed4649df646e2819229032d8868556fe1e053d3": "18200000000000000000",
  "c50fe415a641b0856c4e75bf960515441afa358d": "2000000000000000000000",
  "91f516146cda20281719978060c6be4149067c88": "2000000000000000000000",
  "54a1370116fe22099e015d07cd2669dd291cc9d1": "20000000000000000000",
  "80c04efd310f440483c73f744b5b9e64599ce3ec": "1200000000000000000000",
  "a8914c95b560ec13f140577338c32bcbb77d3a7a": "180000000000000000000",
  "e3c812737ac606baf7522ad817428a36050e7a34": "1940000000000000000000",
  "6d1456fff0104ee844a3314737843338d24cd66c": "141840000000000000000",
  "0e6ece99111cad1961c748ed3df51edd69d2a3b1": "100000000000000000000000",
  "019d709579ff4bc09fdcdde431dc1447d2c260bc": "20000000000000000000",
  "ebff84bbef423071e604c361bba677f5593def4e": "10000000000000000000000",
  "e10c540088113fa6ec00b4b2c8824f8796e96ec4": "236400000000000000000000",
  "e03220c697bcd28f26ef0b74404a8beb06b2ba7b": "8000000000000000000000",
  "e69a6cdb3a8a7db8e1f30c8b84cd73bae02bc0f8": "16915503000000000000000",
  "e5fb31a5caee6a96de393bdbf89fbe65fe125bb3": "1000000000000000000000",
  "030fb3401f72bd3418b7d1da75bf8c519dd707dc": "3000000000000000000000",
  "1c751e7f24df9d94a637a5dedeffc58277b5db19": "3220000000000000000000",
  "bded7e07d0711e684de65ac8b2ab57c55c1a8645": "591000000000000000000",
  "dd7ff441ba6ffe3671f3c0dabbff1823a5043370": "2000000000000000000000",
  "b55474ba58f0f2f40e6cbabed4ea176e011fcad6": "1970000000000000000000",
  "b92427ad7578b4bfe20a9f63a7c5506d5ca12dc8": "2000000000000000000000",
  "91a8baaed012ea2e63803b593d0d0c2aab4c5b0a": "1500000000000000000000",
  "a97e072144499fe5ebbd354acc7e7efb58985d08": "2674000000000000000000",
  "75c2ffa1bef54919d2097f7a142d2e14f9b04a58": "2673866000000000000000",
  "53faf165be031ec18330d9fce5bd1281a1af08db": "140000000000000000000",
  "055ab658c6f0ed4f875ed6742e4bc7292d1abbf0": "83500000000000000000",
  "6f18ec767e320508195f1374500e3f2e125689ff": "1000000000000000000000",
  "90fc537b210658660a83baa9ac4a8402f65746a8": "1880000000000000000000",
  "34664d220fa7f37958024a3332d684bcc6d4c8bd": "10000000000000000000000",
  "15acb61568ec4af7ea2819386181b116a6c5ee70": "31000000000000000000000",
  "69d98f38a3ba3dbc01fa5c2c1427d862832f2f70": "100000000000000000000000",
  "ece1152682b7598fe2d1e21ec15533885435ac85": "4000000000000000000000",
  "f618d9b104411480a863e623fc55232d1a4f48aa": "265793000000000000000",
  "f9debaecb5f339beea4894e5204bfa340d067f25": "1665000000000000000000",
  "5e731b55ced452bb3f3fe871ddc3ed7ee6510a8f": "3000000000000000000000",
  "67df242d240dd4b8071d72f8fcf35bb3809d71e8": "4000000000000000000000",
  "c4cf930e5d116ab8d13b9f9a7ec4ab5003a6abde": "320000000000000000000",
  "01a25a5f5af0169b30864c3be4d7563ccd44f09e": "1430000000000000000000",
  "7f6efb6f4318876d2ee624e27595f44446f68e93": "1550000000000000000000",
  "82249fe70f61c6b16f19a324840fdc020231bb02": "9504014000000000000000",
  "205237c4be146fba99478f3a7dad17b09138da95": "2000000000000000000000",
  "fd1fb5a89a89a721b8797068fbc47f3e9d52e149": "236400000000000000000",
  "e47fbaed99fc209962604ebd20e240f74f4591f1": "2000000000000000000000",
  "a24c3ab62181e9a15b78c4621e4c7c588127be26": "162410000000000000000",
  "b6cd7432d5161be79768ad45de3e447a07982063": "4000000000000000000000",
  "32a70691255c9fc9791a4f75c8b81f388e0a2503": "985000000000000000000",
  "562f16d79abfcec3943e34b20f05f97bdfcda605": "4000000000000000000000",
  "dbc66965e426ff1ac87ad6eb78c1d95271158f9f": "18200000000000000000",
  "7e87863ec43a481df04d017762edcb5caa629b5a": "39400000000000000000",
  "587d6849b168f6c3332b7abae7eb6c42c37f48bf": "880000000000000000000",
  "721158be5762b119cc9b2035e88ee4ee78f29b82": "10000000000000000000000",
  "84b91e2e2902d05e2b591b41083bd7beb2d52c74": "9848621000000000000000",
  "632cecb10cfcf38ec986b43b8770adece9200221": "20000000000000000000",
  "c34e3ba1322ed0571183a24f94204ee49c186641": "58200000000000000000",
  "ae78bb849139a6ba38ae92a09a69601cc4cb62d1": "500000000000000000000",
  "5ce0b6862cce9162e87e0849e387cb5df4f9118c": "1670000000000000000000",
  "f52c0a7877345fe0c233bb0f04fd6ab18b6f14ba": "400440000000000000000000",
  "e016dc138e25815b90be3fe9eee8ffb2e105624f": "500000000000000000000",
  "5789d01db12c816ac268e9af19dc0dd6d99f15df": "200000000000000000000",
  "d8b77db9b81bbe90427b62f702b201ffc29ff618": "930200000000000000000",
  "5dff811dad819ece3ba602c383fb5dc64c0a3a48": "186000000000000000000",
  "af3087e62e04bf900d5a54dc3e946274da92423b": "20000000000000000000",
  "8c1023fde1574db8bb54f1739670157ca47da652": "6969382000000000000000",
  "bb3b010b18e6e2be1135871026b7ba15ea0fde24": "10044000000000000000000",
  "cabdaf354f4720a466a764a528d60e3a482a393c": "1000000000000000000000",
  "94bbc67d13f89ebca594be94bc5170920c30d9f3": "80200000000000000000",
  "3275496fd4dd8931fd69fb0a0b04c4d1ff879ef5": "446000000000000000000",
  "281250a29121270a4ee5d78d24feafe82c70ba3a": "1000000000000000000000",
  "590ccb5911cf78f6f622f535c474375f4a12cfcf": "20000000000000000000000",
  "542e8096bafb88162606002e8c8a3ed19814aeac": "2000000000000000000000",
  "a65426cff378ed23253513b19f496de45fa7e18f": "7200000000000000000000",
  "4aa693b122f314482a47b11cc77c68a497876162": "1970000000000000000000",
  "d9b783d31d32adc50fa3eacaa15d92b568eaeb47": "34010000000000000000000",
  "068e655766b944fb263619658740b850c94afa31": "35200000000000000000",
  "9e23c5e4b782b00a5fadf1aead87dacf5b0367a1": "20000000000000000000",
  "bf17f397f8f46f1bae45d187148c06eeb959fa4d": "1001440000000000000000",
  "8578e10212ca14ff0732a8241e37467db85632a9": "6000000000000000000000",
  "2cb5495a505336c2465410d1cae095b8e1ba5cdd": "20000000000000000000000",
  "695b0f5242753701b264a67071a2dc880836b8db": "16400000000000000000",
  "f2edde37f9a8c39ddea24d79f4015757d06bf786": "100000000000000000000000",
  "480f31b989311e4124c6a7465f5a44094d36f9d0": "1025000000000000000000",
  "cf157612764e0fd696c8cb5fba85df4c0ddc3cb0": "30000000000000000000000",
  "27521deb3b6ef1416ea4c781a2e5d7b36ee81c61": "2000000000000000000000",
  "6efd90b535e00bbd889fda7e9c3184f879a151db": "10100000000000000000000",
  "b635a4bc71fb28fdd5d2c322983a56c284426e69": "170000000000000000000",
  "a17c9e4323069518189d5207a0728dcb92306a3f": "1000000000000000000000",
  "6af940f63ec9b8d876272aca96fef65cdacecdea": "3000000000000000000000",
  "469358709332c82b887e20bcddd0220f8edba7d0": "17300000000000000000000",
  "a257ad594bd88328a7d90fc0a907df95eecae316": "520510000000000000000",
  "6f051666cb4f7bd2b1907221b829b555d7a3db74": "1760000000000000000000",
  "46bfc5b207eb2013e2e60f775fecd71810c5990c": "1550000000000000000000",
  "62b9081e7710345e38e02e16449ace1b85bcfc4e": "910000000000000000000",
  "bc73f7b1ca3b773b34249ada2e2c8a9274cc17c2": "2000000000000000000000",
  "1adaf4abfa867db17f99af6abebf707a3cf55df6": "6000000000000000000000",
  "8d629c20608135491b5013f1002586a0383130e5": "1370000000000000000000",
  "38e46de4453c38e941e7930f43304f94bb7b2be8": "2005500000000000000000",
  "3485f621256433b98a4200dad857efe55937ec98": "2000000000000000000000",
  "775c10c93e0db7205b2643458233c64fc33fd75b": "2000000000000000000000",
  "7c4401ae98f12ef6de39ae24cf9fc51f80eba16b": "200000000000000000000",
  "17b807afa3ddd647e723542e7b52fee39527f306": "400010000000000000000",
  "0ab366e6e7d5abbce6b44a438d69a1cabb90d133": "320000000000000000000",
  "194ffe78bbf5d20dd18a1f01da552e00b7b11db1": "7000000000000000000000",
  "c45d47ab0c9aa98a5bd62d16223ea2471b121ca4": "593640000000000000000",
  "2487c3c4be86a2723d917c06b458550170c3edba": "1000000000000000000000",
  "ec4d08aa2e47496dca87225de33f2b40a8a5b36f": "158000000000000000000",
  "aaa8defe11e3613f11067fb983625a08995a8dfc": "200000000000000000000",
  "50bb67c8b8d8bd0f63c4760904f2d333f400aace": "2000000000000000000000",
  "1227e10a4dbf9caca31b1780239f557615fc35c1": "200000000000000000000",
  "44a8989e32308121f72466978db395d1f76c3a4b": "7236900000000000000000",
  "59569a21d28fba4bda37753405a081f2063da150": "4000000000000000000000",
  "c3756bcdcc7eec74ed896adfc335275930266e08": "6000000000000000000000",
  "ce3a61f0461b00935e85fa1ead82c45e5a64d488": "500000000000000000000",
  "012f396a2b5eb83559bac515e5210df2c8c362ba": "200000000000000000000",
  "93bc7d9a4abd44c8bbb8fe8ba804c61ad8d6576c": "3999922000000000000000",
  "e20bb9f3966419e14bbbaaaa6789e92496cfa479": "3465116000000000000000",
  "9eef442d291a447d74c5d253c49ef324eac1d8f0": "3420000000000000000000",
  "db6c2a73dac7424ab0d031b66761122566c01043": "3000000000000000000000",
  "704d243c2978e46c2c86adbecd246e3b295ff633": "2012000000000000000000",
  "d2ff672016f63b2f85398f4a6fedbb60a50d3cce": "342500000000000000000",
  "d2051cb3cb6704f0548cc890ab0a19db3415b42a": "334000000000000000000",
  "1111e5dbf45e6f906d62866f1708101788ddd571": "1300200000000000000000",
  "6a686bf220b593deb9b7324615fb9144ded3f39d": "1460000000000000000000",
  "911feea61fe0ed50c5b9e5a0d66071399d28bdc6": "60000000000000000000",
  "3881defae1c07b3ce04c78abe26b0cdc8d73f010": "200000000000000000000",
  "ea94f32808a2ef8a9bf0861d1d2404f7b7be258a": "20000000000000000000",
  "2eef6b1417d7b10ecfc19b123a8a89e73e526c58": "600000000000000000000",
  "dd8af9e7765223f4446f44d3d509819a3d3db411": "10000000000000000000000",
  "2efc4c647dac6acac35577ad221758fef6616faa": "8000000000000000000000",
  "1547b9bf7ad66274f3413827231ba405ee8c88c1": "17300000000000000000000",
  "250a40cef3202397f240469548beb5626af4f23c": "92500000000000000000",
  "c175be3194e669422d15fee81eb9f2c56c67d9c9": "200000000000000000000",
  "c9e02608066828848aeb28c73672a12925181f4d": "500038000000000000000",
  "8229ceb9f0d70839498d44e6abed93c5ca059f5d": "123300000000000000000000",
  "39f198331e4b21c1b760a3155f4ab2fe00a74619": "2000000000000000000000",
  "3ffcb870d4023d255d5167d8a507cefc366b68ba": "649400000000000000000",
  "00dae27b350bae20c5652124af5d8b5cba001ec1": "40000000000000000000",
  "fc5500825105cf712a318a5e9c3bfc69c89d0c12": "4000000000000000000000",
  "1ed8bb3f06778b039e9961d81cb71a73e6787c8e": "2000000000000000000000",
  "530ffac3bc3412e2ec0ea47b7981c770f5bb2f35": "133700000000000000000",
  "5f344b01c7191a32d0762ac188f0ec2dd460911d": "1000000000000000000000",
  "5cfa9877f719c79d9e494a08d1e41cf103fc87c9": "200000000000000000000",
  "f6eaac7032d492ef17fd6095afc11d634f56b382": "500038000000000000000",
  "962c0dec8a3d464bf39b1215eafd26480ae490cd": "2001680000000000000000",
  "262a8bfd7d9dc5dd3ad78161b6bb560824373655": "1169820000000000000000",
  "9b4824ff9fb2abda554dee4fb8cf549165570631": "20000000000000000000",
  "bb3b9005f46fd2ca3b30162599928c77d9f6b601": "8000014000000000000000",
  "f7dc251196fbcbb77c947d7c1946b0ff65021cea": "1000000000000000000000",
  "af1148ef6c8e103d7530efc91679c9ac27000993": "200000000000000000000",
  "0bb2650ea01aca755bc0c017b64b1ab5a66d82e3": "1337000000000000000000",
  "0cda12bf72d461bbc479eb92e6491d057e6b5ad1": "10000000000000000000000",
  "4e5b77f9066159e615933f2dda7477fa4e47d648": "200000000000000000000",
  "391161b0e43c302066e8a68d2ce7e199ecdb1d57": "4000000000000000000000",
  "c7e330cd0c890ac99fe771fcc7e7b009b7413d8a": "4000000000000000000000",
  "d4b38a5fdb63e01714e9801db47bc990bd509183": "5999000000000000000000",
  "bc0f98598f88056a26339620923b8f1eb074a9fd": "200000000000000000000",
  "dbc59ed88973dead310884223af49763c05030f1": "20000000000000000000",
  "0f85e42b1df321a4b3e835b50c00b06173968436": "985000000000000000000",
  "d7788ef28658aa06cc53e1f3f0de58e5c371be78": "6685000000000000000000",
  "ecd276af64c79d1bd9a92b86b5e88d9a95eb88f8": "20000000000000000000",
  "81c9e1aee2d3365d53bcfdcd96c7c538b0fd7eec": "1820000000000000000000",
  "5d39ef9ea6bdfff15d11fe91f561a6f9e31f5da5": "2000000000000000000000",
  "99878f9d6e0a7ed9aec78297b73879a80195afe0": "3980000000000000000000",
  "7294c918b1aefb4d25927ef9d799e71f93a28e85": "197000000000000000000",
  "a33f70da7275ef057104dfa7db64f472e9f5d553": "80220000000000000000",
  "255bdd6474cc8262f26a22c38f45940e1ceea69b": "4000000000000000000000",
  "52f8b509fee1a874ab6f9d87367fbeaf15ac137f": "1000000000000000000000",
  "e2728a3e8c2aaac983d05dc6877374a8f446eee9": "197600000000000000000",
  "ed0206cb23315128f8caff26f6a30b985467d022": "40000000000000000000000",
  "87cf36ad03c9eae9053abb5242de9117bb0f2a0b": "500000000000000000000",
  "a929c8bd71db0c308dac06080a1747f21b1465aa": "500000000000000000000",
  "9da6e075989c7419094cc9f6d2e49393bb199688": "11100000000000000000000",
  "763eece0b08ac89e32bfa4bece769514d8cb5b85": "4000000000000000000000",
  "5df3277ca85936c7a0d2c0795605ad25095e7159": "2000000000000000000000",
  "7163758cbb6c4c525e0414a40a049dcccce919bb": "200000000000000000000",
  "14cdddbc8b09e6675a9e9e05091cb92238c39e1e": "5100000000000000000000",
  "b3b7f493b44a2c8d80ec78b1cdc75a652b73b06c": "2000000000000000000000",
  "c69b855539ce1b04714728eec25a37f367951de7": "2000000000000000000000",
  "052eab1f61b6d45517283f41d1441824878749d0": "4000000000000000000000",
  "515651d6db4faf9ecd103a921bbbbe6ae970fdd4": "20000000000000000000000",
  "c7aff91929797489555a2ff1d14d5c695a108355": "1000000000000000000000",
  "d7ca7fdcfebe4588eff5421d1522b61328df7bf3": "4001070000000000000000",
  "eefba12dfc996742db790464ca7d273be6e81b3e": "1000000000000000000000",
  "ebaa216de9cc5a43031707d36fe6d5bedc05bdf0": "1969606000000000000000",
  "559194304f14b1b93afe444f0624e053c23a0009": "400000000000000000000",
  "4ecc19948dd9cd87b4c7201ab48e758f28e7cc76": "500200000000000000000",
  "f224eb900b37b4490eee6a0b6420d85c947d8733": "970000000000000000000",
  "97810bafc37e84306332aacb35e92ad911d23d24": "1000000000000000000000",
  "bd67d2e2f82da8861341bc96a2c0791fddf39e40": "200014000000000000000",
  "1b6495891240e64e594493c2662171db5e30ce13": "172400000000000000000",
  "00bdd4013aa31c04616c2bc9785f2788f915679b": "13400000000000000000",
  "c6ae287ddbe1149ba16ddcca4fe06aa2eaa988a9": "400000000000000000000",
  "b7c9f12b038e73436d17e1c12ffe1aeccdb3f58c": "540000000000000000000",
  "c1b500011cfba95d7cd636e95e6cbf6167464b25": "200000000000000000000",
  "39e0db4d60568c800b8c5500026c2594f5768960": "1000000000000000000000",
  "40e3c283f7e24de0410c121bee60a5607f3e29a6": "1000000000000000000000",
  "2f7d3290851be5c6b4b43f7d4574329f61a792c3": "100000000000000000000",
  "c33ece935a8f4ef938ea7e1bac87cb925d8490ca": "33122000000000000000000",
  "57bddf078834009c89d88e6282759dc45335b470": "2148000000000000000000",
  "50ad187ab21167c2b6e78be0153f44504a07945e": "100076000000000000000",
  "5bd24aac3612b20c609eb46779bf95698407c57c": "1970000000000000000000",
  "16526c9edf943efa4f6d0f0bae81e18b31c54079": "985000000000000000000",
  "4c6a9dc2cab10abb2e7c137006f08fecb5b779e1": "499000000000000000000",
  "02c9f7940a7b8b7a410bf83dc9c22333d4275dd3": "5000000000000000000000",
  "b9fd3833e88e7cf1fa9879bdf55af4b99cd5ce3f": "1000000000000000000000",
  "7e268f131ddf687cc325c412f78ba961205e9112": "16000600000000000000000",
  "180478a655d78d0f3b0c4f202b61485bc4002fd5": "2000000000000000000000",
  "ed4014538cee664a2fbcb6dc669f7ab16d0ba57c": "200000000000000000000",
  "f63a579bc3eac2a9490410128dbcebe6d9de8243": "1490000000000000000000",
  "5d822d9b3ef4b502627407da272f67814a6becd4": "20000000000000000000",
  "eb52ab10553492329c1c54833ae610f398a65b9d": "152000000000000000000",
  "63340a57716bfa63eb6cd133721202575bf796f0": "209967000000000000000",
  "933bf33f8299702b3a902642c33e0bfaea5c1ca3": "15200000000000000000",
  "25bc49ef288cd165e525c661a812cf84fbec8f33": "338464000000000000000",
  "c8231ba5a411a13e222b29bfc1083f763158f226": "1000090000000000000000",
  "6c15ec3520bf8ebbc820bd0ff19778375494cf9d": "2005500000000000000000",
  "aaced8a9563b1bc311dbdffc1ae7f57519c4440c": "2000000000000000000000",
  "d90f3009db437e4e11c780bec8896f738d65ef0d": "4000000000000000000000",
  "5603241eb8f08f721e348c9d9ad92f48e390aa24": "200000000000000000000",
  "53cec6c88092f756efe56f7db11228a2db45b122": "4000000000000000000000",
  "194cebb4929882bf3b4bf9864c2b1b0f62c283f9": "571300000000000000000",
  "4be8628a8154874e048d80c142181022b180bcc1": "60000000000000000000",
  "5fd973af366aa5157c54659bcfb27cbfa5ac15d6": "4000000000000000000000",
  "303139bc596403d5d3931f774c66c4ba467454db": "1699830000000000000000",
  "87584a3f613bd4fac74c1e780b86d6caeb890cb2": "1700000000000000000000",
  "77f4e3bdf056883cc87280dbe640a18a0d02a207": "193806000000000000000",
  "4de3fe34a6fbf634c051997f47cc7f48791f5824": "1999000000000000000000",
  "c45a1ca1036b95004187cdac44a36e33a94ab5c3": "254800000000000000000",
  "65d33eb39cda6453b19e61c1fe4db93170ef9d34": "13370000000000000000",
  "f65616be9c8b797e7415227c9138faa0891742d7": "790000000000000000000",
  "e17812f66c5e65941e186c46922b6e7b2f0eeb46": "1820000000000000000000",
  "d47f50df89a1cff96513bef1b2ae3a2971accf2c": "840000000000000000000",
  "8ed1528b447ed4297902f639c514d0944a88f8c8": "198800000000000000000",
  "a4fb14409a67b45688a8593e5cc2cf596ced6f11": "1790000000000000000000",
  "855d9aef2c39c6230d09c99ef6494989abe68785": "161000000000000000000",
  "778c43d11afe3b586ff374192d96a7f23d2b9b7f": "2577139000000000000000",
  "e3ece1f632711d13bfffa1f8f6840871ee58fb27": "4000000000000000000000",
  "beb3358c50cf9f75ffc76d443c2c7f55075a0589": "2674000000000000000000",
  "f156dc0b2a981e5b55d3f2f03b8134e331dbadb7": "100000000000000000000",
  "eb9cc9fe0869d2dab52cc7aae8fd57adb35f9feb": "1966000000000000000000",
  "2467c6a5c696ede9a1e542bf1ad06bcc4b06aca0": "18500000000000000000",
  "ec75b4a47513120ba5f86039814f1998e3817ac3": "178756000000000000000",
  "9c3d0692ceeef80aa4965ceed262ffc7f069f2dc": "200000000000000000000",
  "e05029aceb0778675bef1741ab2cd2931ef7c84b": "5000057000000000000000",
  "41d3b731a326e76858baa5f4bd89b57b36932343": "394000000000000000000",
  "c346cb1fbce2ab285d8e5401f42dd7234d37e86d": "83500000000000000000",
  "45f4fc60f08eaca10598f0336329801e3c92cb46": "200000000000000000000",
  "f04a6a379708b9428d722aa2b06b77e88935cf89": "300000000000000000000",
  "232832cd5977e00a4c30d0163f2e24f088a6cb09": "3000000000000000000000",
  "d2ac0d3a58605e1d0f0eb3de25b2cad129ed6058": "4000000000000000000000",
  "a356551bb77d4f45a6d7e09f0a089e79cca249cb": "340000000000000000000",
  "b50c9f5789ae44e2dce017c714caf00c830084c2": "394000000000000000000",
  "21fd6c5d97f9c600b76821ddd4e776350fce2be0": "1999946000000000000000",
  "f0d5c31ccb6cbe30c7c9ea19f268d159851f8c9c": "16700000000000000000000",
  "ab7091932e4bc39dbb552380ca934fd7166d1e6e": "3340000000000000000000",
  "acd8dd91f714764c45677c63d852e56eb9eece2e": "2000000000000000000000",
  "57d032a43d164e71aa2ef3ffd8491b0a4ef1ea5b": "2000000000000000000000",
  "5af46a25ac09cb73616b53b14fb42ff0a51cddb2": "4000000000000000000000",
  "1ea6bf2f15ae9c1dbc64daa7f8ea4d0d81aad3eb": "4200000000000000000000",
  "03337012ae1d7ff3ee7f697c403e7780188bf0ef": "200000000000000000000",
  "32eb64be1b5dede408c6bdefbe6e405c16b7ed02": "1970000000000000000000",
  "22e2488e2da26a49ae84c01bd54b21f2947891c6": "1730000000000000000000",
  "be98a77fd41097b34f59d7589baad021659ff712": "900000000000000000000",
  "dda4ed2a58a8dd20a73275347b580d71b95bf99a": "399000000000000000000",
  "671110d96aaff11523cc546bf9940eedffb2faf7": "4000000000000000000000",
  "5d71799c8df3bccb7ee446df50b8312bc4eb71c5": "200000000000000000000",
  "ae179a460db66326743d24e67523a57b246daf7f": "4722920000000000000000",
  "198bfcf1b07ae308fa2c02069ac9dafe7135fb47": "20000000000000000000",
  "4662a1765ee921842ddc88898d1dc8627597bd7e": "10000000000000000000000",
  "783eec8aa5dac77b2e6623ed5198a431abbaee07": "440000000000000000000",
  "ed6643c0e8884b2d3211853785a08bf8f33ed29f": "1337000000000000000000",
  "5cc7d3066d45d27621f78bb4b339473e442a860f": "9999908000000000000000",
  "94ef8be45077c7d4c5652740de946a62624f713f": "100085000000000000000",
  "2f853817afd3b8f3b86e9f60ee77b5d97773c0e3": "1451450000000000000000",
  "3e0b8ed86ed669e12723af7572fbacfe829b1e16": "1499800000000000000000",
  "fa68e0cb3edf51f0a6f211c9b2cb5e073c9bffe6": "291200000000000000000",
  "2c234f505ca8dcc77d9b7e01d257c318cc19396d": "100000000000000000000",
  "f3f24fc29e20403fc0e8f5ebbb553426f78270a2": "100000000000000000000",
  "91546b79ecf69f936b5a561508b0d7e50cc5992f": "267400000000000000000",
  "435443b81dfdb9bd8c6787bc2518e2d47e57c15f": "5968500000000000000000",
  "3a06e3bb1edcfd0c44c3074de0bb606b049894a2": "10000000000000000000000",
  "3a3108c1e680a33b336c21131334409d97e5adec": "20000000000000000000",
  "2caf6bf4ec7d5a19c5e0897a5eeb011dcece4210": "139740000000000000000",
  "f44f8551ace933720712c5c491cdb6f2f951736c": "4000000000000000000000",
  "5bc1f95507b1018642e45cd9c0e22733b9b1a326": "100000000000000000000",
  "94ca56de777fd453177f5e0694c478e66aff8a84": "500000000000000000000",
  "afdd1b786162b8317e20f0e979f4b2ce486d765d": "20000000000000000000",
  "3a805fa0f7387f73055b7858ca8519edd93d634f": "1850000000000000000000",
  "8b36224c7356e751f0c066c35e3b44860364bfc2": "998987000000000000000",
  "cfecbea07c27002f65fe534bb8842d0925c78402": "4000000000000000000000",
  "482982ac1f1c6d1721feecd9b9c96cd949805055": "10000000000000000000000",
  "af880fc7567d5595cacce15c3fc14c8742c26c9e": "133700000000000000000",
  "acc1c78786ab4d2b3b277135b5ba123e0400486b": "78800000000000000000",
  "41f27e744bd29de2b0598f02a0bb9f98e681eaa4": "7760000000000000000000",
  "09a025316f967fa8b9a1d60700063f5a68001caa": "38200000000000000000",
  "391f20176d12360d724d51470a90703675594a4d": "1600000000000000000000",
  "fe4d8403216fd571572bf1bdb01d00578978d688": "9850000000000000000000",
  "900f0b8e35b668f81ef252b13855aa5007d012e7": "425000000000000000000",
  "c35b95a2a3737cb8f0f596b34524872bd30da234": "7540000000000000000000",
  "412a68f6c645559cc977fc4964047a201d1bb0e2": "50000000000000000000000",
  "d3dad1b6d08d4581ccae65a8732db6ac69f0c69e": "6000000000000000000000",
  "35855ec641ab9e081ed0c2a6dcd81354d0244a87": "1201897000000000000000",
  "88015d7203c5e0224aeda286ed12f1a51b789333": "4999711000000000000000",
  "251c12722c6879227992a304eb3576cd18434ea5": "2000000000000000000000",
  "1f6f0030349752061c96072bc3d6eb3549208d6b": "23891000000000000000",
  "86153063a1ae7f02f1a88136d4d69c7c5e3e4327": "1000000000000000000000",
  "78355df0a230f83d032c703154414de3eedab557": "2000000000000000000000",
  "c5b56cd234267c28e89c6f6b2266b086a12f970c": "4000000000000000000000",
  "3e3cd3bec06591d6346f254b621eb41c89008d31": "993800000000000000000",
  "378ea1dc8edc19bae82638029ea8752ce98bcfcd": "2000000000000000000000",
  "67632046dcb25a54936928a96f423f3320cbed92": "2000000000000000000000",
  "ddbee6f094eae63420b003fb4757142aea6cd0fd": "2000000000000000000000",
  "b555d00f9190cc3677aef314acd73fdc39399259": "2000000000000000000000",
  "e230fe1bff03186d0219f15d4c481b7d59be286a": "36710000000000000000",
  "3e4e9265223c9738324cf20bd06006d0073edb8c": "133700000000000000000",
  "7450ff7f99eaa9116275deac68e428df5bbcd8b9": "2000000000000000000000",
  "021f69043de88c4917ca10f1842897eec0589c7c": "1978760000000000000000",
  "351787843505f8e4eff46566cce6a59f4d1c5fe7": "9250000000000000000000",
  "ebd37b256563e30c6f9289a8e2702f0852880833": "1999944000000000000000",
  "ed41e1a28f5caa843880ef4e8b08bd6c33141edf": "790174000000000000000",
  "8d238e036596987643d73173c37b0ad06055b96c": "2089724000000000000000",
  "478e524ef2a381d70c82588a93ca7a5fa9d51cbf": "254908000000000000000000",
  "4419ac618d5dea7cdc6077206fb07dbdd71c1702": "4000000000000000000000",
  "ca25ff34934c1942e22a4e7bd56f14021a1af088": "197000000000000000000",
  "5552f4b3ed3e1da79a2f78bb13e8ae5a68a9df3b": "1000000000000000000000",
  "4354221e62dc09e6406436163a185ef06d114a81": "2000000000000000000000",
  "ca0432cb157b5179f02ebba5c9d1b54fec4d88ca": "1000000000000000000000",
  "8a780ab87a9145fe10ed60fa476a740af4cab1d2": "334000000000000000000",
  "4ff676e27f681a982d8fd9d20e648b3dce05e945": "2800000000000000000000",
  "6c63fc85029a2654d79b2bea4de349e4524577c5": "660000000000000000000",
  "1ac089c3bc4d82f06a20051a9d732dc0e734cb61": "700300000000000000000",
  "4bf4479799ef82eea20943374f56a1bf54001e5e": "3940000000000000000000",
  "08411652c871713609af0062a8a1281bf1bbcfd9": "1400000000000000000000",
  "e1bfaa5a45c504428923c4a61192a55b1400b45d": "2674000000000000000000",
  "5e1fbd4e58e2312b3c78d7aaaafa10bf9c3189e3": "40000000000000000000000",
  "bb27c6a7f91075475ab229619040f804c8ec7a6a": "10000000000000000000000",
  "5d8d31faa864e22159cd6f5175ccecc53fa54d72": "26980000000000000000000",
  "2dd8eeef87194abc2ce7585da1e35b7cea780cb7": "999999000000000000000",
  "0e1801e70b6262861b1134ccbc391f568afc92f7": "4000000000000000000000",
  "61042b80fd6095d1b87be2f00f109fabafd157a6": "100000000000000000000",
  "fb5518714cefc36d04865de5915ef0ff47dfe743": "2000000000000000000000",
  "b5add1e7809f7d03069bfe883b0a932210be8712": "1000000000000000000000",
  "c2e2d498f70dcd0859e50b023a710a6d4b2133bd": "1037130000000000000000",
  "4ad047fae67ef162fe68fedbc27d3b65caf10c36": "1970000000000000000000",
  "69cb3e2153998d86e5ee20c1fcd1a6baeeb2863f": "4000000000000000000000",
  "683633010a88686bea5a98ea53e87997cbf73e69": "99960000000000000000",
  "6cb11ecb32d3ce829601310636f5a10cf7cf9b5f": "20068370000000000000000",
  "a613456996408af1c2e93e177788ab55895e2b32": "6366000000000000000000",
  "8308ed0af7f8a3c1751fafc877b5a42af7d35882": "1000000000000000000000",
  "e5edf8123f2403ce1a0299becf7aac744d075f23": "200200000000000000000",
  "05665155cc49cbf6aabdd5ae92cbfaad82b8c0c1": "400000000000000000000",
  "00b277b099a8e866ca0ec65bcb87284fd142a582": "1970000000000000000000",
  "4b9e068fc4680976e61504912985fd5ce94bab0d": "668500000000000000000",
  "12134e7f6b017bf48e855a399ca58e2e892fa5c8": "1000000000000000000000",
  "dffcea5421ec15900c6ecfc777184e140e209e24": "19980000000000000000",
  "2132c0516a2e17174ac547c43b7b0020d1eb4c59": "985000000000000000000",
  "d39a5da460392b940b3c69bc03757bf3f2e82489": "7019250000000000000000",
  "66c8331efe7198e98b2d32b938688e3241d0e24f": "9620000000000000000000",
  "bdca2a0ff34588af625fa8e28fc3015ab5a3aa00": "2339800000000000000000",
  "7dfc342dffcf45dfee74f84c0995397bd1a63172": "250000000000000000000",
  "a202547242806f6e70e74058d6e5292defc8c8d4": "2002000000000000000000",
  "3bbc13d04accc0707aebdcaef087d0b87e0b5ee3": "3520000000000000000000",
  "be5cba8d37427986e8ca2600e858bb03c359520f": "2955000000000000000000",
  "4174fa1bc12a3b7183cbabb77a0b59557ba5f1db": "2000000000000000000000",
  "9eb3a7cb5e6726427a3a361cfa8d6164dbd0ba16": "804000000000000000000",
  "25e661c939863acc044e6f17b5698cce379ec3cc": "1370000000000000000000",
  "24bd5904059091d2f9e12d6a26a010ca22ab14e8": "1880000000000000000000",
  "c96626728aaa4c4fb3d31c26df3af310081710d1": "3340000000000000000000",
  "0fb5d2c673bfb1ddca141b9894fd6d3f05da6720": "100000000000000000000",
  "2de31afd189a13a76ff6fe73ead9f74bb5c4a629": "6000000000000000000000",
  "bd09126c891c4a83068059fe0e15796c4661a9f4": "800000000000000000000",
  "496f5843f6d24cd98d255e4c23d1e1f023227545": "1754143000000000000000",
  "540cf23dd95c4d558a279d778d2b3735b3164191": "10000000000000000000000",
  "9b5ec18e8313887df461d2902e81e67a8f113bb1": "100000000000000000000",
  "b7a7f77c348f92a9f1100c6bd829a8ac6d7fcf91": "1820000000000000000000",
  "2590126870e0bde8a663ab040a72a5573d8d41c2": "5000000000000000000000",
  "090fa9367bda57d0d3253a0a8ff76ce0b8e19a73": "1000000000000000000000",
  "2a5ba9e34cd58da54c9a2712663a3be274c8e47b": "197000000000000000000",
  "3e8641d43c42003f0a33c929f711079deb2b9e46": "500000000000000000000",
  "f4d97664cc4eec9edbe7fa09f4750a663b507d79": "4000000000000000000000",
  "b1540e94cff3465cc3d187e7c8e3bdaf984659e2": "2989950000000000000000",
  "f96883582459908c827627e86f28e646f9c7fc7a": "8350000000000000000000",
  "d4feed99e8917c5c5458635f3603ecb7e817a7d0": "300031000000000000000",
  "14b1603ec62b20022033eec4d6d6655ac24a015a": "50000000000000000000",
  "af8e1dcb314c950d3687434d309858e1a8739cd4": "267400000000000000000",
  "4b9206ba6b549a1a7f969e1d5dba867539d1fa67": "7880000000000000000000",
  "471010da492f4018833b088d9872901e06129174": "500000000000000000000",
  "d243184c801e5d79d2063f3578dbae81e7b3a9cb": "1989700000000000000000",
  "3eada8c92f56067e1bb73ce378da56dc2cdfd365": "2210000000000000000000",
  "33ea6b7855e05b07ab80dab1e14de9b649e99b6c": "532000000000000000000",
  "700711e311bb947355f755b579250ca7fd765a3e": "1790000000000000000000",
  "87fb26c31e48644d693134205cae43b21f18614b": "1370000000000000000000",
  "001d14804b399c6ef80e64576f657660804fec0b": "4200000000000000000000",
  "f9642086b1fbae61a6804dbe5fb15ec2d2b537f4": "2000000000000000000000",
  "6919dd5e5dfb1afa404703b9faea8cee35d00d70": "5910000000000000000000",
  "9ac4da51d27822d1e208c96ea64a1e5b55299723": "100040000000000000000",
  "1bd8ebaa7674bb18e19198db244f570313075f43": "150000000000000000000",
  "e64ef012658d54f8e8609c4e9023c09fe865c83b": "28000000000000000000",
  "43b079baf0727999e66bf743d5bcbf776c3b0922": "2000000000000000000000",
  "06ac26ad92cb859bd5905ddce4266aa0ec50a9c5": "775000000000000000000",
  "99c1d9f40c6ab7f8a92fce2fdce47a54a586c53f": "985000000000000000000",
  "4ae93082e45187c26160e66792f57fad3551c73a": "21658000000000000000000",
  "7da7613445a21299aa74f0ad71431ec43fbb1be9": "68000000000000000000",
  "4a9a26fd0a8ba10f977da4f77c31908dab4a8016": "1790000000000000000000",
  "972c2f96aa00cf8a2f205abcf8937c0c75f5d8d9": "200000000000000000000",
  "b5046cb3dc1dedbd364514a2848e44c1de4ed147": "16445100000000000000000",
  "48c2ee91a50756d8ce9abeeb7589d22c6fee5dfb": "3220000000000000000000",
  "46c1aa2244b9c8a957ca8fac431b0595a3b86824": "4000000000000000000000",
  "21fd0bade5f4ef7474d058b7f3d854cb1300524e": "20000000000000000000",
  "1864a3c7b48155448c54c88c708f166709736d31": "133700000000000000000",
  "5dd53ae897526b167d39f1744ef7c3da5b37a293": "8000000000000000000000",
  "ece111670b563ccdbebca52384290ecd68fe5c92": "20000000000000000000",
  "74d671d99cbea1ab57906375b63ff42b50451d17": "1000000000000000000000",
  "5717cc9301511d4a81b9f583148beed3d3cc8309": "2600000000000000000000",
  "8f92844f282a92999ee5b4a8d773d06b694dbd9f": "1940000000000000000000",
  "b5a606f4ddcbb9471ec67f658caf2b00ee73025e": "4325000000000000000000",
  "bdb60b823a1173d45a0792245fb496f1fd3301cf": "2000000000000000000000",
  "1d2615f8b6ca5012b663bdd094b0c5137c778ddf": "10000000000000000000000",
  "82ff716fdf033ec7e942c909d9831867b8b6e2ef": "1790000000000000000000",
  "44c14765127cde11fab46c5d2cf4d4b2890023fd": "2000000000000000000000",
  "c72cb301258e91bc08998a805dd192f25c2f9a35": "591000000000000000000",
  "ad732c976593eec4783b4e2ecd793979780bfedb": "2000000000000000000000",
  "d8f62036f03b7635b858f1103f8a1d9019a892b6": "50000000000000000000",
  "0a06fad7dcd7a492cbc053eeabde6934b39d8637": "20000000000000000000",
  "67f2bb78b8d3e11f7c458a10b5c8e0a1d374467d": "1790000000000000000000",
  "4b5cdb1e428c91dd7cb54a6aed4571da054bfe52": "88000000000000000000",
  "b3557d39b5411b84445f5f54f38f62d2714d0087": "600000000000000000000",
  "0b0e055b28cbd03dc5ff44aa64f3dce04f5e63fb": "2000000000000000000000",
  "9b2be7f56754f505e3441a10f7f0e20fd3ddf849": "340000000000000000000",
  "0b93fca4a4f09cac20db60e065edcccc11e0a5b6": "200000000000000000000",
  "3bc85d6c735b9cda4bba5f48b24b13e70630307b": "1970000000000000000000",
  "52102354a6aca95d8a2e86d5debda6de69346076": "2000000000000000000000",
  "cda4530f4b9bc50905b79d17c28fc46f95349bdf": "942000000000000000000",
  "ff545bbb66fbd00eb5e6373ff4e326f5feb5fe12": "20000000000000000000",
  "4030a925706b2c101c8c5cb9bd05fbb4f6759b18": "4000000000000000000000",
  "f11e01c7a9d12499005f4dae7716095a34176277": "400000000000000000000",
  "a4826b6c3882fad0ed5c8fbb25cc40cc4f33759f": "2068000000000000000000",
  "28510e6eff1fc829b6576f4328bc3938ec7a6580": "10000000000000000000000",
  "9ce5363b13e8238aa4dd15acd0b2e8afe0873247": "200000000000000000000",
  "d97bc84abd47c05bbf457b2ef659d61ca5e5e48f": "122000000000000000000",
  "4a719061f5285495b37b9d7ef8a51b07d6e6acac": "199800000000000000000",
  "8b714522fa2839620470edcf0c4401b713663df1": "200000000000000000000",
  "b6decf82969819ba02de29b9b593f21b64eeda0f": "740000000000000000000",
  "c87d3ae3d88704d9ab0009dcc1a0067131f8ba3c": "1969606000000000000000",
  "dccb370ed68aa922283043ef7cad1b9d403fc34a": "4000000000000000000000",
  "2d532df4c63911d1ce91f6d1fcbff7960f78a885": "1669833000000000000000",
  "1fcfd1d57f872290560cb62d600e1defbefccc1c": "1490000000000000000000",
  "d9e27eb07dfc71a706060c7f079238ca93e88539": "1000000000000000000000",
  "da7732f02f2e272eaf28df972ecc0ddeed9cf498": "205274000000000000000",
  "bf09d77048e270b662330e9486b38b43cd781495": "436000000000000000000000",
  "619f171445d42b02e2e07004ad8afe694fa53d6a": "20000000000000000000",
  "2bdd03bebbee273b6ca1059b34999a5bbd61bb79": "20000000000000000000",
  "8da1d359ba6cb4bcc57d7a437720d55db2f01c72": "80000000000000000000",
  "be935793f45b70d8045d2654d8dd3ad24b5b6137": "880000000000000000000",
  "ee71793e3acf12a7274f563961f537529d89c7de": "2000000000000000000000",
  "86f05d19063e9369c6004eb3f123943a7cff4eab": "1999944000000000000000",
  "87b10f9c280098179a2b76e9ce90be61fc844d0d": "1337000000000000000000",
  "243c84d12420570cc4ef3baba1c959c283249520": "2345000000000000000000",
  "6bc85acd5928722ef5095331ee88f484b8cf8357": "180000000000000000000",
  "2561a138dcf83bd813e0e7f108642be3de3d6f05": "999940000000000000000",
  "7d0350e40b338dda736661872be33f1f9752d755": "49933000000000000000",
  "e5dc9349cb52e161196122cf87a38936e2c57f34": "2000000000000000000000",
  "543a8c0efb8bcd15c543e2a6a4f807597631adef": "5893800000000000000000",
  "0413d0cf78c001898a378b918cd6e498ea773c4d": "280000000000000000000",
  "3708e59de6b4055088782902e0579c7201a8bf50": "200000000000000000000000",
  "699fc6d68a4775573c1dcdaec830fefd50397c4e": "60000000000000000000",
  "379a7f755a81a17edb7daaa28afc665dfa6be63a": "25000000000000000000",
  "260a230e4465077e0b14ee4442a482d5b0c914bf": "1677935000000000000000",
  "3daa01ceb70eaf9591fa521ba4a27ea9fb8ede4a": "1667400000000000000000",
  "7f3a1e45f67e92c880e573b43379d71ee089db54": "100000000000000000000000",
  "38643babea6011316cc797d9b093c897a17bdae7": "334400000000000000000",
  "84675e9177726d45eaa46b3992a340ba7f710c95": "1000000000000000000000",
  "0f83461ba224bb1e8fdd9dae535172b735acb4e0": "200000000000000000000",
  "31aa3b1ebe8c4dbcb6a708b1d74831e60e497660": "400000000000000000000",
  "a32cf7dde20c3dd5679ff5e325845c70c5962662": "20000000000000000000",
  "c007f0bdb6e7009202b7af3ea90902697c721413": "2999966000000000000000",
  "05c64004a9a826e94e5e4ee267fa2a7632dd4e6f": "16191931000000000000000",
  "f622e584a6623eaaf99f2be49e5380c5cbcf5cd8": "200000000000000000000",
  "9dc10fa38f9fb06810e11f60173ec3d2fd6a751e": "1970000000000000000000",
  "423c3107f4bace414e499c64390a51f74615ca5e": "2000000000000000000000",
  "92438e5203b6346ff886d7c36288aacccc78ceca": "1000000000000000000000",
  "bef07d97c3481f9d6aee1c98f9d91a180a32442b": "100000000000000000000000",
  "55aa5d313ebb084da0e7801091e29e92c5dec3aa": "2000000000000000000000",
  "89c433d601fad714da6369308fd26c1dc9942bbf": "2000000000000000000000",
  "25106ab6755df86d6b63a187703b0cfea0e594a0": "27400000000000000000",
  "494256e99b0f9cd6e5ebca3899863252900165c8": "14000000000000000000000",
  "5f4ace4c1cc13391e01f00b198e1f20b5f91cbf5": "5000196000000000000000",
  "135cecd955e5798370769230159303d9b1839f66": "5000000000000000000000",
  "ced81ec3533ff1bfebf3e3843ee740ad11758d3e": "1970000000000000000000",
  "688eb3853bbcc50ecfee0fa87f0ab693cabdef02": "31600000000000000000000",
  "2159240813a73095a7ebf7c3b3743e8028ae5f09": "2000000000000000000000",
  "99d1579cd42682b7644e1d4f7128441eeffe339d": "20000000000000000000000",
  "8a243a0a9fea49b839547745ff2d11af3f4b0522": "985000000000000000000",
  "c1a41a5a27199226e4c7eb198b031b59196f9842": "191000000000000000000",
  "7514adbdc63f483f304d8e94b67ff3309f180b82": "622911000000000000000",
  "74aeec915de01cc69b2cb5a6356feea14658c6c5": "232500000000000000000",
  "76f9ad3d9bbd04ae055c1477c0c35e7592cb2a20": "40200000000000000000000",
  "a8a7b68adab4e3eadff19ffa58e34a3fcec0d96a": "6000000000000000000000",
  "60de22a1507432a47b01cc68c52a0bf8a2e0d098": "19100000000000000000",
  "ceb33d78e7547a9da2e87d51aec5f3441c87923a": "20000000000000000000",
  "432809a2390f07c665921ff37d547d12f1c9966a": "30000000000000000000000",
  "d5e656a1b916f9bf45afb07dd8afaf73b4c56f41": "97000000000000000000",
  "e3410bb7557cf91d79fa69d0dfea0aa075402651": "2000000000000000000000",
  "dee942d5caf5fac11421d86b010b458e5c392990": "4000000000000000000000",
  "a98f109835f5eacd0543647c34a6b269e3802fac": "400000000000000000000",
  "932b9c04d40d2ac83083d94298169dae81ab2ed0": "2000000000000000000000",
  "ba10f2764290f875434372f79dbf713801caac01": "955000000000000000000",
  "a2c7eaffdc2c9d937345206c909a52dfb14c478f": "143000000000000000000",
  "6c67e0d7b62e2a08506945a5dfe38263339f1f22": "1970000000000000000000",
  "60c3714fdddb634659e4a2b1ea42c4728cc7b8ba": "13370000000000000000",
  "73b4d499de3f38bf35aaf769a6e318bc6d123692": "2000000000000000000000",
  "3b22dea3c25f1b59c7bd27bb91d3a3eaecef3984": "100000000000000000000",
  "1e3badb1b6e1380e27039c576ae6222e963a5b53": "20000000000000000000000",
  "abd4d6c1666358c0406fdf3af248f78ece830104": "2112000000000000000000",
  "0c925ad5eb352c8ef76d0c222d115b0791b962a1": "3180000000000000000000",
  "be9186c34a52514abb9107860f674f97b821bd5b": "509600000000000000000",
  "b7f67314cb832e32e63b15a40ce0d7ffbdb26985": "1060866000000000000000",
  "3f30d3bc9f602232bc724288ca46cd0b0788f715": "4000000000000000000000",
  "970abd53a54fca4a6429207c182d4d57bb39d4a0": "2000000000000000000000",
  "36d85dc3683156e63bf880a9fab7788cf8143a27": "20000000000000000000000",
  "2836123046b284e5ef102bfd22b1765e508116ad": "411880000000000000000",
  "de06d5ea777a4eb1475e605dbcbf43444e8037ea": "50000000000000000000000",
  "9af11399511c213181bfda3a8b264c05fc81b3ce": "14000000000000000000000",
  "e2191215983f33fd33e22cd4a2490054da53fddc": "15800000000000000000",
  "2eebf59432b52892f9380bd140aa99dcf8ad0c0f": "152000000000000000000",
  "dc087f9390fb9e976ac23ab689544a0942ec2021": "1820000000000000000000",
  "fd4b989558ae11be0c3b36e2d6f2a54a9343ca2e": "2000000000000000000000",
  "770c2fb2c4a81753ac0182ea460ec09c90a516f8": "20000000000000000000",
  "b28dbfc6499894f73a71faa00abe0f4bc9d19f2a": "100000000000000000000",
  "b0cef8e8fb8984a6019f01c679f272bbe68f5c77": "152000000000000000000",
  "f400f93d5f5c7e3fc303129ac8fb0c2f786407fa": "2000000000000000000000",
  "f2133431d1d9a37ba2f0762bc40c5acc8aa6978e": "2000000000000000000000",
  "9003d270891ba2df643da8341583193545e3e000": "4000000000000000000000",
  "8938d1b4daee55a54d738cf17e4477f6794e46f7": "18200000000000000000",
  "98e6f547db88e75f1f9c8ac2c5cf1627ba580b3e": "1000000000000000000000",
  "009fdbf44e1f4a6362b769c39a475f95a96c2bc7": "564000000000000000000",
  "d0f9597811b0b992bb7d3757aa25b4c2561d32e2": "500000000000000000000",
  "dcd10c55bb854f754434f1219c2c9a98ace79f03": "4000086000000000000000",
  "67048f3a12a4dd1f626c64264cb1d7971de2ca38": "180000000000000000000",
  "d33cf82bf14c592640a08608914c237079d5be34": "2000000000000000000000",
  "f5b068989df29c253577d0405ade6e0e7528f89e": "1610000000000000000000",
  "a9a8eca11a23d64689a2aa3e417dbb3d336bb59a": "262025000000000000000",
  "99413704b1a32e70f3bc0d69dd881c38566b54cb": "27382708000000000000000",
  "2a085e25b64862f5e68d768e2b0f7a8529858eee": "1983618000000000000000",
  "833d3fae542ad5f8b50ce19bde2bec579180c88c": "346000000000000000000",
  "c3483d6e88ac1f4ae73cc4408d6c03abe0e49dca": "17000000000000000000000",
  "fde395bc0b6d5cbb4c1d8fea3e0b4bff635e9db7": "2000000000000000000000",
  "eddacd94ec89a2ef968fcf977a08f1fae2757869": "8000000000000000000000",
  "dc29119745d2337320da51e19100c948d980b915": "160000000000000000000",
  "640bf87415e0cf407301e5599a68366da09bbac8": "493207000000000000000",
  "afcc7dbb8356d842d43ae7e23c8422b022a30803": "30400000000000000000000",
  "9120e71173e1ba19ba8f9f4fdbdcaa34e1d6bb78": "2000000000000000000000",
  "9092918707c621fdbd1d90fb80eb787fd26f7350": "2460000000000000000000",
  "263e57dacbe0149f82fe65a2664898866ff5b463": "38000000000000000000000",
  "315db7439fa1d5b423afa7dd7198c1cf74c918bc": "600000000000000000000",
  "09b4668696f86a080f8bebb91db8e6f87015915a": "656010000000000000000",
  "5c31996dcac015f9be985b611f468730ef244d90": "200000000000000000000",
  "b1179589e19db9d41557bbec1cb24ccc2dec1c7f": "100000000000000000000000",
  "3b1937d5e793b89b63fb8eb5f1b1c9ca6ba0fa8e": "2000000000000000000000",
  "c9127b7f6629ee13fc3f60bc2f4467a20745a762": "16465639000000000000000",
  "7306de0e288b56cfdf987ef0d3cc29660793f6dd": "508060000000000000000",
  "2aa192777ca5b978b6b2c2ff800ac1860f753f47": "335000000000000000000",
  "55da9dcdca61cbfe1f133c7bcefc867b9c8122f9": "880000000000000000000",
  "cdd9efac4d6d60bd71d95585dce5d59705c13564": "100000000000000000000",
  "ad8e48a377695de014363a523a28b1a40c78f208": "1000000000000000000000",
  "252b6555afdc80f2d96d972d17db84ea5ad521ac": "7880000000000000000000",
  "60ab71cd26ea6d6e59a7a0f627ee079c885ebbf6": "26740000000000000000",
  "f40b134fea22c6b29c8457f49f000f9cda789adb": "600000000000000000000",
  "85a2f6ea94d05e8c1d9ae2f4910338a358e98ded": "2000000000000000000000",
  "ae13a08511110f32e53be4127845c843a1a57c7b": "500000000000000000000",
  "40db1ba585ce34531edec5494849391381e6ccd3": "1790000000000000000000",
  "0c5589a7a89b9ad15b02751930415948a875fbef": "126000000000000000000",
  "89054430dcdc28ac15fa635ef87c105e602bf70c": "108000000000000000000",
  "6c882c27732cef5c7c13a686f0a2ea77555ac289": "100000000000000000000000",
  "de374299c1d07d79537385190f442ef9ca24061f": "133700000000000000000",
  "b146a0b925553cf06fcaf54a1b4dfea621290757": "2000200000000000000000",
  "09ae49e37f121df5dc158cfde806f173a06b0c7f": "3988000000000000000000",
  "b758896f1baa864f17ebed16d953886fee68aae6": "1000000000000000000000",
  "30730466b8eb6dc90d5496aa76a3472d7dbe0bbe": "1999800000000000000000",
  "fc02734033e57f70517e0afc7ee62461f06fad8e": "394000000000000000000",
  "a9b2d2e0494eab18e07d37bbb856d80e80f84cd3": "10000000000000000000000",
  "95278b08dee7c0f2c8c0f722f9fcbbb9a5241fda": "2408672000000000000000",
  "dab6bcdb83cf24a0ae1cb21b3b5b83c2f3824927": "50000000000000000000000",
  "94439ca9cc169a79d4a09cae5e67764a6f871a21": "240000000000000000000",
  "e06c29a81517e0d487b67fb0b6aabc4f57368388": "401100000000000000000",
  "458e3cc99e947844a18e6a42918fef7e7f5f5eb3": "36400000000000000000000",
  "0a9804137803ba6868d93a55f9985fcd540451e4": "13370000000000000000",
  "40630024bd2c58d248edd8465617b2bf1647da0e": "1000000000000000000000",
  "15224ad1c0face46f9f556e4774a3025ad06bd52": "13370000000000000000",
  "2e2810dee44ae4dff3d86342ab126657d653c336": "200000000000000000000",
  "48a30de1c919d3fd3180e97d5f2b2a9dbd964d2d": "44000000000000000000",
  "46a30b8a808931217445c3f5a93e882c0345b426": "250019000000000000000",
  "455396a4bbd9bae8af9fb7c4d64d471db9c24505": "161000000000000000000",
  "edfda2d5db98f9380714664d54b4ee971a1cae03": "40044000000000000000",
  "f5eadcd2d1b8657a121f33c458a8b13e76b65526": "249828000000000000000",
  "90e7070f4d033fe6910c9efe5a278e1fc6234def": "100392000000000000000",
  "d55508adbbbe9be81b80f97a6ea89add68da674f": "2000000000000000000000",
  "66925de3e43f4b41bf9dadde27d5488ef569ea0d": "39400000000000000000",
  "b7c077946674ba9341fb4c747a5d50f5d2da6415": "1000000000000000000000",
  "c52d1a0c73c2a1be84915185f8b34faa0adf1de3": "1400001000000000000000",
  "79b8aad879dd30567e8778d2d231c8f37ab8734e": "2000000000000000000000",
  "3aae4872fd9093cbcad1406f1e8078bab50359e2": "39400000000000000000",
  "b2e9d76bf50fc36bf7d3944b63e9ca889b699968": "2660000000000000000000",
  "405f596b94b947344c033ce2dcbff12e25b79784": "2000000000000000000000",
  "232cb1cd49993c144a3f88b3611e233569a86bd6": "15576000000000000000000",
  "9e232c08c14dc1a6ed0b8a3b2868977ba5c17d10": "20000000000000000000",
  "095270cc42141dd998ad2862dbd1fe9b44e7e650": "1200000000000000000000",
  "15d99468507aa0413fb60dca2adc7f569cb36b54": "2000000000000000000000",
  "04852732b4c652f6c2e58eb36587e60a62da14db": "20000000000000000000000",
  "ecf24cdd7c22928c441e694de4aa31b0fab59778": "600000000000000000000",
  "512b91bbfaa9e581ef683fc90d9db22a8f49f48b": "310000000000000000000000",
  "a88577a073fbaf33c4cd202e00ea70ef711b4006": "2000000000000000000000",
  "00acc6f082a442828764d11f58d6894ae408f073": "60000000000000000000000",
  "0355bcacbd21441e95adeedc30c17218c8a408ce": "400000000000000000000",
  "4e73cf2379f124860f73d6d91bf59acc5cfc845b": "40110000000000000000",
  "2a742b8910941e0932830a1d9692cfd28494cf40": "499986000000000000000",
  "41a8c2830081b102df6e0131657c07ab635b54ce": "1999944000000000000000",
  "b63064bd3355e6e07e2d377024125a33776c4afa": "38800000000000000000000",
  "1a25e1c5bc7e5f50ec16f8885f210ea1b938800e": "4000000000000000000000",
  "09b59b8698a7fbd3d2f8c73a008988de3e406b2b": "40000000000000000000000",
  "c555b93156f09101233c6f7cf6eb3c4f196d3346": "3000000000000000000000",
  "12f32c0a1f2daab676fe69abd9e018352d4ccd45": "50000000000000000000",
  "5956b28ec7890b76fc061a1feb52d82ae81fb635": "2000000000000000000000",
  "c739259e7f85f2659bef5f609ed86b3d596c201e": "200000000000000000000",
  "fae92c1370e9e1859a5df83b56d0f586aa3b404c": "106480000000000000000",
  "d5a7bec332adde18b3104b5792546aa59b879b52": "2000000000000000000000",
  "4f88dfd01091a45a9e2676021e64286cd36b8d34": "1000000000000000000000",
  "102c477d69aadba9a0b0f62b7459e17fbb1c1561": "2000000000000000000000",
  "34272d5e7574315dcae9abbd317bac90289d4765": "1820000000000000000000",
  "fe615d975c0887e0c9113ec7298420a793af8b96": "8000000000000000000000",
  "487adf7d70a6740f8d51cbdd68bb3f91c4a5ce68": "66850000000000000000",
  "7e5d9993104e4cb545e179a2a3f971f744f98482": "2000000000000000000000",
  "5529830a61c1f13c197e550beddfd6bd195c9d02": "10000000000000000000000",
  "2f282abbb6d4a3c3cd3b5ca812f7643e80305f06": "1850000000000000000000",
  "7352586d021ad0cf77e0e928404a59f374ff4582": "3400000000000000000000",
  "03f7b92008813ae0a676eb212814afab35221069": "2000000000000000000000",
  "056686078fb6bcf9ba0a8a8dc63a906f5feac0ea": "499800000000000000000",
  "8063379a7bf2cb923a84c5093e68dac7f75481c5": "322102000000000000000",
  "200264a09f8c68e3e6629795280f56254f8640d0": "20000000000000000000",
  "5a891155f50e42074374c739baadf7df2651153a": "4775000000000000000000",
  "80022a1207e910911fc92849b069ab0cdad043d3": "13370000000000000000",
  "e781ec732d401202bb9bd13860910dd6c29ac0b6": "1240000000000000000000",
  "4c2f1afef7c5868c44832fc77cb03b55f89e6d6e": "20000000000000000000000",
  "34ff582952ff24458f7b13d51f0b4f987022c1fe": "2804400000000000000000",
  "73914b22fc2f131584247d82be4fecbf978ad4ba": "2000000000000000000000",
  "562be95aba17c5371fe2ba828799b1f55d2177d6": "38200000000000000000000",
  "648f5bd2a2ae8902db37847d1cb0db9390b06248": "7769965000000000000000",
  "6a9758743b603eea3aa0524b42889723c4153948": "10100000000000000000000",
  "5985c59a449dfc5da787d8244e746c6d70caa55f": "100000000000000000000",
  "56ee197f4bbf9f1b0662e41c2bbd9aa1f799e846": "1000000000000000000000",
  "d47c242edffea091bc54d57df5d1fdb93101476c": "2914000000000000000000",
  "d482e7f68e41f238fe517829de15477fe0f6dd1d": "500000000000000000000",
  "05bf4fcfe772e45b826443852e6c351350ce72a2": "8000000000000000000000",
  "f10462e58fcc07f39584a187639451167e859201": "169830000000000000000",
  "1aa27699cada8dc3a76f7933aa66c71919040e88": "400000000000000000000",
  "24046b91da9b61b629cb8b8ec0c351a07e0703e4": "2000000000000000000000",
  "41033c1b6d05e1ca89b0948fc64453fbe87ab25e": "1337000000000000000000",
  "369822f5578b40dd1f4471706b22cd971352da6b": "346000000000000000000",
  "044e853144e3364495e7a69fa1d46abea3ac0964": "49225000000000000000",
  "abf728cf9312f22128024e7046c251f5dc5901ed": "29550000000000000000000",
  "d781f7fc09184611568570b4986e2c72872b7ed0": "20002000000000000000",
  "6bb4a661a33a71d424d49bb5df28622ed4dffcf4": "630400000000000000000",
  "fef3b3dead1a6926d49aa32b12c22af54d9ff985": "1000000000000000000000",
  "fa410971ad229c3036f41acf852f2ac999281950": "3997400000000000000000",
  "de176b5284bcee3a838ba24f67fc7cbf67d78ef6": "37600000000000000000",
  "23120046f6832102a752a76656691c863e17e59c": "329800000000000000000",
  "a2f472fe4f22b77db489219ea4023d11582a9329": "40000000000000000000000",
  "f0d64cf9df09741133d170485fd24b005011d520": "498680000000000000000",
  "8b505e2871f7deb7a63895208e8227dcaa1bff05": "61216600000000000000000",
  "481e3a91bfdc2f1c8428a0119d03a41601417e1c": "1000000000000000000000",
  "bc69a0d2a31c3dbf7a9122116901b2bdfe9802a0": "3000000000000000000000",
  "20a81680e465f88790f0074f60b4f35f5d1e6aa5": "1279851000000000000000",
  "194a6bb302b8aba7a5b579df93e0df1574967625": "500000000000000000000",
  "264cc8086a8710f91b21720905912cd7964ae868": "26740000000000000000",
  "24aca08d5be85ebb9f3132dfc1b620824edfedf9": "18200000000000000000",
  "1851a063ccdb30549077f1d139e72de7971197d5": "2000000000000000000000",
  "f64a4ac8d540a9289c68d960d5fb7cc45a77831c": "2000000000000000000000",
  "c3db5657bb72f10d58f231fddf11980aff678693": "5910000000000000000000",
  "b46ace865e2c50ea4698d216ab455dff5a11cd72": "1000000000000000000000",
  "9faea13c733412dc4b490402bfef27a0397a9bc3": "310000000000000000000",
  "b40594c4f3664ef849cca6227b8a25aa690925ee": "4000000000000000000000",
  "672fa0a019088db3166f6119438d07a99f8ba224": "13370000000000000000000",
  "c1ffad07db96138c4b2a530ec1c7de29b8a0592c": "17600000000000000000",
  "87af25d3f6f8eea15313d5fe4557e810c524c083": "19700000000000000000000",
  "d6a22e598dabd38ea6e958bd79d48ddd9604f4df": "1000000000000000000000",
  "a2a435de44a01bd0ecb29e44e47644e46a0cdffb": "500171000000000000000",
  "549b47649cfad993e4064d2636a4baa0623305cc": "601650000000000000000",
  "1321b605026f4ffb296a3e0edcb390c9c85608b7": "2000000000000000000000",
  "b4bf24cb83686bc469869fefb044b909716993e2": "2000000000000000000000",
  "12d91a92d74fc861a729646db192a125b79f5374": "18200000000000000000",
  "7f0662b410298c99f311d3a1454a1eedba2fea76": "200000000000000000000",
  "83908aa7478a6d1c9b9b0281148f8f9f242b9fdc": "2000000000000000000000",
  "c1438c99dd51ef1ca8386af0a317e9b041457888": "223500000000000000000",
  "545bb070e781172eb1608af7fc2895d6cb87197e": "2244000000000000000000",
  "161d26ef6759ba5b9f20fdcd66f16132c352415e": "2000000000000000000000",
  "d7f370d4bed9d57c6f49c999de729ee569d3f4e4": "200000000000000000000",
  "90e35aabb2deef408bb9b5acef714457dfde6272": "100076000000000000000",
  "0fcfc4065008cfd323305f6286b57a4dd7eee23b": "20000000000000000000000",
  "cd725d70be97e677e3c8e85c0b26ef31e9955045": "1337000000000000000000",
  "dcf6b657266e91a4dae6033ddac15332dd8d2b34": "1760000000000000000000",
  "31f006f3494ed6c16eb92aaf9044fa8abb5fd5a3": "500000000000000000000",
  "cdea386f9d0fd804d02818f237b7d9fa7646d35e": "3012139000000000000000",
  "d45b3341e8f15c80329320c3977e3b90e7826a7e": "500000000000000000000",
  "0b649da3b96a102cdc6db652a0c07d65b1e443e6": "2000000000000000000000",
  "0a58fddd71898de773a74fdae45e7bd84ef43646": "20000000000000000000",
  "0256149f5b5063bea14e15661ffb58f9b459a957": "704000000000000000000",
  "4438e880cb2766b0c1ceaec9d2418fceb952a044": "133712000000000000000",
  "9ed80eda7f55054db9fb5282451688f26bb374c1": "300000000000000000000",
  "8dab948ae81da301d972e3f617a912e5a753712e": "400000000000000000000",
  "5b5d8c8eed6c85ac215661de026676823faa0a0c": "20000000000000000000000",
  "46722a36a01e841d03f780935e917d85d5a67abd": "14900000000000000000",
  "d4b8bdf3df9a51b0b91d16abbea05bb4783c8661": "1000000000000000000000",
  "98f6b8e6213dbc9a5581f4cce6655f95252bdb07": "319968000000000000000",
  "3599493ce65772cf93e98af1195ec0955dc98002": "1500048000000000000000",
  "ecab5aba5b828de1705381f38bc744b32ba1b437": "940000000000000000000",
  "9a82826d3c29481dcc2bd2950047e8b60486c338": "20000000000000000000000",
  "6c474bc66a54780066aa4f512eefa773abf919c7": "94000000000000000000",
  "d5903e9978ee20a38c3f498d63d57f31a39f6a06": "10380000000000000000000",
  "341480cc8cb476f8d01ff30812e7c70e05afaf5d": "2000000000000000000000",
  "af771039345a343001bc0f8a5923b126b60d509c": "985000000000000000000",
  "b5a4679685fa14196c2e9230c8c4e33bffbc10e2": "1400000000000000000000",
  "2a400dff8594de7228b4fd15c32322b75bb87da8": "95810000000000000000",
  "a1336dfb96b6bcbe4b3edf3205be5723c90fad52": "5000000000000000000000",
  "e9b1f1fca3fa47269f21b061c353b7f5e96d905a": "500000000000000000000",
  "0ee414940487fd24e390378285c5d7b9334d8b65": "2680000000000000000000",
  "6ab5b4c41cddb829690c2fda7f20c85e629dd5d5": "1860000000000000000000",
  "dd63042f25ed32884ad26e3ad959eb94ea36bf67": "21340000000000000000000",
  "c0b3f244bca7b7de5b48a53edb9cbeab0b6d88c0": "5820000000000000000000",
  "ed1a5c43c574d4e934299b24f1472cdc9fd6f010": "200000000000000000000",
  "b2d9ab9664bcf6df203c346fc692fd9cbab9205e": "438000000000000000000",
  "ede8c2cb876fbe8a4cca8290361a7ea01a69fdf8": "7813091000000000000000",
  "6a7c252042e7468a3ff773d6450bba85efa26391": "500000000000000000000",
  "a106e6923edd53ca8ed650968a9108d6ccfd9670": "9499935000000000000000",
  "031e25db516b0f099faebfd94f890cf96660836b": "2000000000000000000000",
  "7fdbc3a844e40d96b2f3a635322e6065f4ca0e84": "2000000000000000000000",
  "df47a61b72535193c561cccc75c3f3ce0804a20e": "398000000000000000000",
  "ed31305c319f9273d3936d8f5b2f71e9b1b22963": "100000000000000000000",
  "a6b2d573297360102c07a18fc21df2e7499ff4eb": "4011000000000000000000",
  "f68464bf64f2411356e4d3250efefe5c50a5f65b": "20000000000000000000",
  "927cc2bfda0e088d02eff70b38b08aa53cc30941": "1852700000000000000000",
  "41cb9896445f70a10a14215296daf614e32cf4d5": "1910000000000000000000",
  "3ad70243d88bf0400f57c8c1fd57811848af162a": "860000000000000000000",
  "63b9754d75d12d384039ec69063c0be210d5e0e3": "2694055000000000000000",
  "ad1799aad7602b4540cd832f9db5f11150f1687a": "2000000000000000000000",
  "a8b65ba3171a3f77a6350b9daf1f8d55b4d201eb": "745000000000000000000",
  "ad0a4ae478e9636e88c604f242cf5439c6d45639": "3520000000000000000000",
  "4cd0b0a6436362595ceade052ebc9b929fb6c6c0": "2000000000000000000000",
  "c1d4af38e9ba799040894849b8a8219375f1ac78": "20000000000000000000000",
  "49ddee902e1d0c99d1b11af3cc8a96f78e4dcf1a": "199358000000000000000",
  "ae842210f44d14c4a4db91fc9d3b3b50014f7bf7": "4000000000000000000000",
  "10a1c42dc1ba746986b985a522a73c93eae64c63": "1000000000000000000000",
  "5103bc09933e9921fd53dc536f11f05d0d47107d": "4000000000000000000000",
  "c88eec54d305c928cc2848c2fee23531acb96d49": "1999946000000000000000",
  "9a2ce43b5d89d6936b8e8c354791b8afff962425": "2000000000000000000000",
  "562020e3ed792d2f1835fe5f55417d5111460c6a": "20000000000000000000000",
  "ed16ce39feef3bd7f5d162045e0f67c0f00046bb": "20000000000000000000",
  "ab948a4ae3795cbca13126e19253bdc21d3a8514": "200000000000000000000",
  "c12b7f40df9a2f7bf983661422ab84c9c1f50858": "8000000000000000000000",
  "62e6b2f5eb94fa7a43831fc87e254a3fe3bf8f89": "250000000000000000000",
  "423bca47abc00c7057e3ad34fca63e375fbd8b4a": "18000000000000000000000",
  "5ff326cd60fd136b245e29e9087a6ad3a6527f0d": "1880000000000000000000",
  "79ffb4ac13812a0b78c4a37b8275223e176bfda5": "17300000000000000000",
  "f757fc8720d3c4fa5277075e60bd5c411aebd977": "2000000000000000000000",
  "0bdbc54cc8bdbbb402a08911e2232a5460ce866b": "3000000000000000000000",
  "9ee9760cc273d4706aa08375c3e46fa230aff3d5": "8950000000000000000000",
  "d23a24d7f9468343c143a41d73b88f7cbe63be5e": "200000000000000000000",
  "46d80631284203f6288ecd4e5758bb9d41d05dbe": "2000000000000000000000",
  "3f4cd1399f8a34eddb9a17a471fc922b5870aafc": "200000000000000000000",
  "44c54eaa8ac940f9e80f1e74e82fc14f1676856a": "7880000000000000000000",
  "aec27ff5d7f9ddda91183f46f9d52543b6cd2b2f": "450000000000000000000",
  "203c6283f20df7bc86542fdfb4e763ecdbbbeef5": "25000000000000000000000",
  "bcaf347918efb2d63dde03e39275bbe97d26df50": "100000000000000000000",
  "974d0541ab4a47ec7f75369c0069b64a1b817710": "400000000000000000000",
  "5da54785c9bd30575c89deb59d2041d20a39e17b": "1967031000000000000000",
  "1fb463a0389983df7d593f7bdd6d78497fed8879": "20000000000000000000",
  "6e1ea4b183e252c9bb7767a006d4b43696cb8ae9": "294245000000000000000",
  "c2aa74847e86edfdd3f3db22f8a2152feee5b7f7": "2048852000000000000000",
  "a13b9d82a99b3c9bba5ae72ef2199edc7d3bb36c": "1999944000000000000000",
  "5135fb8757600cf474546252f74dc0746d06262c": "2000000000000000000000",
  "43e7ec846358d7d0f937ad1c350ba069d7bf72bf": "118800000000000000000",
  "f2ed3e77254acb83231dc0860e1a11242ba627db": "1980000000000000000000",
  "c0a02ab94ebe56d045b41b629b98462e3a024a93": "100000000000000000000",
  "f21549bdd1487912f900a7523db5f7626121bba3": "10000000000000000000000",
  "886d0a9e17c9c095af2ea2358b89ec705212ee94": "28000000000000000000",
  "211b29cefc79ae976744fdebcebd3cbb32c51303": "14000000000000000000000",
  "b8c2703d8c3f2f44c584bc10e7c0a6b64c1c097e": "5550000000000000000000",
  "ec30addd895b82ee319e54fb04cb2bb03971f36b": "2000000000000000000000",
  "b71b62f4b448c02b1201cb5e394ae627b0a560ee": "500000000000000000000",
  "e1334e998379dfe983177062791b90f80ee22d8d": "500000000000000000000",
  "1d633097a85225a1ff4321b12988fdd55c2b3844": "4000000000000000000000",
  "8bd8d4c4e943f6c8073921dc17e3e8d7a0761627": "2933330000000000000000",
  "a5d96e697d46358d119af7819dc7087f6ae47fef": "14605131000000000000000",
  "d0809498c548047a1e2a2aa6a29cd61a0ee268bd": "2000000000000000000000",
  "3cd6b7593cbee77830a8b19d0801958fcd4bc57a": "500000000000000000000",
  "ead4d2eefb76abae5533961edd11400406b298fc": "3880000000000000000000",
  "6331028cbb5a21485bc51b565142993bdb2582a9": "534800000000000000000",
  "163bad4a122b457d64e8150a413eae4d07023e6b": "18800000000000000000",
  "c522e20fbf04ed7f6b05a37b4718d6fce0142e1a": "4000000000000000000000",
  "2d9bad6f1ee02a70f1f13def5cccb27a9a274031": "1790000000000000000000",
  "5ed0d6338559ef44dc7a61edeb893fa5d83fa1b5": "220000000000000000000",
  "ec8c1d7b6aaccd429db3a91ee4c9eb1ca4f6f73c": "4250000000000000000000",
  "3896ad743579d38e2302454d1fb6e2ab69e01bfd": "1880000000000000000000",
  "e73ccf436725c151e255ccf5210cfce5a43f13e3": "19982000000000000000",
  "9483d98f14a33fdc118d403955c29935edfc5f70": "459600000000000000000",
  "1cfcf7517f0c08459720942b647ad192aa9c8828": "800000000000000000000",
  "8d378f0edc0bb0f0686d6a20be6a7692c4fa24b8": "100000000000000000000",
  "06f68de3d739db41121eacf779aada3de8762107": "28000000000000000000",
  "9909650dd5b1397b8b8b0eb69499b291b0ad1213": "200000000000000000000",
  "b66675142e3111a1c2ea1eb2419cfa42aaf7a234": "1000000000000000000000",
  "7836f7ef6bc7bd0ff3acaf449c84dd6b1e2c939f": "4142296000000000000000",
  "3ddedbe48923fbf9e536bf9ffb0747c9cdd39eef": "16100000000000000000000",
  "c47d610b399250f70ecf1389bab6292c91264f23": "288800000000000000000",
  "51a6d627f66a8923d88d6094c4715380d3057cb6": "1152044000000000000000",
  "6c0cc917cbee7d7c099763f14e64df7d34e2bf09": "250000000000000000000",
  "aaaae68b321402c8ebc13468f341c63c0cf03fce": "1520000000000000000000",
  "819cdaa5303678ef7cec59d48c82163acc60b952": "14523448000000000000000",
  "d071192966eb69c3520fca3aa4dd04297ea04b4e": "110000000000000000000",
  "e53425d8df1f11c341ff58ae5f1438abf1ca53cf": "322000000000000000000",
  "8ffe322997b8e404422d19c54aadb18f5bc8e9b7": "3940000000000000000000",
  "305f78d618b990b4295bac8a2dfa262884f804ea": "4000000000000000000000",
  "274d69170fe7141401882b886ac4618c6ae40edb": "955000000000000000000",
  "69c94e07c4a9be3384d95dfa3cb9290051873b7b": "70000000000000000000",
  "859c600cf13d1d0273d5d1da3cd789e495899f27": "2674000000000000000000",
  "c06cebbbf7f5149a66f7eb976b3e47d56516da2f": "2000000000000000000000",
  "37bbc47212d82fcb5ee08f5225ecc2041ad2da7d": "3280000000000000000000",
  "11e7997edd904503d77da6038ab0a4c834bbd563": "388000000000000000000",
  "d333627445f2d787901ef33bb2a8a3675e27ffec": "400000000000000000000",
  "16a58e985dccd707a594d193e7cca78b5d027849": "1360000000000000000000",
  "f8ae857b67a4a2893a3fbe7c7a87ff1c01c6a6e7": "4000000000000000000000",
  "491561db8b6fafb9007e62d050c282e92c4b6bc8": "30000000000000000000000",
  "21df1ec24b4e4bfe79b0c095cebae198f291fbd1": "20000000000000000000000",
  "e208812a684098f3da4efe6aba256256adfe3fe6": "2000000000000000000000",
  "f4ec8e97a20aa5f8dd206f55207e06b813df2cc0": "200000000000000000000",
  "29eb7eefdae9feb449c63ff5f279d67510eb1422": "19400000000000000000",
  "0d678706d037187f3e22e6f69b99a592d11ebc59": "1580000000000000000000",
  "de6d363106cc6238d2f092f0f0372136d1cd50c6": "5348000000000000000000",
  "c8710d7e8b5a3bd69a42fe0fa8b87c357fddcdc8": "4000000000000000000000",
  "5267f4d41292f370863c90d793296903843625c7": "1400000000000000000000",
  "4cda41dd533991290794e22ae324143e309b3d3d": "2400000000000000000000",
  "f8a50cee2e688ceee3aca4d4a29725d4072cc483": "2000000000000000000000",
  "5ed3bbc05240e0d399eb6ddfe60f62de4d9509af": "193999806000000000000000",
  "0befb54707f61b2c9fb04715ab026e1bb72042bd": "4000000000000000000000",
  "cab9a301e6bd46e940355028eccd40ce4d5a1ac3": "400000000000000000000",
  "64672da3ab052821a0243d1ce4b6e0a36517b8eb": "200000000000000000000",
  "eac0827eff0c6e3ff28a7d4a54f65cb7689d7b99": "2856500000000000000000",
  "f4b6cdcfcb24230b337d770df6034dfbd4e1503f": "19000000000000000000000",
  "7be2f7680c802da6154c92c0194ae732517a7169": "18200000000000000000",
  "869f1aa30e4455beb1822091de5cadec79a8f946": "8000000000000000000000",
  "c4681e73bb0e32f6b726204831ff69baa4877e32": "1820000000000000000000",
  "962cd22a8edf1e4f4e55b4b15ddbfb5d9d541971": "2000000000000000000000",
  "131df8d330eb7cc7147d0a55576f05de8d26a8b7": "188000000000000000000",
  "19f99f2c0b46ce8906875dc9f90ae104dae35594": "4507300000000000000000",
  "91bb3f79022bf3c453f4ff256e269b15cf2c9cbd": "1519000000000000000000",
  "7301dc4cf26d7186f2a11bf8b08bf229463f64a3": "2000000000000000000000",
  "7cbca88fca6a0060b960985c9aa1b02534dc2208": "462500000000000000000",
  "f3c1abd29dc57b41dc192d0e384d021df0b4f6d4": "2798000000000000000000",
  "5d32f6f86e787ff78e63d78b0ef95fe6071852b8": "401100000000000000000",
  "1678c5f2a522393225196361894f53cc752fe2f3": "1936000000000000000000",
  "1cf04cb14380059efd3f238b65d5beb86afa14d8": "20000000000000000000",
  "52e1731350f983cc2c4189842fde0613fad50ce1": "11640000000000000000000",
  "d0b11d6f2bce945e0c6a5020c3b52753f803f9d1": "200000000000000000000",
  "409bd75085821c1de70cdc3b11ffc3d923c74010": "4000000000000000000000",
  "0bb7160aba293762f8734f3e0326ffc9a4cac190": "1000000000000000000000",
  "7aad4dbcd3acf997df93586956f72b64d8ad94ee": "4000000000000000000000",
  "2dec98329d1f96c3a59caa7981755452d4da49d5": "200000000000000000000",
  "c18ab467feb5a0aadfff91230ff056464d78d800": "2000000000000000000000",
  "c90c3765156bca8e4897ab802419153cbe5225a9": "200000000000000000000",
  "85c8f3cc7a354feac99a5e7bfe7cdfa351cfe355": "400000000000000000000",
  "f4fc4d39bc0c2c4068a36de50e4ab4d4db7e340a": "25380000000000000000",
  "f50abbd4aa45d3eb88515465a8ba0b310fd9b521": "6685000000000000000000",
  "4d200110124008d56f76981256420c946a6ff45c": "199955000000000000000",
  "f4ba6a46d55140c439cbcf076cc657136262f4f8": "2000000000000000000000",
  "fa7adf660b8d99ce15933d7c5f072f3cbeb99d33": "5910000000000000000000",
  "84503334630d77f74147f68b2e086613c8f1ade9": "1600000000000000000000",
  "31ed858788bda4d5270992221cc04206ec62610d": "1176000000000000000000",
  "bfbca418d3529cb393081062032a6e1183c6b2dc": "8000000000000000000000",
  "8263ece5d709e0d7ae71cca868ed37cd2fef807b": "990000000000000000000",
  "23ba3864da583dab56f420873c37679690e02f00": "9800000000000000000000",
  "cedcb3a1d6843fb6bef643617deaf38f8e98dd5f": "477500000000000000000",
  "8fac748f784a0fed68dba43319b42a75b4649c6e": "910000000000000000000",
  "18b8bcf98321da61fb4e3eacc1ec5417272dc27e": "880000000000000000000",
  "776943ffb2ef5cdd35b83c28bc046bd4f4677098": "3000000000000000000000",
  "fb8113f94d9173eefd5a3073f516803a10b286ae": "80000000000000000000",
  "3e8349b67f5745449f659367d9ad4712db5b895a": "1820000000000000000000",
  "79cfa9780ae6d87b2c31883f09276986c89a6735": "1000000000000000000000",
  "5006fe4c22173980f00c74342b39cd231c653129": "2000000000000000000000",
  "13848b46ea75beb7eaa85f59d866d77fd24cf21a": "50000000000000000000000",
  "d64a2d50f8858537188a24e0f50df1681ab07ed7": "38800000000000000000000",
  "4f9ce2af9b8c5e42c6808a3870ec576f313545d1": "10000000000000000000000",
  "8764d02722000996ecd475b433298e9f540b05bf": "200000000000000000000",
  "3b7c77dbe95dc2602ce3269a9545d04965fefdbd": "2000000000000000000000",
  "c9dcbb056f4db7d9da39936202c5bd8230b3b477": "20000000000000000000000",
  "9ecbabb0b22782b3754429e1757aaba04b81189f": "823743000000000000000",
  "831c44b3084047184b2ad218680640903750c45d": "1970000000000000000000",
  "ff8eb07de3d49d9d52bbe8e5b26dbe1d160fa834": "3986000000000000000000",
  "8ccf3aa21ab742576ad8c422f71bb188591dea8a": "1000000000000000000000",
  "ddac312a9655426a9c0c9efa3fd82559ef4505bf": "401100000000000000000",
  "9a3e2b1bf346dd070b027357feac44a4b2c97db8": "10000000000000000000000",
  "69d39d510889e552a396135bfcdb06e37e387633": "4000000000000000000000",
  "83a3148833d9644984f7c475a7850716efb480ff": "3400000000000000000000",
  "62b4a9226e61683c72c183254690daf511b4117a": "260000000000000000000",
  "50763add868fd7361178342fc055eaa2b95f6846": "66838000000000000000",
  "91898eab8c05c0222883cd4db23b7795e1a24ad7": "2000000000000000000000",
  "066647cfc85d23d37605573d208ca154b244d76c": "10000000000000000000000",
  "aaf9ee4b886c6d1e95496fd274235bf4ecfcb07d": "1400000000000000000000",
  "06860a93525955ff624940fadcffb8e149fd599c": "1999800000000000000000",
  "e81c2d346c0adf4cc56708f6394ba6c8c8a64a1e": "2000000000000000000000",
  "41a8e236a30e6d63c1ff644d132aa25c89537e01": "20000000000000000000",
  "6a679e378fdce6bfd97fe62f043c6f6405d79e99": "4000000000000000000000",
  "933436c8472655f64c3afaaf7c4c621c83a62b38": "1000000000000000000000",
  "abe07ced6ac5ddf991eff6c3da226a741bd243fe": "10000000000000000000000",
  "bb56a404723cff20d0685488b05a02cdc35aacaa": "20000000000000000000",
  "0d551ec1a2133c981d5fc6a8c8173f9e7c4f47af": "2000000000000000000000",
  "23376ecabf746ce53321cf42c86649b92b67b2ff": "2000000000000000000000",
  "644ba6c61082e989109f5c11d4b40e991660d403": "4000000000000000000000",
  "680d5911ed8dd9eec45c060c223f89a7f620bbd5": "20000000000000000000000",
  "cb1bb6f1da5eb10d4899f7e61d06c1b00fdfb52d": "1038000000000000000000",
  "303a30ac4286ae17cf483dad7b870c6bd64d7b4a": "500000000000000000000",
  "7b0b31ff6e24745ead8ed9bb85fc0bf2fe1d55d4": "800000000000000000000",
  "854691ce714f325ced55ce5928ce9ba12facd1b8": "4380000000000000000000",
  "a13cfe826d6d1841dcae443be8c387518136b5e8": "140000000000000000000000",
  "5fcd84546896dd081db1a320bd4d8c1dd1528c4c": "20000000000000000000",
  "3db5fe6a68bd3612ac15a99a61e555928eeceaf3": "1580000000000000000000",
  "7a79e30ff057f70a3d0191f7f53f761537af7dff": "400000000000000000000",
  "3d3fad49c9e5d2759c8e8e5a7a4d60a0dd135692": "20000000000000000000",
  "05a830724302bc0f6ebdaa1ebeeeb46e6ce00b39": "98500000000000000000",
  "e4b6ae22c7735f5b89f34dd77ad0975f0acc9181": "1000000000000000000000",
  "3f2dd55db7eab0ebee65b33ed8202c1e992e958b": "820000000000000000000",
  "395d6d255520a8db29abc47d83a5db8a1a7df087": "100000000000000000000",
  "1cc90876004109cd79a3dea866cb840ac364ba1b": "2000000000000000000000",
  "c83e9d6a58253beebeb793e6f28b054a58491b74": "281800000000000000000",
  "901d99b699e5c6911519cb2076b4c76330c54d22": "2000000000000000000000",
  "3a9132b7093d3ec42e1e4fb8cb31ecdd43ae773c": "2000000000000000000000",
  "b41eaf5d51a5ba1ba39bb418dbb54fab750efb1f": "1000000000000000000000",
  "aa493d3f4fb866491cf8f800efb7e2324ed7cfe5": "1700000000000000000000",
  "509982f56237ee458951047e0a2230f804e2e895": "17500000000000000000000",
  "316e92a91bbda68b9e2f98b3c048934e3cc0b416": "2000000000000000000000",
  "a3430e1f647f321ed34739562323c7d623410b56": "999942000000000000000",
  "fca43bbc23a0d321ba9e46b929735ce7d8ef0c18": "20000000000000000000",
  "ff45cb34c928364d9cc9d8bb00373474618f06f3": "100000000000000000000",
  "8c999591fd72ef7111efca7a9e97a2356b3b000a": "4084000000000000000000",
  "8579dadf1a395a3471e20b6f763d9a0ff19a3f6f": "4000000000000000000000",
  "c8d4e1599d03b79809e0130a8dc38408f05e8cd3": "2945500000000000000000",
  "2abce1808940cd4ef5b5e05285f82df7a9ab5e03": "9800000000000000000000",
  "0bb0c12682a2f15c9b5741b2385cbe41f034068e": "1500000000000000000000",
  "08b7bdcf944d5570838be70460243a8694485858": "2000000000000000000000",
  "c452e0e4b3d6ae06b836f032ca09db409ddfe0fb": "800000000000000000000",
  "48d4f2468f963fd79a006198bb67895d2d5aa4d3": "1400000000000000000000",
  "f9e7222faaf0f4da40c1c4a40630373a09bed7b6": "2865000000000000000000",
  "bf59aee281fa43fe97194351a9857e01a3b897b2": "600000000000000000000",
  "da0d4b7ef91fb55ad265f251142067f10376ced6": "20000000000000000000000",
  "2c6f5c124cc789f8bb398e3f889751bc4b602d9e": "24928000000000000000",
  "c85ef27d820403805fc9ed259fff64acb8d6346a": "2000000000000000000000",
  "9aa8308f42910e5ade09c1a5e282d6d91710bdbf": "200000000000000000000",
  "9e4cec353ac3e381835e3c0991f8faa5b7d0a8e6": "9999917000000000000000",
  "137cf341e8516c815814ebcd73e6569af14cf7bc": "1000000000000000000000",
  "889da662eb4a0a2a069d2bc24b05b4ee2e92c41b": "1663417000000000000000",
  "0998d8273115b56af43c505e087aff0676ed3659": "3999984000000000000000",
  "3e4d13c55a84e46ed7e9cb90fd355e8ad991e38f": "1000000000000000000000",
  "abc068b4979b0ea64a62d3b7aa897d73810dc533": "1970000000000000000000",
  "d8fdf546674738c984d8fab857880b3e4280c09e": "20000000000000000000",
  "aff161740a6d909fe99c59a9b77945c91cc91448": "60000000000000000000",
  "92ad1b3d75fba67d54663da9fc848a8ade10fa67": "2000000000000000000000",
  "819eb4990b5aba5547093da12b6b3c1093df6d46": "1000000000000000000000",
  "643d9aeed4b180947ed2b9207cce4c3ddc55e1f7": "200000000000000000000",
  "ab3e62e77a8b225e411592b1af300752fe412463": "9850000000000000000000",
  "650b425555e4e4c51718146836a2c1ee77a5b421": "20000000000000000000000",
  "ba8e46d69d2e2343d86c60d82cf42c2041a0c1c2": "100000000000000000000",
  "f9570e924c95debb7061369792cf2efec2a82d5e": "20000000000000000000",
  "4dc4bf5e7589c47b28378d7503cf96488061dbbd": "1760000000000000000000",
  "3d7ea5bf03528100ed8af8aed2653e921b6e6725": "1000000000000000000000",
  "a02bde6461686e19ac650c970d0672e76dcb4fc2": "8865000000000000000000",
  "b0e760bb07c081777345e0578e8bc898226d4e3b": "2000000000000000000000",
  "979cbf21dfec8ace3f1c196d82df962534df394f": "2832860000000000000000",
  "9f8245c3ab7d173164861cd3991b94f1ba40a93a": "2860000000000000000000",
  "c25cf826550c8eaf10af2234fef904ddb95213be": "1000000000000000000000",
  "967bfaf76243cdb9403c67d2ceefdee90a3feb73": "970582000000000000000",
  "0b2113504534642a1daf102eee10b9ebde76e261": "2733351000000000000000",
  "74bc4a5e2045f4ff8db184cf3a9b0c065ad807d2": "2000000000000000000000",
  "f1da40736f99d5df3b068a5d745fafc6463fc9b1": "121546000000000000000",
  "0fa6c7b0973d0bae2940540e247d3627e37ca347": "1000000000000000000000",
  "72b05962fb2ad589d65ad16a22559eba1458f387": "133700000000000000000",
  "6ceae3733d8fa43d6cd80c1a96e8eb93109c83b7": "298000000000000000000",
  "28eaea78cd4d95faecfb68836eafe83520f3bbb7": "200000000000000000000",
  "f49f6f9baabc018c8f8e119e0115f491fc92a8a4": "10000000000000000000000",
  "833316985d47742bfed410604a91953c05fb12b0": "2000000000000000000000",
  "ead75016e3a0815072b6b108bcc1b799acf0383e": "2000000000000000000000",
  "0032403587947b9f15622a68d104d54d33dbd1cd": "77500000000000000000",
  "8f64b9c1246d857831643107d355b5c75fef5d4f": "1999944000000000000000",
  "15dcafcc2bace7b55b54c01a1c514626bf61ebd8": "9400000000000000000000",
  "6886ada7bbb0617bda842191c68c922ea3a8ac82": "1160000000000000000000",
  "f736dc96760012388fe88b66c06efe57e0d7cf0a": "2100000000000000000000",
  "0b288a5a8b75f3dc4191eb0457e1c83dbd204d25": "4853000000000000000000",
  "56b6c23dd2ec90b4728f3bb2e764c3c50c85f144": "1000000000000000000000",
  "6310b020fd98044957995092090f17f04e52cdfd": "1580000000000000000000",
  "b0baeb30e313776c4c6d247402ba4167afcda1cc": "1970000000000000000000",
  "7641f7d26a86cddb2be13081810e01c9c83c4b20": "13370000000000000000",
  "07a8dadec142571a7d53a4297051786d072cba55": "22729000000000000000",
  "cc73dd356b4979b579b401d4cc7a31a268ddce5a": "500000000000000000000",
  "adf1acfe99bc8c14b304c8d905ba27657b8a7bc4": "20000000000000000000000",
  "72dabb5b6eed9e99be915888f6568056381608f8": "208433000000000000000",
  "9de20ae76aa08263b205d5142461961e2408d266": "252000000000000000000",
  "9d4ff989b7bed9ab109d10c8c7e55f02d76734ad": "1000000000000000000000",
  "e58dd23238ee6ea7c2138d385df500c325f376be": "1820000000000000000000",
  "4bd6dd0cff23400e1730ba7b894504577d14e74a": "206028000000000000000000",
  "35147430c3106500e79fa2f502462e94703c23b1": "1999944000000000000000",
  "c0ae14d724832e2fce2778de7f7b8daf7b12a93e": "20000000000000000000",
  "b57413060af3f14eb479065f1e9d19b3757ae8cc": "40000000000000000000",
  "7d04d2edc058a1afc761d9c99ae4fc5c85d4c8a6": "314807840000000000000000",
  "1c94d636e684eb155895ce6db4a2588fba1d001b": "2000000000000000000000",
  "c721b2a7aa44c21298e85039d00e2e460e670b9c": "140800000000000000000",
  "2d89a8006a4f137a20dc2bec46fe2eb312ea9654": "200000000000000000000",
  "646afba71d849e80c0ed59cac519b278e7f7abe4": "1000000000000000000000",
  "71f2cdd1b046e2da2fbb5a26723422b8325e25a3": "99960000000000000000",
  "2c9fa72c95f37d08e9a36009e7a4b07f29bad41a": "16100000000000000000",
  "848fbd29d67cf4a013cb02a4b176ef244e9ee68d": "20116000000000000000",
  "68190ca885da4231874c1cfb42b1580a21737f38": "3820000000000000000000",
  "9adf458bff3599eee1a26398853c575bc38c6313": "280000000000000000000",
  "b72220ade364d0369f2d2da783ca474d7b9b34ce": "499986000000000000000",
  "38e2af73393ea98a1d993a74df5cd754b98d529a": "1790000000000000000000",
  "4d38d90f83f4515c03cc78326a154d358bd882b7": "185000000000000000000",
  "aa8eb0823b07b0e6d20aadda0e95cf3835be192e": "32000000000000000000",
  "008639dabbe3aeac887b5dc0e43e13bcd287d76c": "310200000000000000000",
  "fa3a0c4b903f6ea52ea7ab7b8863b6a616ad6650": "20000000000000000000",
  "e26bf322774e18288769d67e3107deb7447707b8": "2000000000000000000000",
  "e061a4f2fc77b296d19ada238e49a5cb8ecbfa70": "4000000000000000000000",
  "b320834836d1dbfda9e7a3184d1ad1fd4320ccc0": "1000000000000000000000",
  "0ed3bb3a4eb554cfca97947d575507cdfd6d21d8": "547863000000000000000",
  "32fa0e86cd087dd68d693190f32d93310909ed53": "4000000000000000000000",
  "5b759fa110a31c88469f54d44ba303d57dd3e10f": "1683760000000000000000",
  "136f4907cab41e27084b9845069ff2fd0c9ade79": "4000000000000000000000",
  "3d89e505cb46e211a53f32f167a877bec87f4b0a": "25019000000000000000",
  "57a852fdb9b1405bf53ccf9508f83299d3206c52": "2000000000000000000000",
  "747abc9649056d3926044d28c3ad09ed17b67d70": "5000057000000000000000",
  "5c29f9e9a523c1f8669448b55c48cbd47c25e610": "964320000000000000000",
  "30a9da72574c51e7ee0904ba1f73a6b7b83b9b9d": "20200000000000000000",
  "220e2b92c0f6c902b513d9f1e6fab6a8b0def3d7": "800000000000000000000",
  "5af7c072b2c5acd71c76addcce535cf7f8f93585": "20000000000000000000",
  "81556db27349ab8b27004944ed50a46e941a0f5f": "3998000000000000000000",
  "987618c85656207c7bac1507c0ffefa2fb64b092": "64419000000000000000",
  "e0f372347c96b55f7d4306034beb83266fd90966": "400000000000000000000",
  "71784c105117c1f68935797fe159abc74e43d16a": "2001600000000000000000",
  "9284f96ddb47b5186ee558aa31324df5361c0f73": "16000000000000000000000",
  "a60c1209754f5d87b181da4f0817a81859ef9fd8": "50000000000000000000",
  "5afda9405c8e9736514574da928de67456010918": "6008500000000000000000",
  "6978696d5150a9a263513f8f74c696f8b1397cab": "6640000000000000000000",
  "a9ad1926bc66bdb331588ea8193788534d982c98": "30000000000000000000000",
  "e3f80b40fb83fb97bb0d5230af4f6ed59b1c7cc8": "1337000000000000000000",
  "e207578e1f4ddb8ff6d5867b39582d71b9812ac5": "3880000000000000000000",
  "86883d54cd3915e549095530f9ab1805e8c5432d": "4000000000000000000000",
  "6974c8a414ceaefd3c2e4dfdbef430568d9a960b": "334250000000000000000",
  "532d32b00f305bcc24dcef56817d622f34fb2c24": "1800000000000000000000",
  "761f8a3a2af0a8bdbe1da009321fb29764eb62a1": "10000000000000000000000",
  "4677b04e0343a32131fd6abb39b1b6156bba3d5b": "200000000000000000000",
  "ef69781f32ffce33346f2c9ae3f08493f3e82f89": "18200000000000000000",
  "e3b3d2c9bf570be6a2f72adca1862c310936a43c": "100100000000000000000",
  "d19caf39bb377fdf2cf19bd4fb52591c2631a63c": "1000000000000000000000",
  "5d68324bcb776d3ffd0bf9fea91d9f037fd6ab0f": "2000000000000000000000",
  "1c99fe9bb6c6d1066d912099547fd1f4809eacd9": "2000000000000000000000",
  "bbfe0a830cace87b7293993a7e9496ce64f8e394": "6000000000000000000000",
  "26c0054b700d3a7c2dcbe275689d4f4cad16a335": "2000000000000000000000",
  "7d7e7c61779adb7706c94d32409a2bb4e994bf60": "865992000000000000000",
  "d037d215d11d1df3d54fbd321cd295c5465e273b": "1400000000000000000000",
  "08166f02313feae18bb044e7877c808b55b5bf58": "1970000000000000000000",
  "781b1501647a2e06c0ed43ff197fccec35e1700b": "3000000000000000000000",
  "74316adf25378c10f576d5b41a6f47fa98fce33d": "336082000000000000000",
  "44e2fdc679e6bee01e93ef4a3ab1bcce012abc7c": "410231000000000000000",
  "178eaf6b8554c45dfde16b78ce0c157f2ee31351": "320000000000000000000",
  "cf923a5d8fbc3d01aa079d1cfe4b43ce071b1611": "2000000000000000000000",
  "0c28847e4f09dfce5f9b25af7c4e530f59c880fe": "1000000000000000000000",
  "54ce88275956def5f9458e3b95decacd484021a0": "2000000000000000000000",
  "9d4213339a01551861764c87a93ce8f85f87959a": "200000000000000000000",
  "e559b5fd337b9c5572a9bf9e0f2521f7d446dbe4": "200000000000000000000",
  "dcb03bfa6c1131234e56b7ea7c4f721487546b7a": "1337000000000000000000",
  "db6ff71b3db0928f839e05a7323bfb57d29c87aa": "910000000000000000000",
  "eb7c202b462b7cc5855d7484755f6e26ef43a115": "2000000000000000000000",
  "323486ca64b375474fb2b759a9e7a135859bd9f6": "400000000000000000000",
  "2c1df8a76f48f6b54bcf9caf56f0ee1cf57ab33d": "10118000000000000000000",
  "2cd87866568dd81ad47d9d3ad0846e5a65507373": "400000000000000000000",
  "8566610901aace38b83244f3a9c831306a67b9dc": "3256000000000000000000",
  "1c257ad4a55105ea3b58ed374b198da266c85f63": "10000000000000000000000",
  "cf4f1138f1bd6bf5b6d485cce4c1017fcb85f07d": "882038000000000000000",
  "c934becaf71f225f8b4a4bf7b197f4ac9630345c": "20000000000000000000000",
  "1e2bf4ba8e5ef18d37de6d6ad636c4cae489d0cc": "2000000000000000000000",
  "9d78a975b7db5e4d8e28845cfbe7e31401be0dd9": "1340000000000000000000",
  "16aa52cb0b554723e7060f21f327b0a68315fea3": "250000000000000000000",
  "97e28973b860c567402800fbb63ce39a048a3d79": "97000000000000000000",
  "4ac5acad000b8877214cb1ae00eac9a37d59a0fd": "4000000000000000000000",
  "01226e0ad8d62277b162621c62c928e96e0b9a8c": "2000000000000000000000",
  "479abf2da4d58716fd973a0d13a75f530150260a": "20000000000000000000",
  "31d81d526c195e3f10b5c6db52b5e59afbe0a995": "264000000000000000000",
  "749087ac0f5a97c6fad021538bf1d6cda18e0daa": "1000000000000000000000",
  "1565af837ef3b0bd4e2b23568d5023cd34b16498": "393284000000000000000",
  "997d6592a31589acc31b9901fbeb3cc3d65b3215": "2000000000000000000000",
  "9d207517422cc0d60de7c237097a4d4fce20940c": "500000000000000000000",
  "24b8b446debd1947955dd084f2c544933346d3ad": "4324135000000000000000",
  "107a03cf0842dbdeb0618fb587ca69189ec92ff5": "1970000000000000000000",
  "7f603aec1759ea5f07c7f8d41a1428fbbaf9e762": "20000000000000000000",
  "53a244672895480f4a2b1cdf7da5e5a242ec4dbc": "1000000000000000000000",
  "7db4c7d5b797e9296e6382f203693db409449d62": "400000000000000000000",
  "2ae82dab92a66389eea1abb901d1d57f5a7cca0b": "2000000000000000000000",
  "16bc40215abbd9ae5d280b95b8010b4514ff1292": "200000000000000000000",
  "bba4fac3c42039d828e742cde0efffe774941b39": "1999946000000000000000",
  "5431ca427e6165a644bae326bd09750a178c650d": "2000000000000000000000",
  "dcf33965531380163168fc11f67e89c6f1bc178a": "334885000000000000000",
  "65fd02d704a12a4dace9471b0645f962a89671c8": "28615000000000000000",
  "135d1719bf03e3f866312479fe338118cd387e70": "2000000000000000000000",
  "f3159866c2bc86bba40f9d73bb99f1eee57bb9d7": "1000000000000000000000",
  "e3a4621b66004588e31206f718cb00a319889cf0": "2000000000000000000000",
  "abcdbc8f1dd13af578d4a4774a62182bedf9f9be": "36660000000000000000",
  "9fbe066de57236dc830725d32a02aef9246c6c5e": "2000000000000000000000",
  "81cfad760913d3c322fcc77b49c2ae3907e74f6e": "197000000000000000000",
  "0ab59d390702c9c059db148eb4f3fcfa7d04c7e7": "18200000000000000000",
  "2c2db28c3309375eea3c6d72cd6d0eec145afcc0": "2000000000000000000000",
  "08306de51981e7aca1856859b7c778696a6b69f9": "3200000000000000000000",
  "f814799f6ddf4dcb29c7ee870e75f9cc2d35326d": "1000000000000000000000",
  "ee867d20916bd2e9c9ece08aa04385db667c912e": "50000000000000000000000",
  "97a86f01ce3f7cfd4441330e1c9b19e1b10606ef": "2000000000000000000000",
  "4c759813ad1386bed27ffae9e4815e3630cca312": "2000000000000000000000",
  "8f226096c184ebb40105e08dac4d22e1c2d54d30": "306552000000000000000",
  "13acada8980affc7504921be84eb4944c8fbb2bd": "1601600000000000000000",
  "122dcfd81addb97d1a0e4925c4b549806e9f3beb": "1514954000000000000000",
  "232f525d55859b7d4e608d20487faadb00293135": "4000000000000000000000",
  "6f7ac681d45e418fce8b3a1db5bc3be6f06c9849": "2000000000000000000000",
  "0c8692eeff2a53d6d1688ed56a9ddbbd68dabba1": "2000000000000000000000",
  "6a6337833f8f6a6bf10ca7ec21aa810ed444f4cb": "1028200000000000000000",
  "209377b6ad3fe101c9685b3576545c6b1684e73c": "1820000000000000000000",
  "560fc08d079f047ed8d7df75551aa53501f57013": "7600000000000000000000",
  "8e78f351457d016f4ad2755ec7424e5c21ba6d51": "146000000000000000000",
  "2ce11a92fad024ff2b3e87e3b542e6c60dcbd996": "4000000000000000000000",
  "8ab839aeaf2ad37cb78bacbbb633bcc5c099dc46": "2000000000000000000000",
  "673144f0ec142e770f4834fee0ee311832f3087b": "500038000000000000000",
  "ba8a63f3f40de4a88388bc50212fea8e064fbb86": "2000000000000000000000",
  "ee899b02cbcb3939cd61de1342d50482abb68532": "1760000000000000000000",
  "c2d9eedbc9019263d9d16cc5ae072d1d3dd9db03": "20000000000000000000000",
  "355c0c39f5d5700b41d375b3f17851dcd52401f9": "3979000000000000000000",
  "8179c80970182cc5b7d82a4df06ea94db63a25f3": "727432000000000000000",
  "b388b5dfecd2c5e4b596577c642556dbfe277855": "20000000000000000000",
  "a9e28337e6357193d9e2cb236b01be44b81427df": "2200000000000000000000",
  "04ba4bb87140022c214a6fac42db5a16dd954045": "1000000000000000000000",
  "67c926093e9b8927933810d98222d62e2b8206bb": "1910000000000000000000",
  "ed7346766e1a676d0d06ec821867a276a083bf31": "4012890000000000000000",
  "92558226b384626cad48e09d966bf1395ee7ea5d": "334250000000000000000",
  "bdf693f833c3fe471753184788eb4bfe4adc3f96": "1970000000000000000000",
  "4474299d0ee090dc90789a1486489c3d0d645e6d": "1000000000000000000000",
  "b1178ad47383c31c8134a1941cbcd474d06244e2": "1000000000000000000000",
  "979d681c617da16f21bcaca101ed16ed015ab696": "1880000000000000000000",
  "6b20c080606a79c73bd8e75b11717a4e8db3f1c3": "299720000000000000000",
  "b85218f342f8012eda9f274e63ce2152b2dcfdab": "3100000000000000000000",
  "530b61e42f39426d2408d40852b9e34ab5ebebc5": "267400000000000000000",
  "76afc225f4fa307de484552bbe1d9d3f15074c4a": "2998800000000000000000",
  "1e783e522ab7df0acaac9eeed3593039e5ac7579": "203435800000000000000000",
  "0f7bf6373f771a4601762c4dae5fbbf4fedd9cc9": "2000000000000000000000",
  "7a8797690ab77b5470bf7c0c1bba612508e1ac7d": "8865000000000000000000",
  "2a2ab6b74c7af1d9476bb5bcb4524797bedc3552": "1000000000000000000000",
  "523e140dc811b186dee5d6c88bf68e90b8e096fd": "2000000000000000000000",
  "ea8168fbf225e786459ca6bb18d963d26b505309": "500000000000000000000",
  "20ff3ede8cadb5c37b48cb14580fb65e23090a7b": "42000000000000000000000",
  "e482d255ede56b04c3e8df151f56e9ca62aaa8c2": "500000000000000000000",
  "2e0880a34596230720f05ac8f065af8681dcb6c2": "100000000000000000000000",
  "c674f28c8afd073f8b799691b2f0584df942e844": "2000000000000000000000",
  "b646df98b49442746b61525c81a3b04ba3106250": "1970000000000000000000",
  "d55c1c8dfbe1e02cacbca60fdbdd405b09f0b75f": "2000000000000000000000",
  "65ebaed27edb9dcc1957aee5f452ac2105a65c0e": "43531987000000000000000",
  "f079e1b1265f50e8c8a98ec0c7815eb3aeac9eb4": "20094000000000000000",
  "867eba56748a5904350d2ca2a5ce9ca00b670a9b": "20000000000000000000000",
  "51ee0cca3bcb10cd3e983722ced8493d926c0866": "999972000000000000000",
  "88d541c840ce43cefbaf6d19af6b9859b573c145": "170000000000000000000",
  "f851b010f633c40af1a8f06a73ebbaab65077ab5": "4400000000000000000000",
  "e0aa69365555b73f282333d1e30c1bbd072854e8": "7000000000000000000000",
  "c7b1c83e63203f9547263ef6282e7da33b6ed659": "18200000000000000000",
  "af06f5fa6d1214ec43967d1bd4dde74ab814a938": "88000000000000000000",
  "991173601947c2084a62d639527e961512579af9": "600000000000000000000",
  "7a381122bada791a7ab1f6037dac80432753baad": "10000000000000000000000",
  "e766f34ff16f3cfcc97321721f43ddf5a38b0cf4": "1550000000000000000000",
  "d785a8f18c38b9bc4ffb9b8fa8c7727bd642ee1c": "1000000000000000000000",
  "aebd4f205de799b64b3564b256d42a711d37ef99": "1177100000000000000000",
  "a2fa17c0fb506ce494008b9557841c3f641b8cae": "20000000000000000000",
  "a8aca748f9d312ec747f8b6578142694c7e9f399": "2000000000000000000000",
  "950c68a40988154d2393fff8da7ccda99614f72c": "4597943000000000000000",
  "075d15e2d33d8b4fa7dba8b9e607f04a261e340b": "1910000000000000000000",
  "3616d448985f5d32aefa8b93a993e094bd854986": "205400000000000000000",
  "4bb9655cfb2a36ea7c637a7b859b4a3154e26ebe": "16000000000000000000000",
  "84949dba559a63bfc845ded06e9f2d9b7f11ef24": "2000000000000000000000",
  "937563d8a80fd5a537b0e66d20a02525d5d88660": "2500000000000000000000",
  "b183ebee4fcb42c220e47774f59d6c54d5e32ab1": "1604266000000000000000",
  "21e5d77320304c201c1e53b261a123d0a1063e81": "86972000000000000000",
  "fa14b566234abee73042c31d21717182cba14aa1": "328000000000000000000",
  "2da617695009cc57d26ad490b32a5dfbeb934e5e": "20000000000000000000000",
  "3326b88de806184454c40b27f309d9dd6dcfb978": "17900000000000000000000",
  "95e6a54b2d5f67a24a4875af75107ca7ea9fd2fa": "1337000000000000000000",
  "8db58e406e202df9bc703c480bd8ed248d52a032": "2000000000000000000000",
  "f777361a3dd8ab62e5f1b9b047568cc0b555704c": "1000000000000000000000",
  "83a93b5ba41bf88720e415790cdc0b67b4af34c4": "200000000000000000000",
  "8a1cc5ac111c49bfcfd848f37dd768aa65c88802": "10000000000000000000000",
  "52214378b54004056a7cc08c891327798ac6b248": "15200000000000000000000",
  "ad80d865b85c34d2e6494b2e7aefea6b9af184db": "4000000000000000000000",
  "e7d6240620f42c5edbb2ede6aec43da4ed9b5757": "1000000000000000000000",
  "d0e35e047646e759f4517093d6408642517f084d": "3939507000000000000000",
  "9340345ca6a3eabdb77363f2586043f29438ce0b": "530922000000000000000",
  "6640ccf053555c130ae2b656647ea6e31637b9ab": "1970000000000000000000",
  "184d86f3466ae6683b19729982e7a7e1a48347b2": "10000000000000000000000",
  "84ec06f24700fe42414cb9897c154c88de2f6132": "1337000000000000000000",
  "d1e5e234a9f44266a4a6241a84d7a1a55ad5a7fe": "20000000000000000000000",
  "e8a9a41740f44f54c3688b53e1ddd42e43c9fe94": "4000000000000000000000",
  "6e3a51db743d334d2fe88224b5fe7c008e80e624": "106000000000000000000",
  "3e94df5313fa520570ef232bc3311d5f622ff183": "2000000000000000000000",
  "8957727e72cf629020f4e05edf799aa7458062d0": "2200000000000000000000",
  "cf5e0eacd1b39d0655f2f77535ef6608eb950ba0": "2000000000000000000000",
  "f4aaa3a6163e3706577b49c0767e948a681e16ee": "2000000000000000000000",
  "97f1fe4c8083e596212a187728dd5cf80a31bec5": "20000000000000000000",
  "57d5fd0e3d3049330ffcdcd020456917657ba2da": "1991240000000000000000",
  "49bdbc7ba5abebb6389e91a3285220d3451bd253": "1000000000000000000000",
  "ae126b382cf257fad7f0bc7d16297e54cc7267da": "300000000000000000000",
  "bbf8616d97724af3def165d0e28cda89b800009a": "114063000000000000000",
  "adb948b1b6fefe207de65e9bbc2de98e605d0b57": "2000000000000000000000",
  "8a217db38bc35f215fd92906be42436fe7e6ed19": "6000000000000000000000",
  "e28b062259e96eeb3c8d4104943f9eb325893cf5": "1337000000000000000000",
  "6a6b18a45a76467e2e5d5a2ef911c3e12929857b": "82000000000000000000000",
  "cb68ae5abe02dcf8cbc5aa719c25814651af8b85": "500000000000000000000",
  "4c7e2e2b77ad0cd6f44acb2861f0fb8b28750ef9": "20000000000000000000",
  "58ba1569650e5bbbb21d35d3e175c0d6b0c651a9": "500000000000000000000",
  "1eb4bf73156a82a0a6822080c6edf49c469af8b9": "1910000000000000000000",
  "4103299671d46763978fa4aa19ee34b1fc952784": "200000000000000000000",
  "e321bb4a946adafdade4571fb15c0043d39ee35f": "1575212000000000000000",
  "893608751d68d046e85802926673cdf2f57f7cb8": "19700000000000000000",
  "70fee08b00c6c2c04a3c625c1ff77caf1c32df01": "200000000000000000000",
  "7b0fea1176d52159333a143c294943da36bbddb4": "9380000000000000000000",
  "d331c823825a9e5263d052d8915d4dcde07a5c37": "564000000000000000000",
  "a45432a6f2ac9d56577b938a37fabac8cc7c461c": "1000000000000000000000",
  "764fc46d428b6dbc228a0f5f55c9508c772eab9f": "26000000000000000000000",
  "1a95a8a8082e4652e4170df9271cb4bb4305f0b2": "50000000000000000000",
  "08c9f1bfb689fdf804d769f82123360215aff93b": "1970000000000000000000",
  "1572cdfab72a01ce968e78f5b5448da29853fbdd": "5061500000000000000000",
  "379c7166849bc24a02d6535e2def13daeef8aa8d": "100000000000000000000",
  "e0a254ac09b9725bebc8e460431dd0732ebcabbf": "6000000000000000000000",
  "3225c1ca5f2a9c88156bb7d9cdc44a326653c214": "400000000000000000000",
  "84686c7bad762c54b667d59f90943cd14d117a26": "20000000000000000000",
  "3d5a8b2b80be8b35d8ecf789b5ed7a0775c5076c": "20000000000000000000",
  "2ccf80e21898125eb4e807cd82e09b9d28592f6e": "2000000000000000000000",
  "dde969aef34ea87ac299b7597e292b4a0155cc8a": "298819000000000000000",
  "19e94e620050aad766b9e1bad931238312d4bf49": "2396000000000000000000",
  "959f57fded6ae37913d900b81e5f48a79322c627": "255599000000000000000",
  "b9b0a3219a3288d9b35b091b14650b8fe23dce2b": "14000000000000000000000",
  "3575c770668a9d179f1ef768c293f80166e2aa3d": "474000000000000000000",
  "58f05b262560503ca761c61890a4035f4c737280": "8000000000000000000000",
  "3286d1bc657a312c8847d93cb3cb7950f2b0c6e3": "20000000000000000000000",
  "1d9e6aaf8019a05f230e5def05af5d889bd4d0f2": "133700000000000000000",
  "a375b4bc24a24e1f797593cc302b2f331063fa5c": "200000000000000000000",
  "108ba7c2895c50e072dc6f964932d50c282d3034": "500000000000000000000",
  "b6b34a263f10c3d2eceb0acc559a7b2ab85ce565": "4000000000000000000000",
  "a4d2b429f1ad5349e31704969edc5f25ee8aca10": "10000000000000000000000",
  "674adb21df4c98c7a347ac4c3c24266757dd7039": "2000000000000000000000",
  "33565ba9da2c03e778ce12294f081dfe81064d24": "16000000000000000000000",
  "4ddda7586b2237b053a7f3289cf460dc57d37a09": "10000000000000000000000",
  "cc4faac00be6628f92ef6b8cb1b1e76aac81fa18": "205410000000000000000",
  "5f99dc8e49e61d57daef606acdd91b4d7007326a": "3000000000000000000000",
  "b8a979352759ba09e35aa5935df175bff678a108": "20000000000000000000",
  "86fff220e59305c09f483860d6f94e96fbe32f57": "42900000000000000000",
  "03e8b084537557e709eae2e1e1a5a6bce1ef8314": "20000000000000000000",
  "dda4ff7de491c687df4574dd1b17ff8f246ba3d1": "19600000000000000000000",
  "2538532936813c91e653284f017c80c3b8f8a36f": "2002000000000000000000",
  "5a82f96cd4b7e2d93d10f3185dc8f43d4b75aa69": "1999400000000000000000",
  "86740a46648e845a5d96461b18091ff57be8a16f": "98000000000000000000000",
  "7e3f63e13129a221ba1ab06326342cd98b5126ae": "1597960000000000000000",
  "1f5f3b34bd134b2781afe5a0424ac5846cdefd11": "99000000000000000000",
  "39936c2719450b9420cc2522cf91db01f227c1c1": "500000000000000000000",
  "967076a877b18ec15a415bb116f06ef32645dba3": "2000000000000000000000",
  "a42908e7fe53980a9abf4044e957a54b70e99cbe": "2000000000000000000000",
  "5eb371c407406c427b3b7de271ad3c1e04269579": "3000000000000000000000",
  "a570223ae3caa851418a9843a1ac55db4824f4fd": "200000000000000000000",
  "764692cccb33405dd0ab0c3379b49caf8e6221ba": "20000000000000000000",
  "a365918bfe3f2627b9f3a86775d8756e0fd8a94b": "400000000000000000000",
  "069ed0ab7aa77de571f16106051d92afe195f2d0": "200000000000000000000",
  "bd432a3916249b4724293af9146e49b8280a7f2a": "4000000000000000000000",
  "61c9dce8b2981cb40e98b0402bc3eb28348f03ac": "196910000000000000000",
  "8f1fcc3c51e252b693bc5b0ec3f63529fe69281e": "6000000000000000000000",
  "55fd08d18064bd202c0ec3d2cce0ce0b9d169c4d": "1970000000000000000000",
  "383a7c899ee18bc214969870bc7482f6d8f3570e": "10000000000000000000000",
  "b14cc8de33d6338236539a489020ce4655a32bc6": "8000000000000000000000",
  "448bf410ad9bbc2fecc4508d87a7fc2e4b8561ad": "199955000000000000000",
  "06f7dc8d1b9462cef6feb13368a7e3974b097f9f": "2000000000000000000000",
  "9c9f89a3910f6a2ae8a91047a17ab788bddec170": "10000000000000000000000",
  "5de598aba344378cab4431555b4f79992dc290c6": "1337000000000000000000",
  "87e6034ecf23f8b5639d5f0ea70a22538a920423": "328000000000000000000",
  "8b27392206b958cd375d7ef8af2cf8ef0598c0bc": "1000000000000000000000",
  "49136fe6e28b7453fcb16b6bbbe9aaacba8337fd": "2000000000000000000000",
  "6982fe8a867e93eb4a0bd051589399f2ec9a5292": "2000000000000000000000",
  "9fd1052a60506bd1a9ef003afd9d033c267d8e99": "1000000000000000000000",
  "d38fa2c4cc147ad06ad5a2f75579281f22a7cc1f": "20000000000000000000000",
  "6f794dbdf623daa6e0d00774ad6962737c921ea4": "2000000000000000000000",
  "e96b184e1f0f54924ac874f60bbf44707446b72b": "2910840000000000000000",
  "b5ba29917c78a1d9e5c5c713666c1e411d7f693a": "3100000000000000000000",
  "81d619ff5726f2405f12904c72eb1e24a0aaee4f": "20000000000000000000000",
  "b02fa29387ec12e37f6922ac4ce98c5b09e0b00f": "2000000000000000000000",
  "b7230d1d1ff2aca366963914a79df9f7c5ea2c98": "8000000000000000000000",
  "7b4007c45e5a573fdbb6f8bd746bf94ad04a3c26": "15202564000000000000000",
  "8d9a0c70d2262042df1017d6c303132024772712": "2000000000000000000000",
  "323aad41df4b6fc8fece8c93958aa901fa680843": "970000000000000000000",
  "db04fad9c49f9e880beb8fcf1d3a3890e4b3846f": "1242482000000000000000",
  "27824666d278d70423f03dfe1dc7a3f02f43e2b5": "1000070000000000000000",
  "e04920dc6ecc1d6ecc084f88aa0af5db97bf893a": "182000000000000000000",
  "b0c1b177a220e41f7c74d07cde8569c21c75c2f9": "5600000000000000000000",
  "7864dc999fe4f8e003c0f43decc39aae1522dc0f": "94400000000000000000",
  "c75c37ce2da06bbc40081159c6ba0f976e3993b1": "1078640000000000000000",
  "179a825e0f1f6e985309668465cffed436f6aea9": "20000000000000000000",
  "2c6b699d9ead349f067f45711a074a641db6a897": "20000000000000000000",
  "068ce8bd6e902a45cb83b51541b40f39c4469712": "5240000000000000000000",
  "767ac690791c2e23451089fe6c7083fe55deb62b": "820000000000000000000",
  "b34f04b8db65bba9c26efc4ce6efc50481f3d65d": "20000000000000000000000",
  "29aef48de8c9fbad4b9e4ca970797a5533eb722d": "10000000000000000000000",
  "0a0ecda6636f7716ef1973614687fd89a820a706": "394000000000000000000",
  "b32825d5f3db249ef4e85cc4f33153958976e8bc": "501375000000000000000",
  "7ef16fd8d15b378a0fba306b8d03dd98fc92619f": "700000000000000000000",
  "b58b52865ea55d8036f2fab26098b352ca837e18": "18200000000000000000",
  "9b658fb361e046d4fcaa8aef6d02a99111223625": "2000000000000000000000",
  "b2a498f03bd7178bd8a789a00f5237af79a3e3f8": "19400000000000000000000",
  "cb48fe8265d9af55eb7006bc335645b0a3a183be": "3000000000000000000000",
  "3cf9a1d465e78b7039e3694478e2627b36fcd141": "1372000000000000000000",
  "5db84400570069a9573cab04b4e6b69535e202b8": "9700000000000000000000",
  "214c89c5bd8e7d22bc574bb35e48950211c6f776": "18903000000000000000",
  "53396f4a26c2b4604496306c5442e7fcba272e36": "20055000000000000000000",
  "720994dbe56a3a95929774e20e1fe525cf3704e4": "8000000000000000000000",
  "3571cf7ad304ecaee595792f4bbfa484418549d6": "5825500000000000000000",
  "6042c644bae2b96f25f94d31f678c90dc96690db": "2000000000000000000000",
  "2e24b597873bb141bdb237ea8a5ab747799af02d": "20000000000000000000000",
  "08c802f87758349fa03e6bc2e2fd0791197eea9a": "2000000000000000000000",
  "297a88921b5fca10e5bb9ded60025437ae221694": "200000000000000000000",
  "aee49d68adedb081fd43705a5f78c778fb90de48": "20000000000000000000",
  "4cee901b4ac8b156c5e2f8a6f1bef572a7dceb7e": "1000000000000000000000",
  "dfaf31e622c03d9e18a0ddb8be60fbe3e661be0a": "9999800000000000000000",
  "00aa5381b2138ebeffc191d5d8c391753b7098d2": "990049000000000000000",
  "5b4c0c60f10ed2894bdb42d9dd1d210587810a0d": "500000000000000000000",
  "c44f4ab5bc60397c737eb0683391b633f83c48fa": "1000000000000000000000",
  "50bef2756248f9a7a380f91b051ba3be28a649ed": "1999884000000000000000",
  "1bd909ac0d4a1102ec98dcf2cca96a0adcd7a951": "20055000000000000000",
  "9ec03e02e587b7769def538413e97f7e55be71d8": "19700000000000000000000",
  "9874803fe1f3a0365e7922b14270eaeb032cc1b5": "1124500000000000000000",
  "4e2310191ead8d3bc6489873a5f0c2ec6b87e1be": "1000000000000000000000",
  "93678a3c57151aeb68efdc43ef4d36cb59a009f3": "30060000000000000000",
  "f483f607a21fcc28100a018c568ffbe140380410": "1000000000000000000000",
  "2a91a9fed41b7d0e5cd2d83158d3e8a41a9a2d71": "1940000000000000000000",
  "240e559e274aaef0c258998c979f671d1173b88b": "4000000000000000000000",
  "108a2b7c336f784779d8b54d02a8d31d9a139c0a": "10000000000000000000000",
  "9c98fdf1fdcd8ba8f4c5b04c3ae8587efdf0f6e6": "6000000000000000000000",
  "194ff44aefc17bd20efd7a204c47d1620c86db5d": "2999400000000000000000",
  "1f8116bd0af5570eaf0c56c49c7ab5e37a580458": "2000000000000000000000",
  "d79835e404fb86bf845fba090d6ba25e0c8866a6": "2400000000000000000000",
  "a8e7201ff619faffc332e6ad37ed41e301bf014a": "600000000000000000000",
  "286906b6bd4972e3c71655e04baf36260c7cb153": "340000000000000000000",
  "db4bc83b0e6baadb1156c5cf06e0f721808c52c7": "880000000000000000000",
  "a158148a2e0f3e92dc2ce38febc20107e3253c96": "2000000000000000000000",
  "9f6a322a6d469981426ae844865d7ee0bb15c7b3": "50003000000000000000",
  "32f29e8727a74c6b4301e3ffff0687c1b870dae9": "1000000000000000000000",
  "19918aa09e7d494e98ffa5db50350892f7156ac6": "10000000000000000000000",
  "5a5f8508da0ebebb90be9033bd4d9e274105ae00": "6685000000000000000000",
  "6fc25e7e00ca4f60a9fe6f28d1fde3542e2d1079": "792000000000000000000",
  "72094f3951ffc9771dced23ada080bcaf9c7cca7": "6000000000000000000000",
  "43f7e86e381ec51ec4906d1476cba97a3db584e4": "1000000000000000000000",
  "05696b73916bd3033e05521e3211dfec026e98e4": "2000000000000000000000",
  "5e7f70378775589fc66a81d3f653e954f55560eb": "2434000000000000000000",
  "895613236f3584216ad75c5d3e07e3fa6863a778": "2000000000000000000000",
  "4eb1454b573805c8aca37edec7149a41f61202f4": "300000000000000000000",
  "d99999a2490d9494a530cae4daf38554f4dd633e": "120000000000000000000",
  "1704cefcfb1331ec7a78388b29393e85c1af7916": "400000000000000000000",
  "ac4acfc36ed6094a27e118ecc911cd473e8fb91f": "1799800000000000000000",
  "a975b077fcb4cc8efcbf838459b6fa243a4159d6": "40000000000000000000",
  "9c405cf697956138065e11c5f7559e67245bd1a5": "200000000000000000000",
  "cafde855864c2598da3cafc05ad98df2898e8048": "14179272000000000000000",
  "8ef711e43a13918f1303e81d0ea78c9eefd67eb2": "4000000000000000000000",
  "0b14891999a65c9ef73308efe3100ca1b20e8192": "800000000000000000000",
  "47cf9cdaf92fc999cc5efbb7203c61e4f1cdd4c3": "131400000000000000000",
  "04ba8a3f03f08b895095994dda619edaacee3e7a": "2000000000000000000000",
  "02b6d65cb00b7b36e1fb5ed3632c4cb20a894130": "20000000000000000000000",
  "f99aee444b5783c093cfffd1c4632cf93c6f050c": "400000000000000000000",
  "2541314a0b408e95a694444977712a50713591ab": "1634706000000000000000",
  "3096dca34108085bcf04ae72b94574a13e1a3e1d": "200000000000000000000",
  "56df05bad46c3f00ae476ecf017bb8c877383ff1": "197248000000000000000",
  "6d59b21cd0e2748804d9abe064eac2bef0c95f27": "2000000000000000000000",
  "b29f5b7c1930d9f97a115e067066f0b54db44b3b": "1000000000000000000000",
  "888c16144933197cac26504dd76e06fd6600c789": "100000000000000000000",
  "dfe3c52a92c30396a4e33a50170dc900fcf8c9cf": "50000000000000000000",
  "f76f69cee4faa0a63b30ae1e7881f4f715657010": "200000000000000000000",
  "ee0007b0960d00908a94432a737557876aac7c31": "53053000000000000000",
  "effc15e487b1beda0a8d1325bdb4172240dc540a": "64940000000000000000",
  "40ab0a3e83d0c8ac9366910520eab1772bac3b1a": "976600000000000000000",
  "1895a0eb4a4372722fcbc5afe6936f289c88a419": "910000000000000000000",
  "81efe296ae76c860d1c5fbd33d47e8ce9996d157": "1000000000000000000000",
  "9ddd355e634ee9927e4b7f6c97e7bf3a2f1e687a": "50000000000000000000",
  "f2b4ab2c9427a9015ef6eefff5edb60139b719d1": "716800000000000000000",
  "765be2e12f629e6349b97d21b62a17b7c830edab": "6000000000000000000000",
  "ff61c9c1b7a3d8b53bba20b34466544b7b216644": "2000000000000000000000",
  "36a08fd6fd1ac17ce15ed57eefb12a2be28188bf": "1337000000000000000000",
  "17049311101d817efb1d65910f663662a699c98c": "1999800000000000000000",
  "30511832918d8034a7bee72ef2bfee440ecbbcf6": "16100000000000000000000",
  "d27c234ff7accace3d996708f8f9b04970f97d36": "1337000000000000000000",
  "a961171f5342b173dd70e7bfe5b5ca238b13bcdd": "3397053000000000000000",
  "30bf61b2d877fe10635126326fa189e4b0b1c3b0": "1027580000000000000000",
  "4bb6d86b8314c22d8d37ea516d0019f156aae12d": "1000000000000000000000",
  "5f363e0ab747e02d1b3b66abb69ea53c7baf523a": "11640000000000000000000",
  "283e11203749b1fa4f32febb71e49d135919382a": "1000000000000000000000",
  "ac5999a89d2dd286d5a80c6dee7e86aad40f9e12": "3880000000000000000000",
  "3f6dd3650ee428dcb7759553b017a96a94286ac9": "1337000000000000000000",
  "b3fc1d6881abfcb8becc0bb021b8b73b7233dd91": "50000000000000000000",
  "f0832a6bb25503eeca435be31b0bf905ca1fcf57": "6685000000000000000000",
  "9d7fda7070bf3ee9bbd9a41f55cad4854ae6c22c": "11027380000000000000000",
  "4b0bd8acfcbc53a6010b40d4d08ddd2d9d69622d": "668500000000000000000",
  "f3b668b3f14d920ebc379092db98031b67b219b3": "199955000000000000000",
  "d91d889164479ce436ece51763e22cda19b22d6b": "3365200000000000000000",
  "ffe28db53c9044b4ecd4053fd1b4b10d7056c688": "100000000000000000000",
  "c77b01a6e911fa988d01a3ab33646beef9c138f3": "721400000000000000000",
  "c0064f1d9474ab915d56906c9fb320a2c7098c9b": "358000000000000000000",
  "4e3edad4864dab64cae4c5417a76774053dc6432": "590943000000000000000",
  "71d2cc6d02578c65f73c575e76ce8fbcfadcf356": "72400000000000000000",
  "9971df60f0ae66dce9e8c84e17149f09f9c52f64": "200000000000000000000",
  "58e661d0ba73d6cf24099a5562b808f7b3673b68": "2000000000000000000000",
  "84b0ee6bb837d3a4c4c5011c3a228c0edab4634a": "20000000000000000000",
  "84375afbf59b3a1d61a1be32d075e0e15a4fbca5": "200000000000000000000",
  "9ae9476bfecd3591964dd325cf8c2a24faed82c1": "4000000000000000000000",
  "6a4c8907b600248057b1e46354b19bdc859c991a": "20000000000000000000",
  "1c045649cd53dc23541f8ed4d341812808d5dd9c": "7000000000000000000000",
  "c5e488cf2b5677933971f64cb8202dd05752a2c0": "1000000000000000000000",
  "eb25481fcd9c221f1ac7e5fd1ecd9307a16215b8": "197000000000000000000",
  "a61887818f914a20e31077290b83715a6b2d6ef9": "1880000000000000000000",
  "679437eacf437878dc293d48a39c87b7421a216c": "64528000000000000000",
  "331a1c26cc6994cdd3c14bece276ffff4b9df77c": "18049000000000000000",
  "75b95696e8ec4510d56868a7c1a735c68b244890": "6400000000000000000000",
  "a77f3ee19e9388bbbb2215c62397b96560132360": "200000000000000000000",
  "bc7afc8477412274fc265df13c054473427d43c6": "130034000000000000000",
  "91050a5cffadedb4bb6eaafbc9e5013428e96c80": "1700000000000000000000",
  "24586ec5451735eeaaeb470dc8736aae752f82e5": "17600000000000000000",
  "51039377eed0c573f986c5e8a95fb99a59e9330f": "1970000000000000000000",
  "fbb161fe875f09290a4b262bc60110848f0d2226": "2000000000000000000000",
  "ed52a2cc0869dc9e9f842bd0957c47a8e9b0c9ff": "9550000000000000000000",
  "bad235d5085dc7b068a67c412677b03e1836884c": "2000000000000000000000",
  "055eac4f1ad3f58f0bd024d68ea60dbe01c6afb3": "100000000000000000000",
  "4058808816fdaa3a5fc98ed47cfae6c18315422e": "199800000000000000000",
  "3540c7bd7a8442d5bee21a2180a1c4edff1649e0": "1239295000000000000000",
  "c5edbbd2ca0357654ad0ea4793f8c5cecd30e254": "6000000000000000000000",
  "b5906b0ae9a28158e8ac550e39da086ee3157623": "200000000000000000000",
  "4d801093c19ca9b8f342e33cc9c77bbd4c8312cf": "345005000000000000000",
  "206482ee6f138a778fe1ad62b180ce856fbb23e6": "2000000000000000000000",
  "c0ed0d4ad10de03435b153a0fc25de3b93f45204": "3160000000000000000000",
  "29e67990e1b6d52e1055ffe049c53195a81542cf": "20000000000000000000000",
  "e6d22209ffd0b87509ade3a8e2ef429879cb89b5": "17260000000000000000000",
  "d6644d40e90bc97fe7dfe7cabd3269fd579ba4b3": "159000000000000000000",
  "ece1290877b583e361a2d41b009346e6274e2538": "300000000000000000000",
  "ab3861226ffec1289187fb84a08ec3ed043264e8": "1000000000000000000000",
  "60e0bdd0a259bb9cb09d3f37e5cd8b9daceabf8a": "1370000000000000000000",
  "28b77585cb3d55a199ab291d3a18c68fe89a848a": "1960000000000000000000",
  "73128173489528012e76b41a5e28c68ba4e3a9d4": "1000000000000000000000",
  "018492488ba1a292342247b31855a55905fef269": "140000000000000000000",
  "0bb54c72fd6610bfa4363397e020384b022b0c49": "1337000000000000000000",
  "520f66a0e2657ff0ac4195f2f064cf2fa4b24250": "40000000000000000000",
  "a1432ed2c6b7777a88e8d46d388e70477f208ca5": "7999538000000000000000",
  "149ba10f0da2725dc704733e87f5a524ca88515e": "7880000000000000000000",
  "b287f7f8d8c3872c1b586bcd7d0aedbf7e732732": "20000000000000000000",
  "c46bbdef76d4ca60d316c07f5d1a780e3b165f7e": "2000000000000000000000",
  "b5a589dd9f4071dbb6fba89b3f5d5dae7d96c163": "2000000000000000000000",
  "d218efb4db981cdd6a797f4bd48c7c26293ceb40": "2975000000000000000000",
  "af87d2371ef378957fbd05ba2f1d66931b01e2b8": "700000000000000000000",
  "86ef6426211949cc37f4c75e7850369d0cf5f479": "13399196000000000000000",
  "fb3a0b0d6b6a718f6fc0292a825dc9247a90a5d0": "199950000000000000000",
  "da16dd5c3d1a2714358fe3752cae53dbab2be98c": "19400000000000000000000",
  "9eb7834e171d41e069a77947fca87622f0ba4e48": "100000000000000000000",
  "e1d91b0954cede221d6f24c7985fc59965fb98b8": "2000000000000000000000",
  "85d0d88754ac84b8b21ba93dd2bfec72626faba8": "1000000000000000000000",
  "695b4cce085856d9e1f9ff3e79942023359e5fbc": "5000000000000000000000",
  "9156d18029350e470408f15f1aa3be9f040a67c6": "1000000000000000000000",
  "a9d64b4f3bb7850722b58b478ba691375e224e42": "6000000000000000000000",
  "17e4a0e52bac3ee44efe0954e753d4b85d644e05": "2000000000000000000000",
  "b8a79c84945e47a9c3438683d6b5842cff7684b1": "2000000000000000000000",
  "cfac2e1bf33205b05533691a02267ee19cd81836": "1000000000000000000000",
  "6b992521ec852370848ad697cc2df64e63cc06ff": "1000000000000000000000",
  "60af0ee118443c9b37d2fead77f5e521debe1573": "1910000000000000000000",
  "c6dbdb9efd5ec1b3786e0671eb2279b253f215ed": "1000000000000000000000",
  "659c0a72c767a3a65ced0e1ca885a4c51fd9b779": "2000000000000000000000",
  "ed1276513b6fc68628a74185c2e20cbbca7817bf": "191000000000000000000",
  "5ad12c5ed4fa827e2150cfa0d68c0aa37b1769b8": "800000000000000000000",
  "17c0fef6986cfb2e4041f9979d9940b69dff3de2": "4000000000000000000000",
  "ca98c7988efa08e925ef9c9945520326e9f43b99": "4000000000000000000000",
  "fe8f1fdcab7fbec9a6a3fcc507619600505c36a3": "19700000000000000000",
  "4420aa35465be617ad2498f370de0a3cc4d230af": "2000000000000000000000",
  "8232d1f9742edf8dd927da353b2ae7b4cbce7592": "668500000000000000000",
  "eca5f58792b8c62d2af556717ee3ee3028be4dce": "2000000000000000000000",
  "6bf86f1e2f2b8032a95c4d7738a109d3d0ed8104": "1820000000000000000000",
  "3ac2f0ff1612e4a1c346d53382abf6d8a25baa53": "2000000000000000000000",
  "daa1bd7a9148fb865cd612dd35f162861d0f3bdc": "3066243000000000000000",
  "5169c60aee4ceed1849ab36d664cff97061e8ea8": "3000000000000000000000",
  "2a5e3a40d2cd0325766de73a3d671896b362c73b": "100000000000000000000000",
  "a83382b6e15267974a8550b98f7176c1a353f9be": "3541608000000000000000",
  "b50c149a1906fad2786ffb135aab501737e9e56f": "388000000000000000000",
  "d9775965b716476675a8d513eb14bbf7b07cd14a": "5076200000000000000000",
  "66662006015c1f8e3ccfcaebc8ee6807ee196303": "500024000000000000000",
  "78746a958dced4c764f876508c414a68342cecb9": "50600000000000000000",
  "e982e6f28c548f5f96f45e63f7ab708724f53fa1": "396238000000000000000",
  "740bfd52e01667a3419b029a1b8e45576a86a2db": "16800000000000000000000",
  "2bd252e0d732ff1d7c78f0a02e6cb25423cf1b1a": "2674000000000000000000",
  "2e2d7ea66b9f47d8cc52c01c52b6e191bc7d4786": "3999800000000000000000",
  "3e3161f1ea2fbf126e79da1801da9512b37988c9": "49250000000000000000000",
  "7e2ba86da52e785d8625334f3397ba1c4bf2e8d1": "197000000000000000000",
  "7608f437b31f18bc0b64d381ae86fd978ed7b31f": "50000000000000000000",
  "25a5a44d38a2f44c6a9db9cdbc6b1e2e97abb509": "17000000000000000000000",
  "745ad3abc6eeeb2471689b539e789ce2b8268306": "1129977000000000000000",
  "09e437d448861228a232b62ee8d37965a904ed9c": "21708305000000000000000",
  "be53322f43fbb58494d7cce19dda272b2450e827": "200018000000000000000",
  "4166fc08ca85f766fde831460e9dc93c0e21aa6c": "1000000000000000000000",
  "99c0174cf84e0783c220b4eb6ae18fe703854ad3": "2074800000000000000000",
  "3cf484524fbdfadae26dc185e32b2b630fd2e726": "448798000000000000000",
  "fdcd5d80b105897a57abc47865768b2900524295": "6400000000000000000000",
  "f22f4078febbbaa8b0e78e642c8a42f35d433905": "1999944000000000000000",
  "eac768bf14b8f9432e69eaa82a99fbeb94cd0c9c": "98500000000000000000000",
  "2639eee9873ceec26fcc9454b548b9e7c54aa65c": "1000000000000000000000",
  "c3c3c2510d678020485a63735d1307ec4ca6302b": "1000000000000000000000",
  "b73d6a77559c86cf6574242903394bacf96e3570": "91200000000000000000",
  "5ce2e7ceaaa18af0f8aafa7fbad74cc89e3cd436": "20000000000000000000000",
  "03377c0e556b640103289a6189e1aeae63493467": "20000000000000000000000",
  "6eb0a5a9ae96d22cf01d8fd6483b9f38f08c2c8b": "4000000000000000000000",
  "fc8215a0a69913f62a43bf1c8590b9ddcd0d8ddb": "2000000000000000000000",
  "4a835c25824c47ecbfc79439bf3f5c3481aa75cd": "1400000000000000000000",
  "b5493ef173724445cf345c035d279ba759f28d51": "20000000000000000000",
  "b9e90c1192b3d5d3e3ab0700f1bf655f5dd4347a": "499928000000000000000",
  "419bde7316cc1ed295c885ace342c79bf7ee33ea": "6000000000000000000000",
  "e4625501f52b7af52b19ed612e9d54fdd006b492": "209440000000000000000",
  "e9d599456b2543e6db80ea9b210e908026e2146e": "200000000000000000000",
  "2c06dd922b61514aafedd84488c0c28e6dcf0e99": "100000000000000000000000",
  "06b5ede6fdf1d6e9a34721379aeaa17c713dd82a": "2000000000000000000000",
  "d8930a39c77357c30ad3a060f00b06046331fd62": "820000000000000000000",
  "b2a2c2111612fb8bbb8e7dd9378d67f1a384f050": "20000000000000000000",
  "1f174f40a0447234e66653914d75bc003e5690dc": "160000000000000000000",
  "e06cb6294704eea7437c2fc3d30773b7bf38889a": "20094000000000000000",
  "cd06f8c1b5cdbd28e2d96b6346c3e85a0483ba24": "1000000000000000000000",
  "f316ef1df2ff4d6c1808dba663ec8093697968e0": "1794400000000000000000",
  "1e6915ebd9a19c81b692ad99b1218a592c1ac7b1": "4000000000000000000000",
  "885493bda36a0432976546c1ddce71c3f4570021": "216700000000000000000",
  "18b0407cdad4ce52600623bd5e1f6a81ab61f026": "319489000000000000000",
  "187d9f0c07f8eb74faaad15ebc7b80447417f782": "20000000000000000000",
  "5d6ccf806738091042ad97a6e095fe8c36aa79c5": "188000000000000000000",
  "53437fecf34ab9d435f4deb8ca181519e2592035": "188000000000000000000",
  "fd1faa347b0fcc804c2da86c36d5f1d18b7087bb": "52380000000000000000",
  "650cf67db060cce17568d5f2a423687c49647609": "100000000000000000000",
  "bcd95ef962462b6edfa10fda87d72242fe3edb5c": "334133000000000000000",
  "3b5e8b3c77f792decb7a8985df916efb490aac23": "2000000000000000000000",
  "f13b083093ba564e2dc631568cf7540d9a0ec719": "1999944000000000000000",
  "373c547e0cb5ce632e1c5ad66155720c01c40995": "4691588000000000000000",
  "7313461208455455465445a459b06c3773b0eb30": "2000000000000000000000",
  "441f37e8a029fd02482f289c49b5d06d00e408a4": "333333000000000000000",
  "d30d4c43adcf55b2cb53d68323264134498d89ce": "1000000000000000000000",
  "f648ea89c27525710172944e79edff847803b775": "100000000000000000000000",
  "0c7f869f8e90d53fdc03e8b2819b016b9d18eb26": "20000000000000000000000",
  "c71f92a3a54a7b8c2f5ea44305fccb84eee23148": "49980000000000000000",
  "7988901331e387f713faceb9005cb9b65136eb14": "1970000000000000000000",
  "e9a39a8bac0f01c349c64cedb69897f633234ed2": "3980000000000000000000",
  "ad2a5c00f923aaf21ab9f3fb066efa0a03de2fb2": "999996000000000000000",
  "f25259a5c939cd25966c9b6303d3731c53ddbc4c": "200000000000000000000",
  "d1682c2159018dc3d07f08240a8c606daf65f8e1": "200000000000000000000000",
  "a99991cebd98d9c838c25f7a7416d9e244ca250d": "1000000000000000000000",
  "5a285755391e914e58025faa48cc685f4fd4f5b8": "26000000000000000000000",
  "4d24b7ac47d2f27de90974ba3de5ead203544bcd": "100000000000000000000",
  "21b182f2da2b384493cf5f35f83d9d1ee14f2a21": "2000000000000000000000",
  "31ab088966ecc7229258f6098fce68cf39b38485": "1000000000000000000000",
  "4977a7939d0939689455ce2639d0ee5a4cd910ed": "1820000000000000000000",
  "07af938c1237a27c9030094dcf240750246e3d2c": "500000000000000000000",
  "4e2bfa4a466f82671b800eee426ad00c071ba170": "4000000000000000000000",
  "107379d4c467464f235bc18e55938aad3e688ad7": "50000000000000000000",
  "f7b29b82195c882dab7897c2ae95e77710f57875": "2199000000000000000000",
  "56586391040c57eec6f5affd8cd4abde10b50acc": "4000000000000000000000",
  "ac608e2bac9dd20728d2947effbbbf900a9ce94b": "6000600000000000000000",
  "48548b4ba62bcb2f0d34a88dc69a680e539cf046": "100084000000000000000",
  "1665ab1739d71119ee6132abbd926a279fe67948": "100000000000000000000",
  "af4493e8521ca89d95f5267c1ab63f9f45411e1b": "200000000000000000000",
  "bf6925c00751008440a6739a02bf2b6cdaab5e3a": "1000000000000000000000",
  "3fe40fbd919aad2818df01ee4df46c46842ac539": "6000000000000000000000",
  "455b9296921a74d1fc41617f43b8303e6f3ed76c": "4200000000000000000000",
  "7086b4bde3e35d4aeb24b825f1a215f99d85f745": "1999800000000000000000",
  "d4ee4919fb37f2bb970c3fff54aaf1f3dda6c03f": "40000000000000000000000",
  "a4489a50ead5d5445a7bee4d2d5536c2a76c41f8": "200000000000000000000",
  "505e4f7c275588c533a20ebd2ac13b409bbdea3c": "17600000000000000000",
  "3bb53598cc20e2055dc553b049404ac9b7dd1e83": "615020000000000000000",
  "52cd20403ba7eda6bc307a3d63b5911b817c1263": "20000000000000000000",
  "a211da03cc0e31ecce5309998718515528a090df": "200000000000000000000",
  "bcb422dc4dd2aae94abae95ea45dd1731bb6b0ba": "447500000000000000000",
  "cbde9734b8e6aa538c291d6d7facedb0f338f857": "2000000000000000000000",
  "171ca02a8b6d62bf4ca47e906914079861972cb2": "200000000000000000000",
  "d40d0055fd9a38488aff923fd03d35ec46d711b3": "4999711000000000000000",
  "3887192c7f705006b630091276b39ac680448d6b": "60000000000000000000",
  "3f3c8e61e5604cef0605d436dd22accd862217fc": "1337000000000000000000",
  "4258fd662fc4ce3295f0d4ed8f7bb1449600a0a9": "6719600000000000000000",
  "4571de672b9904bad8743692c21c4fdcea4c2e01": "4000000000000000000000",
  "5be045512a026e3f1cebfd5a7ec0cfc36f2dc16b": "120000000000000000000",
  "d6300b3215b11de762ecde4b70b7927d01291582": "2000000000000000000000",
  "f9e37447406c412197b2e2aebc001d6e30c98c60": "8346700000000000000000",
  "bd047ff1e69cc6b29ad26497a9a6f27a903fc4dd": "865000000000000000000",
  "23fa7eb51a48229598f97e762be0869652dffc66": "1000000000000000000000",
  "6679aeecd87a57a73f3356811d2cf49d0c4d96dc": "600000000000000000000",
  "23c55aeb5739876f0ac8d7ebea13be729685f000": "1337000000000000000000",
  "757b65876dbf29bf911d4f0692a2c9beb1139808": "4124263000000000000000",
  "e8fc36b0131ec120ac9e85afc10ce70b56d8b6ba": "200000000000000000000",
  "1a89899cbebdbb64bb26a195a63c08491fcd9eee": "2000000000000000000000",
  "6edf7f5283725c953ee64317f66188af1184b033": "8050000000000000000000",
  "297385e88634465685c231a314a0d5dcd146af01": "1550000000000000000000",
  "018f20a27b27ec441af723fd9099f2cbb79d6263": "2167000000000000000000",
  "a5a4227f6cf98825c0d5baff5315752ccc1a1391": "10000000000000000000000",
  "69517083e303d4fbb6c2114514215d69bc46a299": "100000000000000000000",
  "1dab172effa6fbee534c94b17e794edac54f55f8": "1970000000000000000000",
  "c6ee35934229693529dc41d9bb71a2496658b88e": "19700000000000000000000",
  "a8ee1df5d44b128469e913569ef6ac81eeda4fc8": "500000000000000000000",
  "35bd246865fab490ac087ac1f1d4f2c10d0cda03": "400000000000000000000",
  "4bf8bf1d35a231315764fc8001809a949294fc49": "66850000000000000000",
  "c70fa45576bf9c865f983893002c414926f61029": "400400000000000000000",
  "fdeaac2acf1d138e19f2fc3f9fb74592e3ed818a": "668500000000000000000",
  "bfbfbcb656c2992be8fcde8219fbc54aadd59f29": "9999924000000000000000",
  "1722c4cbe70a94b6559d425084caeed4d6e66e21": "4000000000000000000000",
  "00e681bc2d10db62de85848324492250348e90bf": "20000000000000000000000",
  "5c308bac4857d33baea074f3956d3621d9fa28e1": "4999711000000000000000",
  "68c08490c89bf0d6b6f320b1aca95c8312c00608": "4000000000000000000000",
  "ce1884ddbbb8e10e4dba6e44feeec2a7e5f92f05": "4000000000000000000000",
  "427417bd16b1b3d22dbb902d8f9657016f24a61c": "2000000000000000000000",
  "5ff93de6ee054cad459b2d5eb0f6870389dfcb74": "220000000000000000000",
  "71946b7117fc915ed107385f42d99ddac63249c2": "2000000000000000000000",
  "11ec00f849b6319cf51aa8dd8f66b35529c0be77": "2000000000000000000000",
  "610fd6ee4eebab10a8c55d0b4bd2e7d6ef817156": "20002000000000000000",
  "a422e4bf0bf74147cc895bed8f16d3cef3426154": "349281000000000000000",
  "745aecbaf9bb39b74a67ea1ce623de368481baa6": "10000000000000000000000",
  "9f496cb2069563144d0811677ba0e4713a0a4143": "1122000000000000000000",
  "c500b720734ed22938d78c5e48b2ba9367a575ba": "33400000000000000000000",
  "cd072e6e1833137995196d7bb1725fef8761f655": "6000000000000000000000",
  "94644ad116a41ce2ca7fbec609bdef738a2ac7c7": "5000000000000000000000",
  "e8d942d82f175ecb1c16a405b10143b3f46b963a": "568600000000000000000",
  "f73dd9c142b71bce11d06e30e7e7d032f2ec9c9e": "1970000000000000000000",
  "1327d759d56e0ab87af37ecf63fe01f310be100a": "659200000000000000000",
  "28fa2580f9ebe420f3e5eefdd371638e3b7af499": "6000000000000000000000",
  "024bdd2c7bfd500ee7404f7fb3e9fb31dd20fbd1": "180000000000000000000",
  "b4b14bf45455d0ab0803358b7524a72be1a2045b": "500000000000000000000",
  "b1e2dd95e39ae9775c55aeb13f12c2fa233053ba": "2000000000000000000000",
  "35b03ea4245736f57b85d2eb79628f036ddcd705": "4000000000000000000000",
  "eb2ef3d38fe652403cd4c9d85ed7f0682cd7c2de": "42784000000000000000000",
  "690594d306613cd3e2fd24bca9994ad98a3d73f8": "2000000000000000000000",
  "8397a1bc47acd647418159b99cea57e1e6532d6e": "9169160000000000000000",
  "b44815a0f28e569d0e921a4ade8fb2642526497a": "55500000000000000000",
  "e24109be2f513d87498e926a286499754f9ed49e": "886500000000000000000",
  "37ac29bda93f497bc4aeaab935452c431510341e": "985000000000000000000",
  "4a81abe4984c7c6bef63d69820e55743c61f201c": "16011846000000000000000",
  "66dcc5fb4ee7fee046e141819aa968799d644491": "1337000000000000000000",
  "43ff38743ed0cd43308c066509cc8e7e72c862aa": "1940000000000000000000",
  "b8f20005b61352ffa7699a1b52f01f5ab39167f1": "10000000000000000000000",
  "1cda411bd5163baeca1e558563601ce720e24ee1": "18200000000000000000",
  "86245f596691093ece3f3d3ca2263eace81941d9": "188000000000000000000",
  "f52a5882e8927d944b359b26366ba2b9cacfbae8": "25000080000000000000000",
  "118c18b2dce170e8f445753ba5d7513cb7636d2d": "8800000000000000000000",
  "7168b3bb8c167321d9bdb023a6e9fd11afc9afd9": "1790000000000000000000",
  "d9103bb6b67a55a7fece2d1af62d457c2178946d": "1000000000000000000000",
  "8b9fda7d981fe9d64287f85c94d83f9074849fcc": "14000000000000000000000",
  "91211712719f2b084d3b3875a85069f466363141": "1000000000000000000000",
  "4863849739265a63b0a2bf236a5913e6f959ce15": "1520000000000000000000",
  "c2d1778ef6ee5fe488c145f3586b6ebbe3fbb445": "1146000000000000000000",
  "2b77a4d88c0d56a3dbe3bae04a05f4fcd1b757e1": "300000000000000000000",
  "fe9c0fffefb803081256c0cf4d6659e6d33eb4fb": "1528000000000000000000",
  "893017ff1adad499aa065401b4236ce6e92b625a": "1999944000000000000000",
  "073c67e09b5c713c5221c8a0c7f3f74466c347b0": "19400000000000000000000",
  "93e303411afaf6c107a44101c9ac5b36e9d6538b": "66000000000000000000000",
  "0ec50aa823f465b9464b0bc0c4a57724a555f5d6": "59100000000000000000000",
  "a3e3a6ea509573e21bd0239ece0523a7b7d89b2f": "1970000000000000000000",
  "c069ef0eb34299abd2e32dabc47944b272334824": "120000000000000000000",
  "28a3da09a8194819ae199f2e6d9d1304817e28a5": "2000000000000000000000",
  "e9495ba5842728c0ed97be37d0e422b98d69202c": "2000000000000000000000",
  "bba976f1a1215f7512871892d45f7048acd356c8": "2000000000000000000000",
  "887cac41cd706f3345f2d34ac34e01752a6e5909": "595366000000000000000",
  "e0e0b2e29dde73af75987ee4446c829a189c95bc": "149000000000000000000",
  "4a5fae3b0372c230c125d6d470140337ab915656": "1600000000000000000000",
  "425177eb74ad0a9d9a5752228147ee6d6356a6e6": "13370000000000000000",
  "5db7bba1f9573f24115d8c8c62e9ce8895068e9f": "49984000000000000000",
  "fa6a37f018e97967937fc5e8617ba1d786dd5f77": "19999800000000000000000",
  "45e3a93e72144ada860cbc56ff85145ada38c6da": "1610000000000000000000",
  "67da922effa472a6b124e84ea8f86b24e0f515aa": "20000000000000000000",
  "aa9bd4589535db27fa2bc903ca17d679dd654806": "2000000000000000000000",
  "16a9e9b73ae98b864d1728798b8766dbc6ea8d12": "957480000000000000000",
  "d6580ab5ed4c7dfa506fa6fe64ad5ce129707732": "4000000000000000000000",
  "984a7985e3cc7eb5c93691f6f8cc7b8f245d01b2": "6000000000000000000000",
  "7746b6c6699c8f34ca2768a820f1ffa4c207fe05": "4000086000000000000000",
  "2fa491fb5920a6574ebd289f39c1b2430d2d9a6a": "2000000000000000000000",
  "fae76719d97eac41870428e940279d97dd57b2f6": "98500000000000000000000",
  "41b2dbd79dda9b864f6a7030275419c39d3efd3b": "3200000000000000000000",
  "dd8254121a6e942fc90828f2431f511dad7f32e6": "3018000000000000000000",
  "37fac1e6bc122e936dfb84de0c4bef6e0d60c2d7": "2000000000000000000000",
  "3a10888b7e149cae272c01302c327d0af01a0b24": "17000000000000000000",
  "401354a297952fa972ad383ca07a0a2811d74a71": "14000000000000000000",
  "51865db148881951f51251710e82b9be0d7eadb2": "2000000000000000000000",
  "bbbd6ecbb5752891b4ceb3cce73a8f477059376f": "36000000000000000000",
  "3f236108eec72289bac3a65cd283f95e041d144c": "999925000000000000000",
  "dc83b6fd0d512131204707eaf72ea0c8c9bef976": "2000000000000000000000",
  "036eeff5ba90a6879a14dff4c5043b18ca0460c9": "100000000000000000000",
  "fac5ca94758078fbfccd19db3558da7ee8a0a768": "1017500000000000000000",
  "d0d62c47ea60fb90a3639209bbfdd4d933991cc6": "194000000000000000000",
  "891cb8238c88e93a1bcf61db49bd82b47a7f4f84": "2680000000000000000000",
  "df53003346d65c5e7a646bc034f2b7d32fcbe56a": "2000000000000000000000",
  "6e89c51ea6de13e06cdc748b67c4410fe9bcab03": "4000000000000000000000",
  "a61cdbadf04b1e54c883de6005fcdf16beb8eb2f": "2000000000000000000000",
  "e3951de5aefaf0458768d774c254f7157735e505": "1600930000000000000000",
  "f2732cf2c13b8bb8e7492a988f5f89e38273ddc8": "600000000000000000000",
  "4752218e54de423f86c0501933917aea08c8fed5": "20000000000000000000000",
  "152f4e860ef3ee806a502777a1b8dbc91a907668": "600000000000000000000",
  "15b96f30c23b8664e7490651066b00c4391fbf84": "410650000000000000000",
  "8693e9b8be94425eef7969bc69f9d42f7cad671e": "1000090000000000000000",
  "f41557dfdfb1a1bdcefefe2eba1e21fe0a4a9942": "1970000000000000000000",
  "38458e0685573cb4d28f53098829904570179266": "40000000000000000000",
  "53e4d9696dcb3f4d7b3f70dcaa4eecb71782ff5c": "200000000000000000000",
  "2dca0e449ab646dbdfd393a96662960bcab5ae1e": "40000000000000000000000",
  "87d7ac0653ccc67aa9c3469eef4352193f7dbb86": "200000000000000000000000",
  "ae9f5c3fbbe0c9bcbf1af8ff74ea280b3a5d8b08": "1730000000000000000000",
  "7751f363a0a7fd0533190809ddaf9340d8d11291": "20000000000000000000",
  "708a2af425ceb01e87ffc1be54c0f532b20eacd6": "134159000000000000000",
  "ac122a03cd058c122e5fe17b872f4877f9df9572": "1969606000000000000000",
  "5da4ca88935c27f55c311048840e589e04a8a049": "80000000000000000000",
  "e67c2c1665c88338688187629f49e99b60b2d3ba": "200000000000000000000",
  "dec82373ade8ebcf2acb6f8bc2414dd7abb70d77": "200000000000000000000",
  "47c247f53b9fbeb17bba0703a00c009fdb0f6eae": "20000000000000000000000",
  "9a522e52c195bfb7cf5ffaaedb91a3ba7468161d": "1000000000000000000000",
  "3159e90c48a915904adfe292b22fa5fd5e72796b": "1008800000000000000000",
  "defddfd59b8d2c154eecf5c7c167bf0ba2905d3e": "93588000000000000000",
  "ad1d68a038fd2586067ef6d135d9628e79c2c924": "4686168000000000000000",
  "038e45eadd3d88b87fe4dab066680522f0dfc8f9": "10000000000000000000000",
  "2561ec0f379218fe5ed4e028a3f744aa41754c72": "13370000000000000000",
  "b95396daaa490df2569324fcc6623be052f132ca": "2000000000000000000000",
  "2376ada90333b1d181084c97e645e810aa5b76f1": "750000000000000000000",
  "07800d2f8068e448c79a4f69b1f15ef682aae5f6": "19400000000000000000000",
  "adeb204aa0c38e179e81a94ed8b3e7d53047c26b": "608000000000000000000",
  "0dc100b107011c7fc0a1339612a16ccec3285208": "2000000000000000000000",
  "f0b1340b996f6f0bf0d9561c849caf7f4430befa": "100000000000000000000",
  "e1443dbd95cc41237f613a48456988a04f683282": "4000086000000000000000",
  "d3c6f1e0f50ec3d2a67e6bcd193ec7ae38f1657f": "6618150000000000000000",
  "b68899e7610d4c93a23535bcc448945ba1666f1c": "200000000000000000000",
  "a7253763cf4a75df92ca1e766dc4ee8a2745147b": "10740000000000000000000",
  "75d67ce14e8d29e8c2ffe381917b930b1aff1a87": "3000000000000000000000",
  "493d48bda015a9bfcf1603936eab68024ce551e0": "22528000000000000000",
  "7ddd57165c87a2707f025dcfc2508c09834759bc": "1400000000000000000000",
  "cff7f89a4d4219a38295251331568210ffc1c134": "1760000000000000000000",
  "168d30e53fa681092b52e9bae15a0dcb41a8c9bb": "100000000000000000000",
  "99b743d1d9eff90d9a1934b4db21d519d89b4a38": "100000000000000000000",
  "a3d0b03cffbb269f796ac29d80bfb07dc7c6ad06": "2000000000000000000000",
  "816d9772cf11399116cc1e72c26c6774c9edd739": "200000000000000000000",
  "a880e2a8bf88a1a82648b4013c49c4594c433cc8": "4728000000000000000000",
  "2a44a7218fe44d65a1b4b7a7d9b1c2c52c8c3e34": "62221355000000000000000",
  "cb86edbc8bbb1f9131022be649565ebdb09e32a1": "2000000000000000000000",
  "3915eab5ab2e5977d075dec47d96b68b4b5cf515": "61520000000000000000000",
  "8165cab0eafb5a328fc41ac64dae715b2eef2c65": "1000000000000000000000",
  "416c86b72083d1f8907d84efd2d2d783dffa3efb": "1999944000000000000000",
  "c524086d46c8112b128b2faf6f7c7d8160a8386c": "400000000000000000000",
  "902d74a157f7d2b9a3378b1f56703730e03a1719": "4000000000000000000000",
  "74ef2869cbe608856045d8c2041118579f2236ea": "59724000000000000000",
  "af992dd669c0883e5515d3f3112a13f617a4c367": "2000000000000000000000",
  "4c6a248fc97d705def495ca20759169ef0d36471": "760000000000000000000",
  "974d2f17895f2902049deaaecf09c3046507402d": "14707000000000000000",
  "0239b4f21f8e05cd01512b2be7a0e18a6d974607": "1000000000000000000000",
  "b97a6733cd5fe99864b3b33460d1672434d5cafd": "1999579000000000000000",
  "f558a2b2dd26dd9593aae04531fd3c3cc3854b67": "198000000000000000000",
  "b577b6befa054e9c040461855094b002d7f57bd7": "114000000000000000000000",
  "73bfe7710f31cab949b7a2604fbf5239cee79015": "2000000000000000000000",
  "5717f2d8f18ffcc0e5fe247d3a4219037c3a649c": "3998000000000000000000",
  "20707e425d2a11d2c89f391b2b809f556c592421": "2000000000000000000000",
  "9a6708ddb8903c289f83fe889c1edcd61f854423": "1000000000000000000000",
  "fa27cc49d00b6c987336a875ae39da58fb041b2e": "10000000000000000000000",
  "d688e785c98f00f84b3aa1533355c7a258e87948": "500000000000000000000",
  "927cb7dc187036b5427bc7e200c5ec450c1d27d4": "216000000000000000000",
  "b2bfaa58b5196c5cb7f89de15f479d1838de713d": "21000000000000000000",
  "e180de9e86f57bafacd7904f9826b6b4b26337a3": "830400000000000000000",
  "a1204dad5f560728a35c0d8fc79481057bf77386": "1000000000000000000000",
  "6b0da25af267d7836c226bcae8d872d2ce52c941": "6000000000000000000000",
  "0517448dada761cc5ba4033ee881c83037036400": "1998000000000000000000",
  "7ed0a5a847bef9a9da7cba1d6411f5c316312619": "39842000000000000000",
  "5b5d517029321562111b43086d0b043591109a70": "2600000000000000000000",
  "56fc1a7bad4047237ce116146296238e078f93ad": "178000000000000000000",
  "6c5422fb4b14e6d98b6091fdec71f1f08640419d": "400000000000000000000",
  "108fe8ee2a13da487b22c6ab6d582ea71064d98c": "399800000000000000000",
  "0ad3e44d3c001fa290b393617030544108ac6eb9": "1969019000000000000000",
  "25aee68d09afb71d8817f3f184ec562f7897b734": "2000000000000000000000",
  "c2340a4ca94c9678b7494c3c852528ede5ee529f": "48669000000000000000",
  "44901e0d0e08ac3d5e95b8ec9d5e0ff5f12e0393": "417500000000000000000",
  "8775a610c502b9f1e6ad4cdadb8ce29bff75f6e4": "600000000000000000000",
  "682897bc4f8e89029120fcffb787c01a93e64184": "10000000000000000000000",
  "f7acff934b84da0969dc37a8fcf643b7d7fbed41": "1999944000000000000000",
  "f05fcd4c0d73aa167e5553c8c0d6d4f2faa39757": "13334000000000000000000",
  "c981d312d287d558871edd973abb76b979e5c35e": "1970000000000000000000",
  "9da61ccd62bf860656e0325d7157e2f160d93bb5": "4999980000000000000000",
  "d284a50382f83a616d39b8a9c0f396e0ebbfa95d": "1000070000000000000000",
  "d6cf5c1bcf9da662bcea2255905099f9d6e84dcc": "8349332000000000000000",
  "c71b2a3d7135d2a85fb5a571dcbe695e13fc43cd": "1000000000000000000000",
  "b22dadd7e1e05232a93237baed98e0df92b1869e": "2000000000000000000000",
  "b09fe6d4349b99bc37938054022d54fca366f7af": "200000000000000000000000",
  "427e4751c3babe78cff8830886febc10f9908d74": "1970000000000000000000",
  "60b358cb3dbefa37f47df2d7365840da8e3bc98c": "20000000000000000000",
  "dcd5bca2005395b675fde5035659b26bfefc49ee": "197000000000000000000",
  "81186931184137d1192ac88cd3e1e5d0fdb86a74": "2900000000000000000000",
  "de212293f8f1d231fa10e609470d512cb8ffc512": "2000000000000000000000",
  "1937c5c515057553ccbd46d5866455ce66290284": "1000000000000000000000000",
  "592777261e3bd852c48eca95b3a44c5b7f2d422c": "20000000000000000000000",
  "bbf84292d954acd9e4072fb860b1504106e077ae": "1500000000000000000000",
  "3b4100e30a73b0c734b18ffa8426d19b19312f1a": "55300000000000000000000",
  "a03a3dc7c533d1744295be955d61af3f52b51af5": "40000000000000000000",
  "4aa148c2c33401e66a2b586e6577c4b292d3f240": "216200000000000000000",
  "ff850e3be1eb6a4d726c08fa73aad358f39706da": "1940000000000000000000",
  "743651b55ef8429df50cf81938c2508de5c8870f": "2000000000000000000000",
  "3700e3027424d939dbde5d42fb78f6c4dbec1a8f": "40000000000000000000",
  "c1cbd2e2332a524cf219b10d871ccc20af1fb0fa": "1000000000000000000000",
  "e25b9f76b8ad023f057eb11ad94257a0862e4e8c": "2000000000000000000000",
  "719e891fbcc0a33e19c12dc0f02039ca05b801df": "6185800000000000000000",
  "39636b25811b176abfcfeeca64bc87452f1fdff4": "400000000000000000000",
  "631030a5b27b07288a45696f189e1114f12a81c0": "499970000000000000000",
  "bcc84597b91e73d5c5b4d69c80ecf146860f779a": "4380000000000000000000",
  "095e0174829f34c3781be1a5e38d1541ea439b7f": "6000000000000000000000",
  "2e7e05e29edda7e4ae25c5173543efd71f6d3d80": "6000000000000000000000",
  "dbb6ac484027041642bbfd8d80f9d0c1cf33c1eb": "2000000000000000000000",
  "153c08aa8b96a611ef63c0253e2a4334829e579d": "394000000000000000000",
  "10f4bff0caa5027c0a6a2dcfc952824de2940909": "2000000000000000000000",
  "2ef869f0350b57d53478d701e3fee529bc911c75": "50000000000000000000",
  "70ab34bc17b66f9c3b63f151274f2a727c539263": "2000000000000000000000",
  "3201259caf734ad7581c561051ba0bca7fd6946b": "180000000000000000000000",
  "84e9cf8166c36abfa49053b7a1ad4036202681ef": "2000000000000000000000",
  "4ebc5629f9a6a66b2cf3363ac4895c0348e8bf87": "1000090000000000000000",
  "e50b464ac9de35a5618b7cbf254674182b81b97e": "4100000000000000000000",
  "2abdf1a637ef6c42a7e2fe217773d677e804ebdd": "5000000000000000000000",
  "7a0a78a9cc393f91c3d9e39a6b8c069f075e6bf5": "1337000000000000000000",
  "2d9c5fecd2b44fbb6a1ec732ea059f4f1f9d2b5c": "1010694000000000000000",
  "7b712c7af11676006a66d2fc5c1ab4c479ce6037": "8000000000000000000000",
  "3466f67e39636c01f43b3a21a0e8529325c08624": "842864000000000000000",
  "fdd502a74e813bcfa355ceda3c176f6a6871af7f": "400000000000000000000",
  "26475419c06d5f147aa597248eb46cf7befa64a5": "1640000000000000000000",
  "9243d7762d77287b12638688b9854e88a769b271": "1000000000000000000000",
  "723d8baa2551d2addc43c21b45e8af4ca2bfb2c2": "1760000000000000000000",
  "f2fbb6d887f8b8cc3a869aba847f3d1f643c53d6": "3999000000000000000000",
  "2cdb3944650616e47cb182e060322fa1487978ce": "1820000000000000000000",
  "f0d21663d8b0176e05fde1b90ef31f8530fda95f": "1999944000000000000000",
  "77cc02f623a9cf98530997ea67d95c3b491859ae": "1354900000000000000000",
  "d1b5a454ac3405bb4179208c6c84de006bcb9be9": "500000000000000000000",
  "b9920fd0e2c735c256463caa240fb7ac86a93dfa": "1760000000000000000000",
  "ed1f1e115a0d60ce02fb25df014d289e3a0cbe7d": "500000000000000000000",
  "23e2c6a8be8e0acfa5c4df5e36058bb7cbac5a81": "2000000000000000000000",
  "f0be0faf4d7923fc444622d1980cf2d990aab307": "2000000000000000000000",
  "0829d0f7bb7c446cfbb0deadb2394d9db7249a87": "40110000000000000000",
  "2ecac504b233866eb5a4a99e7bd2901359e43b3d": "20000000000000000000000",
  "06d6cb308481c336a6e1a225a912f6e6355940a1": "1760000000000000000000",
  "d4879fd12b1f3a27f7e109761b23ca343c48e3d8": "666000000000000000000",
  "857f100b1a5930225efc7e9020d78327b41c02cb": "2000000000000000000000",
  "3aa42c21b9b31c3e27ccd17e099af679cdf56907": "8000000000000000000000",
  "764d5212263aff4a2a14f031f04ec749dc883e45": "1850000000000000000000",
  "d03a2da41e868ed3fef5745b96f5eca462ff6fda": "3000000000000000000000",
  "4f26690c992b7a312ab12e1385d94acd58288e7b": "14000000000000000000000",
  "7b122162c913e7146cad0b7ed37affc92a0bf27f": "1506799000000000000000",
  "c87352dba582ee2066b9c002a962e003134f78b1": "500000000000000000000",
  "9f4ac9c9e7e24cb2444a0454fa5b9ad9d92d3853": "835000000000000000000",
  "ccf62a663f1353ba2ef8e6521dc1ecb673ec8ef7": "152000000000000000000",
  "557f5e65e0da33998219ad4e99570545b2a9d511": "11024000000000000000000",
  "a5f0077b351f6c505cd515dfa6d2fa7f5c4cd287": "40000000000000000000000",
  "79c6002f8452ca157f1317e80a2faf24475559b7": "20000000000000000000",
  "3aa07a34a1afc8967d3d1383b96b62cf96d5fa90": "20000000000000000000000",
  "7f389c12f3c6164f6446566c77669503c2792527": "98500000000000000000",
  "ac4cc256ae74d624ace80db078b2207f57198f6b": "2001000000000000000000",
  "823ba7647238d113bce9964a43d0a098118bfe4d": "200000000000000000000",
  "f5a7676ad148ae9c1ef8b6f5e5a0c2c473be850b": "200000000000000000000",
  "7d34803569e00bd6b59fff081dfa5c0ab4197a62": "1712700000000000000000",
  "061ea4877cd08944eb64c2966e9db8dedcfec06b": "1000000000000000000000",
  "df37c22e603aedb60a627253c47d8ba866f6d972": "24000000000000000000000",
  "529aa002c6962a3a8545027fd8b05f22b5bf9564": "1670000000000000000000",
  "eb89a882670909cf377e9e78286ee97ba78d46c2": "802200000000000000000",
  "9ac85397792a69d78f286b86432a07aeceb60e64": "14300000000000000000",
  "9610592202c282ab9bd8a884518b3e0bd4758137": "268000000000000000000",
  "73932709a97f02c98e51b091312865122385ae8e": "1430000000000000000000",
  "5ef8c96186b37984cbfe04c598406e3b0ac3171f": "9400000000000000000000",
  "b6f78da4f4d041b3bc14bc5ba519a5ba0c32f128": "172326253000000000000000",
  "6f0edd23bcd85f6015f9289c28841fe04c83efeb": "19100000000000000000",
  "a8a43c009100616cb4ae4e033f1fc5d7e0b6f152": "3939015000000000000000",
  "7081fa6baad6cfb7f51b2cca16fb8970991a64ba": "233953000000000000000",
  "9de7386dde401ce4c67b71b6553f8aa34ea5a17d": "60000000000000000000",
  "54ec7300b81ac84333ed1b033cd5d7a33972e234": "200000000000000000000",
  "67a80e0190721f94390d6802729dd12c31a895ad": "1999964000000000000000",
  "3a4297da3c555e46c073669d0478fce75f2f790e": "1969606000000000000000",
  "c2e0584a71348cc314b73b2029b6230b92dbb116": "2000000000000000000000",
  "0a2ade95b2e8c66d8ae6f0ba64ca57d783be6d44": "4000000000000000000000",
  "544b5b351d1bc82e9297439948cf4861dac9ae11": "22000000000000000000000",
  "3ae62bd271a760637fad79c31c94ff62b4cd12f7": "2000000000000000000000",
  "0d8023929d917234ae40512b1aabb5e8a4512771": "148000000000000000000",
  "2858acacaf21ea81cab7598fdbd86b452e9e8e15": "666000000000000000000",
  "c033b1325a0af45472c25527853b1f1c21fa35de": "2000000000000000000000",
  "bbf85aaaa683738f073baef44ac9dc34c4c779ea": "2000000000000000000000",
  "6ae57f27917c562a132a4d1bf7ec0ac785832926": "6000000000000000000000",
  "88e6f9b247f988f6c0fc14c56f1de53ec69d43cc": "100000000000000000000",
  "b72c2a011c0df50fbb6e28b20ae1aad217886790": "4000000000000000000000",
  "161caf5a972ace8379a6d0a04ae6e163fe21df2b": "100000000000000000000000",
  "2a63590efe9986c3fee09b0a0a338b15bed91f21": "6458400000000000000000",
  "50e1c8ec98415bef442618708799437b86e6c205": "6000000000000000000000",
  "33f4a6471eb1bca6a9f85b3b4872e10755c82be1": "2000000000000000000000",
  "9c49deff47085fc09704caa2dca8c287a9a137da": "8000000000000000000000",
  "e1173a247d29d8238df0922f4df25a05f2af77c3": "40007051000000000000000",
  "51891b2ccdd2f5a44b2a8bc49a5d9bca6477251c": "310000000000000000000",
  "ecaf3350b7ce144d068b186010852c84dd0ce0f0": "2000000000000000000000",
  "72393d37b451effb9e1ff3b8552712e2a970d8c2": "985000000000000000000",
  "1bbc60bcc80e5cdc35c5416a1f0a40a83dae867b": "2000000000000000000000",
  "b8ab39805bd821184f6cbd3d2473347b12bf175c": "118200000000000000000",
  "c55a6b4761fd11e8c85f15174d74767cd8bd9a68": "133700000000000000000",
  "99d1b585965f406a42a49a1ca70f769e765a3f98": "16700000000000000000000",
  "9ab988b505cfee1dbe9cd18e9b5473b9a2d4f536": "320000000000000000000",
  "7fef8c38779fb307ec6f044bebe47f3cfae796f1": "168561000000000000000",
  "322d6f9a140d213f4c80cd051afe25c620bf4c7d": "20000000000000000000",
  "3bd9a06d1bd36c4edd27fc0d1f5b088ddae3c72a": "499970000000000000000",
  "5dcdb6b87a503c6d8a3c65c2cf9a9aa883479a1e": "9200000000000000000000",
  "6e84c2fd18d8095714a96817189ca21cca62bab1": "340935000000000000000",
  "a5bad86509fbe0e0e3c0e93f6d381f1af6e9d481": "6000000000000000000000",
  "3954bdfe0bf587c695a305d9244c3d5bdddac9bb": "19187461000000000000000",
  "63f0e5a752f79f67124eed633ad3fd2705a397d4": "3940000000000000000000",
  "33fd718f0b91b5cec88a5dc15eecf0ecefa4ef3d": "432500000000000000000",
  "68027d19558ed7339a08aee8de3559be063ec2ea": "2000000000000000000000",
  "96f0462ae6f8b96088f7e9c68c74b9d8ad34b347": "1790000000000000000000",
  "f1f391ca92808817b755a8b8f4e2ca08d1fd1108": "6000000000000000000000",
  "7fcf5ba6666f966c5448c17bf1cb0bbcd8019b06": "99999000000000000000",
  "e9b9a2747510e310241d2ece98f56b3301d757e0": "2000000000000000000000",
  "2100381d60a5b54adc09d19683a8f6d5bb4bfbcb": "10000000000000000000000",
  "7495ae78c0d90261e2140ef2063104731a60d1ed": "34250000000000000000",
  "dc911cf7dc5dd0813656670528e9338e67034786": "2000000000000000000000",
  "262aed4bc0f4a4b2c6fb35793e835a49189cdfec": "10000000000000000000000",
  "9ee93f339e6726ec65eea44f8a4bfe10da3d3282": "2000000000000000000000",
  "a3a57b0716132804d60aac281197ff2b3d237b01": "1400000000000000000000",
  "c799e34e88ff88be7de28e15e4f2a63d0b33c4cb": "200000000000000000000",
  "c7506c1019121ff08a2c8c1591a65eb4bdfb4a3f": "600000000000000000000",
  "795ebc2626fc39b0c86294e0e837dcf523553090": "1000000000000000000000",
  "441aca82631324acbfa2468bda325bbd78477bbf": "6000000000000000000000",
  "9f271d285500d73846b18f733e25dd8b4f5d4a8b": "722000000000000000000",
  "d77892e2273b235d7689e430e7aeed9cbce8a1f3": "2000000000000000000000",
  "4f8972838f70c903c9b6c6c46162e99d6216d451": "4610000000000000000000",
  "4c85ed362f24f6b9f04cdfccd022ae535147cbb9": "1500000000000000000000",
  "3807eff43aa97c76910a19752dd715ee0182d94e": "250190000000000000000",
  "3a9e5441d44b243be55b75027a1ceb9eacf50df2": "1000000000000000000000",
  "3deae43327913f62808faa1b6276a2bd6368ead9": "2000000000000000000000",
  "c270456885342b640b4cfc1b520e1a544ee0d571": "1820000000000000000000",
  "77798f201257b9c35204957057b54674aefa51df": "149000000000000000000",
  "225f9eb3fb6ff3e9e3c8447e14a66e8d4f3779f6": "2000000000000000000000",
  "78df2681d6d602e22142d54116dea15d454957aa": "298000000000000000000",
  "283396ce3cac398bcbe7227f323e78ff96d08767": "400000000000000000000",
  "747ff7943b71dc4dcdb1668078f83dd7cc4520c2": "60000000000000000000",
  "a4ed11b072d89fb136759fc69b428c48aa5d4ced": "262800000000000000000",
  "cc043c4388d345f884c6855e71142a9f41fd6935": "20000000000000000000",
  "ab14d221e33d544629198cd096ed63dfa28d9f47": "6000000000000000000000",
  "251e6838f7cec5b383c1d90146341274daf8e502": "147510000000000000000",
  "36a0e61e1be47fa87e30d32888ee0330901ca991": "20000000000000000000",
  "bcfc98e5c82b6adb180a3fcb120b9a7690c86a3f": "1970000000000000000000",
  "18a6d2fc52be73084023c91802f05bc24a4be09f": "2000000000000000000000",
  "80591a42179f34e64d9df75dcd463b28686f5574": "20000000000000000000000",
  "881230047c211d2d5b00d8de4c5139de5e3227c7": "10000000000000000000000",
  "9eb1ff71798f28d6e989fa1ea0588e27ba86cb7d": "140800000000000000000",
  "a01fd1906a908506dedae1e208128872b56ee792": "3000000000000000000000",
  "1b05ea6a6ac8af7cb6a8b911a8cce8fe1a2acfc8": "2000000000000000000000",
  "6add932193cd38494aa3f03aeccc4b7ab7fabca2": "89600000000000000000",
  "2aaa35274d742546670b7426264521032af4f4c3": "10000000000000000000000",
  "67b8a6e90fdf0a1cac441793301e8750a9fa7957": "895000000000000000000",
  "5b5be0d8c67276baabd8edb30d48ea75640b8b29": "824480000000000000000",
  "28d7e5866f1d85fd1ceb32bfbe1dfc36db434566": "7199000000000000000000",
  "98e3e90b28fccaee828779b8d40a5568c4116e21": "40000000000000000000",
  "2dd578f7407dfbd548d05e95ccc39c485429626a": "4200000000000000000000",
  "8ca6989746b06e32e2487461b1ce996a273acfd7": "20000000000000000000",
  "a6f93307f8bce03195fece872043e8a03f7bd11a": "2886000000000000000000",
  "efbd52f97da5fd3a673a46cbf330447b7e8aad5c": "100033000000000000000",
  "52bdd9af5978850bc24110718b3723759b437e59": "1730000000000000000000",
  "6e073b66d1b8c66744d88096a8dd99ec7e0228da": "4000000000000000000000",
  "a29d661a6376f66d0b74e2fe9d8f26c0247ec84c": "4117300000000000000000",
  "7d34ff59ae840a7413c6ba4c5bb2ba2c75eab018": "3000000000000000000000",
  "2eca6a3c5d9f449d0956bd43fa7b4d7be8435958": "2000020000000000000000",
  "f59f9f02bbc98efe097eabb78210979021898bfd": "9999800000000000000000",
  "90e300ac71451e401f887f6e7728851647a80e07": "400000000000000000000",
  "05ae7fd4bbcc80ca11a90a1ec7a301f7cccc83db": "910000000000000000000",
  "e54102534de8f23effb093b31242ad3b233facfd": "4000000000000000000000",
  "c127aab59065a28644a56ba3f15e2eac13da2995": "600000000000000000000",
  "ed60c4ab6e540206317e35947a63a9ca6b03e2cb": "57275000000000000000",
  "d855b03ccb029a7747b1f07303e0a664793539c8": "2000000000000000000000",
  "1178501ff94add1c5881fe886136f6dfdbe61a94": "158000000000000000000",
  "f447108b98df64b57e871033885c1ad71db1a3f9": "6916709000000000000000",
  "deee2689fa9006b59cf285237de53b3a7fd01438": "450034000000000000000",
  "7f01dc7c3747ca608f983dfc8c9b39e755a3b914": "206980000000000000000",
  "9edeac4c026b93054dc5b1d6610c6f3960f2ad73": "1200000000000000000000",
  "e3cffe239c64e7e20388e622117391301b298696": "500000000000000000000",
  "ebbb4f2c3da8be3eb62d1ffb1f950261cf98ecda": "2000000000000000000000",
  "38c10b90c859cbb7815692f99dae520ab5febf5e": "13169000000000000000000",
  "23f9ecf3e5dddca38815d3e59ed34b5b90b4a353": "204608000000000000000",
  "d7fa5ffb6048f96fb1aba09ef87b1c11dd7005e4": "1000000000000000000000",
  "9ca42ee7a0b898f6a5cc60b5a5d7b1bfa3c33231": "2000000000000000000000",
  "8b9577920053b1a00189304d888010d9ef2cb4bf": "500000000000000000000",
  "fcd0b4827cd208ffbf5e759dba8c3cc61d8c2c3c": "8000000000000000000000",
  "01ff1eb1dead50a7f2f9638fdee6eccf3a7b2ac8": "600000000000000000000",
  "abde147b2af789eaa586547e66c4fa2664d328a4": "247545000000000000000",
  "64042ba68b12d4c151651ca2813b7352bd56f08e": "600000000000000000000",
  "dccca42045ec3e16508b603fd936e7fd7de5f36a": "19700000000000000000",
  "e77a89bd45dc04eeb4e41d7b596b707e6e51e74c": "12000000000000000000000",
  "f77c7b845149efba19e261bc7c75157908afa990": "2000000000000000000000",
  "fa5201fe1342af11307b9142a041243ca92e2f09": "152150000000000000000000",
  "40df495ecf3f8b4cef2a6c189957248fe884bc2b": "12000000000000000000000",
  "3d79a853d71be0621b44e29759656ca075fdf409": "2000000000000000000000",
  "6de02f2dd67efdb7393402fa9eaacbcf589d2e56": "1182000000000000000000",
  "729aad4627744e53f5d66309aa74448b3acdf46f": "2000000000000000000000",
  "4e4318f5e13e824a54edfe30a7ed4f26cd3da504": "2000000000000000000000",
  "c6a286e065c85f3af74812ed8bd3a8ce5d25e21d": "18200000000000000000",
  "fd686de53fa97f99639e2568549720bc588c9efc": "1969606000000000000000",
  "06b0ff834073cce1cbc9ea557ea87b605963e8b4": "300000000000000000000",
  "72b5633fe477fe542e742facfd690c137854f216": "1670000000000000000000",
  "8bf373d076814cbc57e1c6d16a82c5be13c73d37": "200000000000000000000",
  "cf264e6925130906c4d7c18591aa41b2a67f6f58": "2000000000000000000000",
  "0ea2a210312b3e867ee0d1cc682ce1d666f18ed5": "10000000000000000000000",
  "d02afecf8e2ec2b62ac8ad204161fd1fae771d0e": "2000000000000000000000",
  "e6b20f980ad853ad04cbfc887ce6601c6be0b24c": "4000000000000000000000",
  "4280a58f8bb10b9440de94f42b4f592120820191": "2000000000000000000000",
  "a914cdb571bfd93d64da66a4e108ea134e50d000": "1430143000000000000000",
  "60864236930d04d8402b5dcbeb807f3caf611ea2": "4000000000000000000000",
  "f9dd239008182fb519fb30eedd2093fed1639be8": "500000000000000000000",
  "18e53243981aabc8767da10c73449f1391560eaa": "6000000000000000000000",
  "c3a9226ae275df2cab312b911040634a9c9c9ef6": "4000000000000000000000",
  "4fcc19ea9f4c57dcbce893193cfb166aa914edc5": "7001380000000000000000",
  "c1e1409ca52c25435134d006c2a6a8542dfb7273": "34380000000000000000",
  "981ddf0404e4d22dda556a0726f00b2d98ab9569": "999972000000000000000",
  "e5bcc88c3b256f6ed5fe550e4a18198b943356ad": "2000000000000000000000",
  "74a17f064b344e84db6365da9591ff1628257643": "20000000000000000000",
  "2720f9ca426ef2f2cbd2fecd39920c4f1a89e16d": "2000000000000000000000",
  "8d04a5ebfb5db409db0617c9fa5631c192861f4a": "970000000000000000000",
  "f18b14cbf6694336d0fe12ac1f25df2da0c05dbb": "3999800000000000000000",
  "56ac20d63bd803595cec036da7ed1dc66e0a9e07": "63927000000000000000",
  "92c94c2820dfcf7156e6f13088ece7958b3676fd": "95500000000000000000",
  "968dea60df3e09ae3c8d3505e9c080454be0e819": "6000000000000000000000",
  "9268d62646563611dc3b832a30aa2394c64613e3": "2000000000000000000000",
  "5a192b964afd80773e5f5eda6a56f14e25e0c6f3": "500000000000000000000",
  "df8d48b1eb07b3c217790e6c2df04dc319e7e848": "500000000000000000000",
  "7f61fa6cf5f898b440dac5abd8600d6d691fdef9": "280000000000000000000",
  "929d368eb46a2d1fbdc8ffa0607ede4ba88f59ad": "2000000000000000000000",
  "9982a5890ffb5406d3aca8d2bfc1dd70aaa80ae0": "2000000000000000000000",
  "bf2aea5a1dcf6ed3b5e8323944e983fedfd1acfb": "1580000000000000000000",
  "46aa501870677e7f0a504876b4e8801a0ad01c46": "800000000000000000000",
  "8f473d0ab876ddaa15608621d7013e6ff714b675": "470400000000000000000",
  "02290fb5f9a517f82845acdeca0fc846039be233": "2000000000000000000000",
  "8a5831282ce14a657a730dc18826f7f9b99db968": "4330268000000000000000",
  "0328510c09dbcd85194a98d67c33ac49f2f94d60": "11000000000000000000000",
  "cf883a20329667ea226a1e3c765dbb6bab32219f": "3038972000000000000000",
  "2615100ea7e25bba9bca746058afbbb4ffbe4244": "500000000000000000000",
  "b115ee3ab7641e1aa6d000e41bfc1ec7210c2f32": "13000000000000000000000",
  "5cfa8d568575658ca4c1a593ac4c5d0e44c60745": "291000000000000000000",
  "d3c24d4b3a5e0ff8a4622d518edd73f16ab28610": "20000000000000000000",
  "a639acd96b31ba53b0d08763229e1f06fd105e9d": "8000000000000000000000",
  "ffa4aff1a37f984b0a67272149273ae9bd41e3bc": "10000000000000000000000",
  "cf684dfb8304729355b58315e8019b1aa2ad1bac": "432500000000000000000",
  "5797b60fd2894ab3c2f4aede86daf2e788d745ad": "6000000000000000000000",
  "a6a0de421ae54f6d17281308f5646d2f39f7775d": "2000000000000000000000",
  "08504f05643fab5919f5eea55925d7a3ed7d807a": "20000000000000000000",
  "7a7068e1c3375c0e599db1fbe6b2ea23b8f407d2": "2000000000000000000000",
  "1078d7f61b0e56c74ee6635b2e1819ef1e3d8785": "1000000000000000000000",
  "6e12b51e225b4a4372e59ad7a2a1a13ea3d3a137": "14172200000000000000000",
  "6a2e86469a5bf37cee82e88b4c3863895d28fcaf": "519000000000000000000",
  "197672fd39d6f246ce66a790d13aa922d70ea109": "1000000000000000000000",
  "8009a7cbd192b3aed4adb983d5284552c16c7451": "4000000000000000000000",
  "f6c3c48a1ac0a34799f04db86ec7a975fe7768f3": "1970000000000000000000",
  "16be75e98a995a395222d00bd79ff4b6e638e191": "36000000000000000000000",
  "6c05e34e5ef2f42ed09deff1026cd66bcb6960bb": "2000000000000000000000",
  "5d6ae8cbd6b3393c22d16254100d0238e808147c": "719992000000000000000",
  "1a376e1b2d2f590769bb858d4575320d4e149970": "4841200000000000000000",
  "f6ead67dbf5b7eb13358e10f36189d53e643cfcf": "40000000000000000000000",
  "467d5988249a68614716659840ed0ae6f6f457bc": "387500000000000000000",
  "aa960e10c52391c54e15387cc67af827b5316dcc": "2000000000000000000000",
  "483ba99034e900e3aedf61499d3b2bce39beb7aa": "985000000000000000000",
  "86f23e9c0aafc78b9c404dcd60339a925bffa266": "400000000000000000000",
  "d05a447c911dbb275bfb2e5a37e5a703a56f9997": "200000000000000000000",
  "edb71ec41bda7dce86e766e6e8c3e9907723a69b": "20000000000000000000",
  "f86a3ea8071f7095c7db8a05ae507a8929dbb876": "336000000000000000000",
  "323b3cfe3ee62bbde2a261e53cb3ecc05810f2c6": "13790000000000000000000",
  "936f3813f5f6a13b8e4ffec83fe7f826186a71cd": "520000000000000000000",
  "6db72bfd43fef465ca5632b45aab7261404e13bf": "2000000000000000000000",
  "9bb76204186af2f63be79168601687fc9bad661f": "300000000000000000000",
  "28ab165ffb69eda0c549ae38e9826f5f7f92f853": "1296890000000000000000",
  "c73e2112282215dc0762f32b7e807dcd1a7aae3e": "6900000000000000000000",
  "f8086e42661ea929d2dda1ab6c748ce3055d111e": "1000000000000000000000",
  "4db21284bcd4f787a7556500d6d7d8f36623cf35": "1939806000000000000000",
  "c48651c1d9c16bff4c9554886c3f3f26431f6f68": "658000000000000000000",
  "9bdbdc9b973431d13c89a3f9757e9b3b6275bfc7": "499971000000000000000",
  "560da37e956d862f81a75fd580a7135c1b246352": "10000000000000000000000",
  "4b60a3e253bf38c8d5662010bb93a473c965c3e5": "1490000000000000000000",
  "64e02abb016cc23a2934f6bcddb681905021d563": "1000000000000000000000",
  "ac2c8e09d06493a63858437bd20be01962450365": "1910000000000000000000",
  "9bf9b3b2f23cf461eb591f28340bc719931c8364": "1000000000000000000000",
  "9b5c39f7e0ac168c8ed0ed340477117d1b682ee9": "98000000000000000000",
  "f75bb39c799779ebc04a336d260da63146ed98d0": "25000000000000000000",
  "a7966c489f4c748a7ae980aa27a574251767caf9": "3000000000000000000000",
  "ea53c954f4ed97fd4810111bdab69ef981ef25b9": "17300000000000000000000",
  "03a26cfc4c18316f70d59e9e1a79ee3e8b962f4c": "2000000000000000000000",
  "3e63ce3b24ca2865b4c5a687b7aea3597ef6e548": "2000000000000000000000",
  "500c902958f6421594d1b6ded712490d52ed6c44": "1970000000000000000000",
  "6f44ca09f0c6a8294cbd519cdc594ad42c67579f": "50000000000000000000",
  "3616fb46c81578c9c8eb4d3bf880451a88379d7d": "200000000000000000000",
  "57bc20e2d62b3d19663cdb4c309d5b4f2fc2db8f": "100000000000000000000",
  "1cebf0985d7f680aaa915c44cc62edb49eab269e": "1000000000000000000000",
  "c0cbf6032fa39e7c46ff778a94f7d445fe22cf30": "310000000000000000000",
  "c58b9cc61dedbb98c33f224d271f0e228b583433": "3880000000000000000000",
  "e9c6dfae97f7099fc5f4e94b784db802923a1419": "48800000000000000000",
  "9bacd3d40f3b82ac91a264d9d88d908eac8664b9": "20000000000000000000000",
  "63d80048877596e0c28489e650cd4ac180096a49": "280000000000000000000",
  "e6a6f6dd6f70a456f4ec15ef7ad5e5dbb68bd7dc": "200000000000000000000",
  "d418870bc2e4fa7b8a6121ae0872d55247b62501": "1580000000000000000000",
  "e2f9383d5810ea7b43182b8704b62b27f5925d39": "400000000000000000000",
  "bd5e473abce8f97a6932f77c2facaf9cc0a00514": "1117350000000000000000",
  "2ff1ca55fd9cec1b1fe9f0a9abb74c513c1e2aaa": "3000000000000000000000",
  "9d99b189bbd9a48fc2e16e8fcda33bb99a317bbb": "1126900000000000000000",
  "6e96faeda3054302c45f58f161324c99a3eebb62": "20000000000000000000",
  "ef93818f684db0c3675ec81332b3183ecc28a495": "1550000000000000000000",
  "2659facb1e83436553b5b42989adb8075f9953ed": "29356000000000000000",
  "c4ffadaaf2823fbea7bff702021bffc4853eb5c9": "42233000000000000000",
  "e9864c1afc8eaad37f3ba56fcb7477cc622009b7": "79000000000000000000",
  "87ef6d8b6a7cbf9b5c8c97f67ee2adc2a73b3f77": "200400000000000000000",
  "c043f2452dcb9602ef62bd360e033dd23971fe84": "2000000000000000000000",
  "0fdd65402395df9bd19fee4507ef5345f745104c": "5000000000000000000000",
  "939c4313d2280edf5e071bced846063f0a975d54": "120000000000000000000000",
  "b28245037cb192f75785cb86cbfe7c930da258b0": "16000000000000000000000",
  "a80cb1738bac08d4f9c08b4deff515545fa8584f": "500000000000000000000",
  "62971bf2634cee0be3c9890f51a56099dbb9519b": "656000000000000000000",
  "f2efe96560c9d97b72bd36447843885c1d90c231": "2000000000000000000000",
  "0e390f44053ddfcef0d608b35e4d9c2cbe9871bb": "1970000000000000000000",
  "61d101a033ee0e2ebb3100ede766df1ad0244954": "500000000000000000000",
  "6785513cf732e47e87670770b5419be10cd1fc74": "2000000000000000000000",
  "167699f48a78c615512515739958993312574f07": "39000000000000000000",
  "68ec79d5be7155716c40941c79d78d17de9ef803": "500600000000000000000",
  "a0e8ba661b48154cf843d4c2a5c0f792d528ee29": "400000000000000000000",
  "1a201b4327cea7f399046246a3c87e6e03a3cda8": "1000000000000000000000",
  "f60f62d73937953fef35169e11d872d2ea317eec": "5348000000000000000000",
  "c0c04d0106810e3ec0e54a19f2ab8597e69a573d": "50000000000000000000",
  "ef47cf073e36f271d522d7fa4e7120ad5007a0bc": "2500000000000000000000",
  "a44fe800d96fcad73b7170d0f610cb8c0682d6ce": "4000000000000000000000",
  "010f4a98dfa1d9799bf5c796fb550efbe7ecd877": "8023366000000000000000",
  "708fa11fe33d85ad1befcbae3818acb71f6a7d7e": "18200000000000000000",
  "b38c4e537b5df930d65a74d043831d6b485bbde4": "400000000000000000000",
  "250a69430776f6347703f9529783955a6197b682": "1940000000000000000000",
  "2d35a9df62757f7ffad1049afb06ca4afc464c51": "20000000000000000000",
  "6aff1466c2623675e3cb0e75e423d37a25e442eb": "1730000000000000000000",
  "fc15cb99a8d1030b12770add033a79ee0d0c908c": "350056000000000000000",
  "e784dcc873aa8c1513ec26ff36bc92eac6d4c968": "200000000000000000000",
  "b1c328fb98f2f19ab6646f0a7c8c566fda5a8540": "2500000000000000000000",
  "247a0a11c57f0383b949de540b66dee68604b0a1": "1069600000000000000000",
  "1af60343360e0b2d75255210375720df21db5c7d": "1000000000000000000000",
  "8794bf47d54540ece5c72237a1ffb511ddb74762": "2000000000000000000000",
  "e76d945aa89df1e457aa342b31028a5e9130b2ce": "1015200000000000000000",
  "a30e0acb534c9b3084e8501da090b4eb16a2c0cd": "2000000000000000000000",
  "7099d12f6ec656899b049a7657065d62996892c8": "400000000000000000000",
  "7be7f2456971883b9a8dbe4c91dec08ac34e8862": "3000000000000000000000",
  "42746aeea14f27beff0c0da64253f1e7971890a0": "1550000000000000000000",
  "736b44503dd2f6dd5469ff4c5b2db8ea4fec65d0": "313950000000000000000",
  "822edff636563a6106e52e9a2598f7e6d0ef2782": "36099000000000000000",
  "03c647a9f929b0781fe9ae01caa3e183e876777e": "445800000000000000000",
  "63612e7862c27b587cfb6daf9912cb051f030a9f": "43458000000000000000",
  "d46bae61b027e5bb422e83a3f9c93f3c8fc77d27": "2000000000000000000000",
  "5f23ba1f37a96c45bc490259538a54c28ba3b0d5": "1200000000000000000000",
  "d41d7fb49fe701baac257170426cc9b38ca3a9b2": "176000000000000000000",
  "1ebacb7844fdc322f805904fbf1962802db1537c": "10000000000000000000000",
  "9c80bc18e9f8d4968b185da8c79fa6e11ffc3e23": "240000000000000000000",
  "e4ca0a5238564dfc91e8bf22bade2901619a1cd4": "1000000000000000000000",
  "1ad72d20a76e7fcc6b764058f48d417d496fa6cd": "2000000000000000000000",
  "d3bc730937fa75d8452616ad1ef1fe7fffe0d0e7": "83363000000000000000",
  "eac1482826acb6111e19d340a45fb851576bed60": "32177000000000000000",
  "01e40521122530d9ac91113c06a0190b6d63850b": "1337000000000000000000",
  "9e20e5fd361eabcf63891f5b87b09268b8eb3793": "100000000000000000000",
  "69ff429074cb9b6c63bc914284bce5f0c8fbf7d0": "500000000000000000000",
  "0d3265d3e7bdb93d5e8e8b1ca47f210a793ecc8e": "200000000000000000000",
  "5b4ea16db6809b0352d4b6e81c3913f76a51bb32": "400000000000000000000",
  "d8fe088fffce948f5137ee23b01d959e84ac4223": "227942000000000000000",
  "7e4e9409704121d1d77997026ff06ea9b19a8b90": "2602600000000000000000",
  "96b434fe0657e42acc8212b6865139dede15979c": "4000000000000000000000",
  "22f004df8de9e6ebf523ccace457accb26f97281": "10000000000000000000000",
  "d8f9240c55cff035523c6d5bd300d370dc8f0c95": "285000000000000000000",
  "9d9e57fde30e5068c03e49848edce343b7028358": "1730000000000000000000",
  "317cf4a23cb191cdc56312c29d15e210b3b9b784": "144000000000000000000",
  "79f08e01ce0988e63c7f8f2908fade43c7f9f5c9": "18200000000000000000",
  "04e5f5bc7c923fd1e31735e72ef968fd67110c6e": "1611000000000000000000",
  "1ec4ec4b77bf19d091a868e6f49154180541f90e": "2000000000000000000000",
  "8737dae671823a8d5917e0157ace9c43468d946b": "1999944000000000000000",
  "f998ca3411730a6cd10e7455b0410fb0f6d3ff80": "2000000000000000000000",
  "6e2eab85dc89fe29dc0aa1853247dab43a523d56": "80000000000000000000",
  "72c083beadbdc227c5fb43881597e32e83c26056": "20000000000000000000000",
  "5902e44af769a87246a21e079c08bf36b06efeb3": "1000000000000000000000",
  "cc2d04f0a4017189b340ca77198641dcf6456b91": "3940000000000000000000",
  "bde4c73f969b89e9ceae66a2b51844480e038e9a": "1000000000000000000000",
  "adff0d1d0b97471e76d789d2e49c8a74f9bd54ff": "1880000000000000000000",
  "397cdb8c80c67950b18d654229610e93bfa6ee1a": "1172938000000000000000",
  "a3e051fb744aa3410c3b88f899f5d57f168df12d": "2955000000000000000000",
  "810db25675f45ea4c7f3177f37ce29e22d67999c": "200000000000000000000",
  "1e13ec51142cebb7a26083412c3ce35144ba56a1": "5000000000000000000000",
  "25bdfa3ee26f3849617b230062588a97e3cae701": "1000008000000000000000",
  "ae538c73c5b38d8d584d7ebdadefb15cabe48357": "999000000000000000000",
  "a2ecce2c49f72a0995a0bda57aacf1e9f001e22a": "4000000000000000000000",
  "7e24fbdad290175eb2df6d180a19b9a9f41370be": "1000000000000000000000",
  "e8cc43bc4f8acf39bff04ebfbf42aac06a328470": "400000000000000000000",
  "c2779771f0536d79a8708f6931abc44b3035e999": "20002000000000000000000",
  "ab27ba78c8e5e3daef31ad05aef0ff0325721e08": "468000000000000000000",
  "563cb8803c1d32a25b27b64114852bd04d9c20cd": "204400000000000000000",
  "08d4267feb15da9700f7ccc3c84a8918bf17cfde": "1790000000000000000000",
  "d1778c13fbd968bc083cb7d1024ffe1f49d02caa": "4020000000000000000000",
  "1796bcc97b8abc717f4b4a7c6b1036ea2182639f": "355242000000000000000",
  "beecd6af900c8b064afcc6073f2d85d59af11956": "2000000000000000000000",
  "045ed7f6d9ee9f252e073268db022c6326adfc5b": "100000000000000000000",
  "b88a37c27f78a617d5c091b7d5b73a3761e65f2a": "2000000000000000000000",
  "72fb49c29d23a18950c4b2dc0ddf410f532d6f53": "2000000000000000000000",
  "6ecaefa6fc3ee534626db02c6f85a0c395571e77": "600000000000000000000",
  "d1811c55976980f083901d8a0db269222dfb5cfe": "1550000000000000000000",
  "98855c7dfbee335344904a12c40c731795b13a54": "1069600000000000000000",
  "92a898d46f19719c38126a8a3c27867ae2cee596": "2000000000000000000000",
  "ca428863a5ca30369892d612183ef9fb1a04bcea": "1520000000000000000000",
  "797427e3dbf0feae7a2506f12df1dc40326e8505": "1000000000000000000000",
  "3d574fcf00fae1d98cc8bf9ddfa1b3953b9741bc": "1970000000000000000000",
  "28818e18b610001321b31df6fe7d2815cdadc9f5": "1000000000000000000000",
  "5f3e1e6739b0c62200e00a003691d9efb238d89f": "3000000000000000000000",
  "d9d370fec63576ab15b318bf9e58364dc2a3552a": "100000000000000000000",
  "b223bf1fbf80485ca2b5567d98db7bc3534dd669": "4000000000000000000000",
  "7b27d0d1f3dd3c140294d0488b783ebf4015277d": "400000000000000000000",
  "7930c2d9cbfa87f510f8f98777ff8a8448ca5629": "199955000000000000000",
  "820c19291196505b65059d9914b7090be1db87de": "140000000000000000000",
  "e545ee84ea48e564161e9482d59bcf406a602ca2": "1850000000000000000000",
  "af4cf41785161f571d0ca69c94f8021f41294eca": "9850000000000000000000",
  "7a4f9b850690c7c94600dbee0ca4b0a411e9c221": "1910000000000000000000",
  "ddab6b51a9030b40fb95cf0b748a059c2417bec7": "2000000000000000000000",
  "315ef2da620fd330d12ee55de5f329a696e0a968": "150000000000000000000",
  "4db1c43a0f834d7d0478b8960767ec1ac44c9aeb": "872870000000000000000",
  "2fef81478a4b2e8098db5ff387ba2153f4e22b79": "999000000000000000000",
  "6c6aa0d30b64721990b9504a863fa0bfb5e57da7": "2700000000000000000000",
  "33380c6fff5acd2651309629db9a71bf3f20c5ba": "16100000000000000000000",
  "4eebf1205d0cc20cee6c7f8ff3115f56d48fba26": "19400000000000000000",
  "03cc9d2d21f86b84ac8ceaf971dba78a90e62570": "1610000000000000000000",
  "728f9ab080157db3073156dbca1a169ef3179407": "500000000000000000000",
  "30ed11b77bc17e5e6694c8bc5b6e4798f68d9ca7": "143731500000000000000000",
  "f617b967b9bd485f7695d2ef51fb7792d898f500": "500000000000000000000",
  "c0cbad3ccdf654da22cbcf5c786597ca1955c115": "2000000000000000000000",
  "80522ddf944ec52e27d724ed4c93e1f7be6083d6": "200000000000000000000",
  "4e90ccb13258acaa9f4febc0a34292f95991e230": "15800000000000000000",
  "ff207308ced238a6c01ad0213ca9eb4465d42590": "1999944000000000000000",
  "35f2949cf78bc219bb4f01907cf3b4b3d3865482": "289800000000000000000",
  "68f525921dc11c329b754fbf3e529fc723c834cd": "1610000000000000000000",
  "81139bfdcca656c430203f72958c543b6580d40c": "2000000000000000000000",
  "9d511543b3d9dc60d47f09d49d01b6c498d82078": "11245000000000000000000",
  "084d103254759b343cb2b9c2d8ff9e1ac5f14596": "7600000000000000000000",
  "b323dcbf2eddc5382ee4bbbb201ca3931be8b438": "2000000000000000000000",
  "349d2c918fd09e2807318e66ce432909176bd50b": "1120000000000000000000",
  "b535f8db879fc67fec58824a5cbe6e5498aba692": "1910000000000000000000",
  "824074312806da4748434266ee002140e3819ac2": "1507000000000000000000",
  "e8ef100d7ce0895832f2678df72d4acf8c28b8e3": "500038000000000000000",
  "84af1b157342d54368260d17876230a534b54b0e": "985000000000000000000",
  "419a71a36c11d105e0f2aef5a3e598078e85c80b": "5000000000000000000000",
  "55af092f94ba6a79918b0cf939eab3f01b3f51c7": "149940000000000000000",
  "35a549e8fd6c368d6dcca6d2e7d18e4db95f5284": "499938000000000000000",
  "f0e2649c7e6a3f2c5dfe33bbfbd927ca3c350a58": "2000000000000000000000",
  "f4b759cc8a1c75f80849ebbcda878dc8f0d66de4": "400000000000000000000",
  "21846f2fdf5a41ed8df36e5ed8544df75988ece3": "1999944000000000000000",
  "229ff80bf5708009a9f739e0f8b560914016d5a6": "333333000000000000000",
  "da505537537ffb33c415fec64e69bae090c5f60f": "160000000000000000000",
  "b91d9e916cd40d193db60e79202778a0087716fc": "404800000000000000000",
  "bb6823a1bd819f13515538264a2de052b4442208": "25610000000000000000",
  "459393d63a063ef3721e16bd9fde45ee9dbd77fb": "1968818000000000000000",
  "95f62d0243ede61dad9a3165f53905270d54e242": "1610000000000000000000",
  "b0bb29a861ea1d424d45acd4bfc492fb8ed809b7": "80000000000000000000",
  "5e74ed80e9655788e1bb269752319667fe754e5a": "56000000000000000000",
  "a276b058cb98d88beedb67e543506c9a0d9470d8": "2668652000000000000000",
  "8ae9ef8c8a8adfa6ab798ab2cdc405082a1bbb70": "2000000000000000000000",
  "e5102c3b711b810344197419b1cd8a7059f13e32": "299999000000000000000",
  "c32038ca52aee19745be5c31fcdc54148bb2c4d0": "49984000000000000000",
  "13e321728c9c57628058e93fc866a032dd0bda90": "714580000000000000000",
  "c2bae4a233c2d85724f0dabebda0249d833e37d3": "5000000000000000000000",
  "10d32416722ca4e648630548ead91edd79c06aff": "100000000000000000000",
  "d5f07552b5c693c20067b378b809cee853b8f136": "505540000000000000000",
  "8668af868a1e98885f937f2615ded6751804eb2d": "20000000000000000000",
  "139d3531c9922ad56269f6309aa789fb2485f98c": "4000000000000000000000",
  "1d29c7aab42b2048d2b25225d498dba67a03fbb2": "200000000000000000000",
  "d35075ca61fe59d123969c36a82d1ab2d918aa38": "2674000000000000000000",
  "d6fc0446c6a8d40ae3551db7e701d1fa876e4a49": "2000000000000000000000",
  "fccd0d1ecee27addea95f6857aeec8c7a04b28ee": "10000000000000000000000",
  "c12cfb7b3df70fceca0ede263500e27873f8ed16": "1000000000000000000000",
  "d0db456178206f5c4430fe005063903c3d7a49a7": "706245000000000000000",
  "73cf80ae9688e1580e68e782cd0811f7aa494d2c": "7760000000000000000000",
  "d60651e393783423e5cc1bc5f889e44ef7ea243e": "398800000000000000000",
  "048a8970ea4145c64d5517b8de5b46d0595aad06": "20000000000000000000000",
  "dd9b485a3b1cd33a6a9c62f1e5bee92701856d25": "225073000000000000000",
  "5b287c7e734299e727626f93fb1187a60d5057fe": "101230000000000000000",
  "635c00fdf035bca15fa3610df3384e0fb79068b1": "9000000000000000000000",
  "630a913a9031c9492abd4c41dbb15054cfec4416": "5688000000000000000000",
  "af3614dcb68a36e45a4e911e62796247222d595b": "2259800000000000000000",
  "335e22025b7a77c3a074c78b8e3dfe071341946e": "10178744000000000000000",
  "f0e1dfa42adeac2f17f6fdf584c94862fd563393": "500000000000000000000",
  "1a9e702f385dcd105e8b9fa428eea21c57ff528a": "1400000000000000000000",
  "8ce4949d8a16542d423c17984e6739fa72ceb177": "24999975000000000000000",
  "5f29c9de765dde25852af07d33f2ce468fd20982": "2000000000000000000000",
  "dbf5f061a0f48e5e69618739a77d2ec19768d201": "152000000000000000000",
  "b247cf9c72ec482af3eaa759658f793d670a570c": "912000000000000000000",
  "99f4147ccc6bcb80cc842e69f6d00e30fa4133d9": "400000000000000000000",
  "ba6d31b9a261d640b5dea51ef2162c3109f1eba8": "5000000000000000000000",
  "f05ba8d7b68539d933300bc9289c3d9474d0419e": "126400000000000000000",
  "682e96276f518d31d7e56e30dfb009c1218201bd": "20000000000000000000",
  "0927220492194b2eda9fc4bbe38f25d681dfd36c": "6000000000000000000000",
  "a3c33afc8cb4704e23153de2049d35ae71332472": "799600000000000000000",
  "05c736d365aa37b5c0be9c12c8ad5cd903c32cf9": "6002000000000000000000",
  "d8eef4cf4beb01ee20d111748b61cb4d3f641a01": "2740000000000000000000",
  "16c1bf5b7dc9c83c179efacbcf2eb174e3561cb3": "1000000000000000000000",
  "d79db5ab43621a7a3da795e58929f3dd25af67d9": "1999944000000000000000",
  "28efae6356509edface89fc61a7fdcdb39eea8e5": "5348000000000000000000",
  "c55005a6c37e8ca7e543ce259973a3cace961a4a": "2000000000000000000000",
  "ab3d86bc82927e0cd421d146e07f919327cdf6f9": "1910000000000000000000",
  "b74ed2666001c16333cf7af59e4a3d4860363b9c": "193600000000000000000",
  "1899f69f653b05a5a6e81f480711d09bbf97588c": "1955000000000000000000",
  "27fc85a49cff90dbcfdadc9ddd40d6b9a2210a6c": "100000000000000000000",
  "cd1ed263fbf6f6f7b48aef8f733d329d4382c7c7": "18500000000000000000",
  "d97fe6f53f2a58f6d76d752adf74a8a2c18e9074": "309990000000000000000",
  "80da2fdda29a9e27f9e115975e69ae9cfbf3f27e": "200000000000000000000",
  "09146ea3885176f07782e1fe30dce3ce24c49e1f": "20000000000000000000",
  "393ff4255e5c658f2e7f10ecbd292572671bc2d2": "2000000000000000000000",
  "a390ca122b8501ee3e5e07a8ca4b419f7e4dae15": "100000000000000000000",
  "6d9193996b194617211106d1635eb26cc4b66c6c": "399640000000000000000",
  "999c49c174ca13bc836c1e0a92bff48b271543ca": "3280000000000000000000",
  "7421ce5be381738ddc83f02621974ff0686c79b8": "1632000000000000000000",
  "6be9030ee6e2fbc491aca3de4022d301772b7b7d": "26740000000000000000",
  "81bd75abd865e0c3f04a0b4fdbcb74d34082fbb7": "4000000000000000000000",
  "8bc1ff8714828bf286ff7e8a7709106548ed1b18": "10000000000000000000000",
  "a0aadbd9509722705f6d2358a5c79f37970f00f6": "200000000000000000000",
  "3d881433f04a7d0d27f84944e08a512da3555287": "1200000000000000000000",
  "cc1d6ead01aada3e8dc7b95dca25df26eefa639d": "2000000000000000000000",
  "35106ba94e8563d4b3cb3c5c692c10e604b7ced8": "2000000000000000000000",
  "4d8697af0fbf2ca36e8768f4af22133570685a60": "20000000000000000000",
  "1afcc585896cd0ede129ee2de5c19ea811540b64": "3231259000000000000000",
  "e5215631b14248d45a255296bed1fbfa0330ff35": "1310000000000000000000",
  "e3878f91ca86053fced5444686a330e09cc388fb": "194000000000000000000",
  "555df19390c16d01298772bae8bc3a1152199cbd": "200000000000000000000",
  "dc3dae59ed0fe18b58511e6fe2fb69b219689423": "100000000000000000000",
  "74648caac748dd135cd91ea14c28e1bd4d7ff6ae": "3100000000000000000000",
  "cf2e2ad635e9861ae95cb9bafcca036b5281f5ce": "35200000000000000000000",
  "14eec09bf03e352bd6ff1b1e876be664ceffd0cf": "20094000000000000000",
  "856e5ab3f64c9ab56b009393b01664fc0324050e": "1790000000000000000000",
  "632b9149d70178a7333634275e82d5953f27967b": "700000000000000000000",
  "2a39190a4fde83dfb3ddcb4c5fbb83ac6c49755c": "1000000000000000000000",
  "369ef761195f3a373e24ece6cd22520fe0b9e86e": "534933000000000000000",
  "16afa787fc9f94bdff6976b1a42f430a8bf6fb0f": "2000000000000000000000",
  "1b0b31afff4b6df3653a94d7c87978ae35f34aae": "354600000000000000000",
  "b4d82f2e69943f7de0f5f7743879406fac2e9cec": "40000000000000000000",
  "09d6cefd75b0c4b3f8f1d687a522c96123f1f539": "6000000000000000000000",
  "01577afd4e50890247c9b10d44af73229aec884f": "680000000000000000000",
  "a35606d51220ee7f2146d411582ee4ee4a45596e": "3996800000000000000000",
  "352e77c861696ef96ad54934f894aa8ea35151dd": "1000000000000000000000",
  "b87f5376c2de0b6cc3c179c06087aa473d6b4674": "1337000000000000000000",
  "5b49afcd75447838f6e7ceda8d21777d4fc1c3c0": "4000000000000000000000",
  "b884add88d83dc564ab8e0e02cbdb63919aea844": "2000000000000000000000",
  "5c312a56c784b122099b764d059c21ece95e84ca": "95000000000000000000",
  "4697baaf9ccb603fd30430689d435445e9c98bf5": "199600000000000000000",
  "c625f8c98d27a09a1bcabd5128b1c2a94856af30": "200000000000000000000",
  "19f5caf4c40e6908813c0745b0aea9586d9dd931": "664000000000000000000",
  "1e596a81b357c6f24970cc313df6dbdaabd0d09e": "2000000000000000000000",
  "c1631228efbf2a2e3a4092ee8900c639ed34fbc8": "955000000000000000000",
  "6f6cf20649a9e973177ac67dbadee4ebe5c7bdda": "5080000000000000000000",
  "5fa7bfe043886127d4011d8356a47e947963aca8": "1820000000000000000000",
  "6af8e55969682c715f48ad4fc0fbb67eb59795a3": "2000000000000000000000",
  "122f56122549d168a5c5e267f52662e5c5cce5c8": "185000000000000000000",
  "7713ab8037411c09ba687f6f9364f0d3239fac28": "10000000000000000000000",
  "31ccc616b3118268e75d9ab8996c8858ebd7f3c3": "399924000000000000000",
  "09c88f917e4d6ad473fa12e98ea3c4472a5ed6da": "10000000000000000000000",
  "e796fd4e839b4c95d7510fb7c5c72b83c6c3e3c7": "512200000000000000000",
  "a8285539869d88f8a961533755717d7eb65576ae": "200000000000000000000",
  "d929c65d69d5bbaea59762662ef418bc21ad924a": "1000000000000000000000",
  "f7418aa0e713d248228776b2e7434222ae75e3a5": "2000000000000000000000",
  "7f0b90a1fdd48f27b268feb38382e55ddb50ef0f": "940000000000000000000",
  "34a0431fff5ead927f3c69649616dc6e97945f6f": "400000000000000000000",
  "1b3cb81e51011b549d78bf720b0d924ac763a7c2": "560000000000000000000000",
  "155b3779bb6d56342e2fda817b5b2d81c7f41327": "50200000000000000000",
  "ecd486fc196791b92cf612d348614f9156488b7e": "12000000000000000000000",
  "82a8cbbfdff02b2e38ae4bbfca15f1f0e83b1aea": "84999000000000000000",
  "06b0c1e37f5a5ec4bbf50840548f9d3ac0288897": "4000098000000000000000",
  "e6d49f86c228f47367a35e886caacb271e539429": "412656000000000000000",
  "704a6eb41ba34f13addde7d2db7df04915c7a221": "1820000000000000000000",
  "745ccf2d819edbbddea8117b5c49ed3c2a066e93": "4000000000000000000000",
  "6d3b7836a2b9d899721a4d237b522385dce8dfcd": "1000070000000000000000",
  "856aa23c82d7215bec8d57f60ad75ef14fa35f44": "20000000000000000000000",
  "ea79057dabef5e64e7b44f7f18648e7e533718d2": "200000000000000000000",
  "9df057cd03a4e27e8e032f857985fd7f01adc8d7": "2000000000000000000000",
  "5f2f07d2d697e8c567fcfdfe020f49f360be2139": "2000000000000000000000",
  "5efbdfe5389999633c26605a5bfc2c1bb5959393": "69200000000000000000",
  "047e87c8f7d1fce3b01353a85862a948ac049f3e": "1490000000000000000000",
  "265383d68b52d034161bfab01ae1b047942fbc32": "21000600000000000000000",
  "760ff3354e0fde938d0fb5b82cef5ba15c3d2916": "10000000000000000000000",
  "bc46d537cf2edd403565bde733b2e34b215001bd": "20000000000000000000000",
  "ee58fb3db29070d0130188ce472be0a172b89055": "10021400000000000000000",
  "75abe5270f3a78ce007cf37f8fbc045d489b7bb1": "1999944000000000000000",
  "5fc6c11426b4a1eae7e51dd512ad1090c6f1a85b": "2730000000000000000000",
  "26cfffd052152bb3f957b478d5f98b233a7c2b92": "4000000000000000000000",
  "0a4a011995c681bc999fdd79754e9a324ae3b379": "41350300000000000000000",
  "6fa60df818a5446418b1bbd62826e0b9825e1318": "13200000000000000000000",
  "63d55ad99b9137fd1b20cc2b4f03d42cbaddf334": "400000000000000000000",
  "679b9a109930517e8999099ccf2a914c4c8dd934": "60000000000000000000",
  "3e83544f0082552572c782bee5d218f1ef064a9d": "100076000000000000000",
  "968b14648f018333687cd213fa640aec04ce6323": "1000000000000000000000",
  "427b462ab84e5091f48a46eb0cdc92ddcb26e078": "2000000000000000000000",
  "df8510793eee811c2dab1c93c6f4473f30fbef5b": "1000000000000000000000",
  "362fbcb10662370a068fc2652602a2577937cce6": "200000000000000000000",
  "5d83b21bd2712360436b67a597ee3378db3e7ae4": "2000000000000000000000",
  "5777441c83e03f0be8dd340bde636850847c620b": "10000000000000000000000",
  "c94a585203da7bbafd93e15884e660d4b1ead854": "7000000000000000000000",
  "35a08081799173e001cc5bd46a02406dc95d1787": "10000000000000000000000",
  "21d13f0c4024e967d9470791b50f22de3afecf1b": "4452210000000000000000",
  "fdfd6134c04a8ab7eb16f00643f8fed7daaaecb2": "400000000000000000000",
  "fd812bc69fb170ef57e2327e80affd14f8e4b6d2": "2000000000000000000000",
  "7148aef33261d8031fac3f7182ff35928daf54d9": "4100000000000000000000",
  "0b06390f2437b20ec4a3d3431b3279c6583e5ed7": "194000000000000000000",
  "4909b31998ead414b8fb0e846bd5cbde393935be": "4000000000000000000000",
  "b70dba9391682b4a364e77fe99256301a6c0bf1f": "200000000000000000000",
  "6b83bae7b565244558555bcf4ba8da2011891c17": "2000000000000000000000",
  "70a03549aa6168e97e88a508330a5a0bea74711a": "1337000000000000000000",
  "0fc9a0e34145fbfdd2c9d2a499b617d7a02969b9": "180000000000000000000",
  "2ddf40905769bcc426cb2c2938ffe077e1e89d98": "3000000000000000000000",
  "794b51c39e53d9e762b0613b829a44b472f4fff3": "667965000000000000000",
  "d062588171cf99bbeb58f126b870f9a3728d61ec": "4500000000000000000000",
  "8db185fe1b70a94a6a080e7e23a8bedc4acbf34b": "1400000000000000000000",
  "e73bfeada6f0fd016fbc843ebcf6e370a65be70c": "1970000000000000000000",
  "79ed10cf1f6db48206b50919b9b697081fbdaaf3": "2000000000000000000000",
  "276b0521b0e68b277df0bb32f3fd48326350bfb2": "50000000000000000000",
  "2e439348df8a4277b22a768457d1158e97c40904": "776970000000000000000",
  "6c25327f8dcbb2f45e561e86e35d8850e53ab059": "1103200000000000000000",
  "04d73896cf6593a691972a13a6e4871ff2c42b13": "2000000000000000000000",
  "b10fd2a647102f881f74c9fbc37da632949f2375": "40000000000000000000",
  "615f82365c5101f071e7d2cb6af14f7aad2c16c6": "20000000000000000000",
  "93aa8f92ebfff991fc055e906e651ac768d32bc8": "940000000000000000000",
  "0cbf8770f0d1082e5c20c5aead34e5fca9ae7ae2": "1000000000000000000000",
  "ffc9cc3094b041ad0e076f968a0de3b167255866": "432400000000000000000",
  "46531e8b1bde097fdf849d6d119885608a008df7": "200000000000000000000",
  "23cd2598a20e149ead2ad69379576ecedb60e38e": "2000000000000000000000",
  "85ca8bc6da2803d0725f5e1a456c89f9bc774e2f": "600000000000000000000",
  "c0725ec2bdc33a1d826071dea29d62d4385a8c25": "40740000000000000000000",
  "0e4765790352656bc656682c24fc5ef3e76a23c7": "46610000000000000000",
  "2ef9e465716acacfb8c8252fa8e7bc7969ebf6e4": "2760000000000000000000",
  "0ec5308b31282e218fc9e759d4fec5db3708cec4": "1001000000000000000000",
  "bf7701fc6225d5a17815438a8941d21ebc5d059d": "1880000000000000000000",
  "c489c83ffbb0252ac0dbe3521217630e0f491f14": "4000000000000000000000",
  "8eb51774af206b966b8909c45aa6722748802c0c": "500000000000000000000",
  "7b9226d46fe751940bc416a798b69ccf0dfab667": "4200000000000000000000",
  "8f660f8b2e4c7cc2b4ac9c47ed28508d5f8f8650": "20000000000000000000000",
  "9f19fac8a32437d80ac6837a0bb7841729f4972e": "650100000000000000000",
  "201864a8f784c2277b0b7c9ee734f7b377eab648": "4467000000000000000000",
  "a6101c961e8e1c15798ffcd0e3201d7786ec373a": "6000000000000000000000",
  "d4ff46203efa23064b1caf00516e28704a82a4f8": "1337000000000000000000",
  "aa136b47962bb8b4fb540db4ccf5fdd042ffb8cf": "500038000000000000000",
  "704ae21d762d6e1dde28c235d13104597236db1a": "2000000000000000000000",
  "f17a92e0361dbacecdc5de0d1894955af6a9b606": "2000000000000000000000",
  "8b48e19d39dd35b66e6e1bb6b9c657cb2cf59d04": "17844175000000000000000",
  "9ad47fdcf9cd942d28effd5b84115b31a658a13e": "3290000000000000000000",
  "df0d08617bd252a911df8bd41a39b83ddf809673": "10000000000000000000000",
  "4c666b86f1c5ee8ca41285f5bde4f79052081406": "500000000000000000000",
  "88dec5bd3f4eba2d18b8aacefa7b721548c319ba": "1370000000000000000000",
  "9f9fe0c95f10fee87af1af207236c8f3614ef02f": "6000000000000000000000",
  "f7d0d310acea18406138baaabbfe0571e80de85f": "1337000000000000000000",
  "9569c63a9284a805626db3a32e9d236393476151": "1970000000000000000000",
  "5d5c2c1099bbeefb267e74b58880b444d94449e0": "253574000000000000000",
  "8c6ae7a05a1de57582ae2768204276c0ff47ed03": "208000000000000000000000",
  "432d884bd69db1acc0d89c64ade4cb4fc3a88b7a": "2483000000000000000000",
  "672cbca8440a8577097b19aff593a2ad9d28a756": "80000000000000000000",
  "19df9445a81c1b3d804aeaeb6f6e204e4236663f": "37387000000000000000",
  "1cb5f33b4d488936d13e3161da33a1da7df70d1b": "200000000000000000000",
  "df60f18c812a11ed4e2776e7a80ecf5e5305b3d6": "900000000000000000000",
  "c99a9cd6c9c1be3534eecd92ecc22f5c38e9515b": "4821030000000000000000",
  "00c40fe2095423509b9fd9b754323158af2310f3": "0",
  "da4a5f557f3bab390a92f49b9b900af30c46ae80": "10000000000000000000000",
  "f36df02fbd89607347afce2969b9c4236a58a506": "2000000000000000000000",
  "c549df83c6f65eec0f1dc9a0934a5c5f3a50fd88": "2910000000000000000000",
  "9f662e95274121f177566e636d23964cf1fd686f": "2000000000000000000000",
  "5a267331facb262daaecd9dd63a9700c5f5259df": "100000000000000000000",
  "117d9aa3c4d13bee12c7500f09f5dd1c66c46504": "206000000000000000000",
  "1b4d07acd38183a61bb2783d2b7b178dd502ac8d": "200000000000000000000",
  "3c0c3defac9cea7acc319a96c30b8e1fedab4574": "1940000000000000000000",
  "e4dc22ed595bf0a337c01e03cc6be744255fc9e8": "191000000000000000000",
  "8f067c7c1bbd57780b7b9eeb9ec0032f90d0dcf9": "20000000000000000000000",
  "40e2440ae142c880366a12c6d4102f4b8434b62a": "1000000000000000000000",
  "f9ece022bccd2c92346911e79dd50303c01e0188": "1000000000000000000000",
  "f70328ef97625fe745faa49ee0f9d4aa3b0dfb69": "1000000000000000000000",
  "b6aacb8cb30bab2ae4a2424626e6e12b02d04605": "8000000000000000000000",
  "154459fa2f21318e3434449789d826cdc1570ce5": "2000000000000000000000",
  "684a44c069339d08e19a75668bdba303be855332": "70000000000000000000000",
  "9fe501aa57ead79278937cd6308c5cfa7a5629fe": "50003000000000000000",
  "3e45bd55db9060eced923bb9cb733cb3573fb531": "1640000000000000000000",
  "9c9f3b8a811b21f3ff3fe20fe970051ce66a824f": "1157740000000000000000",
  "e99aece90541cae224b87da673965e0aeb296afd": "920000000000000000000",
  "2f6dce1330c59ef921602154572d4d4bacbd048a": "1000000000000000000000",
  "6a6353b971589f18f2955cba28abe8acce6a5761": "3000000000000000000000",
  "98c10ebf2c4f97cba5a1ab3f2aafe1cac423f8cb": "300000000000000000000",
  "8077c3e4c445586e094ce102937fa05b737b568c": "100000000000000000000",
  "13371f92a56ea8381e43059a95128bdc4d43c5a6": "1000000000000000000000",
  "35a6885083c899dabbf530ed6c12f4dd3a204cf5": "200000000000000000000",
  "36b2c85e3aeeebb70d63c4a4730ce2e8e88a3624": "10000000000000000000000",
  "5ce44068b8f4a3fe799e6a8311dbfdeda29dee0e": "2000000000000000000000",
  "6fa6388d402b30afe59934c3b9e13d1186476018": "670000000000000000000",
  "8251358ca4e060ddb559ca58bc0bddbeb4070203": "2000000000000000000000",
  "17e86f3b5b30c0ba59f2b2e858425ba89f0a10b0": "2000000000000000000000",
  "298ec76b440d8807b3f78b5f90979bee42ed43db": "30000000000000000000000",
  "ce4b065dbcb23047203262fb48c1188364977470": "500000000000000000000",
  "c8e2adeb545e499d982c0c117363ceb489c5b11f": "985000000000000000000",
  "9928ff715afc3a2b60f8eb4cc4ba4ee8dab6e59d": "440000000000000000000",
  "c76130c73cb9210238025c9df95d0be54ac67fbe": "1500000000000000000000",
  "72d03d4dfab3500cf89b86866f15d4528e14a195": "4488000000000000000000",
  "d193e583d6070563e7b862b9614a47e99489f3e5": "999972000000000000000",
  "4df140ba796585dd5489315bca4bba680adbb818": "2674000000000000000000",
  "009eef0a0886056e3f69211853b9b7457f3782e4": "3000512000000000000000",
  "6e255b700ae7138a4bacf22888a9e2c00a285eec": "4000000000000000000000",
  "aa47a4ffc979363232c99b99fada0f2734b0aeee": "8121800000000000000000",
  "9d069197d1de50045a186f5ec744ac40e8af91c6": "2000000000000000000000",
  "b514882c979bb642a80dd38754d5b8c8296d9a07": "955000000000000000000",
  "17c0478657e1d3d17aaa331dd429cecf91f8ae5d": "999942000000000000000",
  "5f9616c47b4a67f406b95a14fe6fc268396f1721": "200000000000000000000",
  "f70a998a717b338d1dd99854409b1a338deea4b0": "2000000000000000000000",
  "d1ee905957fe7cc70ec8f2868b43fe47b13febff": "44000000000000000000",
  "fc018a690ad6746dbe3acf9712ddca52b6250039": "10000000000000000000000",
  "5118557d600d05c2fcbf3806ffbd93d02025d730": "11360000000000000000000",
  "1ef5c9c73650cfbbde5c885531d427c7c3fe5544": "6000000000000000000000",
  "d1a396dcdab2c7494130b3fd307820340dfd8c1f": "17952000000000000000",
  "2d8e061892a5dcce21966ae1bb0788fd3e8ba059": "250066000000000000000",
  "8834b2453471f324fb26be5b25166b5b5726025d": "573000000000000000000",
  "14f221159518783bc4a706676fc4f3c5ee405829": "200000000000000000000",
  "c056d4bd6bf3cbacac65f8f5a0e3980b852740ae": "100000000000000000000",
  "560536794a9e2b0049d10233c41adc5f418a264a": "1000000000000000000000",
  "bc9e0ec6788f7df4c7fc210aacd220c27e45c910": "500000000000000000000",
  "54bcb8e7f73cda3d73f4d38b2d0847e600ba0df8": "1078000000000000000000",
  "4361d4846fafb377b6c0ee49a596a78ddf3516a3": "3580000000000000000000",
  "41c3c2367534d13ba2b33f185cdbe6ac43c2fa31": "4000000000000000000000",
  "5dc6f45fef26b06e3302313f884daf48e2746fb9": "500000000000000000000",
  "ad414d29cb7ee973fec54e22a388491786cf5402": "14000000000000000000000",
  "802dc3c4ff2d7d925ee2859f4a06d7ba60f1308c": "98040000000000000000",
  "2aed2ce531c056b0097efc3c6de10c4762004ed9": "10430000000000000000000",
  "39782ffe06ac78822a3c3a8afe305e50a56188ce": "10000000000000000000000",
  "ec73833de4b810bb027810fc8f69f544e83c12d1": "1000000000000000000000",
  "8d51a4cc62011322c696fd725b9fb8f53feaaa07": "1000000000000000000000",
  "29298ccbdff689f87fe41aa6e98fdfb53deaf37a": "19800000000000000000000",
  "827531a6c5817ae35f82b00b9754fcf74c55e232": "3600000000000000000000",
  "9c581a60b61028d934167929b22d70b313c34fd0": "50000000000000000000000",
  "0a077db13ffeb09484c217709d5886b8bf9c5a8b": "4000000000000000000000",
  "07b7a57033f8f11330e4665e185d234e83ec140b": "4325683000000000000000",
  "17f523f117bc9fe978aa481eb4f5561711371bc8": "1999884000000000000000",
  "de42fcd24ce4239383304367595f068f0c610740": "45120000000000000000",
  "2a46d353777176ff8e83ffa8001f4f70f9733aa5": "106000000000000000000",
  "92e4392816e5f2ef5fb65837cec2c2325cc64922": "10000000000000000000000",
  "9a3da65023a13020d22145cfc18bab10bd19ce4e": "456516000000000000000",
  "1a085d43ec92414ea27b914fe767b6d46b1eef44": "29550000000000000000000",
  "3b2367f8494b5fe18d683c055d89999c9f3d1b34": "10000000000000000000000",
  "84244fc95a6957ed7c1504e49f30b8c35eca4b79": "2000000000000000000000",
  "5e031b0a724471d476f3bcd2eb078338bf67fbef": "18200000000000000000",
  "97e5cc6127c4f885be02f44b42d1c8b0ac91e493": "200000000000000000000",
  "eb1cea7b45d1bd4d0e2a007bd3bfb354759e2c16": "198000000000000000000",
  "72feaf124579523954645b7fafff0378d1c8242e": "1000000000000000000000",
  "8d07d42d831c2d7c838aa1872b3ad5d277176823": "349200000000000000000",
  "9637dc12723d9c78588542eab082664f3f038d9d": "1000000000000000000000",
  "e84b55b525f1039e744b918cb3332492e45eca7a": "200000000000000000000",
  "b1d6b01b94d854fe8b374aa65e895cf22aa2560e": "940000000000000000000",
  "8161d940c3760100b9080529f8a60325030f6edc": "300000000000000000000",
  "d30ee9a12b4d68abace6baca9ad7bf5cd1faf91c": "1499936000000000000000",
  "057949e1ca0570469e4ce3c690ae613a6b01c559": "200000000000000000000",
  "4bf8e26f4c2790da6533a2ac9abac3c69a199433": "200000000000000000000",
  "36fec62c2c425e219b18448ad757009d8c54026f": "400000000000000000000",
  "77bfe93ccda750847e41a1affee6b2da96e7214e": "300000000000000000000",
  "cc48414d2ac4d42a5962f29eee4497092f431352": "161000000000000000000",
  "ddbddd1bbd38ffade0305d30f02028d92e9f3aa8": "2000000000000000000000",
  "30c01142907acb1565f70438b9980ae731818738": "2000000000000000000000",
  "cffc49c1787eebb2b56cabe92404b636147d4558": "5679305000000000000000",
  "f99eeece39fa7ef5076d855061384009792cf2e0": "500000000000000000000",
  "e9b6a790009bc16642c8d820b7cde0e9fd16d8f5": "3640000000000000000000",
  "03b41b51f41df20dd279bae18c12775f77ad771c": "1000000000000000000000",
  "787d313fd36b053eeeaedbce74b9fb0678333289": "27160000000000000000000",
  "35d2970f49dcc81ea9ee707e9c8a0ab2a8bb7463": "1440000000000000000000",
  "4c0aca508b3caf5ee028bc707dd1e800b838f453": "18200000000000000000",
  "514632efbd642c04de6ca342315d40dd90a2dba6": "2674000000000000000000",
  "36810ff9d213a271eda2b8aa798be654fa4bbe06": "2000000000000000000000",
  "0c088006c64b30c4ddafbc36cb5f05469eb62834": "2000000000000000000000",
  "568df31856699bb5acfc1fe1d680df9960ca4359": "1379999000000000000000",
  "d48e3f9357e303513841b3f84bda83fc89727587": "1000000000000000000000",
  "953ef652e7b769f53d6e786a58952fa93ee6abe7": "2860000000000000000000",
  "7c60a05f7a4a5f8cf2784391362e755a8341ef59": "1892300000000000000000",
  "7a6b26f438d9a352449155b8876cbd17c9d99b64": "6000000000000000000000",
  "68f719ae342bd7fef18a05cbb02f705ad38ed5b2": "1050000000000000000000",
  "45ca8d956608f9e00a2f9974028640888465668f": "2000000000000000000000",
  "3eaf316b87615d88f7adc77c58e712ed4d77966b": "100141000000000000000",
  "1f0412bfedcd964e837d092c71a5fcbaf30126e2": "20000000000000000000",
  "7471f72eeb300624eb282eab4d03723c649b1b58": "8000000000000000000000",
  "9bf71f7fb537ac54f4e514947fa7ff6728f16d2f": "33400000000000000000",
  "1098c774c20ca1daac5ddb620365316d353f109c": "100000000000000000000",
  "7dd8d7a1a34fa1f8e73ccb005fc2a03a15b8229c": "200000000000000000000",
  "0151fa5d17a2dce2d7f1eb39ef7fe2ad213d5d89": "4000000000000000000000",
  "ad6628352ed3390bafa86d923e56014cfcb360f4": "2000000000000000000000",
  "02af2459a93d0b3f4d062636236cd4b29e3bcecf": "1910000000000000000000",
  "ace2abb63b0604409fbde3e716d2876d44e8e5dd": "152000000000000000000",
  "e710dcd09b8101f9437bd97db90a73ef993d0bf4": "386100000000000000000",
  "d43ee438d83de9a37562bb4e286cb1bd19f4964d": "1000000000000000000000",
  "ea3779d14a13f6c78566bcde403591413a6239db": "197000000000000000000000",
  "6704f169e0d0b36b57bbc39f3c45437b5ee3d28d": "394000000000000000000",
  "5584423050e3c2051f0bbd8f44bd6dbc27ecb62c": "3000000000000000000000",
  "2f315d9016e8ee5f536681202f9084b032544d4d": "1037400000000000000000",
  "e1b63201fae1f129f95c7a116bd9dde5159c6cda": "22837462000000000000000",
  "2bbe62eac80ca7f4d6fdee7e7d8e28b63acf770e": "2396000000000000000000",
  "38da1ba2de9e2c954b092dd9d81204fd016ba016": "10156000000000000000000",
  "8a86e4a51c013b1fb4c76bcf30667c78d52eedef": "2000000000000000000000",
  "8f717ec1552f4c440084fba1154a81dc003ebdc0": "10000000000000000000000",
  "c760971bbc181c6a7cf77441f24247d19ce9b4cf": "2000000000000000000000",
  "7f150afb1a77c2b45928c268c1e9bdb4641d47d8": "2000000000000000000000",
  "1ea334b5750807ea74aac5ab8694ec5f28aa77cf": "492500000000000000000",
  "2afb058c3d31032b353bf24f09ae20d54de57dbe": "1100000000000000000000",
  "caef027b1ab504c73f41f2a10979b474f97e309f": "200000000000000000000",
  "5dd112f368c0e6ceff77a9df02a5481651a02fb7": "169800000000000000000",
  "bd93e550403e2a06113ed4c3fba1a8913b19407e": "2000000000000000000000",
  "500c16352e901d48ba8d04e2c767121772790b02": "30239000000000000000",
  "d2a80327cbe55c4c7bd51ff9dde4ca648f9eb3f8": "50000000000000000000",
  "355ccfe0e77d557b971be1a558bc02df9eee0594": "1759120000000000000000",
  "5aed0e6cfe95f9d680c76472a81a2b680a7f93e2": "197000000000000000000",
  "f56442f60e21691395d0bffaa9194dcaff12e2b7": "260000000000000000000",
  "7db9eacc52e429dc83b461c5f4d86010e5383a28": "1000000000000000000000",
  "4b984ef26c576e815a2eaed2f5177f07dbb1c476": "1560000000000000000000",
  "9846648836a307a057184fd51f628a5f8c12427c": "19100000000000000000000",
  "4af0db077bb9ba5e443e21e148e59f379105c592": "600000000000000000000",
  "e96e2d3813efd1165f12f602f97f4a62909d3c66": "2300000000000000000000",
  "30e789b3d2465e946e6210fa5b35de4e8c93085f": "2000000000000000000000",
  "97f99b6ba31346cd98a9fe4c308f87c5a58c5151": "6000000000000000000000",
  "595e23d788a2d4bb85a15df7136d264a635511b3": "3940000000000000000000",
  "2f61efa5819d705f2b1e4ee754aeb8a819506a75": "1460000000000000000000",
  "3554947b7b947b0040da52ca180925c6d3b88ffe": "66850000000000000000",
  "8feffadb387a1547fb284da9b8147f3e7c6dc6da": "837200000000000000000",
  "258939bbf00c9de9af5338f5d714abf6d0c1c671": "1550000000000000000000",
  "5b333696e04cca1692e71986579c920d6b2916f9": "500000000000000000000",
  "5381448503c0c702542b1de7cc5fb5f6ab1cf6a5": "8000000000000000000000",
  "7e81f6449a03374191f3b7cb05d938b72e090dff": "100000000000000000000",
  "4ef1c214633ad9c0703b4e2374a2e33e3e429291": "1337000000000000000000",
  "fed8476d10d584b38bfa6737600ef19d35c41ed8": "1820000000000000000000",
  "1a95c9b7546b5d1786c3858fb1236446bc0ca4ce": "1970000000000000000000",
  "3b07db5a357f5af2484cbc9d77d73b1fd0519fc7": "500000000000000000000",
  "5f68a24c7eb4117667737b33393fb3c2148a53b6": "51800000000000000000",
  "d8f665fd8cd5c2bcc6ddc0a8ae521e4dc6aa6060": "1700000000000000000000",
  "d66acc0d11b689cea6d9ea5ff4014c224a5dc7c4": "18200000000000000000",
  "6e72b2a1186a8e2916543b1cb36a68870ea5d197": "186000000000000000000",
  "5102a4a42077e11c58df4773e3ac944623a66d9f": "2000325000000000000000",
  "72480bede81ad96423f2228b5c61be44fb523100": "6400000000000000000000",
  "e076db30ab486f79194ebbc45d8fab9a9242f654": "4840000000000000000000",
  "8ceea15eec3bdad8023f98ecf25b2b8fef27db29": "2000000000000000000000",
  "40652360d6716dc55cf9aab21f3482f816cc2cbd": "10000000000000000000000",
  "13e02fb448d6c84ae17db310ad286d056160da95": "2000000000000000000000",
  "d6598b1386e93c5ccb9602ff4bbbecdbd3701dc4": "224096000000000000000",
  "d5ea472cb9466018110af00c37495b5c2c713112": "4997800000000000000000",
  "bb75cb5051a0b0944b4673ca752a97037f7c8c15": "200000000000000000000",
  "8af626a5f327d7506589eeb7010ff9c9446020d2": "1400000000000000000000",
  "318c76ecfd8af68d70555352e1f601e35988042d": "501600000000000000000",
  "5c3d19441d196cb443662020fcad7fbb79b29e78": "14300000000000000000",
  "27101a0f56d39a88c5a84f9b324cdde33e5cb68c": "2000000000000000000000",
  "e229e746a83f2ce253b0b03eb1472411b57e5700": "5730000000000000000000",
  "604cdf18628dbfa8329194d478dd5201eecc4be7": "23000000000000000000",
  "657473774f63ac3d6279fd0743d5790c4f161503": "200000000000000000000",
  "1ddefefd35ab8f658b2471e54790bc17af98dea4": "1000000000000000000000",
  "ac3900298dd14d7cc96d4abb428da1bae213ffed": "24730250000000000000000",
  "944f07b96f90c5f0d7c0c580533149f3f585a078": "74000000000000000000",
  "232c6d03b5b6e6711efff190e49c28eef36c82b0": "1337000000000000000000",
  "c87c77e3c24adecdcd1038a38b56e18dead3b702": "8800000000000000000000",
  "c4b6e5f09cc1b90df07803ce3d4d13766a9c46f4": "6000000000000000000000",
  "d44334b4e23a169a0c16bd21e866bba52d970587": "2600000000000000000000",
  "7757a4b9cc3d0247ccaaeb9909a0e56e1dd6dcc2": "20000000000000000000",
  "cf694081c76d18c64ca71382be5cd63b3cb476f8": "1000000000000000000000",
  "133e4f15e1e39c53435930aaedf3e0fe56fde843": "20000000000000000000",
  "f067fb10dfb293e998abe564c055e3348f9fbf1e": "2000000000000000000000",
  "94449c01b32a7fa55af8104f42cdd844aa8cbc40": "16548000000000000000000",
  "0e2094ac1654a46ba1c4d3a40bb8c17da7f39688": "358000000000000000000",
  "738ca94db7ce8be1c3056cd6988eb376359f3353": "25500000000000000000000",
  "0cfb172335b16c87d519cd1475530d20577f5e0e": "100000000000000000000000",
  "3cb561ce86424b359891e364ec925ffeff277df7": "200000000000000000000",
  "5f981039fcf50225e2adf762752112d1cc26b6e3": "499954000000000000000",
  "b43657a50eecbc3077e005d8f8d94f377876bad4": "35460000000000000000",
  "d07e511864b1cf9969e3560602829e32fc4e71f5": "50000000000000000000",
  "11306c7d57588637780fc9fde8e98ecb008f0164": "1999944000000000000000",
  "45ca9862003b4e40a3171fb5cafa9028cac8de19": "13790000000000000000000",
  "231d94155dbcfe2a93a319b6171f63b20bd2b6fa": "3819952000000000000000",
  "e7533e270cc61fa164ac1553455c105d04887e14": "121550000000000000000",
  "070d5d364cb7bbf822fc2ca91a35bdd441b215d5": "2000000000000000000000",
  "d475477fa56390d33017518d6711027f05f28dbf": "1975032000000000000000",
  "cea34a4dd93dd9aefd399002a97d997a1b4b89cd": "1500000000000000000000",
  "560becdf52b71f3d8827d927610f1a980f33716f": "429413000000000000000",
  "f632adff490da4b72d1236d04b510f74d2faa3cd": "1400000000000000000000",
  "2fdd9b79df8df530ad63c20e62af431ae99216b8": "21000000000000000000",
  "535201a0a1d73422801f55ded4dfaee4fbaa6e3b": "39641000000000000000",
  "409d5a962edeeebea178018c0f38b9cdb213f289": "20000000000000000000",
  "9d911f3682f32fe0792e9fb6ff3cfc47f589fca5": "4000000000000000000000",
  "9f7a0392f857732e3004a375e6b1068d49d83031": "2000000000000000000000",
  "6a04f5d53fc0f515be942b8f12a9cb7ab0f39778": "3129800000000000000000",
  "be478e8e3dde6bd403bb2d1c657c4310ee192723": "492500000000000000000",
  "007622d84a234bb8b078230fcf84b67ae9a8acae": "698800000000000000000",
  "9475c510ec9a26979247744c3d8c3b0e0b5f44d3": "10000000000000000000000",
  "df47a8ef95f2f49f8e6f58184154145d11f72797": "1910000000000000000000",
  "13ce332dff65a6ab933897588aa23e000980fa82": "258400000000000000000",
  "9c4bbcd5f1644a6f075824ddfe85c571d6abf69c": "1800000000000000000000",
  "d42b20bd0311608b66f8a6d15b2a95e6de27c5bf": "2000000000000000000000",
  "a4dd59ab5e517d398e49fa537f899fed4c15e95d": "20000000000000000000000",
  "1a8a5ce414de9cd172937e37f2d59cff71ce57a0": "10000000000000000000000",
  "55c564664166a1edf3913e0169f1cd451fdb5d0c": "2399800000000000000000",
  "58ae2ddc5f4c8ada97e06c0086171767c423f5d7": "1610000000000000000000",
  "fb79abdb925c55b9f98efeef64cfc9eb61f51bb1": "1794000000000000000000",
  "e7a42f59fee074e4fb13ea9e57ecf1cc48282249": "20000000000000000000000",
  "07e2b4cdeed9d087b12e556d9e770c13c099615f": "668500000000000000000",
  "68473b7a7d965904bedba556dfbc17136cd5d434": "100000000000000000000",
  "6c5c3a54cda7c2f118edba434ed81e6ebb11dd7a": "200000000000000000000",
  "24c117d1d2b3a97ab11a4679c99a774a9eade8d1": "1000000000000000000000",
  "f68c5e33fa97139df5b2e63886ce34ebf3e4979c": "3320000000000000000000",
  "bd7419dc2a090a46e2873d7de6eaaad59e19c479": "6802000000000000000000",
  "1a0a1ddfb031e5c8cc1d46cf05842d50fddc7130": "1000000000000000000000",
  "2b3a68db6b0cae8a7c7a476bdfcfbd6205e10687": "2400000000000000000000",
  "426d15f407a01135b13a6b72f8f2520b3531e302": "20000000000000000000",
  "0394b90fadb8604f86f43fc1e35d3124b32a5989": "764000000000000000000",
  "7412c9bc30b4df439f023100e63924066afd53af": "500000000000000000000",
  "80e7b3205230a566a1f061d922819bb4d4d2a0e1": "14000000000000000000000",
  "ff4fc66069046c525658c337a917f2d4b832b409": "2000000000000000000000",
  "f5061ee2e5ee26b815503677130e1de07a52db07": "100000000000000000000",
  "49793463e1681083d6abd6e725d5bba745dccde8": "545974000000000000000",
  "23551f56975fe92b31fa469c49ea66ee6662f41e": "1910000000000000000000",
  "fad96ab6ac768ad5099452ac4777bd1a47edc48f": "100000000000000000000",
  "2a746cd44027af3ebd37c378c85ef7f754ab5f28": "394000000000000000000",
  "b8d389e624a3a7aebce4d3e5dbdf6cdc29932aed": "200000000000000000000",
  "7b761feb7fcfa7ded1f0eb058f4a600bf3a708cb": "4600000000000000000000",
  "5435c6c1793317d32ce13bba4c4ffeb973b78adc": "250070000000000000000",
  "dd04eee74e0bf30c3f8d6c2c7f52e0519210df93": "80000000000000000000",
  "4331ab3747d35720a9d8ca25165cd285acd4bda8": "2000000000000000000000",
  "b84c8b9fd33ece00af9199f3cf5fe0cce28cd14a": "3820000000000000000000",
  "393f783b5cdb86221bf0294fb714959c7b45899c": "5910000000000000000000",
  "259ec4d265f3ab536b7c70fa97aca142692c13fc": "20400000000000000000",
  "5d2f7f0b04ba4be161e19cb6f112ce7a5e7d7fe4": "35200000000000000000",
  "d54ba2d85681dc130e5b9b02c4e8c851391fd9b9": "3940000000000000000000",
  "5cd8af60de65f24dc3ce5730ba92653022dc5963": "1790000000000000000000",
  "3b42a66d979f582834747a8b60428e9b4eeccd23": "620400000000000000000",
  "4b19eb0c354bc1393960eb06063b83926f0d67b2": "29000000000000000000",
  "8cf3546fd1cda33d58845fc8fcfecabca7c5642a": "574027000000000000000",
  "113612bc3ba0ee4898b49dd20233905f2f458f62": "14000000000000000000000",
  "1f2afc0aed11bfc71e77a907657b36ea76e3fb99": "4000000000000000000000",
  "03714b41d2a6f751008ef8dd4d2b29aecab8f36e": "6000000000000000000000",
  "25721c87b0dc21377c7200e524b14a22f0af69fb": "4000000000000000000000",
  "335858f749f169cabcfe52b796e3c11ec47ea3c2": "200000000000000000000",
  "52fb46ac5d00c3518b2c3a1c177d442f8165555f": "1500000000000000000000",
  "7a8c89c014509d56d7b68130668ff6a3ecec7370": "300000000000000000000",
  "7d5d2f73949dadda0856b206989df0078d51a1e5": "10560000000000000000000",
  "be538246dd4e6f0c20bf5ad1373c3b463a131e86": "200000000000000000000",
  "62680a15f8ccb8bdc02f7360c25ad8cfb57b8ccd": "1000000000000000000000",
  "aa0ca3737337178a0caac3099c584b056c56301c": "880000000000000000000",
  "1d341fa5a3a1bd051f7db807b6db2fc7ba4f9b45": "18200000000000000000",
  "6463f715d594a1a4ace4bb9c3b288a74decf294d": "1970000000000000000000",
  "e00d153b10369143f97f54b8d4ca229eb3e8f324": "152000000000000000000",
  "8d0b9ea53fd263415eac11391f7ce9123c447062": "2000000000000000000000",
  "cacb675e0996235404efafbb2ecb8152271b55e0": "700000000000000000000",
  "b615e940143eb57f875893bc98a61b3d618c1e8c": "20000000000000000000",
  "606f177121f7855c21a5062330c8762264a97b31": "4000000000000000000000",
  "e3925509c8d0b2a6738c5f6a72f35314491248ce": "1012961000000000000000",
  "3f08d9ad894f813e8e2148c160d24b353a8e74b0": "60000000000000000000000",
  "40f4f4c06c732cd35b119b893b127e7d9d0771e4": "10000000000000000000000",
  "1406854d149e081ac09cb4ca560da463f3123059": "1337000000000000000000",
  "ecf05d07ea026e7ebf4941002335baf2fed0f002": "200000000000000000000",
  "9a990b8aeb588d7ee7ec2ed8c2e64f7382a9fee2": "33518000000000000000",
  "a2e0683a805de6a05edb2ffbb5e96f0570b637c3": "20000000000000000000",
  "fba5486d53c6e240494241abf87e43c7600d413a": "1987592000000000000000",
  "d81bd54ba2c44a6f6beb1561d68b80b5444e6dc6": "1163806000000000000000",
  "5298ab182a19359ffcecafd7d1b5fa212dede6dd": "20000000000000000000",
  "d1acb5adc1183973258d6b8524ffa28ffeb23de3": "4000000000000000000000",
  "4e7aa67e12183ef9d7468ea28ad239c2eef71b76": "4925000000000000000000",
  "509a20bc48e72be1cdaf9569c711e8648d957334": "2000000000000000000000",
  "949f84f0b1d7c4a7cf49ee7f8b2c4a134de32878": "685000000000000000000",
  "edbac9527b54d6df7ae2e000cca3613ba015cae3": "1970000000000000000000",
  "c697b70477cab42e2b8b266681f4ae7375bb2541": "5577200000000000000000",
  "86c934e38e53be3b33f274d0539cfca159a4d0d1": "970000000000000000000",
  "0877eeaeab78d5c00e83c32b2d98fa79ad51482f": "439420000000000000000",
  "5e11ecf69d551d7f4f84df128046b3a13240a328": "20000000000000000000",
  "43ff8853e98ed8406b95000ada848362d6a0392a": "22100000000000000000000",
  "f11cf5d363746fee6864d3ca336dd80679bb87ae": "40000000000000000000000",
  "fb223c1e22eac1269b32ee156a5385922ed36fb8": "2000000000000000000000",
  "4e6600806289454acda330a2a3556010dfacade6": "6000000000000000000000",
  "cfe2caaf3cec97061d0939748739bffe684ae91f": "10000000000000000000000",
  "adeb52b604e5f77faaac88275b8d6b49e9f9f97f": "2089268000000000000000",
  "d53c567f0c3ff2e08b7d59e2b5c73485437fc58d": "600000000000000000000",
  "fbf75933e01b75b154ef0669076be87f62dffae1": "78000000000000000000000",
  "7dfd2962b575bcbeee97f49142d63c30ab009f66": "4000000000000000000000",
  "df6485c4297ac152b289b19dde32c77ec417f47d": "1000000000000000000000",
  "ffb974673367f5c07be5fd270dc4b7138b074d57": "2470407000000000000000",
  "f7d7af204c56f31fd94398e40df1964bd8bf123c": "150011000000000000000",
  "4506fe19fa4b006baa3984529d8516db2b2b50ab": "2000000000000000000000",
  "f4dc7ba85480bbb3f535c09568aaa3af6f3721c6": "7214962000000000000000",
  "d171c3f2258aef35e599c7da1aa07300234da9a6": "2000000000000000000000",
  "33581cee233088c0860d944e0cf1ceabb8261c2e": "13370000000000000000",
  "1c2e3607e127caca0fbd5c5948adad7dd830b285": "19700000000000000000000",
  "fd7ede8f5240a06541eb699d782c2f9afb2170f6": "1337000000000000000000",
  "368c5414b56b8455171fbf076220c1cba4b5ca31": "557940000000000000000",
  "3e8745ba322f5fd6cb50124ec46688c7a69a7fae": "4925000000000000000000",
  "76506eb4a780c951c74a06b03d3b8362f0999d71": "500000000000000000000",
  "96d62dfd46087f62409d93dd606188e70e381257": "2000000000000000000000",
  "37eada93c475ded2f7e15e7787d400470fa52062": "200000000000000000000",
  "26babf42b267fdcf3861fdd4236a5e474848b358": "1000000000000000000000",
  "3526eece1a6bdc3ee7b400fe935b48463f31bed7": "82400000000000000000",
  "27b62816e1e3b8d19b79d1513d5dfa855b0c3a2a": "99941000000000000000",
  "b3e3c439069880156600c2892e448d4136c92d9b": "850000000000000000000",
  "574ad9355390e4889ef42acd138b2a27e78c00ae": "1557000000000000000000",
  "f0b9d683cea12ba600baace219b0b3c97e8c00e4": "100000000000000000000",
  "a437fe6ec103ca8d158f63b334224eccac5b3ea3": "8000000000000000000000",
  "7a48d877b63a8f8f9383e9d01e53e80c528e955f": "8000000000000000000000",
  "e965daa34039f7f0df62375a37e5ab8a72b301e7": "4796000000000000000000",
  "72cd048a110574482983492dfb1bd27942a696ba": "2000000000000000000000",
  "6611ce59a98b072ae959dc49ad511daaaaa19d6b": "200000000000000000000",
  "0d92582fdba05eabc3e51538c56db8813785b328": "191000000000000000000",
  "e87e9bbfbbb71c1a740c74c723426df55d063dd9": "7998000000000000000000",
  "9c99a1da91d5920bc14e0cb914fdf62b94cb8358": "20000000000000000000000",
  "fe8e6e3665570dff7a1bda697aa589c0b4e9024a": "2000000000000000000000",
  "811461a2b0ca90badac06a9ea16e787b33b196cc": "164000000000000000000",
  "d211b21f1b12b5096181590de07ef81a89537ead": "2000000000000000000000",
  "01155057002f6b0d18acb9388d3bc8129f8f7a20": "1340000000000000000000",
  "8ce22f9fa372449a420610b47ae0c8d565481232": "2000000000000000000000",
  "e02b74a47628be315b1f76b315054ad44ae9716f": "4000000000000000000000",
  "92a7c5a64362e9f842a23deca21035857f889800": "1999944000000000000000",
  "5213f459e078ad3ab95a0920239fcf1633dc04ca": "2599989000000000000000",
  "c9957ba94c1b29e5277ec36622704904c63dc023": "1923000000000000000000",
  "6ac40f532dfee5118117d2ad352da77d4f6da2c8": "400000000000000000000",
  "ea1efb3ce789bedec3d67c3e1b3bc0e9aa227f90": "734000000000000000000",
  "b01e389b28a31d8e4995bdd7d7c81beeab1e4119": "1000000000000000000000",
  "ee97aa8ac69edf7a987d6d70979f8ec1fbca7a94": "376000000000000000000",
  "0fad05507cdc8f24b2be4cb7fa5d927ddb911b88": "3004447000000000000000",
  "b6e8afd93dfa9af27f39b4df06076710bee3dfab": "25000000000000000000",
  "7d0b255efb57e10f7008aa22d40e9752dfcf0378": "29944000000000000000",
  "aef5b12258a18dec07d5ec2e316574919d79d6d6": "2000000000000000000000",
  "63666755bd41b5986997783c13043008242b3cb5": "500000000000000000000",
  "921f5261f4f612760706892625c75e7bce96b708": "2000000000000000000000",
  "10e1e3377885c42d7df218522ee7766887c05e6a": "300031000000000000000",
  "134163be9fbbe1c5696ee255e90b13254395c318": "200000000000000000000",
  "870f15e5df8b0eabd02569537a8ef93b56785c42": "388000000000000000000",
  "68eec1e288ac31b6eaba7e1fbd4f04ad579a6b5d": "2000000000000000000000",
  "1a2694ec07cf5e4d68ba40f3e7a14c53f3038c6e": "1000073000000000000000",
  "cd9b4cef73390c83a8fd71d7b540a7f9cf8b8c92": "90000000000000000000",
  "c8de7a564c7f4012a6f6d10fd08f47890fbf07d4": "300000000000000000000",
  "c0345b33f49ce27fe82cf7c84d141c68f590ce76": "1000000000000000000000",
  "fe53b94989d89964da2061539526bbe979dd2ea9": "1930600000000000000000",
  "14410fb310711be074a80883c635d0ef6afb2539": "2000000000000000000000",
  "1d344e962567cb27e44db9f2fac7b68df1c1e6f7": "1940000000000000000000",
  "fe016ec17ec5f10e3bb98ff4a1eda045157682ab": "375804000000000000000",
  "e89da96e06beaf6bd880b378f0680c43fd2e9d30": "601400000000000000000",
  "0fee81ac331efd8f81161c57382bb4507bb9ebec": "400030000000000000000",
  "40cf90ef5b768c5da585002ccbe6617650d8e837": "999800000000000000000",
  "256fa150cc87b5056a07d004efc84524739e62b5": "200000000000000000000",
  "1b9b2dc2960e4cb9408f7405827c9b59071612fd": "1000000000000000000000",
  "0efd1789eb1244a3dede0f5de582d8963cb1f39f": "1500000000000000000000",
  "049c5d4bc6f25d4e456c697b52a07811ccd19fb1": "300048000000000000000",
  "02b7b1d6b34ce053a40eb65cd4a4f7dddd0e9f30": "685000000000000000000",
  "c1827686c0169485ec15b3a7c8c01517a2874de1": "40000000000000000000",
  "d8e5c9675ef4deed266b86956fc4590ea7d4a27d": "1000000000000000000000",
  "48f883e567b436a27bb5a3124dbc84dec775a800": "771840000000000000000",
  "a34076f84bd917f20f8342c98ba79e6fb08ecd31": "4200000000000000000000",
  "21ce6d5b9018cec04ad6967944bea39e8030b6b8": "20000000000000000000",
  "0596a27dc3ee115fce2f94b481bc207a9e261525": "1000000000000000000000",
  "717cf9beab3638308ded7e195e0c86132d163fed": "15097428000000000000000",
  "d5ce55d1b62f59433c2126bcec09bafc9dfaa514": "197000000000000000000",
  "7dd46da677e161825e12e80dc446f58276e1127c": "820000000000000000000",
  "98c5494a03ac91a768dffc0ea1dde0acbf889019": "200000000000000000000000",
  "617ff2cc803e31c9082233b825d025be3f7b1056": "1970000000000000000000",
  "1091176be19b9964a8f72e0ece6bf8e3cfad6e9c": "10020000000000000000000",
  "4ea56e1112641c038d0565a9c296c463afefc17e": "182000000000000000000",
  "e303167f3d4960fe881b32800a2b4aeff1b088d4": "2000000000000000000000",
  "773141127d8cf318aebf88365add3d5527d85b6a": "1000076000000000000000",
  "b916b1a01cdc4e56e7657715ea37e2a0f087d106": "2406017000000000000000",
  "46a430a2d4a894a0d8aa3feac615361415c3f81f": "2000000000000000000000",
  "e6a3010f0201bc94ff67a2f699dfc206f9e76742": "879088000000000000000",
  "d7ad09c6d32657685355b5c6ec8e9f57b4ebb982": "1970000000000000000000",
  "95e80a82c20cbe3d2060242cb92d735810d034a2": "32511000000000000000",
  "9a390162535e398877e416787d6239e0754e937c": "1000000000000000000000",
  "d85fdeaf2a61f95db902f9b5a53c9b8f9266c3ac": "2010000000000000000000",
  "c3e20c96df8d4e38f50b265a98a906d61bc51a71": "2000000000000000000000",
  "2949fd1def5c76a286b3872424809a07db3966f3": "5236067000000000000000",
  "86cdb7e51ac44772be3690f61d0e59766e8bfc18": "4000000000000000000000",
  "749a4a768b5f237248938a12c623847bd4e688dc": "72000000000000000000",
  "3524a000234ebaaf0789a134a2a417383ce5282a": "5635000000000000000000",
  "7b43c7eea8d62355b0a8a81da081c6446b33e9e0": "4000000000000000000000",
  "0eb189ef2c2d5762a963d6b7bdf9698ea8e7b48a": "1337000000000000000000",
  "767fd7797d5169a05f7364321c19843a8c348e1e": "18800000000000000000",
  "1b2639588b55c344b023e8de5fd4087b1f040361": "1500000000000000000000",
  "1e33d1c2fb5e084f2f1d54bc5267727fec3f985d": "500000000000000000000",
  "06b106649aa8c421ddcd1b8c32cd0418cf30da1f": "40000000000000000000000",
  "3c5a241459c6abbf630239c98a30d20b8b3ac561": "157600000000000000000",
  "0f4f94b9191bb7bb556aaad7c74ddb288417a50b": "1400000000000000000000",
  "d6f4a7d04e8faf20e8c6eb859cf7f78dd23d7a15": "131784000000000000000",
  "61adf5929a5e2981684ea243baa01f7d1f5e148a": "110302000000000000000",
  "8f58d8348fc1dc4e0dd8343b6543c857045ee940": "13632400000000000000000",
  "a6e3baa38e104a1e27a4d82869afb1c0ae6eff8d": "19690000000000000000",
  "67350b5331926f5e28f3c1e986f96443809c8b8c": "352000000000000000000",
  "0b5d66b13c87b392e94d91d5f76c0d450a552843": "2000000000000000000000",
  "562a8dcbbeeef7b360685d27303bd69e094accf6": "10000000000000000000000",
  "b5d9934d7b292bcf603b2880741eb760288383a0": "16700000000000000000",
  "6fc53662371dca587b59850de78606e2359df383": "180000000000000000000",
  "e069c0173352b10bf6834719db5bed01adf97bbc": "18894000000000000000",
  "10a93457496f1108cd98e140a1ecdbae5e6de171": "399600000000000000000",
  "69ff8901b541763f817c5f2998f02dcfc1df2997": "40000000000000000000",
  "00c27d63fde24b92ee8a1e7ed5d26d8dc5c83b03": "2000000000000000000000",
  "77f81b1b26fc84d6de97ef8b9fbd72a33130cc4a": "1000000000000000000000",
  "6d20ef9704670a500bb269b5832e859802049f01": "130000000000000000000",
  "186afdc085f2a3dce4615edffbadf71a11780f50": "200000000000000000000",
  "7ff0c63f70241bece19b737e5341b12b109031d8": "346000000000000000000",
  "9d4174aa6af28476e229dadb46180808c67505c1": "1219430000000000000000",
  "5fec49c665e64ee89dd441ee74056e1f01e92870": "6320000000000000000000",
  "6cd228dc712169307fe27ceb7477b48cfc8272e5": "77600000000000000000",
  "fd918536a8efa6f6cefe1fa1153995fef5e33d3b": "500000000000000000000",
  "2fbb504a5dc527d3e3eb0085e2fc3c7dd538cb7a": "1249961000000000000000",
  "6ab323ae5056ed0a453072c5abe2e42fcf5d7139": "880000000000000000000",
  "67d682a282ef73fb8d6e9071e2614f47ab1d0f5e": "1000000000000000000000",
  "1858cf11aea79f5398ad2bb22267b5a3c952ea74": "9850000000000000000000",
  "39d6caca22bccd6a72f87ee7d6b59e0bde21d719": "2002000000000000000000",
  "daa63cbda45dd487a3f1cd4a746a01bb5e060b90": "4797800000000000000000",
  "a90476e2efdfee4f387b0f32a50678b0efb573b5": "10000000000000000000000",
  "ae5aa1e6c2b60f6fd3efe721bb4a719cbe3d6f5d": "795860000000000000000",
  "ac2e766dac3f648f637ac6713fddb068e4a4f04d": "197000000000000000000",
  "6191ddc9b64a8e0890b4323709d7a07c48b92a64": "775000000000000000000",
  "cc4f0ff2aeb67d54ce3bc8c6510b9ae83e9d328b": "400000000000000000000",
  "ca23f62dff0d6460036c62e840aec5577e0befd2": "140800000000000000000",
  "97dc26ec670a31e0221d2a75bc5dc9f90c1f6fd4": "50000000000000000000",
  "848c994a79003fe7b7c26cc63212e1fc2f9c19eb": "2000000000000000000000",
  "20c284ba10a20830fc3d699ec97d2dfa27e1b95e": "2000000000000000000000",
  "4fa3f32ef4086448b344d5f0a9890d1ce4d617c3": "1500000000000000000000",
  "255abc8d08a096a88f3d6ab55fbc7352bddcb9ce": "82161000000000000000",
  "7c60e51f0be228e4d56fdd2992c814da7740c6bc": "200000000000000000000",
  "1c356cfdb95febb714633b28d5c132dd84a9b436": "25000000000000000000",
  "5062e5134c612f12694dbd0e131d4ce197d1b6a4": "1000000000000000000000",
  "ed862616fcbfb3becb7406f73c5cbff00c940755": "1700000000000000000000",
  "62c9b271ffd5b770a5eee4edc9787b5cdc709714": "2000000000000000000000",
  "3c925619c9b33144463f0537d896358706c520b0": "2000000000000000000000",
  "ffe2e28c3fb74749d7e780dc8a5d422538e6e451": "253319000000000000000",
  "37195a635dcc62f56a718049d47e8f9f96832891": "1970000000000000000000",
  "90e9a9a82edaa814c284d232b6e9ba90701d4952": "100007000000000000000",
  "e0c4ab9072b4e6e3654a49f8a8db026a4b3386a9": "2000000000000000000000",
  "439dee3f7679ff1030733f9340c096686b49390b": "2000000000000000000000",
  "548558d08cfcb101181dac1eb6094b4e1a896fa6": "1999944000000000000000",
  "3090f8130ec44466afadb36ed3c926133963677b": "4000000000000000000000",
  "d1648503b1ccc5b8be03fa1ec4f3ee267e6adf7b": "5828000000000000000000",
  "65b42faecc1edfb14283ca979af545f63b30e60c": "18200000000000000000",
  "6420f8bcc8164a6152a99d6b99693005ccf7e053": "999972000000000000000",
  "84b4b74e6623ba9d1583e0cfbe49643f16384149": "20000000000000000000",
  "b8310a16cc6abc465007694b930f978ece1930bd": "740000000000000000000",
  "16019a4dafab43f4d9bf4163fae0847d848afca2": "25060000000000000000",
  "479298a9de147e63a1c7d6d2fce089c7e64083bd": "9999999000000000000000",
  "030973807b2f426914ad00181270acd27b8ff61f": "5348000000000000000000",
  "b07bcf1cc5d4462e5124c965ecf0d70dc27aca75": "1600000000000000000000",
  "a2f798e077b07d86124e1407df32890dbb4b6379": "200000000000000000000",
  "0cbd921dbe121563b98a6871fecb14f1cc7e88d7": "200000000000000000000",
  "6042276df2983fe2bc4759dc1943e18fdbc34f77": "1970000000000000000000",
  "be2b2280523768ea8ac35cd9e888d60a719300d4": "2000000000000000000000",
  "2f4da753430fc09e73acbccdcde9da647f2b5d37": "200000000000000000000",
  "734223d27ff23e5906caed22595701bb34830ca1": "2000000000000000000000",
  "5b430d779696a3653fc60e74fbcbacf6b9c2baf1": "14000000000000000000000",
  "84232107932b12e03186583525ce023a703ef8d9": "2000000000000000000000",
  "4ed14d81b60b23fb25054d8925dfa573dcae6168": "340000000000000000000",
  "8b338411f26ccf37658cc75521d77629099e467d": "2000000000000000000000",
  "a37622ac9bbdc4d82b75015d745b9f8de65a28ec": "2910000000000000000000",
  "1dd77441844afe9cc18f15d8c77bccfb655ee034": "4850000000000000000000",
  "65849be1af20100eb8a3ba5a5be4d3ae8db5a70e": "400000000000000000000",
  "d5586da4e59583c8d86cccf71a86197f17996749": "2000000000000000000000",
  "4b53ae59c784b6b5c43616b9a0809558e684e10c": "1200000000000000000000",
  "55d42eb495bf46a634997b5f2ea362814918e2b0": "106128000000000000000",
  "959ff17f1d51b473b44010052755a7fa8c75bd54": "1970000000000000000000",
  "5a2daab25c31a61a92a4c82c9925a1d2ef58585e": "225400000000000000000",
  "24c0c88b54a3544709828ab4ab06840559f6c5e2": "2674000000000000000000",
  "7e8649e690fc8c1bfda1b5e186581f649b50fe33": "98500000000000000000",
  "4acfa9d94eda6625c9dfa5f9f4f5d107c4031fdf": "39400000000000000000",
  "5778ffdc9b94c5a59e224eb965b6de90f222d170": "335320000000000000000",
  "825a7f4e10949cb6f8964268f1fa5f57e712b4c4": "20000000000000000000",
  "6f39cc37caaa2ddc9b610f6131e0619fae772a3c": "500000000000000000000",
  "5b437365ae3a9a2ff97c68e6f90a7620188c7d19": "2002000000000000000000",
  "6710c2c03c65992b2e774be52d3ab4a6ba217ef7": "11600000000000000000000",
  "896e335ca47af57962fa0f4dbf3e45e688cba584": "1368500000000000000000",
  "b57549bfbc9bdd18f736b22650e48a73601fa65c": "446000000000000000000",
  "85ca1e727e9d1a87991cc2c41840ebb9edf21d1b": "13370000000000000000",
  "cf4166746e1d3bc1f8d0714b01f17e8a62df1464": "1004700000000000000000",
  "4a75c3d4fa6fccbd5dd5a703c15379a1e783e9b7": "1820000000000000000000",
  "9e5811b40be1e2a1e1d28c3b0774acde0a09603d": "3000000000000000000000",
  "763886e333c56feff85be3951ab0b889ce262e95": "2000000000000000000000",
  "2b101e822cd962962a06800a2c08d3b15d82b735": "152000000000000000000",
  "a01e9476df84431825c836e8803a97e22fa5a0cd": "6000000000000000000000",
  "be4e7d983f2e2a636b1102ec7039efebc842e98d": "66000000000000000000",
  "9e427272516b3e67d4fcbf82f59390d04c8e28e5": "4000000000000000000000",
  "e0d231e144ec9107386c7c9b02f1702ceaa4f700": "5000057000000000000000",
  "6a0f056066c2d56628850273d7ecb7f8e6e9129e": "5000016000000000000000",
  "d1538e9a87e59ca9ec8e5826a5b793f99f96c4c3": "1000000000000000000000",
  "f85bab1cb3710fc05fa19ffac22e67521a0ba21d": "2003000000000000000000",
  "f7cbdba6be6cfe68dbc23c2b0ff530ee05226f84": "20000000000000000000",
  "4eb87ba8788eba0df87e5b9bd50a8e45368091c1": "20000000000000000000",
  "1479a9ec7480b74b5db8fc499be352da7f84ee9c": "1000000000000000000000",
  "d311bcd7aa4e9b4f383ff3d0d6b6e07e21e3705d": "200000000000000000000",
  "425c1816868f7777cc2ba6c6d28c9e1e796c52b3": "10000000000000000000000",
  "8510ee934f0cbc900e1007eb38a21e2a5101b8b2": "106000000000000000000",
  "01e864d354741b423e6f42851724468c74f5aa9c": "20000000000000000000000",
  "a543a066fb32a8668aa0736a0c9cd40d78098727": "1000000000000000000000",
  "f3eb1948b951e22df1617829bf3b8d8680ec6b68": "4000000000000000000000",
  "f6b782f4dcd745a6c0e2e030600e04a24b25e542": "400000000000000000000",
  "229f4f1a2a4f540774505b4707a81de44410255b": "2000000000000000000000",
  "cff8d06b00e3f50c191099ad56ba6ae26571cd88": "1000000000000000000000",
  "910b7d577a7e39aa23acf62ad7f1ef342934b968": "10000000000000000000000",
  "392433d2ce83d3fb4a7602cca3faca4ec140a4b0": "51000000000000000000",
  "8ff46045687723dc33e4d099a06904f1ebb584dc": "2000000000000000000000",
  "9ca0429f874f8dcee2e9c062a9020a842a587ab9": "2000000000000000000000",
  "160ceb6f980e04315f53c4fc988b2bf69e284d7d": "19100000000000000000",
  "c340f9b91c26728c31d121d5d6fc3bb56d3d8624": "2000000000000000000000",
  "afa1d5ad38fed44759c05b8993c1aa0dace19f40": "80000000000000000000",
  "3969b4f71bb8751ede43c016363a7a614f76118e": "2000000000000000000000",
  "2bb6f578adfbe7b2a116b3554facf9969813c319": "7400000000000000000000",
  "8334764b7b397a4e578f50364d60ce44899bff94": "92500000000000000000",
  "9dd2196624a1ddf14a9d375e5f07152baf22afa2": "1211747000000000000000",
  "f242da845d42d4bf779a00f295b40750fe49ea13": "1000000000000000000000",
  "c6234657a807384126f8968ca1708bb07baa493c": "20000000000000000000",
  "94c055e858357aaa30cf2041fa9059ce164a1f91": "19999000000000000000000",
  "74c73c90528a157336f1e7ea20620ae53fd24728": "8969310000000000000000",
  "19e7f3eb7bf67f3599209ebe08b62ad3327f8cde": "2000000000000000000000",
  "b2b516fdd19e7f3864b6d2cf1b252a4156f1b03b": "53720000000000000000",
  "8164e78314ae16b28926cc553d2ccb16f356270d": "8450000000000000000000",
  "4d828894752f6f25175daf2177094487954b6f9f": "1459683000000000000000",
  "ab84a0f147ad265400002b85029a41fc9ce57f85": "1000000000000000000000",
  "f3fe51fde34413c73318b9c85437fe7e820f561a": "1003200000000000000000",
  "16c7b31e8c376282ac2271728c31c95e35d952c3": "2000000000000000000000",
  "80d5c40c59c7f54ea3a55fcfd175471ea35099b3": "1000000000000000000000",
  "7abb10f5bd9bc33b8ec1a82d64b55b6b18777541": "20000000000000000000000",
  "095b0ea2b218d82e0aea7c2889238a39c9bf9077": "20000000000000000000000",
  "5d5cdbe25b2a044b7b9be383bcaa5807b06d3c6b": "2000000000000000000000",
  "323749a3b971959e46c8b4822dcafaf7aaf9bd6e": "20064000000000000000",
  "e0272213e8d2fd3e96bd6217b24b4ba01b617079": "20000000000000000000",
  "00acbfb2f25a5485c739ef70a44eeeeb7c65a66f": "100000000000000000000",
  "52f15423323c24f19ae2ab673717229d3f747d9b": "1026115000000000000000",
  "cb4abfc282aed76e5d57affda542c1f382fcacf4": "8136100000000000000000",
  "f71b4534f286e43093b1e15efea749e7597b8b57": "104410000000000000000000",
  "44cd77535a893fa7c4d5eb3a240e79d099a72d2d": "820000000000000000000",
  "eb3ce7fc381c51db7d5fbd692f8f9e058a4c703d": "200000000000000000000",
  "f1c8c4a941b4628c0d6c30fda56452d99c7e1b64": "1449000000000000000000",
  "277677aba1e52c3b53bfa2071d4e859a0af7e8e1": "1000000000000000000000",
  "a5f075fd401335577b6683c281e6d101432dc6e0": "2680000000000000000000",
  "e28dbc8efd5e416a762ec0e018864bb9aa83287b": "24533161000000000000000",
  "2b717cd432a323a4659039848d3b87de26fc9546": "500000000000000000000000",
  "b358e97c70b605b1d7d729dfb640b43c5eafd1e7": "20000000000000000000000",
  "293c2306df3604ae4fda0d207aba736f67de0792": "200000000000000000000",
  "74d366b07b2f56477d7c7077ac6fe497e0eb6559": "5000000000000000000000",
  "490145afa8b54522bb21f352f06da5a788fa8f1d": "9231182000000000000000",
  "862569211e8c6327b5415e3a67e5738b15baaf6e": "140000000000000000000",
  "5a74ba62e7c81a3474e27d894fed33dd24ad95fe": "18200000000000000000",
  "536e4d8029b73f5579dca33e70b24eba89e11d7e": "1970000000000000000000",
  "25c6e74ff1d928df98137af4df8430df24f07cd7": "390000000000000000000",
  "19b36b0c87ea664ed80318dc77b688dde87d95a5": "1948386000000000000000",
  "abc4caeb474d4627cb6eb456ecba0ecd08ed8ae1": "3940000000000000000000",
  "8ea656e71ec651bfa17c5a5759d86031cc359977": "100000000000000000000",
  "8d620bde17228f6cbba74df6be87264d985cc179": "100000000000000000000",
  "b2aa2f1f8e93e79713d92cea9ffce9a40af9c82d": "2000000000000000000000",
  "198ef1ec325a96cc354c7266a038be8b5c558f67": "608334724000000000000000",
  "6a13d5e32c1fd26d7e91ff6e053160a89b2c8aad": "53480000000000000000",
  "e056bf3ff41c26256fef51716612b9d39ade999c": "100009000000000000000",
  "2c128c95d957215101f043dd8fc582456d41016d": "835000000000000000000",
  "2560b09b89a4ae6849ed5a3c9958426631714466": "1700000000000000000000",
  "d3d6e9fb82542fd29ed9ea3609891e151396b6f7": "54000000000000000000000",
  "a7607b42573bb6f6b4d4f23c7e2a26b3a0f6b6f0": "1610000000000000000000",
  "020362c3ade878ca90d6b2d889a4cc5510eed5f3": "1042883000000000000000",
  "14830704e99aaad5c55e1f502b27b22c12c91933": "620000000000000000000",
  "8030b111c6983f0485ddaca76224c6180634789f": "80000000000000000000",
  "2c5b7d7b195a371bf9abddb42fe04f2f1d9a9910": "200000000000000000000",
  "77d43fa7b481dbf3db530cfbf5fdced0e6571831": "2000000000000000000000",
  "2d90b415a38e2e19cdd02ff3ad81a97af7cbf672": "109800000000000000000",
  "2fc82ef076932341264f617a0c80dd571e6ae939": "7160000000000000000000",
  "dfe549fe8430e552c6d07cc3b92ccd43b12fb50f": "83620000000000000000",
  "1e8e689b02917cdc29245d0c9c68b094b41a9ed6": "2000000000000000000000",
  "21c3a8bba267c8cca27b1a9afabad86f607af708": "8940000000000000000000",
  "143c639752caeecf6a997d39709fc8f19878c7e8": "1970000000000000000000",
  "02603d7a3bb297c67c877e5d34fbd5b913d4c63a": "20000000000000000000",
  "a166f911c644ac3213d29e0e1ae010f794d5ad26": "2000000000000000000000",
  "6eb3819617404058268f0c3cff3596bfe9148c1c": "1670000000000000000000",
  "7a67dd043a504fc2f2fc7194e9becf484cecb1fb": "250000000000000000000",
  "f824ee331e4ac3cc587693395b57ecf625a6c0c2": "1600930000000000000000",
  "1179c60dbd068b150b074da4be23033b20c68558": "680000000000000000000",
  "d2a479404347c5543aab292ae1bb4a6f158357fa": "4000000000000000000000",
  "b0d32bd7e4e695b7b01aa3d0416f80557dba9903": "16300000000000000000000",
  "f734ec03724ddee5bb5279aa1afcf61b0cb448a1": "4238080000000000000000",
  "c04069dfb18b096c7867f8bee77a6dc7477ad062": "2674000000000000000000",
  "80c53ee7e3357f94ce0d7868009c208b4a130125": "2000000000000000000000",
  "0f32d9cb4d0fdaa0150656bb608dcc43ed7d9301": "753978000000000000000",
  "6ddb6092779d5842ead378e21e8120fd4c6bc132": "2000000000000000000000",
  "82ea01e3bf2e83836e71704e22a2719377efd9c3": "3040000000000000000000",
  "44c1110b18870ec81178d93d215838c551d48e64": "199958000000000000000",
  "7727af101f0aaba4d23a1cafe17c6eb5dab1c6dc": "2000000000000000000000",
  "a11a03c4bb26d21eff677d5d555c80b25453ee7a": "69979000000000000000",
  "19e5dea3370a2c746aae34a37c531f41da264e83": "200000000000000000000",
  "c325c352801ba883b3226c5feb0df9eae2d6e653": "3940000000000000000000",
  "ae5055814cb8be0c117bb8b1c8d2b63b4698b728": "32035000000000000000",
  "deb1bc34d86d4a4dde2580d8beaf074eb0e1a244": "1580000000000000000000",
  "558360206883dd1b6d4a59639e5629d0f0c675d0": "2000000000000000000000",
  "a9d6f871ca781a759a20ac3adb972cf12829a208": "925000000000000000000",
  "b0ac4eff6680ee14169cdadbffdb30804f6d25f5": "2000000000000000000000",
  "f1b58faffa8794f50af8e88309c7a6265455d51a": "999800000000000000000",
  "a61a54df784a44d71b771b87317509211381f200": "1000000000000000000000",
  "baa4b64c2b15b79f5f204246fd70bcbd86e4a92a": "500000000000000000000",
  "a20d8ff60caae31d02e0b665fa435d76f77c9442": "489600000000000000000",
  "f3e74f470c7d3a3f0033780f76a89f3ef691e6cb": "3021800000000000000000",
  "d330728131fe8e3a15487a34573c93457e2afe95": "4000000000000000000000",
  "9af9dbe47422d177f945bdead7e6d82930356230": "3940000000000000000000",
  "0eb5b662a1c718608fd52f0c25f9378830178519": "6091400000000000000000",
  "fda6810ea5ac985d6ffbf1c511f1c142edcfddf7": "4000000000000000000000",
  "832c54176bdf43d2c9bcd7b808b89556b89cbf31": "200000000000000000000",
  "704d5de4846d39b53cd21d1c49f096db5c19ba29": "152000000000000000000",
  "344a8db086faed4efc37131b3a22b0782dad7095": "500000000000000000000",
  "8c7fa5cae82fedb69ab189d3ff27ae209293fb93": "400030000000000000000",
  "ad660dec825522a9f62fcec3c5b731980dc286ea": "3000000000000000000000",
  "13b9b10715714c09cfd610cf9c9846051cb1d513": "1970000000000000000000",
  "40467d80e74c35407b7db51789234615fea66818": "388000000000000000000",
  "30e9d5a0088f1ddb2fd380e2a049192266c51cbf": "196910000000000000000",
  "b2d1e99af91231858e7065dd1918330dc4c747d5": "16700000000000000000000",
  "9f21302ca5096bea7402b91b0fd506254f999a3d": "1246832000000000000000",
  "d24b6644f439c8051dfc64d381b8c86c75c17538": "2000000000000000000000",
  "8228ebc087480fd64547ca281f5eace3041453b9": "1970000000000000000000",
  "29da3e35b23bb1f72f8e2258cf7f553359d24bac": "20000000000000000000000",
  "c8e558a3c5697e6fb23a2594c880b7a1b68f9860": "10000000000000000000000",
  "6b951a43274eeafc8a0903b0af2ec92bf1efc839": "100000000000000000000",
  "d015f6fcb84df7bb410e8c8f04894a881dcac237": "1038000000000000000000",
  "6ccb03acf7f53ce87aadcc21a9932de915f89804": "8000000000000000000000",
  "388c85a9b9207d8146033fe38143f6d34b595c47": "200000000000000000000",
  "429c06b487e8546abdfc958a25a3f0fba53f6f00": "13503000000000000000",
  "771507aeee6a255dc2cd9df55154062d0897b297": "334250000000000000000",
  "5a2b1c853aeb28c45539af76a00ac2d8a8242896": "25000000000000000000",
  "f4d67a9044b435b66e8977ff39a28dc4bd53729a": "200000000000000000000",
  "063759dd1c4e362eb19398951ff9f8fad1d31068": "10000000000000000000000",
  "cb58990bcd90cfbf6d8f0986f6fa600276b94e2d": "999925000000000000000",
  "6df5c84f7b909aab3e61fe0ecb1b3bf260222ad2": "4000000000000000000000",
  "deb2495d6aca7b2a6a2d138b6e1a42e2dc311fdd": "2000000000000000000000",
  "59203cc37599b648312a7cc9e06dacb589a9ae6a": "148689000000000000000",
  "fc9b347464b2f9929d807e039dae48d3d98de379": "14000000000000000000000",
  "48d2434b7a7dbbff08223b6387b05da2e5093126": "18000000000000000000000",
  "c9d76446d5aadff80b68b91b08cd9bc8f5551ac1": "714000000000000000000",
  "3d31587b5fd5869845788725a663290a49d3678c": "500000000000000000000",
  "d8715ef9176f850b2e30eb8e382707f777a6fbe9": "2000000000000000000000",
  "2c2147947ae33fb098b489a5c16bfff9abcd4e2a": "200000000000000000000",
  "d6c0d0bc93a62e257174700e10f024c8b23f1f87": "2000000000000000000000",
  "d1978f2e34407fab1dc2183d95cfda6260b35982": "788000000000000000000",
  "1bf974d9904f45ce81a845e11ef4cbcf27af719e": "100000000000000000000",
  "6e761eaa0f345f777b5441b73a0fa5b56b85f22d": "2000000000000000000000",
  "ea60436912de6bf187d3a472ff8f5333a0f7ed06": "19700000000000000000",
  "94f8f057db7e60e675ad940f155885d1a477348e": "401100000000000000000",
  "8933491760c8f0b4df8caac78ed835caee21046d": "20000000000000000000000",
  "a7775e4af6a23afa201fb78b915e51a515b7a728": "120000000000000000000",
  "d8d64384249b776794063b569878d5e3b530a4b2": "177569000000000000000",
  "be633a3737f68439bac7c90a52142058ee8e8a6f": "960000000000000000000",
  "90bd62a050845261fa4a9f7cf241ea630b05efb8": "500000000000000000000",
  "552987f0651b915b2e1e5328c121960d4bdd6af4": "1790000000000000000000",
  "0baf6ecdb91acb3606a8357c0bc4f45cfd2d7e6f": "1000000000000000000000",
  "9e5a311d9f69898a7c6a9d6360680438e67a7b2f": "1490000000000000000000",
  "78859c5b548b700d9284cee4b6633c2f52e529c2": "2955000000000000000000",
  "d572309169b1402ec8131a17a6aac3222f89e6eb": "13800000000000000000000",
  "8e6d7485cbe990acc1ad0ee9e8ccf39c0c93440e": "955000000000000000000",
  "75c11d024d12ae486c1095b7a7b9c4af3e8edeb9": "20000000000000000000",
  "903413878aea3bc1086309a3fe768b65559e8cab": "8000000000000000000000",
  "6d0569e5558fc7df2766f2ba15dc8aeffc5beb75": "4001070000000000000000",
  "3815b0743f94fc8cc8654fd9d597ed7d8b77c57e": "738578000000000000000",
  "0f26480a150961b8e30750713a94ee6f2e47fc00": "1000000000000000000000",
  "ede5de7c7fb7eee0f36e64530a41440edfbefacf": "617200000000000000000",
  "763a7cbab70d7a64d0a7e52980f681472593490c": "600000000000000000000",
  "6e270ad529f1f0b8d9cb6d2427ec1b7e2dc64a74": "200000000000000000000",
  "eb3bdd59dcdda5a9bb2ac1641fd02180f5f36560": "6600000000000000000000",
  "f4ebf50bc7e54f82e9b9bd24baef29438e259ce6": "10000000000000000000000",
  "882c8f81872c79fed521cb5f950d8b032322ea69": "40000000000000000000000",
  "394132600f4155e07f4d45bc3eb8d9fb72dcd784": "2941000000000000000000",
  "0be2b94ad950a2a62640c35bfccd6c67dae450f6": "1940000000000000000000",
  "d4c6ac742e7c857d4a05a04c33d4d05c1467571d": "200000000000000000000",
  "1fddd85fc98be9c4045961f40f93805ecc4549e5": "164000000000000000000",
  "534065361cb854fac42bfb5c9fcde0604ac919da": "2000000000000000000000",
  "9a6ff5f6a7af7b7ae0ed9c20ecec5023d281b786": "2547000000000000000000",
  "4f3a4854911145ea01c644044bdb2e5a960a982f": "4000000000000000000000",
  "00497e92cdc0e0b963d752b2296acb87da828b24": "194800000000000000000",
  "4ff67fb87f6efba9279930cfbd1b7a343c79fade": "400000000000000000000",
  "62f2e5ccecd52cc4b95e0597df27cc079715608c": "143000000000000000000",
  "1eda084e796500ba14c5121c0d90846f66e4be62": "534800000000000000000",
  "9836b4d30473641ab56aeee19242761d72725178": "2000000000000000000000",
  "de55de0458f850b37e4d78a641dd2eb2dd8f38ce": "4000000000000000000000",
  "140ca28ff33b9f66d7f1fc0078f8c1eef69a1bc0": "1600000000000000000000",
  "2014261f01089f53795630ba9dd24f9a34c2d942": "1337000000000000000000",
  "11415fab61e0dfd4b90676141a557a869ba0bde9": "2048000000000000000000",
  "88344909644c7ad4930fd873ca1c0da2d434c07f": "131970000000000000000",
  "88b217ccb786a254cf4dc57f5d9ac3c455a30483": "925000000000000000000",
  "dfdbcec1014b96da2158ca513e9c8d3b9af1c3d0": "2000000000000000000000",
  "1ba9f7997e5387b6b2aa0135ac2452fe36b4c20d": "850000000000000000000",
  "d70ad2c4e9eebfa637ef56bd486ad2a1e5bce093": "200000000000000000000",
  "9ce27f245e02d1c312c1d500788c9def7690453b": "200000000000000000000",
  "8234f463d18485501f8f85ace4972c9b632dbccc": "2000000000000000000000",
  "994152fc95d5c1ca8b88113abbad4d710e40def6": "500000000000000000000",
  "e5b980d28eece2c06fca6c9473068b37d4a6d6e9": "695200000000000000000",
  "2d426912d059fad9740b2e390a2eeac0546ff01b": "1400000000000000000000",
  "6d9997509882027ea947231424bedede2965d0ba": "2001600000000000000000",
  "167ce7de65e84708595a525497a3eb5e5a665073": "575400000000000000000",
  "e430c0024fdbf73a82e21fccf8cbd09138421c21": "4000000000000000000000",
  "2e52912bc10ea39d54e293f7aed6b99a0f4c73be": "400000000000000000000",
  "12cf8b0e465213211a5b53dfb0dd271a282c12c9": "15200000000000000000",
  "06964e2d17e9189f88a8203936b40ac96e533c06": "18200000000000000000",
  "66b1a63da4dcd9f81fe54f5e3fcb4055ef7ec54f": "201412000000000000000",
  "0a77e7f72b437b574f00128b21f2ac265133528c": "2000000000000000000000",
  "78f5c74785c5668a838072048bf8b453594ddaab": "400000000000000000000",
  "58e554af3d87629620da61d538c7f5b4b54c4afe": "1297081000000000000000",
  "37a10451f36166cf643dd2de6c1cbba8a011cfa3": "380000000000000000000",
  "fe9ad12ef05d6d90261f96c8340a0381974df477": "2000000000000000000000",
  "057f7f81cd7a406fc45994408b5049912c566463": "1700000000000000000000",
  "55a3df57b7aaec16a162fd5316f35bec082821cf": "1970000000000000000000",
  "c0e0b903088e0c63f53dd069575452aff52410c3": "3000000000000000000000",
  "63e88e2e539ffb450386b4e46789b223f5476c45": "6292000000000000000000",
  "3727341f26c12001e378405ee38b2d8464ec7140": "2000000000000000000000",
  "c96751656c0a8ef4357b7344322134b983504aca": "2000000000000000000000",
  "1e060dc6c5f1cb8cc7e1452e02ee167508b56542": "12715500000000000000000",
  "18136c9df167aa17b6f18e22a702c88f4bc28245": "4000000000000000000000",
  "116108c12084612eeda7a93ddcf8d2602e279e5c": "2000000000000000000000",
  "bbb643d2187b364afc10a6fd368d7d55f50d1a3c": "1000000000000000000000",
  "ec83e798c396b7a55e2a2224abcd834b27ea459c": "12000000000000000000000",
  "973f4e361fe5decd989d4c8f7d7cc97990385daf": "388500000000000000000",
  "c0f29ed0076611b5e55e130547e68a48e26df5e4": "3000000000000000000000",
  "fd4b551f6fdbcda6c511b5bb372250a6b783e534": "20600000000000000000",
  "144b19f1f66cbe318347e48d84b14039466c5909": "2000000000000000000000",
  "bf183641edb886ce60b8190261e14f42d93cce01": "25019000000000000000",
  "94db807873860aac3d5aea1e885e52bff2869954": "3220000000000000000000",
  "7a74cee4fa0f6370a7894f116cd00c1147b83e59": "800000000000000000000",
  "cd32a4a8a27f1cc63954aa634f7857057334c7a3": "1085000000000000000000",
  "7cbeb99932e97e6e02058cfc62d0b26bc7cca52b": "2000000000000000000000",
  "8cde8b732e6023878eb23ed16229124b5f7afbec": "133700000000000000000",
  "45c4ecb4ee891ea984a7c5cefd8dfb00310b2850": "1980000000000000000000",
  "8b393fb0813ee101db1e14ecc7d322c72b8c0473": "455578000000000000000",
  "7b66126879844dfa34fe65c9f288117fefb449ad": "6000000000000000000000",
  "162ba503276214b509f97586bd842110d103d517": "9002000000000000000000",
  "7dece6998ae1900dd3770cf4b93812bad84f0322": "100000000000000000000",
  "ec0927bac7dc36669c28354ab1be83d7eec30934": "2000000000000000000000",
  "8d7f3e61299c2db9b9c0487cf627519ed00a9123": "1742400000000000000000",
  "4fc46c396e674869ad9481638f0013630c87caac": "1000000000000000000000",
  "bf68d28aaf1eeefef646b65e8cc8d190f6c6da9c": "2000000000000000000000",
  "00969747f7a5b30645fe00e44901435ace24cc37": "1700000000000000000000",
  "494dec4d5ee88a2771a815f1ee7264942fb58b28": "2000000000000000000000",
  "ffeac0305ede3a915295ec8e61c7f881006f4474": "98500000000000000000",
  "b39139576194a0866195151f33f2140ad1cc86cf": "100000000000000000000000",
  "fead1803e5e737a68e18472d9ac715f0994cc2be": "500000000000000000000",
  "698ab9a2f33381e07c0c47433d0d21d6f336b127": "20000000000000000000",
  "e5edc73e626f5d3441a45539b5f7a398c593edf6": "865000000000000000000",
  "dd4f5fa2111db68f6bde3589b63029395b69a92d": "158400000000000000000",
  "8c93c3c6db9d37717de165c3a1b4fe51952c08de": "400000000000000000000",
  "f87bb07b289df7301e54c0efda6a2cf291e89200": "1400000000000000000000",
  "e7a4560c84b20e0fb54c49670c2903b0a96c42a4": "598000000000000000000",
  "00a5797f52c9d58f189f36b1d45d1bf6041f2f6b": "5456900000000000000000",
  "9da3302240af0511c6fd1857e6ddb7394f77ab6b": "3100000000000000000000",
  "2c2d15ff39561c1b72eda1cc027ffef23743a144": "3920000000000000000000",
  "9b4c2715780ca4e99e60ebf219f1590c8cad500a": "1600000000000000000000",
  "ff5e7ee7d5114821e159dca5e81f18f1bfffbff9": "2000000000000000000000",
  "0169c1c210eae845e56840412e1f65993ea90fb4": "2000000000000000000000",
  "abc45f84db7382dde54c5f7d8938c42f4f3a3bc4": "200000000000000000000",
  "d9383d4b6d17b3f9cd426e10fb944015c0d44bfb": "800000000000000000000",
  "c090fe23dcd86b358c32e48d2af91024259f6566": "200000000000000000000",
  "9ffedcc36b7cc312ad2a9ede431a514fccb49ba3": "669800000000000000000",
  "2ffe93ec1a5636e9ee34af70dff52682e6ff7079": "2000000000000000000000",
  "6e01e4ad569c95d007ada30d5e2db12888492294": "4000000000000000000000",
  "d4d92c62b280e00f626d8657f1b86166cb1f740f": "200028000000000000000",
  "1d36683063b7e9eb99462dabd569bddce71686f2": "1000000000000000000000",
  "3a48e0a7098b06a905802b87545731118e89f439": "2000000000000000000000",
  "bd9e56e902f4be1fc8768d8038bac63e2acbbf8e": "999972000000000000000",
  "4d67f2ab8599fef5fc413999aa01fd7fce70b43d": "10000000000000000000000",
  "8e74e0d1b77ebc823aca03f119854cb12027f6d7": "107200000000000000000000",
  "7e5b19ae1be94ff4dee635492a1b012d14db0213": "100000000000000000000",
  "5de9e7d5d1b667d095dd34099c85b0421a0bc681": "20000000000000000000",
  "316eb4e47df71b42e16d6fe46825b7327baf3124": "4000000000000000000000",
  "772c297f0ad194482ee8c3f036bdeb01c201d5cc": "200000000000000000000",
  "d7052519756af42590f15391b723a03fa564a951": "4615591000000000000000",
  "2c6846a1aa999a2246a287056000ba4dcba8e63d": "10020000000000000000000",
  "de5b005fe8daae8d1f05de3eda042066c6c4691c": "1100000000000000000000",
  "254c1ecc630c2877de8095f0a8dba1e8bf1f550c": "1700000000000000000000",
  "f8f226142a428434ab17a1864a2597f64aab2f06": "172473000000000000000",
  "a6c910ce4d494a919ccdaaa1fc3b82aa74ba06cf": "8000000000000000000000",
  "e587b16abc8a74081e3613e14342c03375bf0847": "2000000000000000000000",
  "6f176065e88e3c6fe626267d18a088aaa4db80bc": "3520000000000000000000",
  "50dcbc27bcad984093a212a9b4178eabe9017561": "145512000000000000000",
  "e1953c6e975814c571311c34c0f6a99cdf48ab82": "50000000000000000000",
  "be0a2f385f09dbfce96732e12bb40ac349871ba8": "1610348000000000000000",
  "4712540265cbeec3847022c59f1b318d43400a9e": "3500000000000000000000",
  "29bdc4f28de0180f433c2694eb74f5504ce94337": "2000000000000000000000",
  "2f66bfbf2262efcc8d2bd0444fc5b0696298ff1e": "9940000000000000000000",
  "506411fd79003480f6f2b6aac26b7ba792f094b2": "500000000000000000000",
  "23ea669e3564819a83b0c26c00a16d9e826f6c46": "1430590000000000000000",
  "e3ffb02cb7d9ea5243701689afd5d417d7ed2ece": "78000000000000000000",
  "38e7dba8fd4f1f850dbc2649d8e84f0952e3eb3c": "50000000000000000000",
  "8644cc281be332ccced36da483fb2a0746d9ba2e": "400000000000000000000",
  "e8a91da6cf1b9d65c74a02ec1f96eecb6dd241f3": "1940000000000000000000",
  "0631dc40d74e5095e3729eddf49544ecd4396f67": "160000000000000000000",
  "83c897a84b695eebe46679f7da19d776621c2694": "500000000000000000000",
  "db73460b59d8e85045d5e752e62559875e42502e": "999800000000000000000",
  "0dd4e674bbadb1b0dc824498713dce3b5156da29": "170000000000000000000",
  "e3933d61b77dcdc716407f8250bc91e4ffaeb09d": "86600000000000000000000",
  "58c90754d2f20a1cb1dd330625e04b45fa619d5c": "2000000000000000000000",
  "895ec5545644e0b78330fffab8ddeac9e833156c": "600000000000000000000",
  "7e1e29721d6cb91057f6c4042d8a0bbc644afe73": "159800000000000000000",
  "72b90a4dc097239492c5b9777dcd1e52ba2be2c2": "6000000000000000000000",
  "64241a7844290e0ab855f1d4aa75b55345032224": "1600000000000000000000",
  "6fd4e0f3f32bee6d3767fdbc9d353a6d3aab7899": "695240000000000000000",
  "3a035594c747476d42d1ee966c36224cdd224993": "355890000000000000000",
  "de97f4330700b48c496d437c91ca1de9c4b01ba4": "2910840000000000000000",
  "716ad3c33a9b9a0a18967357969b94ee7d2abc10": "482000000000000000000",
  "bfbe05e88c9cbbcc0e92a405fac1d85de248ee24": "100000000000000000000",
  "cfc4e6f7f8b011414bfba42f23adfaa78d4ecc5e": "1850000000000000000000",
  "d931ac2668ba6a84481ab139735aec14b7bfbabf": "2000000000000000000000",
  "e3263ce8af6db3e467584502ed7109125eae22a5": "2000000000000000000000",
  "f78258c12481bcdddbb72a8ca0c043097261c6c5": "20000000000000000000",
  "4493123c021ece3b33b1a452c9268de14007f9d3": "6685000000000000000000",
  "431f2c19e316b044a4b3e61a0c6ff8c104a1a12f": "1000000000000000000000",
  "e63e787414b9048478a50733359ecdd7e3647aa6": "1580000000000000000000",
  "e4715956f52f15306ee9506bf82bccc406b3895e": "274944000000000000000",
  "f7f91e7acb5b8129a306877ce3168e6f438b66a1": "176000000000000000000",
  "dcdbbd4e2604e40e1710cc6730289dccfad3892d": "4600000000000000000000",
  "2b5f4b3f1e11707a227aa5e69fa49dded33fb321": "6000000000000000000000",
  "01488ad3da603c4cdd6cb0b7a1e30d2a30c8fc38": "200000000000000000000",
  "841145b44840c946e21dbc190264b8e0d5029369": "300000000000000000000000",
  "bf05070c2c34219311c4548b2614a438810ded6d": "2000000000000000000000",
  "38f387e1a4ed4a73106ef2b462e474e2e3143ad0": "6000000000000000000000",
  "f116b0b4680f53ab72c968ba802e10aa1be11dc8": "20000000000000000000",
  "bea0afc93aae2108a3fac059623bf86fa582a75e": "1700000000000000000000",
  "4c997992036c5b433ac33d25a8ea1dc3d4e4e6d8": "29200000000000000000",
  "ab7e0b83ed9a424c6d1e6a6f87a4dbf06409c7d6": "2400000000000000000000",
  "d71fb130f0150c565269e00efb43902b52a455a6": "200000000000000000000",
  "99b018932bcad355b6792b255db6702dec8ce5dd": "4000086000000000000000",
  "4b904e934bd0cc8b20705f879e905b93ea0ccc30": "2000000000000000000000",
  "672ec42faa8cd69aaa71b32cc7b404881d52ff91": "10000000000000000000000",
  "acbc2d19e06c3babbb5b6f052b6bf7fc37e07229": "200000000000000000000",
  "cea8743341533cb2f0b9c6efb8fda80d77162825": "100000000000000000000",
  "9568b7de755628af359a84543de23504e15e41e6": "40000000000000000000000",
  "6ec96d13bdb24dc7a557293f029e02dd74b97a55": "4000000000000000000000",
  "d95c90ffbe5484864780b867494a83c89256d6e4": "1640000000000000000000",
  "ade6f8163bf7c7bb4abe8e9893bd0cc112fe8872": "327600000000000000000",
  "250eb7c66f869ddf49da85f3393e980c029aa434": "4000000000000000000000",
  "a35c19132cac1935576abfed6c0495fb07881ba0": "2000000000000000000000",
  "d5550caaf743b037c56fd2558a1c8ed235130750": "5347598000000000000000",
  "03097923ba155e16d82f3ad3f6b815540884b92c": "1820000000000000000000",
  "d6d9e30f0842012a7176a917d9d2048ca0738759": "4000000000000000000000",
  "ab9ad36e5c74ce2e96399f57839431d0e79f96ab": "164000000000000000000",
  "75be8ff65e5788aec6b2a52d5fa7b1e7a03ba675": "67720000000000000000",
  "4f6d4737d7a940382487264886697cf7637f8015": "1670000000000000000000",
  "5f7b3bbac16dab831a4a0fc53b0c549dc36c31ca": "1940000000000000000000",
  "d843ee0863ce933e22f89c802d31287b9671e81c": "13370000000000000000",
  "361f3ba9ed956b770f257d3672fe1ff9f7b0240c": "600000000000000000000",
  "6c0ae9f043c834d44271f13406593dfe094f389f": "1517545000000000000000",
  "db34745ede8576b499db01beb7c1ecda85cf4abe": "80000000000000000000",
  "7be8ccb4f11b66ca6e1d57c0b5396221a31ba53a": "20000000000000000000",
  "128b908fe743a434203de294c441c7e20a86ea67": "713304000000000000000",
  "df236bf6abf4f3293795bf0c28718f93e3b1b36b": "1337000000000000000000",
  "14254ea126b52d0142da0a7e188ce255d8c47178": "775000000000000000000",
  "ceed47ca5b899fd1623f21e9bd4db65a10e5b09d": "133196000000000000000",
  "30acd858875fa24eef0d572fc7d62aad0ebddc35": "400000000000000000000",
  "47a281dff64167197855bf6e705eb9f2cef632ea": "1000072000000000000000",
  "297d5dbe222f2fb52531acbd0b013dc446ac7368": "20000000000000000000000",
  "adf85203c8376a5fde9815384a350c3879c4cb93": "1147300000000000000000",
  "c3e0471c64ff35fa5232cc3121d1d38d1a0fb7de": "2000000000000000000000",
  "fdecc82ddfc56192e26f563c3d68cb544a96bfed": "440000000000000000000",
  "2614f42d5da844377578e6b448dc24305bef2b03": "2000000000000000000000",
  "1d96bcd58457bbf1d3c2a46ffaf16dbf7d836859": "171313000000000000000",
  "bd66ffedb530ea0b2e856dd12ac2296c31fe29e0": "200000000000000000000",
  "6e84876dbb95c40b6656e42ba9aea08a993b54dc": "1101932000000000000000",
  "a1c4f45a82e1c478d845082eb18875c4ea6539ab": "200000000000000000000000",
  "2c964849b1f69cc7cea4442538ed87fdf16cfc8f": "2000000000000000000000",
  "45b47105fe42c4712dce6e2a21c05bffd5ea47a9": "2000000000000000000000",
  "31e9c00f0c206a4e4e7e0522170dc81e88f3eb70": "2685000000000000000000",
  "5fe77703808f823e6c399352108bdb2c527cb87c": "1960000000000000000000",
  "2272186ef27dcbe2f5fc373050fdae7f2ace2316": "16100000000000000000000",
  "b7576e9d314df41ec5506494293afb1bd5d3f65d": "20000000000000000000",
  "ac9fff68c61b011efbecf038ed72db97bb9e7281": "9550000000000000000000",
  "cd9529492b5c29e475acb941402b3d3ba50686b0": "1970000000000000000000",
  "f19b39389d47b11b8a2c3f1da9124decffbefaf7": "2000000000000000000000",
  "9e951f6dc5e352afb8d04299d2478a451259bf56": "72004000000000000000",
  "8eb1fbe4e5d3019cd7d30dae9c0d5b4c76fb6331": "2000000000000000000000",
  "29cc804d922be91f5909f348b0aaa5d21b607830": "4000000000000000000000",
  "5c7b9ec7a2438d1e3c7698b545b9c3fd77b7cd55": "1000000000000000000000",
  "a16160851d2b9c349b92e46f829abfb210943595": "1790000000000000000000",
  "eac6b98842542ea10bb74f26d7c7488f698b6452": "20000000000000000000000",
  "57825aeb09076caa477887fbc9ae37e8b27cc962": "100000000000000000000",
  "b35e8a1c0dac7e0e66dbac736a592abd44012561": "14974000000000000000",
  "756b84eb85fcc1f4fcdcc2b08db6a86e135fbc25": "3220000000000000000000",
  "e13b3d2bbfdcbc8772a23315724c1425167c5688": "1032115000000000000000",
  "0a2dcb7a671701dbb8f495728088265873356c8e": "152120000000000000000",
  "03cb4c4f4516c4ff79a1b6244fbf572e1c7fea79": "2740000000000000000000",
  "98ba4e9ca72fddc20c69b4396f76f8183f7a2a4e": "12800000000000000000000",
  "f8087786b42da04ed6d1e0fe26f6c0eefe1e9f5a": "10000000000000000000000",
  "02f7f67209b16a17550c694c72583819c80b54ad": "98400000000000000000",
  "32bb2e9693e4e085344d2f0dbd46a283e3a087fd": "400000000000000000000",
  "9c78963fbc263c09bd72e4f8def74a9475f7055c": "13790000000000000000000",
  "27144ca9a7771a836ad50f803f64d869b2ae2b20": "4000000000000000000000",
  "cc758d071d25a6320af68c5dc9c4f6955ba94520": "6000000000000000000000",
  "cb42b44eb5fd60b5837e4f9eb47267523d1a229c": "865000000000000000000",
  "aaf5b207b88b0de4ac40d747cee06e172df6e745": "31428000000000000000000",
  "52d380511df19d5ec2807bbcb676581b67fd37a3": "13400000000000000000",
  "aa1b3768c16d821f580e76c8e4c8e86d7dc78853": "400000000000000000000",
  "41098a81452317c19e3eef0bd123bbe178e9e9ca": "2800000000000000000000",
  "267148fd72c54f620a592fb92799319cc4532b5c": "410000000000000000000",
  "d7cdbd41fff20df727c70b6255c1ba7606055468": "200000000000000000000",
  "0e33fcbbc003510be35785b52a9c5d216bc005f4": "1880000000000000000000",
  "6727daf5b9d68efcab489fedec96d7f7325dd423": "2000000000000000000000",
  "cd0a161bc367ae0927a92aac9cf6e5086714efca": "2000000000000000000000",
  "612667f172135b950b2cd1de10afdece6857b873": "1000000000000000000000",
  "900194c4b1074305d19de405b0ac78280ecaf967": "1000000000000000000000",
  "51f55ef47e6456a418ab32b9221ed27dba6608ee": "4200000000000000000000",
  "0da532c910e3ac0dfb14db61cd739a93353fd05f": "1336866000000000000000",
  "21df2dcdaf74b2bf803404dd4de6a35eabec1bbd": "6920000000000000000000",
  "f0e7fb9e420a5340d536f40408344feaefc06aef": "1000000000000000000000",
  "6742a2cfce8d79a2c4a51b77747498912245cd6a": "258064000000000000000",
  "8663a241a0a89e70e182c845e2105c8ad7264bcf": "14825507000000000000000",
  "18e113d8177c691a61be785852fa5bb47aeebdaf": "1337000000000000000000",
  "1bec4d02ce85fc48feb62489841d85b170586a9b": "2400000000000000000000",
  "287cf9d0902ef819a7a5f149445bf1775ee8c47c": "16000000000000000000000",
  "28967280214e218a120c5dda37041b111ea36d74": "200000000000000000000",
  "a0b771951ce1deee363ae2b771b73e07c4b5e800": "1400000000000000000000",
  "29f8fba4c30772b057edbbe62ae7420c390572e1": "1000000000000000000000",
  "ee34c7e7995db9f187cff156918cfb6f13f6e003": "1960000000000000000000",
  "916bf7e3c545921d3206d900c24f14127cbd5e70": "18020000000000000000000",
  "93235f340d2863e18d2f4c52996516138d220267": "73800000000000000000",
  "7efec0c6253caf397f71287c1c07f6c9582b5b86": "482839000000000000000",
  "8d2e31b08803b2c5f13d398ecad88528209f6057": "9993000000000000000000",
  "964eab4b276b4cd8983e15ca72b106900fe41fce": "500000000000000000000",
  "eea1e97988de75d821cd28ad6822b22cce988b31": "520000000000000000000",
  "278c0bde630ec393b1e7267fc9d7d97019e4145b": "2000000000000000000000",
  "82e4461eb9d849f0041c1404219e4272c4900ab4": "2000000000000000000000",
  "4a73389298031b8816cca946421c199e18b343d6": "631254000000000000000",
  "9a5af31c7e06339ac8b4628d7c4db0ce0f45c8a4": "500000000000000000000",
  "cb9b5103e4ce89af4f64916150bff9eecb9faa5c": "500000000000000000000",
  "740f641614779dcfa88ed1d425d60db42a060ca6": "998630000000000000000",
  "a4e623451e7e94e7e89ba5ed95c8a83a62ffc4ea": "20000000000000000000",
  "25a500eeec7a662a841552b5168b707b0de21e9e": "10020000000000000000000",
  "185a7fc4ace368d233e620b2a45935661292bdf2": "20000000000000000000000",
  "9b68f67416a63bf4451a31164c92f672a68759e9": "60000000000000000000000",
  "a38b5bd81a9db9d2b21d5ec7c60552cd02ed561b": "6000000000000000000000",
  "61c830f1654718f075ccaba316faacb85b7d120b": "400000000000000000000",
  "8392e53776713578015bff4940cf43849d7dcba1": "153190000000000000000",
  "dc57477dafa42f705c7fe40eae9c81756e0225f1": "500044000000000000000",
  "febc3173bc9072136354002b7b4fb3bfc53f22f1": "370000000000000000000",
  "d78f84e38944a0e0255faece48ba4950d4bd39d2": "5000000000000000000000",
  "a7a3bb6139b0ada00c1f7f1f9f56d994ba4d1fa8": "2000000000000000000000",
  "aa3f29601a1331745e05c42830a15e71938a6237": "1700000000000000000000",
  "bec6640f4909b58cbf1e806342961d607595096c": "1999944000000000000000",
  "9be3c329b62a28b8b0886cbd8b99f8bc930ce3e6": "74500000000000000000",
  "e3eb2c0a132a524f72ccc0d60fee8b41685d39e2": "1970000000000000000000",
  "90b1f370f9c1eb0be0fb8e2b8ad96a416371dd8a": "900000000000000000000",
  "f2742e6859c569d5f2108351e0bf4dca352a48a8": "10000000000000000000000",
  "b134c004391ab4992878337a51ec242f42285742": "2000000000000000000000",
  "ab7416ff32254951cbbc624ec7fb45fc7ecaa872": "340000000000000000000",
  "9795f64319fc17dd0f8261f9d206fb66b64cd0c9": "200000000000000000000",
  "64e03ef070a54703b7184e48276c5c0077ef4b34": "320000000000000000000",
  "3430a16381f869f6ea5423915855e800883525a9": "17900000000000000000000",
  "f4a367b166d2991a2bfda9f56463a09f252c1b1d": "1970000000000000000000",
  "77c4a697e603d42b12056cbba761e7f51d0443f5": "680000000000000000000",
  "153ef58a1e2e7a3eb6b459a80ab2a547c94182a2": "96000000000000000000000",
  "6dbe8abfa1742806263981371bf3d35590806b6e": "20000000000000000000000",
  "4c99dae96481e807c1f99f8b7fbde29b7547c5bf": "150000000000000000000",
  "d5b9d277d8aad20697a51f76e20978996bffe055": "143250000000000000000",
  "0f24105abbdaa03fa6309ef6c188e51f714a6e59": "200000000000000000000",
  "1cb6b2d7cfc559b7f41e6f56ab95c7c958cd0e4c": "1337000000000000000000",
  "f37b426547a1642d8033324814f0ede3114fc212": "401100000000000000000",
  "318f1f8bd220b0558b95fb33100ffdbb640d7ca6": "4000000000000000000000",
  "206d55d5792a514ec108e090599f2a065e501185": "200550000000000000000",
  "11d2247a221e70c2d66d17ee138d38c55ffb8640": "10000000000000000000000",
  "e8de725eca5def805ff7941d31ac1c2e342dfe95": "2462500000000000000000",
  "d561cbbc05515de73ab8cf9eae1357341e7dfdf4": "6000000000000000000000",
  "0455dcec8a7fc4461bfd7f37456fce3f4c3caac7": "400000000000000000000",
  "5161fd49e847f67455f1c8bb7abb36e985260d03": "1200000000000000000000",
  "8e073bad25e42218615f4a0e6b2ea8f8de2230c0": "2402500000000000000000",
  "6c08a6dc0173c7342955d1d3f2c065d62f83aec7": "20000000000000000000",
  "95cb6d8a6379f94aba8b885669562c4d448e56a7": "2000000000000000000000",
  "2805415e1d7fdec6dedfb89e521d10592d743c10": "100000000000000000000",
  "daacdaf42226d15cb1cf98fa15048c7f4ceefe69": "300000000000000000000",
  "e33df4ce80ccb62a76b12bcdfcecc46289973aa9": "6000000000000000000000",
  "8f8cd26e82e7c6defd02dfad07979021cbf7150c": "3000000000000000000000",
  "77a17122fa31b98f1711d32a99f03ec326f33d08": "1700000000000000000000",
  "6f791d359bc3536a315d6382b88311af8ed6da47": "92000000000000000000",
  "de30e49e5ab313214d2f01dcabce8940b81b1c76": "197000000000000000000",
  "cf9be9b9ab86c66b59968e67b8d4dcff46b1814a": "660000000000000000000",
  "7fdfc88d78bf1b285ac64f1adb35dc11fcb03951": "2287900000000000000000",
  "c5134cfbb1df7a20b0ed7057622eeed280947dad": "3800000000000000000000",
  "fa9ec8efe08686fa58c181335872ba698560ecab": "1999944000000000000000",
  "f6a8635757c5e8c134d20d028cf778cf8609e46a": "1459416000000000000000",
  "6265b2e7730f36b776b52d0c9d02ada55d8e3cb6": "1000000000000000000000",
  "6a8cea2de84a8df997fd3f84e3083d93de57cda9": "100007000000000000000",
  "1b7ed974b6e234ce81247498429a5bd4a0a2d139": "2000000000000000000000",
  "9ba53dc8c95e9a472feba2c4e32c1dc4dd7bab46": "1337000000000000000000",
  "d7b740dff8c457668fdf74f6a266bfc1dcb723f9": "20000000000000000000",
  "07bc2cc8eedc01970700efc9c4fb36735e98cd71": "4000000000000000000000",
  "3e1c962063e0d5295941f210dca3ab531eec8809": "3000000000000000000000",
  "b447571dacbb3ecbb6d1cf0b0c8f3838e52324e2": "30199000000000000000",
  "87764e3677eef604cbc59aed24abdc566b09fc25": "3000000000000000000000",
  "03aa622881236dd0f4940c24c324ff8b7b7e2186": "3200000000000000000000",
  "a4a7d306f510cd58359428c0d2f7c3609d5674d7": "3349000000000000000000",
  "3c83c1701db0388b68210d00f5717cd9bd322c6a": "30000000000000000000000",
  "047d5a26d7ad8f8e70600f70a398ddaa1c2db26f": "6000000000000000000000",
  "43767bf7fd2af95b72e9312da9443cb1688e4343": "300000000000000000000",
  "34a85d6d243fb1dfb7d1d2d44f536e947a4cee9e": "20000000000000000000000",
  "65a9dad42e1632ba3e4e49623fab62a17e4d3611": "93120000000000000000",
  "48e0cbd67f18acdb7a6291e1254db32e0972737f": "100007000000000000000",
  "a5de5e434fdcdd688f1c31b6fb512cb196724701": "800000000000000000000",
  "6d63d38ee8b90e0e6ed8f192eda051b2d6a58bfd": "30000000000000000000",
  "b079bb4d9866143a6da72ae7ac0022062981315c": "760000000000000000000",
  "c0413f5a7c2d9a4b8108289ef6ecd271781524f4": "50000000000000000000000",
  "a91a5a7b341f99c535144e20be9c6b3bb4c28e4d": "5431790000000000000000",
  "993f146178605e66d517be782ef0b3c61a4e1925": "7011998000000000000000",
  "966c04781cb5e67dde3235d7f8620e1ab663a9a5": "75800000000000000000000",
  "b3f82a87e59a39d0d2808f0751eb72c2329cdcc5": "5000000000000000000000",
  "9b77ebced7e215f0920e8c2b870024f6ecb2ff31": "1000000000000000000000",
  "fe697ff22ca547bfc95e33d960da605c6763f35b": "1325000000000000000000",
  "480af52076009ca73781b70e43b95916a62203ab": "924171000000000000000",
  "a9dc0424c6969d798358b393b1933a1f51bee00a": "20000000000000000000000",
  "7aba56f63a48bc0817d6b97039039a7ad62fae2e": "600000000000000000000",
  "59d139e2e40c7b97239d23dfaca33858f602d22b": "2000000000000000000000",
  "8d6170ff66978e773bb621bf72b1ba7be3a7f87e": "200000000000000000000",
  "d668523a90f0293d65c538d2dd6c57673710196e": "39500000000000000000",
  "bbb5a0f4802c8648009e8a6998af352cde87544f": "95500000000000000000",
  "fc43829ac787ff88aaf183ba352aadbf5a15b193": "3960000000000000000000",
  "fe22a0b388668d1ae2643e771dacf38a434223cc": "4000304000000000000000",
  "092acb624b08c05510189bbbe21e6524d644ccad": "18200000000000000000",
  "8f0538ed71da1155e0f3bde5667ceb84318a1a87": "1940000000000000000000",
  "06994cd83aa2640a97b2600b41339d1e0d3ede6c": "250000000000000000000",
  "9d460c1b379ddb19a8c85b4c6747050ddf17a875": "3340000000000000000000",
  "77a769fafdecf4a638762d5ba3969df63120a41d": "2000000000000000000000",
  "5f375b86600c40cca8b2676b7a1a1d1644c5f52c": "78838000000000000000",
  "15ee0fc63ebf1b1fc49d7bb38f8863823a2e17d2": "1910000000000000000000",
  "6651736fb59b91fee9c93aa0bd6ea2f7b2506180": "500000000000000000000",
  "361d9ed80b5bd27cf9f1226f26753258ee5f9b3f": "3530900000000000000000",
  "c9b6b686111691ee6aa197c7231a88dc60bd295d": "500000000000000000000",
  "e9b4a4853577a9dbcc2e795be0310d1bed28641a": "1000000000000000000000",
  "36758e049cd98bcea12277a676f9297362890023": "4000000000000000000000",
  "6bb50813146a9add42ee22038c9f1f7469d47f47": "200200000000000000000",
  "6de4b581385cf7fc9fe8c77d131fe2ee7724c76a": "2308840000000000000000",
  "d2a5a024230a57ccc666760b89b0e26cafd189c7": "49997115000000000000000",
  "65af9087e05167715497c9a5a749189489004def": "835000000000000000000",
  "ead21c1deccfbf1c5cd96688a2476b69ba07ce4a": "72800000000000000000",
  "e308435204793764f5fcbe65eb510f5a744a655a": "200000000000000000000",
  "9376dce2af2ec8dcda741b7e7345664681d93668": "1000000000000000000000",
  "a1b47c4d0ed6018842e6cfc8630ac3a3142e5e6b": "20000000000000000000",
  "e2198c8ca1b399f7521561fd5384a7132fba486b": "1015200000000000000000",
  "92c13fe0d6ce87fd50e03def9fa6400509bd7073": "40000000000000000000",
  "7517f16c28d132bb40e3ba36c6aef131c462da17": "18200000000000000000",
  "6a023af57d584d845e698736f130db9db40dfa9a": "98800000000000000000",
  "1518627b88351fede796d3f3083364fbd4887b0c": "16000000000000000000000",
  "f5b6e9061a4eb096160777e26762cf48bdd8b55d": "254030000000000000000",
  "28073efc17d05cab3195c2db332b61984777a612": "1000000000000000000000",
  "f06a854a3c5dc36d1c49f4c87d6db333b57e4add": "10000000000000000000000",
  "9225983860a1cb4623c72480ac16272b0c95e5f5": "2000000000000000000000",
  "5260dc51ee07bddaababb9ee744b393c7f4793a6": "34040000000000000000",
  "0f127bbf8e311caea2ba502a33feced3f730ba42": "188000000000000000000",
  "17d521a8d9779023f7164d233c3b6420ffd223ed": "20000000000000000000",
  "8c2b7d8b608d28b77f5caa9cd645242a823e4cd9": "1820000000000000000000",
  "6e866d032d405abdd65cf651411d803796c22311": "2000000000000000000000",
  "dc51b2dc9d247a1d0e5bc36ca3156f7af21ff9f6": "1000000000000000000000",
  "c84d9bea0a7b9f140220fd8b9097cfbfd5edf564": "123047000000000000000",
  "ff86e5e8e15b53909600e41308dab75f0e24e46b": "902400000000000000000",
  "d7164aa261c09ad9b2b5068d453ed8eb6aa13083": "3000000000000000000000",
  "76aaf8c1ac012f8752d4c09bb46607b6651d5ca8": "20000000000000000000",
  "41786a10d447f484d33244ccb7facd8b427b5b8c": "1000000000000000000000",
  "2e0c57b47150f95aa6a7e16ab9b1cbf54328979a": "100000000000000000000",
  "3f747237806fed3f828a6852eb0867f79027af89": "1500000000000000000000",
  "a568db4d57e4d67462d733c69a9e0fe26e218327": "1096140000000000000000",
  "1f88f8a1338fc7c10976abcd3fb8d38554b5ec9c": "13400000000000000000",
  "d1ea4d72a67b5b3e0f315559f52bd0614d713069": "2000000000000000000000",
  "bfaeb91067617dcf8b44172b02af615674835dba": "160661000000000000000",
  "b71a13ba8e95167b80331b52d69e37054fe7a826": "200000000000000000000",
  "b67a80f170197d96cdcc4ab6cba627b4afa6e12c": "2400000000000000000000",
  "35af040a0cc2337a76af288154c7561e1a233349": "1000000000000000000000",
  "c86190904b8d079ec010e462cbffc90834ffaa5c": "10100000000000000000000",
  "383304dd7a5720b29c1a10f60342219f48032f80": "5600000000000000000000",
  "191313525238a21c767457a91374f02200c55448": "116400000000000000000",
  "cc4a2f2cf86cf3e43375f360a4734691195f1490": "1348127000000000000000",
  "4e020779b5ddd3df228a00cb48c2fc979da6ae38": "2000000000000000000000",
  "e206fb7324e9deb79e19903496d6961b9be56603": "100000000000000000000",
  "3ae160e3cd60ae31b9d6742d68e14e76bd96c517": "30000000000000000000",
  "1f7d8e86d6eeb02545aad90e91327bd369d7d2f3": "20000000000000000000",
  "68c7d1711b011a33f16f1f55b5c902cce970bdd7": "152000000000000000000",
  "637be71b3aa815ff453d5642f73074450b64c82a": "2000000000000000000000",
  "1584a2c066b7a455dbd6ae2807a7334e83c35fa5": "130000000000000000000",
  "9c05e9d0f0758e795303717e31da213ca157e686": "1000000000000000000000",
  "4f1a2da54a4c6da19d142412e56e815741db2325": "100000000000000000000",
  "9a4ca8b82117894e43db72b9fa78f0b9b93ace09": "50000000000000000000",
  "26c99f8849c9802b83c861217fd07a9e84cdb79d": "300000000000000000000",
  "45c0d19f0b8e054f9e893836d5ecae7901af2812": "5000000000000000000000",
  "00dc01cbf44978a42e8de8e436edf94205cfb6ec": "1458440000000000000000",
  "de7dee220f0457a7187d56c1c41f2eb00ac56021": "629924000000000000000",
  "1c128bd6cda5fca27575e4b43b3253c8c4172afe": "2000000000000000000000",
  "666746fb93d1935c5a3c684e725010c4fad0b1d8": "20000000000000000000",
  "51d78b178d707e396e8710965c4f41b1a1d9179d": "110600000000000000000",
  "68f7573cd457e14c03fea43e302d30347c10705c": "5000000000000000000000",
  "9d30cb237bc096f17036fc80dd21ca68992ca2d9": "30380000000000000000000",
  "fbcfcc4a7b0f26cf26e9f3332132e2fc6a230766": "8000000000000000000000",
  "b166e37d2e501ae73c84142b5ffb5aa655dd5a99": "1999000000000000000000",
  "6df24f6685a62f791ba337bf3ff67e91f3d4bc3a": "2166000000000000000000",
  "92e435340e9d253c00256389f52b067d55974e76": "268000000000000000000",
  "ea53d26564859d9e90bb0e53b7abf560e0162c38": "400000000000000000000",
  "e26657f0ed201ea2392c9222b80a7003608ddf30": "40000000000000000000",
  "f4177a0d85d48b0e264211ce2aa2efd3f1b47f08": "3593425000000000000000",
  "9d47ba5b4c8505ad8da42934280b61a0e1e8b971": "100000000000000000000",
  "63c2a3d235e5eeabd0d4a6afdb89d94627396495": "1241620000000000000000",
  "446a8039cecf9dce4879cbcaf3493bf545a88610": "7000000000000000000000",
  "7fa37ed67887751a471f0eb306be44e0dbcd6089": "1060000000000000000000",
  "26d4a16891f52922789217fcd886f7fce296d400": "2000000000000000000000",
  "487e108502b0b189ef9c8c6da4d0db6261eec6c0": "1910000000000000000000",
  "7484d26becc1eea8c6315ec3ee0a450117dc86a0": "12000000000000000000000",
  "ad9e97a0482f353a05c0f792b977b6c7e811fa5f": "200000000000000000000",
  "2273bad7bc4e487622d175ef7a66988b6a93c4ee": "20000000000000000000",
  "3b93b16136f11eaf10996c95990d3b2739ccea5f": "10000000000000000000000",
  "f3f1fa3918ca34e2cf7e84670b1f4d8eca160db3": "680000000000000000000",
  "88a2154430c0e41147d3c1fee3b3b006f851edbd": "999972000000000000000",
  "25185f325acf2d64500698f65c769ddf68301602": "5000000000000000000000",
  "e9cafe41a5e8bbd90ba02d9e06585b4eb546c57f": "2000000000000000000000",
  "95681cdae69b2049ce101e325c759892cac3f811": "2857600000000000000000",
  "475066f9ad26655196d5535327bbeb9b7929cb04": "3040000000000000000000",
  "6685fd2e2544702c360b8bb9ee78f130dad16da5": "2000000000000000000000",
  "45e68db94c7d0ab7ac41857a71d67147870f4e71": "400000000000000000000000",
  "4ad95d188d6464709add2555fb4d97fe1ebf311f": "346000000000000000000",
  "73bedd6fda7ba3272185087b6351fc133d484e37": "5057200000000000000000",
  "1ea4715504c6af107b0194f4f7b1cb6fcccd6f4b": "590598000000000000000",
  "77306ffe2e4a8f3ca826c1a249f7212da43aeffd": "20000000000000000000000",
  "eb453f5a3adddd8ab56750fadb0fe7f94d9c89e7": "20000000000000000000",
  "7201d1c06920cd397ae8ad869bcda6e47ffb1b5a": "20000000000000000000",
  "821cb5cd05c7ef909fe1be60733d8963d760dc41": "4000000000000000000000",
  "496e319592b341eaccd778dda7c8196d54cac775": "9250000000000000000000",
  "88609e0a465b6e99fce907166d57e9da0814f5c8": "20000000000000000000000",
  "c7ec62b804b1f69b1e3070b5d362c62fb309b070": "13068074000000000000000",
  "3eb9ef06d0c259040319947e8c7a6812aa0253d8": "167000000000000000000",
  "cbf37ff854a2f1ce53934494777892d3ec655782": "10000000000000000000000",
  "02b1af72339b2a2256389fd64607de24f0de600a": "2000000000000000000000",
  "a8beb91c2b99c8964aa95b6b4a184b1269fc3483": "400000000000000000000",
  "922a20c79a1d3a26dd3829677bf1d45c8f672bb6": "4000000000000000000000",
  "c5843399d150066bf7979c34ba294620368ad7c0": "200000000000000000000",
  "8cd0cd22e620eda79c0461e896c93c44837e2968": "2000000000000000000000",
  "6170dd0687bd55ca88b87adef51cfdc55c4dd458": "2005160000000000000000",
  "eed384ef2d41d9d203974e57c12328ea760e08ea": "1000000000000000000000",
  "b129a5cb7105fe810bd895dc7206a991a4545488": "30000000000000000000",
  "3872f48dc5e3f817bc6b2ad2d030fc5e0471193d": "4000000000000000000000",
  "514b7512c9ae5ea63cbf11715b63f21e18d296c1": "1999944000000000000000",
  "7ab256b204800af20137fabcc916a23258752501": "20000000000000000000000",
  "fc66faba277f4b5de64ad45eb19c31e00ced3ed5": "5640000000000000000000",
  "39824f8bced176fd3ea22ec6a493d0ccc33fc147": "4000000000000000000000",
  "e338e859fe2e8c15554848b75caecda877a0e832": "1801800000000000000000",
  "e53c68796212033e4e6f9cff56e19c461eb454f9": "1000000000000000000000",
  "8461ecc4a6a45eb1a5b947fb86b88069b91fcd6f": "2000000000000000000000",
  "6b4b99cb3fa9f7b74ce3a48317b1cd13090a1a7a": "57300000000000000000",
  "97de21e421c37fe4b8025f9a51b7b390b5df7804": "80000000000000000000000",
  "d25aecd7eb8bd6345b063b5dbd271c77d3514494": "1820000000000000000000",
  "57b23d6a1adc06c652a779c6a7fb6b95b9fead66": "200000000000000000000",
  "0d658014a199061cf6b39433140303c20ffd4e5a": "8200000000000000000000",
  "30eac740e4f02cb56eef0526e5d300322600d03e": "1970000000000000000000",
  "4eead40aad8c73ef08fc84bc0a92c9092f6a36bf": "26740000000000000000",
  "30f7d025d16f7bee105580486f9f561c7bae3fef": "500000000000000000000",
  "0977bfba038a44fb49b03970d8d8cf2cb61f8b25": "420000000000000000000",
  "b14bbeff70720975dc6191b2a44ff49f2672873c": "143000000000000000000",
  "d588c3a5df228185d98ee7e60748255cdea68b01": "4000000000000000000000",
  "225d35faedb391c7bc2db7fa9071160405996d00": "167774000000000000000",
  "c0e457bd56ec36a1246bfa3230fff38e5926ef22": "1940000000000000000000",
  "2a9c57fe7b6b138a920d676f3c76b6c2a0eef699": "9400000000000000000000",
  "36df8f883c1273ec8a171f7a33cfd649b1fe6075": "227290000000000000000",
  "234f46bab73fe45d31bf87f0a1e0466199f2ebac": "485000000000000000000",
  "a2e1b8aa900e9c139b3fa122354f6156d92a18b1": "500000000000000000000",
  "517cd7608e5d0d83a26b717f3603dac2277dc3a4": "2000000000000000000000",
  "75f7539d309e9039989efe2e8b2dbd865a0df088": "2460000000000000000000",
  "4b792e29683eb586e394bb33526c6001b397999e": "600000000000000000000",
  "a34f9d568bf7afd94c2a5b8a5ff55c66c4087999": "2444000000000000000000",
  "4b31bf41abc75c9ae2cd8f7f35163b6e2b745054": "382000000000000000000",
  "e35453eef2cc3c7a044d0ac134ba615908fa82ee": "147510000000000000000",
  "7aa79ac04316cc8d08f20065baa6d4142897d54e": "1400000000000000000000",
  "f1dc8ac81042c67a9c3c6792b230c46ac016ca10": "200000000000000000000",
  "2bb366b9edcb0da680f0e10b3b6e28748190d6c3": "5799400000000000000000",
  "a567770b6ae320bdde50f904d663e746a61dace6": "2000000000000000000000",
  "d9d42fd13ebd4bf69cac5e9c7e82483ab46dd7e9": "5348000000000000000000",
  "27830c5f6023afaaf79745676c204a0faccda0ba": "240000000000000000000",
  "3cb179cb4801a99b95c3b0c324a2bdc101a65360": "26000000000000000000",
  "976e3ceaf3f1af51f8c29aff5d7fa21f0386d8ee": "240000000000000000000",
  "752a5ee232612cd3005fb26e5b597de19f776be6": "5460000000000000000000",
  "7d5aa33fc14b51841a06906edb2bb49c2a117269": "300048000000000000000",
  "55ca6abe79ea2497f46fdbb830346010fe469cbe": "5730000000000000000000",
  "6bec311ad05008b4af353c958c40bd06739a3ff3": "16380000000000000000000",
  "30e9698cf1e08a9d048bd8d8048f28be7ed9409f": "6685000000000000000000",
  "9afa536b4c66bc38d875c4b30099d9261fdb38eb": "205981000000000000000",
  "6b63a2dfb2bcd0caec0022b88be30c1451ea56aa": "809021000000000000000",
  "d07be0f90997caf903c8ac1d53cde904fb190741": "1000200000000000000000",
  "893cdddf5377f3c751bf2e541120045a47cba101": "100000000000000000000",
  "c1cdc601f89c0428b31302d187e0dc08ad7d1c57": "6000000000000000000000",
  "8f8acb107607388479f64baaabea8ff007ada97d": "27281800000000000000000",
  "88bc43012edb0ea9f062ac437843250a39b78fbb": "20000000000000000000000",
  "fcfc3a5004d678613f0b36a642269a7f371c3f6a": "1000000000000000000000",
  "f509557e90183fbf0f0651a786487bcc428ba175": "194000000000000000000",
  "e3d915eda3b825d6ee4af9328d32ac18ada35497": "500000000000000000000",
  "f237ef05261c34d79cc22b860de0f17f793c3860": "200000000000000000000",
  "a3a2e319e7d3a1448b5aa2468953160c2dbcba71": "2000000000000000000000",
  "3a368efe4ad786e26395ec9fc6ad698cae29fe01": "632200000000000000000",
  "8e3240b0810e1cf407a500804740cf8d616432a4": "40309000000000000000",
  "5691dd2f6745f20e22d2e1d1b955aa2903d65656": "1969606000000000000000",
  "5f93ff832774db5114c55bb4bf44ccf3b58f903f": "192026650000000000000000",
  "2c1cc6e18c152488ba11c2cc1bcefa2df306abd1": "1670000000000000000000",
  "bde9786a84e75b48f18e726dd78d70e4af3ed802": "5730000000000000000000",
  "79551cede376f747e3716c8d79400d766d2e0195": "46250000000000000000000",
  "49f028395b5a86c9e07f7778630e4c2e3d373a77": "122735000000000000000",
  "6a3694424c7cc6b8bcd9bccaba540cc1f5df18d7": "2000000000000000000000",
  "068e29b3f191c812a6393918f71ab933ae6847f2": "1999944000000000000000",
  "6e64e6129f224e378c0e6e736a7e7a06c211e9ec": "1000000000000000000000",
  "c4c15318d370c73318cc18bdd466dbaa4c6603bf": "19700000000000000000",
  "8035bcffaefdeeea35830c497d14289d362023de": "300000000000000000000",
  "a997dfc7986a27050848fa1c64d7a7d6e07acca2": "143000000000000000000",
  "2fe13a8d0785de8758a5e41876c36e916cf75074": "4000000000000000000000",
  "6f24c9af2b763480515d1b0951bb77a540f1e3f9": "1970000000000000000000",
  "4c23b370fc992bb67cec06e26715b62f0b3a4ac3": "10000000000000000000000",
  "4ac07673e42f64c1a25ec2fa2d86e5aa2b34e039": "2000000000000000000000",
  "117db836377fe15455e02c2ebda40b1ceb551b19": "6000000000000000000000",
  "ef1c0477f1184d60accab374d374557a0a3e10f3": "152000000000000000000",
  "99fe0d201228a753145655d428eb9fd94985d36d": "1939268000000000000000",
  "b3731b046c8ac695a127fd79d0a5d5fa6ae6d12e": "1998000000000000000000",
  "dce30c31f3ca66721ecb213c809aab561d9b52e4": "2000000000000000000000",
  "ddd69c5b9bf5eb5a39cee7c3341a120d973fdb34": "1987730000000000000000",
  "216e41864ef98f060da08ecae19ad1166a17d036": "5730000000000000000000",
  "6a53d41ae4a752b21abed5374649953a513de5e5": "2000000000000000000000",
  "20dd8fcbb46ea46fe381a68b8ca0ea5be21fe9a5": "2000000000000000000000",
  "19732bf973055dbd91a4533adaa2149a91d38380": "2000000000000000000000",
  "51ea1c0934e3d04022ed9c95a087a150ef705e81": "6280000000000000000000",
  "a0de5c601e696635c698b7ae9ca4539fc7b941ec": "346150000000000000000",
  "94e1f5cb9b8abace03a1a6428256553b690c2355": "20000000000000000000",
  "a539b4a401b584dfe0f344b1b422c65543167e2e": "200000000000000000000",
  "50584d9206a46ce15c301117ee28f15c30e60e75": "13400000000000000000",
  "856eb204241a87830fb229031343dc30854f581a": "1000000000000000000000",
  "9dd46b1c6d3f05e29e9c6f037eed9a595af4a9aa": "500000000000000000000",
  "8925da4549e15155e57a628522cea9dddf627d81": "1000070000000000000000",
  "a89df34859edd7c820db887740d8ff9e15157c7b": "2000000000000000000000",
  "ad9f4c890a3b511cee51dfe6cfd7f1093b76412c": "506600000000000000000",
  "f8c7f34a38b31801da43063477b12b27d0f203ff": "494800000000000000000",
  "a642501004c90ea9c9ed1998ba140a4cd62c6f5f": "250543000000000000000",
  "508cf19119db70aa86454253da764a2cb1b2be1a": "1000000000000000000000",
  "2979741174a8c1ea0b7f9edf658177859417f512": "461283000000000000000",
  "654f524847b3a6acc0d3d5f1f362b603edf65f96": "8000000000000000000000",
  "5cf18fa7c8a7c0a2b3d5efd1990f64ddc569242c": "1000000000000000000000",
  "17e82e7078dc4fd9e879fb8a50667f53a5c54591": "200000000000000000000",
  "8b07d050754dc9ba230db01c310afdb5395aa1b3": "118080000000000000000",
  "5f77a107ab1226b3f95f10ee83aefc6c5dff3edc": "500000000000000000000",
  "475a6193572d4a4e59d7be09cb960ddd8c530e2f": "667323000000000000000",
  "6470a4f92ec6b0fccd01234fa59023e9ff1f3aac": "3000000000000000000000",
  "2fbcef3384d420e4bf61a0669990bc7054f1a5af": "2000000000000000000000",
  "bbabf6643beb4bd01c120bd0598a0987d82967d1": "3342500000000000000000",
  "41a2f2e6ecb86394ec0e338c0fc97e9c5583ded2": "2009400000000000000000",
  "fb9473cf7712350a1fa0395273fc80560752e4fb": "123300000000000000000",
  "38b2197106123387a0d4de368431a8bacdda30e2": "20000000000000000000",
  "5ed56115bd6505a88273df5c56839470d24a2db7": "65601000000000000000",
  "523f6d64690fdacd942853591bb0ff20d3656d95": "1820000000000000000000",
  "55caff4bba04d220c9a5d2018672ec85e31ef83e": "2000000000000000000000",
  "65af8d8b5b1d1eedfa77bcbc96c1b133f83306df": "98000000000000000000",
  "7456c5b2c5436e3e571008933f1805ccfe34e9ec": "1000000000000000000000",
  "a6eebbe464d39187bf80ca9c13d72027ec5ba8be": "3000000000000000000000",
  "dd35cfdbcb993395537aecc9f59085a8d5ddb6f5": "1000000000000000000000",
  "98e2b6d606fd2d6991c9d6d4077fdf3fdd4585da": "901520000000000000000",
  "860f5ffc10de767ded807f71e861d647dfd219b1": "10000000000000000000000",
  "1a644a50cbc2aee823bd2bf243e825be4d47df02": "100007000000000000000",
  "a8455b411765d6901e311e726403091e42c56683": "3380000000000000000000",
  "3a86ee94862b743dd34f410969d94e2c5652d4ad": "201610000000000000000",
  "a57360f002e0d64d2d74457d8ca4857ee00bcddf": "335780000000000000000",
  "e59b3bd300893f97233ef947c46f7217e392f7e9": "1000000000000000000000",
  "9f3a74fd5e7edcc1162993171381cbb632b7cff0": "10000000000000000000000",
  "675d5caa609bf70a18aca580465d8fb7310d1bbb": "20000000000000000000000",
  "77f609ca8720a023262c55c46f2d26fb3930ac69": "17300000000000000000",
  "f8ac4a39b53c11307820973b441365cffe596f66": "2000000000000000000000",
  "112634b4ec30ff786e024159f796a57939ea144e": "1999944000000000000000",
  "49d2c28ee9bc545eaaf7fd14c27c4073b4bb5f1a": "1474134000000000000000",
  "91cc46aa379f856a6640dccd5a648a7902f849d9": "200000000000000000000",
  "b46440c797a556e04c7d9104660491f96bb076bf": "14900000000000000000",
  "e5968797468ef767101b761d431fce14abffdbb4": "8040000000000000000000",
  "c0895efd056d9a3a81c3da578ada311bfb9356cf": "200000000000000000000",
  "76846f0de03b5a76971ead298cdd08843a4bc6c6": "15500000000000000000",
  "5f708eaf39d823946c51b3a3e9b7b3c003e26341": "1820000000000000000000",
  "24f7450ddbf18b020feb1a2032d9d54b633edf37": "50000000000000000000",
  "cae3a253bcb2cf4e13ba80c298ab0402da7c2aa0": "5400000000000000000000",
  "91e8810652e8e6161525d63bb7751dc20f676076": "725000000000000000000",
  "543629c95cdef428ad37d453ca9538a9f90900ac": "43250000000000000000000",
  "6e79edd4845b076e4cd88d188b6e432dd93f35aa": "955000000000000000000",
  "bd325d4029e0d8729f6d399c478224ae9e7ae41e": "3880000000000000000000",
  "42cecfd2921079c2d7df3f08b07aa3beee5e219a": "1000000000000000000000",
  "3690246ba3c80679e22eac4412a1aefce6d7cd82": "20000000000000000000000",
  "577aeee8d4bc08fc97ab156ed57fb970925366be": "333046000000000000000",
  "fe00bf439911a553982db638039245bcf032dbdc": "394000000000000000000",
  "91f624b24a1fa5a056fe571229e7379db14b9a1e": "11999974000000000000000",
  "f206d328e471d0117b246d2a4619827709e96df3": "3001000000000000000000",
  "073f1ed1c9c3e9c52a9b0249a5c1caa0571fdf05": "70400000000000000000",
  "f56048dd2181d4a36f64fcecc6215481e42abc15": "200000000000000000000",
  "ef76a4cd8febcbc9b818f17828f8d93473f3f3cb": "4000000000000000000000",
  "1031e0ecb54985ae21af1793950dc811888fde7c": "20000000000000000000",
  "8e0fee38685a94aabcd7ce857b6b1409824f75b8": "500000000000000000000",
  "f0cbef84e169630098d4e301b20208ef05846ac9": "259084000000000000000",
  "bbca65b3266ea2fb73a03f921635f912c7bede00": "1970000000000000000000",
  "0aec2e426ed6cc0cf3c249c1897eac47a7faa9bd": "200000000000000000000",
  "b8f30758faa808dbc919aa7b425ec922b93b8129": "1000076000000000000000",
  "936dcf000194e3bff50ac5b4243a3ba014d661d8": "10000000000000000000000",
  "b14ddb0386fb606398b8cc47565afae00ff1d66a": "2973024000000000000000",
  "2ec95822eb887bc113b4712a4dfd7f13b097b5e7": "1000000000000000000000",
  "0136a5af6c3299c6b5f005fdaddb148c070b299b": "20368000000000000000",
  "37cb868d2c3f95b257611eb34a4188d58b749802": "2000000000000000000000",
  "cd7f09d7ed66d0c38bc5ad4e32b7f2b08dc1b30d": "1148000000000000000000",
  "b5fa8184e43ed3e0b8ab91216461b3528d84fd09": "2680000000000000000000",
  "3dbf0dbfd77890800533f09dea8301b9f025d2a6": "1000000000000000000000",
  "b553d25d6b5421e81c2ad05e0b8ba751f8f010e3": "2000000000000000000000",
  "dbf8b13967f55125272de0562536c450ba5655a0": "2046830000000000000000",
  "0f6e840a3f2a24647d8e43e09d45c7c335df4248": "2500000000000000000000",
  "fa2fd29d03fee9a07893df3a269f56b72f2e1e64": "10000000000000000000000",
  "8b57b2bc83cc8d4de331204e893f2f3b1db1079a": "40000000000000000000",
  "7f541491d2ac00d2612f94aa7f0bcb014651fbd4": "376000000000000000000",
  "4f4a9be10cd5d3fb5de48c17be296f895690645b": "40000000000000000000000",
  "45d1c9eedf7cab41a779057b79395f5428d80528": "2000000000000000000000",
  "662334814724935b7931ddca6100e00d467727cd": "637000000000000000000",
  "2c52c984102ee0cd3e31821b84d408930efa1ac7": "2000000000000000000000",
  "000d836201318ec6899a67540690382780743280": "200000000000000000000",
  "81498ca07b0f2f17e8bbc7e61a7f4ae7be66b78b": "101600000000000000000",
  "7860a3de38df382ae4a4dce18c0c07b98bce3dfa": "1000000000000000000000",
  "5e8e4df18cf0af770978a8df8dac90931510a679": "2000000000000000000000",
  "05d68dad61d3bbdfb3f779265c49474aff3fcd30": "39399000000000000000",
  "96eafbf2fb6f4db9a436a74c45b5654452e23819": "20000000000000000000",
  "d7d7f2caa462a41b3b30a34aeb3ba61010e2626f": "2000000000000000000000",
  "0b71f554122469ef978e2f1fefd7cbb410982772": "3880000000000000000000",
  "504666ce8931175e11a5ed11c1dcaa06e57f4e66": "11792000000000000000000",
  "d00f067286c0fbd082f9f4a61083ec76deb3cee6": "1000000000000000000000",
  "02e4cb22be46258a40e16d4338d802fffd00c151": "379786000000000000000",
  "1c13d38637b9a47ce79d37a86f50fb409c060728": "1337000000000000000000",
  "e30212b2011bb56bdbf1bc35690f3a4e0fd905ea": "8022000000000000000000",
  "1df6911672679bb0ef3509038c0c27e394fdfe30": "540000000000000000000",
  "2b8fe4166e23d11963c0932b8ade8e0145ea0770": "43250000000000000000000",
  "6509eeb1347e842ffb413e37155e2cbc738273fd": "2000000000000000000000",
  "8b7e9f6f05f7e36476a16e3e7100c9031cf404af": "1000000000000000000000",
  "bec8caf7ee49468fee552eff3ac5234eb9b17d42": "2000000000000000000000",
  "38898bbb4553e00bbfd0cf268b2fc464d154add5": "320000000000000000000",
  "cbb3189e4bd7f45f178b1c30c76e26314d4a4b0a": "295007000000000000000",
  "be1cd7f4c472070968f3bde268366b21eeea8321": "4300000000000000000000",
  "976a18536af41874426308871bcd1512a775c9f8": "10000000000000000000000",
  "e9c758f8da41e3346e4350e5ac3976345c6c1082": "1930050000000000000000",
  "64ec8a5b743f3479e707dae9ee20ddaa4f40f1d9": "200000000000000000000",
  "9e01765aff08bc220550aca5ea2e1ce8e5b09923": "1000000000000000000000",
  "ba0f39023bdb29eb1862a9f9059cab5d306e662f": "2000000000000000000000",
  "2baf8d6e221174124820ee492b9459ec4fadafbb": "2000000000000000000000",
  "655d5cd7489629e2413c2105b5a172d933c27af8": "4040060000000000000000",
  "badc2aef9f5951a8d78a6b35c3d0b3a4e6e2e739": "6000000000000000000000",
  "e64f6e1d6401b56c076b64a1b0867d0b2f310d4e": "51570000000000000000",
  "7a8563867901206f3f2bf0fa3e1c8109cabccd85": "137000000000000000000",
  "d17fbe22d90462ed37280670a2ea0b3086a0d6d6": "199955000000000000000",
  "e96d7d4cdd15553a4e4d316d6d6480ca3cea1e38": "12200000000000000000000",
  "f04d2c91efb6e9c45ffbe74b434c8c5f2b028f1f": "1000000000000000000000",
  "81164deb10814ae08391f32c08667b6248c27d7a": "394000000000000000000",
  "7f5ae05ae0f8cbe5dfe721f044d7a7bef4c27997": "60000000000000000000",
  "c982586d63b0d74c201b1af8418372e30c7616be": "100000000000000000000",
  "64cf0935bf19d2cebbecd8780d27d2e2b2c34166": "1970000000000000000000",
  "cd566ad7b883f01fd3998a9a58a9dee4724ddca5": "58848000000000000000",
  "9da609fa3a7e6cf2cc0e70cdabe78dc4e382e11e": "1200000000000000000000",
  "0d69100c395ce6c5eaadf95d05d872837ededd21": "400000000000000000000",
  "fe91eccf2bd566afa11696c5049fa84c69630a52": "1940000000000000000000",
  "005d0ee8155ec0a6ff6808552ca5f16bb5be323a": "197000000000000000000",
  "3e5cb8928c417825c03a3bfcc52183e5c91e42d7": "4264790000000000000000",
  "9c1b771f09af882af0643083de2aa79dc097c40e": "2480000000000000000000",
  "eba388b0da27c87b1cc0eac6c57b2c5a0b459c1a": "6800000000000000000000",
  "7529f3797bb6a20f7ea6492419c84c867641d81c": "2000000000000000000000",
  "532a7da0a5ad7407468d3be8e07e69c7dd64e861": "500000000000000000000",
  "de82cc8d4a1bb1d9434392965b3e80bad3c03d4f": "1477500000000000000000",
  "4a82694fa29d9e213202a1a209285df6e745c209": "4000000000000000000000",
  "3e53ff2107a8debe3328493a92a586a7e1f49758": "23143470000000000000000",
  "b2ddb786d3794e270187d0451ad6c8b79e0e8745": "400000000000000000000",
  "6ebcf9957f5fc5e985add475223b04b8c14a7aed": "1730000000000000000000",
  "c5c7590b5621ecf8358588de9b6890f2626143f1": "3000000000000000000000",
  "ae4f122e35c0b1d1e4069291457c83c07f965fa3": "1000000000000000000000",
  "47885ababedf4d928e1c3c71d7ca40d563ed595f": "1820000000000000000000",
  "78ce3e3d474a8a047b92c41542242d0a08c70f99": "10000000000000000000000",
  "6134d942f037f2cc3d424a230c603d67abd3edf7": "2000000000000000000000",
  "1360e87df24c69ee6d51c76e73767ffe19a2131c": "92000000000000000000",
  "5fd1c3e31778276cb42ea740f5eae9c641dbc701": "194000000000000000000",
  "98397342ec5f3d4cb877e54ef5d6f1d366731bd4": "5910000000000000000000",
  "6d4b5c05d06a20957e1748ab6df206f343f92f01": "10020475000000000000000",
  "e6115b13f9795f7e956502d5074567dab945ce6b": "100000000000000000000000",
  "23730c357a91026e44b1d0e2fc2a51d071d8d77b": "4000000000000000000000",
  "fae881937047895a660cf229760f27e66828d643": "182000000000000000000",
  "ff3ef6ba151c21b59986ae64f6e8228bc9a2c733": "2000000000000000000000",
  "dfbd4232c17c407a980db87ffbcda03630e5c459": "553150000000000000000",
  "4429a29fee198450672c0c1d073162250bec6474": "999200000000000000000",
  "7e8f96cc29f57b0975120cb593b7dd833d606b53": "197000000000000000000",
  "5ed3f1ebe2ae6756b5d8dc19cad02c419aa5778b": "0",
  "daa776a6754469d7b9267a89b86725e740da0fa0": "1970000000000000000000",
  "139e479764b499d666208c4a8a047a97043163dd": "598880000000000000000",
  "5ad5e420755613886f35aa56ac403eebdfe4b0d0": "80000000000000000000000",
  "3fe801e61335c5140dc7eda2ef5204460a501230": "2000000000000000000000",
  "ce8a6b6d5033b1498b1ffeb41a41550405fa03a2": "4000000000000000000000",
  "26c2ffc30efdc5273e76183a16c2698d6e531286": "776000000000000000000",
  "71ec3aec3f8f9221f9149fede06903a0f9a232f2": "200000000000000000000",
  "ef35f6d4b1075e6aa139151c974b2f4658f70538": "1111111000000000000000",
  "26a68eab905a8b3dce00e317308225dab1b9f6b8": "1980000000000000000000",
  "63f5b53d79bf2e411489526530223845fac6f601": "30000000000000000000000",
  "481115296ab7db52492ff7b647d63329fb5cbc6b": "16100000000000000000000",
  "f19f193508393e4d2a127b20b2031f39c82581c6": "3500088000000000000000",
  "500e34cde5bd9e2b71bb92d7cf55eee188d5fa0c": "5348000000000000000000",
  "65ea67ad3fb56ad5fb94387dd38eb383001d7c68": "100000000000000000000",
  "7f9f9b56e4289dfb58e70fd5f12a97b56d35c6a5": "1970000000000000000000",
  "60be6f953f2a4d25b6256ffd2423ac1438252e4e": "150000000000000000000",
  "ac1dfc984b71a19929a81d81f04a7cbb14073703": "600000000000000000000",
  "a3c14ace28b192cbb062145fcbbd5869c67271f6": "8000000000000000000000",
  "2da76b7c39b420e388ba2c1020b0856b0270648a": "2000000000000000000000",
  "622be4b45495fcd93143efc412d699d6cdc23dc5": "17300000000000000000",
  "d3f873bd9956135789ab00ebc195b922e94b259d": "2000000000000000000000",
  "975f3764e97bbccf767cbd3b795ba86d8ba9840e": "346000000000000000000",
  "fc39be41094b1997d2169e8264c2c3baa6c99bc4": "2000000000000000000000",
  "12ffc1128605cb0c13709a7290506f2690977193": "3340000000000000000000",
  "9b1168de8ab64b47552f3389800a9cc08b4666cf": "1730000000000000000000",
  "9f1aa8fcfc89a1a5328cbd6344b71f278a2ca4a0": "500000000000000000000",
  "505a33a18634dd4800693c67f48a1d693d4833f8": "7252000000000000000000",
  "d08fc09a0030fd0928cd321198580182a76aae9f": "1000000000000000000000",
  "6acddca3cd2b4990e25cd65c24149d0912099e79": "3000037000000000000000",
  "397a6ef8763a18f00fac217e055c0d3094101011": "2000000000000000000000",
  "4e0bd32473c4c51bf25654def69f797c6b29a232": "1600930000000000000000",
  "28d8c35fb7eea622582135e3ad47a227c9a663bd": "18200000000000000000",
  "f96488698590dc3b2c555642b871348dfa067ad5": "500000000000000000000",
  "4eebe80cb6f3ae5904f6f4b28d907f907189fcab": "1999944000000000000000",
  "8d1abd897dacd4312e18080c88fb9647eab44052": "216000000000000000000",
  "457029c469c4548d168cec3e65872e4428d42b67": "2000000000000000000000",
  "1296acded1e063af39fe8ba0b4b63df789f70517": "100014000000000000000",
  "71762c63678c18d1c6378ce068e666381315147e": "2000000000000000000000",
  "6cc1c878fa6cde8a9a0b8311247e741e4642fe6d": "985000000000000000000",
  "8d9ed7f4553058c26f7836a3802d3064eb1b363d": "90000000000000000000",
  "5032e4bcf7932b49fdba377b6f1499636513cfc3": "100000000000000000000",
  "462b678b51b584f3ed7ada070b5cd99c0bf7b87f": "100000000000000000000",
  "c8aa49e3809f0899f28ab57e6743709d58419033": "880000000000000000000",
  "01b1cae91a3b9559afb33cdc6d689442fdbfe037": "200000000000000000000",
  "b1043004ec1941a8cf4f2b00b15700ddac6ff17e": "1000000000000000000000",
  "5ba2c6c35dfaec296826591904d544464aeabd5e": "20000000000000000000",
  "b32400fd13c5500917cb037b29fe22e7d5228f2d": "40000000000000000000000",
  "d59d92d2c8701980cc073c375d720af064743c0c": "19000000000000000000000",
  "11dd6185d9a8d73ddfdaa71e9b7774431c4dfec2": "1000000000000000000000",
  "d4cb21e590c5a0e06801366aff342c7d7db16424": "494000000000000000000",
  "5b6d55f6712967405c659129f4b1de09acf2cb7b": "267400000000000000000",
  "6179979907fe7f037e4c38029d60bcbab832b3d6": "1610000000000000000000",
  "33c407133b84b3ca4c3ded1f4658900c38101624": "2800000000000000000000",
  "cd2a36d753e9e0ed012a584d716807587b41d56a": "261400000000000000000",
  "8155fa6c51eb31d808412d748aa086105018122f": "1880000000000000000000",
  "3ecc8e1668dde995dc570fe414f44211c534a615": "2000000000000000000000",
  "d6395db5a4bb66e60f4cfbcdf0057bb4d97862e2": "910000000000000000000",
  "b6fb39786250081426a342c70d47ee521e5bc563": "15000000000000000000000",
  "510eda5601499a0d5e1a006bfffd833672f2e267": "2000000000000000000000",
  "98c19dba810ba611e68f2f83ee16f6e7744f0c1f": "200000000000000000000",
  "34ff26eb60a8d1a95a489fae136ee91d4e58084c": "600000000000000000000",
  "6ad90be252d9cd464d998125fab693060ba8e429": "4000000000000000000000",
  "038323b184cff7a82ae2e1bda7793fe4319ca0bf": "20000000000000000000000",
  "dc5305b4020a06b49d657c7ca34c35c91c5f2c56": "7045990000000000000000",
  "c9c80dc12e7bab86e949d01e4c3ed35f2b9bba5f": "2000000000000000000000",
  "7beb81fb2f5e91526b2ac9795e76c69bcff04bc0": "69400000000000000000000",
  "b8bc9bca7f71b4ed12e620438d620f53c114342f": "500000000000000000000",
  "d288e7cb7ba9f620ab0f7452e508633d1c5aa276": "4000000000000000000000",
  "a2e460a989cb15565f9ecca7d121a18e4eb405b6": "2000000000000000000000",
  "7489cc8abe75cda4ef0d01cef2605e47eda67ab1": "133700000000000000000",
  "38b403fb1fb7c14559a2d6f6564a5552bca39aff": "2000000000000000000000",
  "e55c80520a1b0f755b9a2cd3ce214f7625653e8a": "2000000000000000000000",
  "451b7070259bdba27100e36e23428a53dfe304e9": "13370000000000000000",
  "8b5c914b128bf1695c088923fa467e7911f351fa": "98500000000000000000",
  "17df49518d73b129f0da36b1c9b40cb66420fdc7": "10000000000000000000000",
  "c1950543554d8a713003f662bb612c10ad4cdf21": "18200000000000000000",
  "fa7606435b356cee257bd2fcd3d9eacb3cd1c4e1": "100000000000000000000",
  "e0bad98eee9698dbf6d76085b7923de5754e906d": "167000000000000000000",
  "ce53c8cdd74296aca987b2bc19c2b875a48749d0": "3000000000000000000000",
  "d0c55abf976fdc3db2afe9be99d499484d576c02": "1000000000000000000000",
  "238a6b7635252f5244486c0af0a73a207385e039": "1370000000000000000000",
  "ceb389381d48a8ae4ffc483ad0bb5e204cfdb1ec": "740745000000000000000",
  "3847667038f33b01c1cc795d8daf5475eff5a0d4": "728330000000000000000",
  "a08d215b5b6aac4861a281ac7e400b78fef04cbf": "20000000000000000000",
  "2d0dec51a6e87330a6a8fa2a0f65d88d4abcdf73": "185000000000000000000",
  "9e8f64ddcde9b8b451bafaa235a9bf511a25ac91": "2674000000000000000000",
  "ddac6bf4bbdd7d597d9c686d0695593bedccc7fa": "865000000000000000000",
  "22e15158b5ee3e86eb0332e3e6a9ac6cd9b55ecd": "160000000000000000000",
  "3aea4e82d2400248f99871a41ca257060d3a221b": "1000000000000000000000",
  "fb126f0ec769f49dcefca2f200286451583084b8": "5013750000000000000000",
  "1b8bd6d2eca20185a78e7d98e8e185678dac4830": "16700000000000000000000",
  "664cd67dccc9ac8228b45c55db8d76550b659cdc": "394000000000000000000",
  "553f37d92466550e9fd775ae74362df030179132": "2000000000000000000000",
  "730d8763c6a4fd824ab8b859161ef7e3a96a1200": "20000000000000000000000",
  "04c2c64bb54c3eccd05585e10ec6f99a0cdb01a3": "100000000000000000000",
  "f1624d980b65336feac5a6d54125005cfcf2aacb": "2000000000000000000000",
  "0b7fc9ddf70576f6330669eaaa71b6a831e99528": "140000000000000000000",
  "fa2bbca15d3fe39f8a328e91f90da14f7ac6253d": "200000000000000000000",
  "07feef54c136850829badc4b49c3f2a73c89fb9e": "118200000000000000000",
  "3703350c4d6fe337342cddc65bf1e2386bf3f9b2": "2020000000000000000000",
  "6d7d1c949511f88303808c60c5ea0640fcc02683": "10000000000000000000000",
  "34fa7792bad8bbd7ff64056214a33eb6600c1ea8": "50000000000000000000",
  "994cc2b5227ec3cf048512467c41b7b7b748909f": "2000000000000000000000",
  "08da3a7a0f452161cfbcec311bb68ebfdee17e88": "2000000000000000000000",
  "bbb4ee1d82f2e156442cc93338a2fc286fa28864": "1370000000000000000000",
  "7a2dfc770e24368131b7847795f203f3d50d5b56": "11400000000000000000000",
  "7cef4d43aa417f9ef8b787f8b99d53f1fea1ee88": "1910000000000000000000",
  "c6a30ef5bb3320f40dc5e981230d52ae3ac19322": "182000000000000000000",
  "6a74844d8e9cb5581c45079a2e94462a6cee8821": "1082970000000000000000",
  "c3110be01dc9734cfc6e1ce07f87d77d1345b7e1": "4999998000000000000000",
  "aeb916ebf49d0f86c13f7331cef19e129937512d": "599908000000000000000",
  "3e5abd09ce5af7ba8487c359e0f2a93a986b0b18": "10000000000000000000000",
  "cdd60d73efaad873c9bbfb178ca1b7105a81a681": "32000000000000000000",
  "31eb123c95c82bf685ace7a75a1881a289efca10": "920034000000000000000",
  "86e8670e27598ea09c3899ab7711d3b9fe901c17": "200000000000000000000",
  "a144f6b60f72d64a21e330dadb62d8990ade2b09": "1000000000000000000000",
  "68883e152e5660fee59626e7e3b4f05110e6222f": "54683300000000000000000",
  "fe4249127950e2f896ec0e7e2e3d055aab10550f": "668500000000000000000",
  "403d53cf620f0922b417848dee96c190b5bc8271": "9850000000000000000000",
  "bec2e6de39c07c2bae556acfbee2c4728b9982e3": "573000000000000000000",
  "f3c4716d1ee5279a86d0163a14618181e16136c7": "1000000000000000000000",
  "e38ef28a5ed984a7db24a1ae782dfb87f397dfc6": "143000000000000000000",
  "30fbe5885f9fcce9ea5edb82ed4a1196dd259aed": "5200000000000000000000",
  "48bf14d7b1fc84ebf3c96be12f7bce01aa69b03e": "120000000000000000000",
  "b8d5c324a8209d7c8049d0d4aede02ba80ab578b": "16889329000000000000000",
  "43d5a71ce8b8f8ae02b2eaf8eaf2ca2840b93fb6": "6000000000000000000000",
  "f9a59c3cc5ffacbcb67be0fc7256f64c9b127cb4": "2000000000000000000000",
  "0e21af1b8dbf27fcf63f37e047b87a825cbe7c27": "3000000000000000000000",
  "1c35aab688a0cd8ef82e76541ba7ac39527f743b": "500000000000000000000",
  "91ac5cfe67c54aa7ebfba448666c461a3b1fe2e1": "401880000000000000000",
  "4ba53ab549e2016dfa223c9ed5a38fad91288d07": "1400000000000000000000",
  "99a4de19ded79008cfdcd45d014d2e584b8914a8": "1500000000000000000000",
  "4adbf4aae0e3ef44f7dd4d8985cfaf096ec48e98": "150000000000000000000",
  "9a633fcd112cceeb765fe0418170732a9705e79c": "18200000000000000000",
  "292f228b0a94748c8eec612d246f989363e08f08": "185000000000000000000",
  "9f3497f5ef5fe63095836c004eb9ce02e9013b4b": "633424000000000000000",
  "0e6dfd553b2e873d2aec15bd5fbb3f8472d8d394": "12000000000000000000000",
  "74ebf4425646e6cf81b109ce7bf4a2a63d84815f": "40000000000000000000",
  "8ce5e3b5f591d5eca38abf228f2e3c35134bdac0": "2319920000000000000000",
  "90c41eba008e20cbe927f346603fc88698125969": "42000000000000000000",
  "382ba76db41b75606dd48a48f0137e9174e031b6": "20000000000000000000",
  "5d24bdbc1c47f0eb83d128cae48ac33c4817e91f": "1000000000000000000000",
  "a64e5ffb704c2c9139d77ef61d8cdfa31d7a88e9": "143000000000000000000",
  "a18360e985f2062e8f8efe02ad2cbc91ad9a5aad": "3000000000000000000000",
  "d251f903ae18727259eee841a189a1f569a5fd76": "10000000000000000000000",
  "efa6b1f0db603537826891b8b4bc163984bb40cd": "985000000000000000000",
  "47fff42c678551d141eb75a6ee398117df3e4a8d": "100010000000000000000",
  "f2294adbb6f0dcc76e632ebef48ab49f124dbba4": "1443690000000000000000",
  "53700d53254d430f22781a4a76a463933b5d6b08": "1970000000000000000000",
  "b14a7aaa8f49f2fb9a8102d6bbe4c48ae7c06fb2": "8000000000000000000000",
  "9ed4e63f526542d44fddd34d59cd25388ffd6bda": "3885000000000000000000",
  "4cac91fb83a147d2f76c3267984b910a79933348": "2167000000000000000000",
  "9b32cf4f5115f4b34a00a64c617de06387354323": "105501000000000000000",
  "b8bedd576a4b4c2027da735a5bc3f533252a1808": "2000000000000000000000",
  "c5a3b98e4593fea0b38c4f455a5065f051a2f815": "20309030000000000000000",
  "eaf52388546ec35aca6f6c6393d8d609de3a4bf3": "20000000000000000000",
  "4c423c76930d07f93c47a5cc4f615745c45a9d72": "100000000000000000000",
  "9052f2e4a3e3c12dd1c71bf78a4ec3043dc88b7e": "267400000000000000000",
  "2bade91d154517620fd4b439ac97157a4102a9f7": "4000000000000000000000",
  "da698d64c65c7f2b2c7253059cd3d181d899b6b7": "295500000000000000000",
  "c6d8954e8f3fc533d2d230ff025cb4dce14f3426": "400000000000000000000",
  "349a816b17ab3d27bbc0ae0051f6a070be1ff29d": "10000000000000000000000",
  "ff4d9c8484c43c42ff2c5ab759996498d323994d": "4000000000000000000000",
  "22944fbca9b57963084eb84df7c85fb9bcdfb856": "4649845000000000000000",
  "bfd93c90c29c07bc5fb5fc49aeea55a40e134f35": "28000000000000000000000",
  "3caedb5319fe806543c56e5021d372f71be9062e": "40000000000000000000000",
  "9a079c92a629ca15c8cafa2eb28d5bc17af82811": "500000000000000000000",
  "7d2a52a7cf0c8436a8e007976b6c26b7229d1e15": "438040000000000000000",
  "cf89f7460ba3dfe83c5a1d3a019ee1250f242f0f": "985177000000000000000",
  "577bfe64e3a1e3800e94db1c6c184d8dc8aafc66": "1498000000000000000000",
  "7ffd02ed370c7060b2ae53c078c8012190dfbb75": "10000000000000000000000",
  "90b62f131a5f29b45571513ee7a74a8f0b232202": "158000000000000000000",
  "6e8212b722afd408a7a73ed3e2395ee6454a0330": "159000000000000000000",
  "515f30bc90cdf4577ee47d65d785fbe2e837c6bc": "10166128000000000000000",
  "c27376f45d21e15ede3b26f2655fcee02ccc0f2a": "20000000000000000000",
  "3da39ce3ef4a7a3966b32ee7ea4ebc2335a8f11f": "2000000000000000000000",
  "25259d975a21d83ae30e33f800f53f37dfa01938": "20000000000000000000",
  "8ed143701f2f72280fd04a7b4164281979ea87c9": "14000000000000000000",
  "5ac99ad7816ae9020ff8adf79fa9869b7cea6601": "21000000000000000000000",
  "f51fded80acb502890e87369741f3722514cefff": "20000042000000000000000",
  "f657fcbe682eb4e8db152ecf892456000b513d15": "1940000000000000000000",
  "62c37c52b97f4b040b1aa391d6dec152893c4707": "1000000000000000000000",
  "89fc8e4d386b0d0bb4a707edf3bd560df1ad8f4e": "2955000000000000000000",
  "53c0bb7fc88ea422d2ef7e540e2d8f28b1bb8183": "20000000000000000000",
  "56f493a3d108aaa2d18d98922f8efe1662cfb73d": "2020000000000000000000",
  "e9458f68bb272cb5673a04f781b403556fd3a387": "61000000000000000000",
  "be525a33ea916177f17283fca29e8b350b7f530b": "2638000000000000000000",
  "4feb846be43041fd6b34202897943e3f21cb7f04": "83226000000000000000",
  "15aa530dc36958b4edb38eee6dd9e3c77d4c9145": "2000000000000000000000",
  "2458d6555ff98a129cce4037953d00206eff4287": "197000000000000000000",
  "8035fe4e6b6af27ae492a578515e9d39fa6fa65b": "4000000000000000000000",
  "296b71c0015819c242a7861e6ff7eded8a5f71e3": "1999800000000000000000",
  "8f1952eed1c548d9ee9b97d0169a07933be69f63": "1000000000000000000000",
  "a421dbb89b3a07419084ad10c3c15dfe9b32d0c2": "20000000000000000000000",
  "554336ee4ea155f9f24f87bca9ca72e253e12cd2": "100000000000000000000",
  "ffc5fc4b7e8a0293ff39a3a0f7d60d2646d37a74": "2000000000000000000000",
  "ea2c197d26e98b0da83e1b72c787618c979d3db0": "19700000000000000000",
  "96aa573fed2f233410dbae5180145b23c31a02f0": "1730000000000000000000",
  "c23b2f921ce4a37a259ee4ad8b2158d15d664f59": "25403000000000000000",
  "d874b9dfae456a929ba3b1a27e572c9b2cecdfb3": "170000000000000000000",
  "bf8b8005d636a49664f74275ef42438acd65ac91": "200000000000000000000",
  "441a52001661fac718b2d7b351b7c6fb521a7afd": "400000000000000000000",
  "812a55c43caedc597218379000ce510d548836fd": "18200000000000000000",
  "5e90c85877198756b0366c0e17b28e52b446505a": "374288000000000000000",
  "da3017c150dd0dce7fcf881b0a48d0d1c756c4c7": "100014000000000000000",
  "6baf7a2a02ae78801e8904ad7ac05108fc56cff6": "1000000000000000000000",
  "177dae78bc0113d8d39c4402f2a641ae2a105ab8": "1818320000000000000000",
  "01b5b5bc5a117fa08b34ed1db9440608597ac548": "200000000000000000000",
  "aae732eda65988c3a00c7f472f351c463b1c968e": "2000000000000000000000",
  "d95342953c8a21e8b635eefac7819bea30f17047": "94160000000000000000000",
  "8d616b1eee77eef6f176e0698db3c0c141b2fc8f": "500000000000000000000",
  "12d20790b7d3dbd88c81a279b812039e8a603bd0": "1604400000000000000000",
  "3734cb187491ede713ae5b3b2d12284af46b8101": "3000000000000000000000",
  "dd967c4c5f8ae47e266fb416aad1964ee3e7e8c3": "7750000000000000000000",
  "3dcef19c868b15d34eda426ec7e04b18b6017002": "1999800000000000000000",
  "ce9d21c692cd3c01f2011f505f870036fa8f6cd2": "400000000000000000000",
  "d44f6ac3923b5fd731a4c45944ec4f7ec52a6ae4": "10000000000000000000000",
  "b424d68d9d0d00cec1938c854e15ffb880ba0170": "200000000000000000000",
  "1f2186ded23e0cf9521694e4e164593e690a9685": "300000000000000000000",
  "7f4b5e278578c046cceaf65730a0e068329ed5b6": "1880000000000000000000",
  "8c50aa2a9212bcde56418ae261f0b35e7a9dbb82": "400000000000000000000",
  "1953313e2ad746239cb2270f48af34d8bb9c4465": "2000000000000000000000",
  "a15025f595acdbf3110f77c5bf24477e6548f9e8": "2000000000000000000000",
  "53af32c22fef99803f178cf90b802fb571c61cb9": "3880000000000000000000",
  "d0a8abd80a199b54b08b65f01d209c27fef0115b": "6525979000000000000000",
  "2b68306ba7f8daaf73f4c644ef7d2743c0f26856": "864800000000000000000",
  "96924191b7df655b3319dc6d6137f481a73a0ff3": "4020000000000000000000",
  "6fa72015fa78696efd9a86174f7f1f21019286b1": "1337000000000000000000",
  "0b119df99c6b8de58a1e2c3f297a6744bf552277": "2000000000000000000000",
  "61733947fab820dbd351efd67855ea0e881373a0": "20000000000000000000",
  "8ae6f80b70e1f23c91fbd5a966b0e499d95df832": "197000000000000000000",
  "01a7d9fa7d0eb1185c67e54da83c2e75db69e39f": "7623900000000000000000",
  "9932ef1c85b75a9b2a80057d508734c51085becc": "50170000000000000000",
  "aefcfe88c826ccf131d54eb4ea9eb80e61e1ee25": "340000000000000000000",
  "c21fa6643a1f14c02996ad7144b75926e87ecb4b": "20000000000000000000000",
  "97d9e46a7604d7b5a4ea4ee61a42b3d2350fc3ed": "2000000000000000000000",
  "3cafaf5e62505615068af8eb22a13ad8a9e55070": "1999600000000000000000",
  "22f2dcff5ad78c3eb6850b5cb951127b659522e6": "13700000000000000000",
  "aaad1baade5af04e2b17439e935987bf8c2bb4b9": "2000000000000000000000",
  "298887bab57c5ba4f0615229d7525fa113b7ea89": "40000000000000000000",
  "7539333046deb1ef3c4daf50619993f444e1de68": "1182000000000000000000",
  "9752d14f5e1093f071711c1adbc4e3eb1e5c57f3": "2000000000000000000000",
  "ed641e06368fb0efaa1703e01fe48f4a685309eb": "200000000000000000000",
  "d0ee4d02cf24382c3090d3e99560de3678735cdf": "2400000000000000000000",
  "47e25df8822538a8596b28c637896b4d143c351d": "80500000000000000000000",
  "559706c332d20779c45f8a6d046a699159b74921": "380123000000000000000",
  "3a4da78dce05aeb87de9aead9185726da1926798": "200000000000000000000",
  "3041445a33ba158741160d9c344eb88e5c306f94": "60000000000000000000",
  "08d4311c9c1bbaf87fabe1a1d01463828d5d98ce": "90000000000000000000000",
  "6bd3e59f239fafe4776bb9bddd6bee83ba5d9d9f": "1000000000000000000000",
  "29eaae82761762f4d2db53a9c68b0f6b0b6d4e66": "2000000000000000000000",
  "0b7d339371e5be6727e6e331b5821fa24bdb9d5a": "857738000000000000000",
  "4714cfa4f46bd6bd70737d75878197e08f88e631": "11792000000000000000000",
  "ad92ca066edb7c711dfc5b166192d1edf8e77185": "36000000000000000000000",
  "f97b56ebd5b77abc9fbacbabd494b9d2c221cd03": "1970000000000000000000",
  "591bef3171d1c5957717a4e98d17eb142c214e56": "20000000000000000000000",
  "899b3c249f0c4b81df75d212004d3d6d952fd223": "2000000000000000000000",
  "a819d2ece122e028c8e8a04a064d02b9029b08b9": "1000000000000000000000",
  "e341642d40d2afce2e9107c67079ac7a2660086c": "400000000000000000000",
  "0329188f080657ab3a2afa522467178279832085": "216700000000000000000",
  "03317826d1f70aa4bddfa09be0c4105552d2358b": "38800000000000000000",
  "3ac9dc7a436ae98fd01c7a9621aa8e9d0b8b531d": "1790000000000000000000",
  "93c88e2d88621e30f58a9586bed4098999eb67dd": "31200000000000000000000",
  "cd1e66ed539dd92fc40bbaa1fa16de8c02c14d45": "230000000000000000000",
  "e6c81ffcecb47ecdc55c0b71e4855f3e5e97fc1e": "334250000000000000000",
  "50f8fa4bb9e2677c990a4ee8ce70dd1523251e4f": "26030000000000000000",
  "4f64a85e8e9a40498c0c75fceb0337fb49083e5e": "1000000000000000000000",
  "4b29437c97b4a844be71cca3b648d4ca0fdd9ba4": "150200000000000000000",
  "1eee6cbee4fe96ad615a9cf5857a647940df8c78": "19400000000000000000",
  "29f0edc60338e7112085a1d114da8c42ce8f55d6": "2958000000000000000000",
  "23b1c4917fbd93ee3d48389306957384a5496cbf": "4000086000000000000000",
  "1767525c5f5a22ed80e9d4d7710f0362d29efa33": "400000000000000000000",
  "3064899a963c4779cbf613cd6980846af1e6ec65": "6999908000000000000000",
  "68531f4dda808f5320767a03113428ca0ce2f389": "19400000000000000000",
  "1db9ac9a9eaeec0a523757050c71f47278c72d50": "1337000000000000000000",
  "7592c69d067b51b6cc639d1164d5578c60d2d244": "20000000000000000000",
  "cf3fbfa1fd32d7a6e0e6f8ef4eab57be34025c4c": "1063120000000000000000",
  "8efec058cc546157766a632775404a334aaada87": "1999000000000000000000",
  "faf5f0b7b6d558f5090d9ea1fb2d42259c586078": "6401000000000000000000",
  "19ecf2abf40c9e857b252fe1dbfd3d4c5d8f816e": "2000000000000000000000",
  "6e8a26689f7a2fdefd009cbaaa5310253450daba": "2049982000000000000000",
  "e2f40d358f5e3fe7463ec70480bd2ed398a7063b": "20000000000000000000",
  "fa19d6f7a50f4f079893d167bf14e21d0073d196": "530000000000000000000",
  "3e2ca0d234baf607ad466a1b85f4a6488ef00ae7": "89505000000000000000",
  "f8a49ca2390c1f6d5c0e62513b079571743f7cc6": "3000000000000000000000",
  "5d3f3b1f7130b0bb21a0fd32396239179a25657f": "62474000000000000000000",
  "f332c0f3e05a27d9126fd0b641a8c2d4060608fd": "5001041000000000000000",
  "e304a32f05a83762744a9542976ff9b723fa31ea": "1576256000000000000000",
  "f768f321fd6433d96b4f354d3cc1652c1732f57f": "10000000000000000000000",
  "147af46ae9ccd18bb35ca01b353b51990e49dce1": "4000000000000000000000",
  "21eae6feffa9fbf4cd874f4739ace530ccbe5937": "5000000000000000000000",
  "6994fb3231d7e41d491a9d68d1fa4cae2cc15960": "4000000000000000000000",
  "51126446ab3d8032557e8eba65597d75fadc815c": "322000000000000000000",
  "24daaaddf7b06bbcea9b80590085a88567682b4e": "319008000000000000000",
  "cd020f8edfcf524798a9b73a640334bbf72f80a5": "133700000000000000000",
  "56febf9e1003af15b1bd4907ec089a4a1b91d268": "200000000000000000000",
  "3c79c863c3d372b3ff0c6f452734a7f97042d706": "176000000000000000000",
  "e1203eb3a723e99c2220117ca6afeb66fa424f61": "9461996000000000000000",
  "18fb09188f27f1038e654031924f628a2106703d": "2000000000000000000000",
  "2eba0c6ee5a1145c1c573984963a605d880a7a20": "500000000000000000000",
  "4cefbe2398e47d52e78db4334c8b697675f193ae": "4011000000000000000000",
  "c02471e3fc2ea0532615a7571d493289c13c36ef": "20000000000000000000",
  "ba469aa5c386b19295d4a1b5473b540353390c85": "2000000000000000000000",
  "7b11673cc019626b290cbdce26046f7e6d141e21": "500000000000000000000",
  "26784ade91c8a83a8e39658c8d8277413ccc9954": "6000000000000000000000",
  "57d3df804f2beee6ef53ab94cb3ee9cf524a18d3": "393606000000000000000",
  "ccae0d3d852a7da3860f0636154c0a6ca31628d4": "106560000000000000000",
  "bfe3a1fc6e24c8f7b3250560991f93cba2cf8047": "80000000000000000000000",
  "724ce858857ec5481c86bd906e83a04882e5821d": "3000000000000000000000",
  "fb37cf6b4f81a9e222fba22e9bd24b5098b733cf": "38800000000000000000",
  "9b22a80d5c7b3374a05b446081f97d0a34079e7f": "3000000000000000000000",
  "0a29a8a4d5fd950075ffb34d77afeb2d823bd689": "200000000000000000000",
  "d01af9134faf5257174e8b79186f42ee354e642d": "1000000000000000000000",
  "7f1619988f3715e94ff1d253262dc5581db3de1c": "900000000000000000000",
  "6f137a71a6f197df2cbbf010dcbd3c444ef5c925": "2000000000000000000000",
  "11efb8a20451161b644a8ccebbc1d343a3bbcb52": "3200000000000000000000",
  "46504e6a215ac83bccf956befc82ab5a679371c8": "518898000000000000000",
  "b523fff9749871b35388438837f7e6e0dea9cb6b": "2000000000000000000000",
  "c5c6a4998a33feb764437a8be929a73ba34a0764": "50000000000000000000000",
  "3cd7f7c7c2353780cde081eeec45822b25f2860c": "200000000000000000000",
  "b3050beff9de33c80e1fa15225e28f2c413ae313": "700000000000000000000",
  "59268171b833e0aa13c54b52ccc0422e4fa03aeb": "3000000000000000000000",
  "7169724ee72271c534cad6420fb04ee644cb86fe": "410164000000000000000",
  "6e6d5bbbb9053b89d744a27316c2a7b8c09b547d": "909831000000000000000",
  "3f3f46b75cabe37bfacc8760281f4341ca7f463d": "602709000000000000000",
  "7a33834e8583733e2d52aead589bd1affb1dd256": "1000000000000000000000",
  "e94ded99dcb572b9bb1dcba32f6dee91e057984e": "394000000000000000000",
  "19336a236ded755872411f2e0491d83e3e00159e": "940000000000000000000",
  "63ac545c991243fa18aec41d4f6f598e555015dc": "600000000000000000000",
  "cfee05c69d1f29e7714684c88de5a16098e91399": "1970000000000000000000",
  "77be6b64d7c733a436adec5e14bf9ad7402b1b46": "1000000000000000000000",
  "233bdddd5da94852f4ade8d212885682d9076bc6": "4000000000000000000000",
  "952c57d2fb195107d4cd5ca300774119dfad2f78": "2000000000000000000000",
  "e237baa4dbc9926e32a3d85d1264402d54db012f": "2000000000000000000000",
  "aa91237e740d25a92f7fa146faa18ce56dc6e1f3": "925000000000000000000",
  "2339e9492870afea2537f389ac2f838302a33c06": "2000000000000000000000",
  "1d45586eb803ca2190650bf748a2b174312bb507": "1400000000000000000000",
  "c61446b754c24e3b1642d9e51765b4d3e46b34b6": "2000000000000000000000",
  "ac28b5edea05b76f8c5f97084541277c96696a4c": "1000000000000000000000",
  "1a1c9a26e0e02418a5cf687da75a275c622c9440": "5000000000000000000000",
  "299368609042a858d1ecdf1fc0ada5eaceca29cf": "2000000000000000000000",
  "095f5a51d06f6340d80b6d29ea2e88118ad730fe": "2000200000000000000000",
  "751a2ca34e7187c163d28e3618db28b13c196d26": "500000000000000000000",
  "75b0e9c942a4f0f6f86d3f95ff998022fa67963b": "1490000000000000000000",
  "d1b37f03cb107424e9c4dd575ccd4f4cee57e6cd": "2000000000000000000000",
  "7f993ddb7e02c282b898f6155f680ef5b9aff907": "20000000000000000000000",
  "a3d583a7b65b23f60b7905f3e4aa62aac87f4227": "1046779000000000000000",
  "526bb533b76e20c8ee1ebf123f1e9ff4148e40be": "197000000000000000000",
  "2160b4c02cac0a81de9108de434590a8bfe68735": "1970000000000000000000",
  "010007394b8b7565a1658af88ce463499135d6b7": "100000000000000000000",
  "64457fa33b0832506c4f7d1180dce48f46f3e0ff": "2000000000000000000000",
  "b51e558eb5512fbcfa81f8d0bd938c79ebb5242b": "715000000000000000000",
  "94f13f9f0836a3ee2437a84922d2984dc0f7d53b": "2999916000000000000000",
  "6bd457ade051795df3f2465c3839aed3c5dee978": "999925000000000000000",
  "f3dbcf135acb9dee1a489c593c024f03c2bbaece": "2000000000000000000000",
  "61b902c5a673885826820d1fe14549e4865fbdc2": "334703000000000000000",
  "2acc9c1a32240b4d5b2f777a2ea052b42fc1271c": "41764000000000000000000",
  "6ddfef639155daab0a5cb4953aa8c5afaa880453": "1820000000000000000000",
  "96ff6f509968f36cb42cba48db32f21f5676abf8": "1970000000000000000000",
  "b4c8170f7b2ab536d1d9a25bdd203ae1288dc3d5": "200000000000000000000",
  "78d4f8c71c1e68a69a98f52fcb45da8af56ea1a0": "2000000000000000000000",
  "dec99e972fca7177508c8e1a47ac22d768acab7c": "2000000000000000000000",
  "a07aa16d74aee8a9a3288d52db1551d593883297": "600000000000000000000",
  "cf1169041c1745e45b172435a2fc99b49ace2b00": "31960000000000000000",
  "526cb09ce3ada3672eec1deb46205be89a4b563e": "2468000000000000000000",
  "ee6959de2b67967b71948c891ab00d8c8f38c7dc": "118200000000000000000",
  "ca7ba3ff536c7e5f0e153800bd383db8312998e0": "169600000000000000000",
  "1ed06ee51662a86c634588fb62dc43c8f27e7c17": "200000000000000000000",
  "730447f97ce9b25f22ba1afb36df27f9586beb9b": "820000000000000000000",
  "ae5c9bdad3c5c8a1220444aea5c229c1839f1d64": "477500000000000000000",
  "a38306cb70baa8e49186bd68aa70a83d242f2907": "2000000000000000000000",
  "71213fca313404204ecba87197741aa9dfe96338": "60000000000000000000",
  "10e390ad2ba33d82b37388d09c4544c6b0225de5": "200000000000000000000",
  "3b6e814f770748a7c3997806347605480a3fd509": "2000000000000000000000",
  "fd452c3969ece3801c542020f1cdcaa1c71ed23d": "100000000000000000000000",
  "e742b1e6069a8ffc3c4767235defb0d49cbed222": "800000000000000000000",
  "d7225738dcf3578438f8e7c8b3837e42e04a262f": "445860000000000000000",
  "cd0b0257e783a3d2c2e3ba9d6e79b75ef98024d4": "2945500000000000000000",
  "e80e7fef18a5db15b01473f3ad6b78b2a2f8acd9": "500000000000000000000",
  "261575e9cf59c8226fa7aaf91de86fb70f5ac3ae": "300022000000000000000",
  "7e71171f2949fa0c3ac254254b1f0440e5e6a038": "40000000000000000000",
  "96ea6ac89a2bac95347b51dba63d8bd5ebdedce1": "2000000000000000000000",
  "e6ec5cf0c49b9c317e1e706315ef9eb7c0bf11a7": "17200000000000000000000",
  "2b99b42e4f42619ee36baa7e4af2d65eacfcba35": "40000000000000000000000",
  "c6e4cc0c7283fc1c85bc4813effaaf72b49823c0": "276926000000000000000",
  "dbc1ce0e49b1a705d22e2037aec878ee0d75c703": "250000000000000000000",
  "806f44bdeb688037015e84ff218049e382332a33": "1999000000000000000000",
  "1a3a330e4fcb69dbef5e6901783bf50fd1c15342": "4200000000000000000000",
  "d2a84f75675c62d80c88756c428eee2bcb185421": "1200000000000000000000",
  "c593b546b7698710a205ad468b2c13152219a342": "1550000000000000000000",
  "3f627a769e6a950eb87017a7cd9ca20871136831": "13790000000000000000000",
  "f2d5763ce073127e2cedde6faba786c73ca94141": "7900000000000000000000",
  "162110f29eac5f7d02b543d8dcd5bb59a5e33b73": "2000000000000000000000",
  "59473cd300fffae240f5785626c65dfec792b9af": "20000000000000000000",
  "4dcd11815818ae29b85d01367349a8a7fb12d06b": "7900000000000000000000",
  "9329ffdc268babde8874b366406c81445b9b2d35": "422415000000000000000",
  "0ab4281ebb318590abb89a81df07fa3af904258a": "500000000000000000000",
  "875061ee12e820041a01942cb0e65bb427b00060": "2800000000000000000000",
  "c9b698e898d20d4d4f408e4e4d061922aa856307": "40000000000000000000",
  "ca49a5f58adbefae23ee59eea241cf0482622eaa": "1430000000000000000000",
  "196e85df7e732b4a8f0ed03623f4db9db0b8fa31": "21165000000000000000",
  "4c760cd9e195ee4f2d6bce2500ff96da7c43ee91": "60000000000000000000000",
  "024a098ae702bef5406c9c22b78bd4eb2cc7a293": "4000000000000000000000",
  "9d81aea69aed6ad07089d61445348c17f34bfc5b": "300000000000000000000",
  "76ab87dd5a05ad839a4e2fc8c85aa6ba05641730": "2000000000000000000000",
  "c6e2f5af979a03fd723a1b6efa728318cf9c1800": "668500000000000000000",
  "5db69fe93e6fb6fbd450966b97238b110ad8279a": "40000000000000000000000",
  "a4259f8345f7e3a8b72b0fec2cf75e321fda4dc2": "1910000000000000000000",
  "095030e4b82692dcf8b8d0912494b9b378ec9328": "1340000000000000000000",
  "4b470f7ba030bc7cfcf338d4bf0432a91e2ea5ff": "2000000000000000000000",
  "99c9f93e45fe3c1418c353e4c5ac3894eef8121e": "101870000000000000000",
  "ffac3db879a6c7158e8dec603b407463ba0d31cf": "1970000000000000000000",
  "ac8e87ddda5e78fcbcb9fa7fc3ce038f9f7d2e34": "2000000000000000000000",
  "7a0589b143a8e5e107c9ac66a9f9f8597ab3e7ab": "1510990000000000000000",
  "b7d581fe0af1ec383f3b3c416783f385146a7612": "20000000000000000000000",
  "bb3fc0a29c034d710812dcc775c8cab9d28d6975": "1066806000000000000000",
  "2c603ff0fe93616c43573ef279bfea40888d6ae7": "4740000000000000000000",
  "15f2b7b16432ee50a5f55b41232f6334ed58bdc0": "400000000000000000000",
  "7f3d7203c8a447f7bf36d88ae9b6062a5eee78ae": "6000000000000000000000",
  "f067e1f1d683556a4cc4fd0c0313239f32c4cfd8": "1000000000000000000000",
  "52738c90d860e04cb12f498d96fdb5bf36fc340e": "30000000000000000000",
  "45781bbe7714a1c8f73b1c747921df4f84278b70": "2000000000000000000000",
  "4a97e8fcf4635ea7fc5e96ee51752ec388716b60": "546000000000000000000",
  "54939ff08921b467cf2946751d856378296c63ed": "1000000000000000000000",
  "6485470e61db110aebdbafd536769e3c599cc908": "600000000000000000000",
  "e20d1bcb71286dc7128a9fc7c6ed7f733892eef5": "1003400000000000000000",
  "d6eea898d4ae2b718027a19ce9a5eb7300abe3ca": "27475000000000000000",
  "014974a1f46bf204944a853111e52f1602617def": "2000000000000000000000",
  "6aa5732f3b86fb8c81efbe6b5b47b563730b06c8": "1000000000000000000000",
  "6107d71dd6d0eefb11d4c916404cb98c753e117d": "2000000000000000000000",
  "dd7bcda65924aaa49b80984ae173750258b92847": "10000000000000000000000",
  "4e7b54474d01fefd388dfcd53b9f662624418a05": "8000000000000000000000",
  "24fc73d20793098e09ddab5798506224fa1e1850": "200000000000000000000",
  "2b8488bd2d3c197a3d26151815b5a798d27168dc": "6680000000000000000000",
  "949131f28943925cfc97d41e0cea0b262973a730": "2800000000000000000000",
  "60b8d6b73b79534fb08bb8cbcefac7f393c57bfe": "1760000000000000000000",
  "d6acc220ba2e51dfcf21d443361eea765cbd35d8": "20000000000000000000",
  "c4c6cb723dd7afa7eb535615e53f3cef14f18118": "1999999000000000000000",
  "4c9a862ad115d6c8274ed0b944bdd6a5500510a7": "100000000000000000000",
  "85732c065cbd64119941aed430ac59670b6c51c4": "731345000000000000000",
  "0126e12ebc17035f35c0e9d11dd148393c405d7a": "1999600000000000000000",
  "472048cc609aeb242165eaaa8705850cf3125de0": "1000000000000000000000",
  "d2edd1ddd6d86dc005baeb541d22b640d5c7cae5": "20000000000000000000",
  "4549b15979255f7e65e99b0d5604db98dfcac8bf": "4000000000000000000000",
  "c6c7c191379897dd9c9d9a33839c4a5f62c0890d": "4000085000000000000000",
  "d367009ab658263b62c2333a1c9e4140498e1389": "2000000000000000000000",
  "143f5f1658d9e578f4f3d95f80c0b1bd3933cbda": "1490000000000000000000",
  "1a09fdc2c7a20e23574b97c69e93deba67d37220": "1998000000000000000000",
  "ac8b509aefea1dbfaf2bb33500d6570b6fd96d51": "1820000000000000000000",
  "16ffac84032940f0121a09668b858a7e79ffa3bb": "3879210000000000000000",
  "f338459f32a159b23db30ac335769ab2351aa63c": "30000000000000000000000",
  "d82251456dc1380f8f5692f962828640ab9f2a03": "4879980000000000000000",
  "47f4696bd462b20da09fb83ed2039818d77625b3": "149000000000000000000",
  "3dde8b15b3ccbaa5780112c3d674f313bba68026": "1773000000000000000000",
  "f70d637a845c06db6cdc91e6371ce7c4388a628e": "20000000000000000000",
  "68295e8ea5afd9093fc0a465d157922b5d2ae234": "19982000000000000000",
  "614e8bef3dd2c59b59a4145674401018351884ea": "20000000000000000000",
  "4737d042dc6ae73ec73ae2517acea2fdd96487c5": "1000000000000000000000",
  "cec6fc65853f9cce5f8e844676362e1579015f02": "2000000000000000000000",
  "ae47e2609cfafe369d66d415d939de05081a9872": "27060000000000000000000",
  "09a928d528ec1b3e25ffc83e218c1e0afe8928c7": "18200000000000000000",
  "9b444fd337e5d75293adcfff70e1ea01db023222": "100000000000000000000",
  "168bdec818eafc6d2992e5ef54aa0e1601e3c561": "1000110000000000000000",
  "353dbec42f92b50f975129b93c4c997375f09073": "1999000000000000000000",
  "6fcc2c732bdd934af6ccd16846fb26ef89b2aa9b": "10001242000000000000000",
  "6f2576da4de283bbe8e3ee69ddd66e5e711db3f5": "1260800000000000000000",
  "3a3dd104cd7eb04f21932fd433ea7affd39369f5": "357500000000000000000",
  "d44f4ac5fad76bdc1537a3b3af6472319b410d9d": "1600000000000000000000",
  "3d9d6be57ff83e065985664f12564483f2e600b2": "2041600000000000000000",
  "88f1045f19f2d3191816b1df18bb6e1435ad1b38": "240000000000000000000",
  "ddab75fb2ff9fecb88f89476688e2b00e367ebf9": "19400000000000000000000",
  "092e815558402d67f90d6bfe6da0b2fffa91455a": "60000000000000000000",
  "a7024cfd742c1ec13c01fea18d3042e65f1d5dee": "11272229000000000000000",
  "7f46bb25460dd7dae4211ca7f15ad312fc7dc75c": "6685000000000000000000",
  "93f18cd2526040761488c513174d1e7963768b2c": "2416500000000000000000",
  "352f25babf4a690673e35195efa8f79d05848aad": "66800000000000000000000",
  "f7b151cc5e571c17c76539dbe9964cbb6fe5de79": "2148000000000000000000",
  "ff3eee57c34d6dae970d8b311117c53586cd3502": "1700000000000000000000",
  "ae6f0c73fdd77c489727512174d9b50296611c4c": "6000000000000000000000",
  "7819b0458e314e2b53bfe00c38495fd4b9fdf8d6": "20000000000000000000",
  "7fdba031c78f9c096d62d05a369eeab0bccc55e5": "2800000000000000000000",
  "735e328666ed5637142b3306b77ccc5460e72c3d": "1968682000000000000000",
  "0bfbb6925dc75e52cf2684224bbe0550fea685d3": "1970000000000000000000",
  "6be16313643ebc91ff9bb1a2e116b854ea933a45": "500000000000000000000",
  "d6acffd0bfd99c382e7bd56ff0e6144a9e52b08e": "160000000000000000000",
  "276a006e3028ecd44cdb62ba0a77ce94ebd9f10f": "1800000000000000000000",
  "10711c3dda32317885f0a2fd8ae92e82069b0d0b": "4000000000000000000000",
  "43cb9652818c6f4d6796b0e89409306c79db6349": "2000000000000000000000",
  "7109dd011d15f3122d9d3a27588c10d77744508b": "2000000000000000000000",
  "3497dd66fd118071a78c2cb36e40b6651cc82598": "109600000000000000000",
  "9bf672d979b36652fc5282547a6a6bc212ae4368": "656000000000000000000",
  "eaed16eaf5daab5bf0295e5e077f59fb8255900b": "4000000000000000000000",
  "7ac58f6ffc4f8107ae6e30378e4e9f99c57fbb24": "40000000000000000000",
  "45a570dcc2090c86a6b3ea29a60863dde41f13b5": "232500000000000000000",
  "433a3b68e56b0df1862b90586bbd39c840ff1936": "2000000000000000000000",
  "e8eaf12944092dc3599b3953fa7cb1c9761cc246": "1800000000000000000000",
  "ec11362cec810985d0ebbd7b73451444985b369f": "30000047000000000000000",
  "78e83f80b3678c7a0a4e3e8c84dccde064426277": "1790000000000000000000",
  "0cc67f8273e1bae0867fd42e8b8193d72679dbf8": "500000000000000000000",
  "c70d856d621ec145303c0a6400cd17bbd6f5eaf7": "20000000000000000000",
  "f468906e7edf664ab0d8be3d83eb7ab3f7ffdc78": "1700000000000000000000",
  "3c286cfb30146e5fd790c2c8541552578de334d8": "10203000000000000000000",
  "c401c427cccff10decb864202f36f5808322a0a8": "3329300000000000000000",
  "afd019ff36a09155346b69974815a1c912c90aa4": "2000000000000000000000",
  "96fe59c3dbb3aa7cc8cb62480c65e56e6204a7e2": "20000000000000000000000",
  "a47779d8bc1c7bce0f011ccb39ef68b854f8de8f": "2000000000000000000000",
  "58c650ced40bb65641b8e8a924a039def46854df": "18500000000000000000",
  "86f4f40ad984fbb80933ae626e0e42f9333fdd41": "1000000000000000000000",
  "b22d5055d9623135961e6abd273c90deea16a3e7": "1400000000000000000000",
  "ee3564f5f1ba0f94ec7bac164bddbf31c6888b55": "100000000000000000000",
  "cf26b47bd034bc508e6c4bcfd6c7d30034925761": "1800000000000000000000",
  "e87dbac636a37721df54b08a32ef4959b5e4ff82": "2000000000000000000000",
  "3bf86ed8a3153ec933786a02ac090301855e576b": "450000000000000000000000",
  "cfd2728dfb8bdbf3bf73598a6e13eaf43052ea2b": "170000000000000000000",
  "85b16f0b8b34dff3804f69e2168a4f7b24d1042b": "317000000000000000000",
  "84db1459bb00812ea67ecb3dc189b72187d9c501": "148851000000000000000",
  "8c3a9ee71f729f236cba3867b4d79d8ceee25dbc": "100000000000000000000",
  "e677c31fd9cb720075dca49f1abccd59ec33f734": "7800000000000000000000",
  "8889448316ccf14ed86df8e2f478dc63c4338340": "15200000000000000000",
  "b279c7d355c2880392aad1aa21ee867c3b3507df": "1261000000000000000000",
  "12b5e28945bb2969f9c64c63cc05b6f1f8d6f4d5": "7722162000000000000000",
  "8d2303341e1e1eb5e8189bde03f73a60a2a54861": "100000000000000000000",
  "94d81074db5ae197d2bb1373ab80a87d121c4bd3": "9400000000000000000000",
  "752c9febf42f66c4787bfa7eb17cf5333bba5070": "1966448000000000000000",
  "16816aac0ede0d2d3cd442da79e063880f0f1d67": "2000000000000000000000",
  "daac91c1e859d5e57ed3084b50200f9766e2c52b": "400000000000000000000",
  "32c2fde2b6aabb80e5aea2b949a217f3cb092283": "5614827000000000000000",
  "cdab46a5902080646fbf954204204ae88404822b": "544942000000000000000",
  "fdf42343019b0b0c6bf260b173afab7e45b9d621": "1999944000000000000000",
  "791f6040b4e3e50dcf3553f182cd97a90630b75d": "4000000000000000000000",
  "4b762166dd1118e84369f804c75f9cd657bf730c": "500000000000000000000",
  "a76d3f156251b72c0ccf4b47a3393cbd6f49a9c5": "1337000000000000000000",
  "c5eb42295e9cadeaf2af12dede8a8d53c579c469": "3820000000000000000000",
  "db9371b30c4c844e59e03e924be606a938d1d310": "2000000000000000000000",
  "2cd39334ac7eac797257abe3736195f5b4b5ce0f": "99964000000000000000",
  "ad44357e017e244f476931c7b8189efee80a5d0a": "300000000000000000000",
  "4ca7b717d9bc8793b04e051a8d23e1640f5ba5e3": "1248980000000000000000",
  "73e4a2b60cf48e8baf2b777e175a5b1e4d0c2d8f": "100000000000000000000",
  "5a1d2d2d1d520304b6208849570437eb3091bb9f": "1970000000000000000000",
  "53047dc8ac9083d90672e8b3473c100ccd278323": "40000000000000000000",
  "26fe174cbf526650e0cd009bd6126502ce8e684d": "11640000000000000000000",
  "e2df23f6ea04becf4ab701748dc0963184555cdb": "2000000000000000000000",
  "c1170dbaadb3dee6198ea544baec93251860fda5": "1200000000000000000000",
  "8bbeacfc29cfe93402db3c41d99ab759662e73ec": "2000000000000000000000",
  "165305b787322e25dc6ad0cefe6c6f334678d569": "2000000000000000000000",
  "095457f8ef8e2bdc362196b9a9125da09c67e3ab": "200000000000000000000",
  "702802f36d00250fab53adbcd696f0176f638a49": "2000000000000000000000",
  "489334c2b695c8ee0794bd864217fb9fd8f8b135": "18200000000000000000",
  "fa8cf4e627698c5d5788abb7880417e750231399": "4244640000000000000000",
  "3329eb3baf4345d600ced40e6e9975656f113742": "4999711000000000000000",
  "b4dd5499daeb2507fb2de12297731d4c72b16bb0": "20000000000000000000",
  "88c2516a7cdb09a6276d7297d30f5a4db1e84b86": "4000000000000000000000",
  "612ced8dc0dc9e899ee46f7962333315f3f55e44": "338830000000000000000",
  "d71e43a45177ad51cbe0f72184a5cb503917285a": "200000000000000000000",
  "2fb566c94bbba4e3cb67cdda7d5fad7131539102": "2000000000000000000000",
  "03be5b4629aefbbcab9de26d39576cb7f691d764": "200550000000000000000",
  "025367960304beee34591118e9ac2d1358d8021a": "2000000000000000000000",
  "a5d5b8b62d002def92413710d13b6ff8d4fc7dd3": "400000000000000000000",
  "df3b72c5bd71d4814e88a62321a93d4011e3578b": "4000000000000000000000",
  "3588895ac9fbafec012092dc05c0c302d90740fa": "3000000000000000000000",
  "6021e85a8814fce1e82a41abd1d3b2dad2faefe0": "2000000000000000000000",
  "17ee9f54d4ddc84d670eff11e54a659fd72f4455": "16000000000000000000000",
  "873c6f70efb6b1d0f2bbc57eebcd70617c6ce662": "1013478000000000000000",
  "1fcc7ce6a8485895a3199e16481f72e1f762defe": "1000000000000000000000",
  "d0a7209b80cf60db62f57d0a5d7d521a69606655": "160000000000000000000",
  "a514d00edd7108a6be839a638db2415418174196": "30000000000000000000000",
  "046377f864b0143f282174a892a73d3ec8ec6132": "191000000000000000000",
  "c126573d87b0175a5295f1dd07c575cf8cfa15f2": "10000000000000000000000",
  "0e123d7da6d1e6fac2dcadd27029240bb39052fe": "1000000000000000000000",
  "ad5a8d3c6478b69f657db3837a2575ef8e1df931": "36990000000000000000",
  "db882eacedd0eff263511b312adbbc59c6b8b25b": "9100000000000000000000",
  "0b43bd2391025581d8956ce42a072579cbbfcb14": "18800000000000000000",
  "affea0473722cb7f0e0e86b9e11883bf428d8d54": "1940000000000000000000",
  "e32b1c4725a1875449e98f970eb3e54062d15800": "200000000000000000000",
  "98f4af3af0aede5fafdc42a081ecc1f89e3ccf20": "9400000000000000000000",
  "3b4768fd71e2db2cbe7fa050483c27b4eb931df3": "2000000000000000000000",
  "d5f7c41e07729dfa6dfc64c4423160a22c609fd3": "1790000000000000000000",
  "d944c8a69ff2ca1249690c1229c7192f36251062": "1970000000000000000000",
  "5ae64e853ba0a51282cb8db52e41615e7c9f733f": "2000000000000000000000",
  "b13f93af30e8d7667381b2b95bc1a699d5e3e129": "420000000000000000000",
  "8a20e5b5cee7cd1f5515bace3bf4f77ffde5cc07": "80000000000000000000",
  "2448596f91c09baa30bc96106a2d37b5705e5d28": "2000000000000000000000",
  "ccca24d8c56d6e2c07db086ec07e585be267ac8d": "200000000000000000000",
  "f67bb8e2118bbcd59027666eedf6943ec9f880a5": "4000000000000000000000",
  "7ae659eb3bc46852fa86fac4e21c768d50388945": "286000000000000000000",
  "467e0ed54f3b76ae0636176e07420815a021736e": "2000000000000000000000",
  "a46cd237b63eea438c8e3b6585f679e4860832ac": "1000000000000000000000",
  "6b760d4877e6a627c1c967bee451a8507ddddbab": "910000000000000000000",
  "593044670faeff00a55b5ae051eb7be870b11694": "133700000000000000000",
  "533c06928f19d0a956cc28866bf6c8d8f4191a94": "292320000000000000000",
  "262dc1364ccf6df85c43268ee182554dae692e29": "4927600000000000000000",
  "e4368bc1420b35efda95fafbc73090521916aa34": "4000000000000000000000",
  "feb92d30bf01ff9a1901666c5573532bfa07eeec": "1000000000000000000000",
  "ee25b9a7032679b113588ed52c137d1a053a1e94": "199820000000000000000",
  "20134cbff88bfadc466b52eceaa79857891d831e": "1000000000000000000000",
  "07b1a306cb4312df66482c2cae72d1e061400fcd": "20000000000000000000000",
  "e791d585b89936b25d298f9d35f9f9edc25a2932": "2000000000000000000000",
  "2e6933543d4f2cc00b5350bd8068ba9243d6beb0": "2000000000000000000000",
  "dae0d33eaa341569fa9ff5982684854a4a328a6e": "1000000000000000000000",
  "125cc5e4d56b2bcc2ee1c709fb9e68fb177440bd": "2000000000000000000000",
  "ec99e95dece46ffffb175eb6400fbebb08ee9b95": "100000000000000000000",
  "c538a0ff282aaa5f4b75cfb62c70037ee67d4fb5": "2000000000000000000000",
  "60676d1fa21fca052297e24bf96389c5b12a70d7": "241500000000000000000",
  "4b3dfbdb454be5279a3b8addfd0ed1cd37a9420d": "2000000000000000000000",
  "cdb597299030183f6e2d238533f4642aa58754b6": "400000000000000000000",
  "1ef2dcbfe0a500411d956eb8c8939c3d6cfe669d": "776000000000000000000",
  "a7247c53d059eb7c9310f628d7fc6c6a0a773f08": "500000000000000000000",
  "9799ca21dbcf69bfa1b3f72bac51b9e3ca587cf9": "1700000000000000000000",
  "ddf95c1e99ce2f9f5698057c19d5c94027ee4a6e": "6000000000000000000000",
  "83563bc364ed81a0c6da3b56ff49bbf267827a9c": "17332000000000000000000",
  "a192698007cc11aa603d221d5feea076bcf7c30d": "2000000000000000000000",
  "0134ff38155fabae94fd35c4ffe1d79de7ef9c59": "985000000000000000000",
  "80977316944e5942e79b0e3abad38da746086519": "38800000000000000000",
  "193d37ed347d1c2f4e35350d9a444bc57ca4db43": "60000000000000000000",
  "009a6d7db326679b77c90391a7476d238f3ba33e": "200200000000000000000",
  "337b3bdf86d713dbd07b5dbfcc022b7a7b1946ae": "3980000000000000000000",
  "7de7fe419cc61f91f408d234cc80d5ca3d054d99": "20000000000000000000",
  "f47bb134da30a812d003af8dccb888f44bbf5724": "5190000000000000000000",
  "fd920f722682afb5af451b0544d4f41b3b9d5742": "2330200000000000000000",
  "0a917f3b5cb0b883047fd9b6593dbcd557f453b9": "1000000000000000000000",
  "ce9786d3712fa200e9f68537eeaa1a06a6f45a4b": "1790000000000000000000",
  "9ab98d6dbb1eaae16d45a04568541ad3d8fe06cc": "272451000000000000000",
  "0b7bb342f01bc9888e6a9af4a887cbf4c2dd2caf": "16000000000000000000000",
  "4c0b1515dfced7a13e13ee12c0f523ae504f032b": "50000000000000000000000",
  "ac2889b5966f0c7f9edb42895cb69d1c04f923a2": "5000000000000000000000",
  "d008513b27604a89ba1763b6f84ce688b346945b": "1000000000000000000000",
  "a4b09de6e713dc69546e76ef0acf40b94f0241e6": "322656000000000000000",
  "b153f828dd076d4a7c1c2574bb2dee1a44a318a8": "400000000000000000000",
  "02ade5db22f8b758ee1443626c64ec2f32aa0a15": "20000000000000000000000",
  "0a0650861f785ed8e4bf1005c450bbd06eb48fb6": "3066860000000000000000",
  "b75149e185f6e3927057739073a1822ae1cf0df2": "4000086000000000000000",
  "84cb7da0502df45cf561817bbd2362f451be02da": "1337000000000000000000",
  "c91bb562e42bd46130e2d3ae4652b6a4eb86bc0f": "540000000000000000000",
  "b234035f7544463ce1e22bc553064684c513cd51": "249750000000000000000",
  "e5e33800a1b2e96bde1031630a959aa007f26e51": "1337000000000000000000",
  "ae5ce3355a7ba9b332760c0950c2bc45a85fa9a0": "400000000000000000000",
  "e6f5eb649afb99599c414b27a9c9c855357fa878": "2674000000000000000000",
  "7010be2df57bd0ab9ae8196cd50ab0c521aba9f9": "1970000000000000000000",
  "ca4288014eddc5632f5facb5e38517a8f8bc5d98": "340000000000000000000",
  "2784903f1d7c1b5cd901f8875d14a79b3cbe2a56": "22388000000000000000000",
  "f8dce867f0a39c5bef9eeba609229efa02678b6c": "2000000000000000000000",
  "e020e86362b487752836a6de0bc02cd8d89a8b6a": "6000000000000000000000",
  "c4088c025f3e85013f5439fb3440a17301e544fe": "2325000000000000000000",
  "befb448c0c5f683fb67ee570baf0db5686599751": "1970000000000000000000",
  "2f187d5a704d5a338c5b2876a090dce964284e29": "4000000000000000000000",
  "ec0e18a01dc4dc5daae567c3fa4c7f8f9b590205": "315900000000000000000",
  "637f5869d6e4695f0eb9e27311c4878aff333380": "1969212000000000000000",
  "d1100dd00fe2ddf18163ad964d0b69f1f2e9658a": "5959598000000000000000",
  "17ef4acc1bf147e326749d10e677dcffd76f9e06": "39980000000000000000000",
  "200dfc0b71e359b2b465440a36a6cdc352773007": "1500000000000000000000",
  "efe0675da98a5dda70cd96196b87f4e726b43348": "1164000000000000000000",
  "d5bd5e8455c130169357c471e3e681b7996a7276": "841500000000000000000",
  "9c7b6dc5190fe2912963fcd579683ec7395116b0": "776000000000000000000",
  "b105dd3d987cffd813e9c8500a80a1ad257d56c6": "1999944000000000000000",
  "145250b06e4fa7cb2749422eb817bdda8b54de5f": "219000000000000000000",
  "d96db33b7b5a950c3efa2dc31b10ba10a532ef87": "2000000000000000000000",
  "af529bdb459cc185bee5a1c58bf7e8cce25c150d": "197000000000000000000",
  "185546e8768d506873818ac9751c1f12116a3bef": "200000000000000000000",
  "51d24bc3736f88dd63b7222026886630b6eb878d": "2000000000000000000000",
  "69af28b0746cac0da17084b9398c5e36bb3a0df2": "1004700000000000000000",
  "76f83ac3da30f7092628c7339f208bfc142cb1ee": "2842600000000000000000",
  "00f463e137dcf625fbf3bca39eca98d2b968cf7f": "5910000000000000000000",
  "2084fce505d97bebf1ad8c5ff6826fc645371fb2": "30000000000000000000",
  "53a714f99fa00fef758e23a2e746326dad247ca7": "1490000000000000000000",
  "0bf064428f83626722a7b5b26a9ab20421a7723e": "133700000000000000000",
  "ac6f68e837cf1961cb14ab47446da168a16dde89": "1337000000000000000000",
  "4b3c7388cc76da3d62d40067dabccd7ef0433d23": "100076000000000000000",
  "deb9a49a43873020f0759185e20bbb4cf381bb8f": "211628000000000000000",
  "5bf9f2226e5aeacf1d80ae0a59c6e38038bc8db5": "6000000000000000000000",
  "9d0e7d92fb305853d798263bf15e97c72bf9d7e0": "1000000000000000000000",
  "2b5c60e84535eeb4d580de127a12eb2677ccb392": "20000000000000000000000",
  "d8d65420c18c2327cc5af97425f857e4a9fd51b3": "1760000000000000000000",
  "30ec9392244a2108c987bc5cdde0ed9f837a817b": "1560562000000000000000",
  "56a1d60d40f57f308eebf087dee3b37f1e7c2cba": "1159600000000000000000",
  "a9a1cdc33bfd376f1c0d76fb6c84b6b4ac274d68": "5000000000000000000000",
  "a67f38819565423aa85f3e3ab61bc763cbab89dd": "2130000000000000000000",
  "62d5cc7117e18500ac2f9e3c26c86b0a94b0de15": "105000000000000000000",
  "4970d3acf72b5b1f32a7003cf102c64ee0547941": "140000000000000000000000",
  "76628150e2995b5b279fc83e0dd5f102a671dd1c": "40000000000000000000000",
  "3d8f39881b9edfe91227c33fa4cdd91e678544b0": "86111000000000000000",
  "ff0b7cb71da9d4c1ea6ecc28ebda504c63f82fd1": "1043000000000000000000",
  "8d795c5f4a5689ad62da961671f028065286d554": "2048000000000000000000",
  "be2346a27ff9b702044f500deff2e7ffe6824541": "20000000000000000000",
  "0dbd417c372b8b0d01bcd944706bd32e60ae28d1": "340000000000000000000",
  "467fbf41441600757fe15830c8cd5f4ffbbbd560": "10000000000000000000000",
  "090cd67b60e81d54e7b5f6078f3e021ba65b9a1e": "1000000000000000000000",
  "55a4cac0cb8b582d9fef38c5c9fff9bd53093d1f": "1970000000000000000000",
  "3b7b4f53c45655f3dc5f017edc23b16f9bc536fa": "100000000000000000000",
  "d508d39c70916f6abc4cc7f999f011f077105802": "100470000000000000000",
  "037dd056e7fdbd641db5b6bea2a8780a83fae180": "140000000000000000000",
  "660557bb43f4be3a1b8b85e7df7b3c5bcd548057": "6000000000000000000000",
  "02089361a3fe7451fb1f87f01a2d866653dc0b07": "39976000000000000000",
  "c4bec96308a20f90cab18399c493fd3d065abf45": "14000000000000000000000",
  "cca07bb794571d4acf041dad87f0d1ef3185b319": "2000000000000000000000",
  "f2d0e986d814ea13c8f466a0538c53dc922651f0": "1380000000000000000000",
  "662cfa038fab37a01745a364e1b98127c503746d": "3940000000000000000000",
  "3336c3ef6e8b50ee90e037b164b7a8ea5faac65d": "272712000000000000000",
  "30e33358fc21c85006e40f32357dc8895940aaf0": "1910000000000000000000",
  "41a9a404fc9f5bfee48ec265b12523338e29a8bf": "388000000000000000000",
  "6af235d2bbe050e6291615b71ca5829658810142": "3000000000000000000000",
  "fd5a63157f914fd398eab19c137dd9550bb7715c": "100000000000000000000",
  "8a4314fb61cd938fc33e15e816b113f2ac89a7fb": "432800000000000000000",
  "b216dc59e27c3d7279f5cd5bb2becfb2606e14d9": "400000000000000000000",
  "f5a5459fcdd5e5b273830df88eea4cb77ddadfb9": "74500000000000000000",
  "df31025f5649d2c6eea41ed3bdd3471a790f759a": "20000000000000000000",
  "721f9d17e5a0e74205947aeb9bc6a7938961038f": "51900000000000000000",
  "08d0864dc32f9acb36bf4ea447e8dd6726906a15": "2000200000000000000000",
  "54575c3114751e3c631971da6a2a02fd3ffbfcc8": "1940000000000000000000",
  "8f60895fbebbb5017fcbff3cdda397292bf25ba6": "429177000000000000000",
  "91fe8a4c6164df8fa606995d6ba7adcaf1c893ce": "17000000000000000000000",
  "889087f66ff284f8b5efbd29493b706733ab1447": "9850000000000000000000",
  "051633080d07a557adde319261b074997f14692d": "5800000000000000000000",
  "59a12df2e3ef857aceff9306b309f6a500f70134": "1000000000000000000000",
  "9f64a8e8dacf4ade30d10f4d59b0a3d5abfdbf74": "1000060000000000000000",
  "8846928d683289a2d11df8db7a9474988ef01348": "10000000000000000000000",
  "dff1b220de3d8e9ca4c1b5be34a799bcded4f61c": "385428000000000000000",
  "7e7c1e9a61a08a83984835c70ec31d34d3eaa87f": "191000000000000000000",
  "fe210b8f04dc6d4f76216acfcbd59ba83be9b630": "20000000000000000000",
  "dc8c2912f084a6d184aa73638513ccbc326e0102": "1295000000000000000000",
  "dddd7b9e6eab409b92263ac272da801b664f8a57": "500000000000000000000000",
  "86a5f8259ed5b09e188ce346ee92d34aa5dd93fa": "200000000000000000000",
  "dc1f1979615f082140b8bb78c67b27a1942713b1": "60000000000000000000",
  "ea66e7b84dcdbf36eea3e75b85382a75f1a15d96": "1729135000000000000000",
  "039e7a4ebc284e2ccd42b1bdd60bd6511c0f7706": "17300000000000000000",
  "36bfe1fa3b7b70c172eb042f6819a8972595413e": "1000000000000000000000",
  "039ef1ce52fe7963f166d5a275c4b1069fe3a832": "400008000000000000000",
  "f1df55dcc34a051012b575cb968bc9c458ea09c9": "4000000000000000000000",
  "168b5019b818691644835fe69bf229e17112d52c": "28000000000000000000000",
  "f60bd735543e6bfd2ea6f11bff627340bc035a23": "2000000000000000000000",
  "2cbb0c73df91b91740b6693b774a7d05177e8e58": "1850000000000000000000",
  "9ffcf5ef46d933a519d1d16c6ba3189b27496224": "1000000000000000000000",
  "0e11d77a8977fac30d268445e531149b31541a24": "2000000000000000000000",
  "dfb1626ef48a1d7d7552a5e0298f1fc23a3b482d": "1713860000000000000000",
  "cc943be1222cd1400a2399dd1b459445cf6d54a9": "12530000000000000000000",
  "b37c2b9f50637bece0ca959208aefee6463ba720": "400000000000000000000",
  "96b906ea729f4655afe3e57d35277c967dfa1577": "1000000000000000000000",
  "7995bd8ce2e0c67bf1c7a531d477bca1b2b97561": "5945100000000000000000",
  "96f820500b70f4a3e3239d619cff8f222075b135": "200000000000000000000",
  "ad3565d52b688added08168b2d3872d17d0a26ae": "100000000000000000000",
  "9e7c2050a227bbfd60937e268cea3e68fea8d1fe": "100000000000000000000",
  "7e59dc60be8b2fc19abd0a5782c52c28400bce97": "1000000000000000000000",
  "01ed5fba8d2eab673aec042d30e4e8a611d8c55a": "2000000000000000000000",
  "59a087b9351ca42f58f36e021927a22988284f38": "18500000000000000000",
  "2fe0023f5722650f3a8ac01009125e74e3f82e9b": "3000000000000000000000",
  "bd1803370bddb129d239fd16ea8526a6188ae58e": "500000000000000000000",
  "c70527d444c490e9fc3f5cc44e66eb4f306b380f": "4000000000000000000000",
  "0f206e1a1da7207ea518b112418baa8b06260328": "600000000000000000000",
  "6e1a046caf5b4a57f4fd4bc173622126b4e2fd86": "1790000000000000000000",
  "84008a72f8036f3feba542e35078c057f32a8825": "100000000000000000000",
  "246291165b59332df5f18ce5c98856fae95897d6": "1700000000000000000000",
  "7e99dfbe989d3ba529d19751b7f4317f8953a3e2": "400000000000000000000",
  "748c285ef1233fe4d31c8fb1378333721c12e27a": "2000000000000000000000",
  "3dd12e556a603736feba4a6fa8bd4ac45d662a04": "167450000000000000000000",
  "d0ae735d915e946866e1fea77e5ea466b5cadd16": "2000000000000000000000",
  "4f767bc8794aef9a0a38fea5c81f14694ff21a13": "512200000000000000000",
  "0e2f8e28a681f77c583bd0ecde16634bdd7e00cd": "95060000000000000000",
  "d74a6e8d6aab34ce85976814c1327bd6ea0784d2": "100000000000000000000000",
  "629be7ab126a5398edd6da9f18447e78c692a4fd": "2000000000000000000000",
  "2e46fcee6a3bb145b594a243a3913fce5dad6fba": "10000000000000000000000",
  "e39b11a8ab1ff5e22e5ae6517214f73c5b9b55dc": "2000000000000000000000",
  "119aa64d5b7d181dae9d3cb449955c89c1f963fa": "700000000000000000000",
  "ce079f51887774d8021cb3b575f58f18e9acf984": "180000000000000000000",
  "550c306f81ef5d9580c06cb1ab201b95c748a691": "665800000000000000000",
  "06dc7f18cee7edab5b795337b1df6a9e8bd8ae59": "400000000000000000000",
  "e21c778ef2a0d7f751ea8c074d1f812243863e4e": "5308559000000000000000",
  "45d4b54d37a8cf599821235f062fa9d170ede8a4": "324000000000000000000",
  "893a6c2eb8b40ab096b4f67e74a897b840746e86": "1730000000000000000000",
  "d44d81e18f46e2cfb5c1fcf5041bc8569767d100": "36381800000000000000000",
  "c5de1203d3cc2cea31c82ee2de5916880799eafd": "5000000000000000000000",
  "7f0f04fcf37a53a4e24ede6e93104e78be1d3c9e": "2000000000000000000000",
  "3ce1dc97fcd7b7c4d3a18a49d6f2a5c1b1a906d7": "200000000000000000000",
  "ac4ee9d502e7d2d2e99e59d8ca7d5f00c94b4dd6": "1000000000000000000000",
  "7640a37f8052981515bce078da93afa4789b5734": "2000000000000000000000",
  "76cac488111a4fd595f568ae3a858770fc915d5f": "200000000000000000000",
  "ff4a408f50e9e72146a28ce4fc8d90271f116e84": "1970000000000000000000",
  "249db29dbc19d1235da7298a04081c315742e9ac": "1801800000000000000000",
  "3a04572847d31e81f7765ca5bfc9d557159f3683": "133031000000000000000",
  "b6771b0bf3427f9ae7a93e7c2e61ee63941fdb08": "18800000000000000000000",
  "30c26a8e971baa1855d633ba703f028cc7873140": "10000000000000000000000",
  "167e3e3ae2003348459392f7dfce44af7c21ad59": "500000000000000000000",
  "43f16f1e75c3c06a9478e8c597a40a3cb0bf04cc": "2914000000000000000000",
  "056b1546894f9a85e203fb336db569b16c25e04f": "169397000000000000000",
  "70616e2892fa269705b2046b8fe3e72fa55816d3": "20000000000000000000000",
  "8f4d1d41693e462cf982fd81d0aa701d3a5374c9": "4000000000000000000000",
  "c518799a5925576213e21896e0539abb85b05ae3": "1000000000000000000000",
  "0e3a28c1dfafb0505bdce19fe025f506a6d01ceb": "2000000000000000000000",
  "e4a47e3933246c3fd62979a1ea19ffdf8c72ef37": "148273000000000000000",
  "d231929735132102471ba59007b6644cc0c1de3e": "1000090000000000000000",
  "555d8d3ce1798aca902754f164b8be2a02329c6c": "10000000000000000000000",
  "5ab1a5615348001c7c775dc75748669b8be4de14": "690200000000000000000",
  "2fee36a49ee50ecf716f1047915646779f8ba03f": "1056230000000000000000",
  "54db5e06b4815d31cb56a8719ba33af2d73e7252": "670000000000000000000",
  "7c8bb65a6fbb49bd413396a9d7e31053bbb37aa9": "6000000000000000000000",
  "c1384c6e717ebe4b23014e51f31c9df7e4e25b31": "500000000000000000000",
  "474158a1a9dc693c133f65e47b5c3ae2f773a86f": "200200000000000000000",
  "2934c0df7bbc172b6c186b0b72547ace8bf75454": "60000000000000000000",
  "6966063aa5de1db5c671f3dd699d5abe213ee902": "8000000000000000000000",
  "9225d46a5a80943924a39e5b84b96da0ac450581": "40000000000000000000000",
  "671bbca099ff899bab07ea1cf86965c3054c8960": "50000000000000000000",
  "f1f766b0e46d73fcd4d52e7a72e1b9190cc632b3": "8000000000000000000000",
  "ef0dc7dd7a53d612728bcbd2b27c19dd4d7d666f": "705668000000000000000",
  "38d2e9154964b41c8d50a7487d391e7ee2c3d3c2": "3500000000000000000000",
  "352a785f4a921632504ce5d015f83c49aa838d6d": "4314800000000000000000",
  "743de50026ca67c94df54f066260e1d14acc11ac": "2000000000000000000000",
  "b188078444027e386798a8ae68698919d5cc230d": "267400000000000000000",
  "53608105ce4b9e11f86bf497ffca3b78967b5f96": "20000000000000000000000",
  "3b159099075207c6807663b1f0f7eda54ac8cce3": "1969543000000000000000",
  "141a5e39ee2f680a600fbf6fa297de90f3225cdd": "10000000000000000000000",
  "44fff37be01a3888d3b8b8e18880a7ddefeeead3": "259145000000000000000",
  "c5a629a3962552cb8eded889636aafbd0c18ce65": "10000000000000000000000",
  "fdba5359f7ec3bc770ac49975d844ec9716256f1": "1000000000000000000000",
  "7c1df24a4f7fb2c7b472e0bb006cb27dcd164156": "1000000000000000000000",
  "ab7d54c7c6570efca5b4b8ce70f52a5773e5d53b": "279600000000000000000",
  "3f173aa6edf469d185e59bd26ae4236b92b4d8e1": "320000000000000000000",
  "a3f4ad14e0bb44e2ce2c14359c75b8e732d37054": "200000000000000000000",
  "ac5f627231480d0d95302e6d89fc32cb1d4fe7e3": "200000000000000000000",
  "d0775dba2af4c30a3a78365939cd71c2f9de95d2": "1940000000000000000000",
  "ad94235fc3b3f47a2413af31e884914908ef0c45": "500008000000000000000",
  "eaedcc6b8b6962d5d9288c156c579d47c0a9fcff": "85000000000000000000",
  "7ac48d40c664cc9a6d89f1c5f5c80a1c70e744e6": "3008000000000000000000",
  "ec73114c5e406fdbbe09b4fa621bd70ed54ea1ef": "24500000000000000000000",
  "a690f1a4b20ab7ba34628620de9ca040c43c1963": "4000000000000000000000",
  "cad14f9ebba76680eb836b079c7f7baaf481ed6d": "238600000000000000000",
  "6c714a58fff6e97d14b8a5e305eb244065688bbd": "4000000000000000000000",
  "3e618350fa01657ab0ef3ebac8e37012f8fc2b6f": "2804400000000000000000",
  "c946d5acc1346eba0a7279a0ac1d465c996d827e": "16385128000000000000000",
  "1164caaa8cc5977afe1fad8a7d6028ce2d57299b": "400000000000000000000",
  "7917e5bd82a9790fd650d043cdd930f7799633db": "3999800000000000000000",
  "d52aecc6493938a28ca1c367b701c21598b6a02e": "1100000000000000000000",
  "98bed3a72eccfbafb923489293e429e703c7e25b": "2000000000000000000000",
  "42db0b902559e04087dd5c441bc7611934184b89": "2014420000000000000000",
  "43bc2d4ddcd6583be2c7bc094b28fb72e62ba83b": "2000000000000000000000",
  "85f0e7c1e3aff805a627a2aaf2cff6b4c0dbe9cb": "20000000000000000000",
  "581b9fd6eae372f3501f42eb9619eec820b78a84": "19699015000000000000000",
  "541db20a80cf3b17f1621f1b3ff79b882f50def3": "1000000000000000000000",
  "4e8a6d63489ccc10a57f885f96eb04ecbb546024": "18500000000000000000000",
  "28349f7ef974ea55fe36a1583b34cec3c45065f0": "234490000000000000000",
  "a3241d890a92baf52908dc4aa049726be426ebd3": "19999560000000000000000",
  "b4b11d109f608fa8edd3fea9f8c315649aeb3d11": "5000000000000000000000",
  "5f321b3daaa296cadf29439f9dab062a4bffedd6": "81868000000000000000",
  "c5ae86b0c6c7e3900f1368105c56537faf8d743e": "188000000000000000000",
  "9a8eca4189ff4aa8ff7ed4b6b7039f0902219b15": "20000000000000000000",
  "a3facc50195c0b4933c85897fecc5bbd995c34b8": "20000000000000000000",
  "f07bd0e5c2ce69c7c4a724bd26bbfa9d2a17ca03": "5910000000000000000000",
  "640aba6de984d94517377803705eaea7095f4a11": "10000000000000000000000",
  "204ac98867a7c9c7ed711cb82f28a878caf69b48": "6000000000000000000000",
  "9d34dac25bd15828faefaaf28f710753b39e89dc": "1090400000000000000000",
  "fe418b421a9c6d373602790475d2303e11a75930": "1015200000000000000000",
  "3f472963197883bbda5a9b7dfcb22db11440ad31": "481445000000000000000",
  "1578bdbc371b4d243845330556fff2d5ef4dff67": "100000000000000000000",
  "dba4796d0ceb4d3a836b84c96f910afc103f5ba0": "166666000000000000000",
  "466fda6b9b58c5532750306a10a2a8c768103b07": "199955000000000000000",
  "2770f14efb165ddeba79c10bb0af31c31e59334c": "3000000000000000000000",
  "7c382c0296612e4e97e440e02d3871273b55f53b": "197600000000000000000",
  "1fb7bd310d95f2a6d9baaf8a8a430a9a04453a8b": "3000000000000000000000",
  "a9acf600081bb55bb6bfbab1815ffc4e17e85a95": "200000000000000000000",
  "f93d5bcb0644b0cce5fcdda343f5168ffab2877d": "209978000000000000000",
  "db0cc78f74d9827bdc8a6473276eb84fdc976212": "2000000000000000000000",
  "b66411e3a02dedb726fa79107dc90bc1cae64d48": "2000000000000000000000",
  "4d6e8fe109ccd2158e4db114132fe75fecc8be5b": "25019000000000000000",
  "6fd947d5a73b175008ae6ee8228163da289b167d": "30000000000000000000000",
  "32d950d5e93ea1d5b48db4714f867b0320b31c0f": "1015200000000000000000",
  "9c99b62606281b5cefabf36156c8fe62839ef5f3": "4000000000000000000000",
  "86c8d0d982b539f48f9830f9891f9d607a942659": "13260000000000000000000",
  "f2127d54188fedef0f338a5f38c7ff73ad9f6f42": "20000000000000000000000",
  "e864fec07ed1214a65311e11e329de040d04f0fd": "1656353000000000000000",
  "1d09ad2412691cc581c1ab36b6f9434cd4f08b54": "7000000000000000000000",
  "4ea70f04313fae65c3ff224a055c3d2dab28dddf": "19999800000000000000000",
  "e0668fa82c14d6e8d93a53113ef2862fa81581bc": "870400000000000000000",
  "f0d858105e1b648101ac3f85a0f8222bf4f81d6a": "600000000000000000000",
  "0f3a1023cac04dbf44f5a5fa6a9cf8508cd4fddf": "1820000000000000000000",
  "5793abe6f1533311fd51536891783b3f9625ef1c": "827268000000000000000",
  "8d667637e29eca05b6bfbef1f96d460eefbf9984": "4000000000000000000000",
  "d76dbaebc30d4ef67b03e6e6ecc6d84e004d502d": "2019250000000000000000",
  "42d1a6399b3016a8597f8b640927b8afbce4b215": "2980000000000000000000",
  "21fd47c5256012198fa5abf131c06d6aa1965f75": "7880000000000000000000",
  "2f2bba1b1796821a766fce64b84f28ec68f15aea": "20000000000000000000",
  "d24bf12d2ddf457decb17874efde2052b65cbb49": "14000000000000000000000",
  "88de13b09931877c910d593165c364c8a1641bd3": "3000000000000000000000",
  "555ca9f05cc134ab54ae9bea1c3ff87aa85198ca": "100000000000000000000",
  "ae9ecd6bdd952ef497c0050ae0ab8a82a91898ce": "30000000000000000000",
  "ad8bfef8c68a4816b3916f35cb7bfcd7d3040976": "40000000000000000000000",
  "dad136b88178b4837a6c780feba226b98569a94c": "200000000000000000000",
  "800e7d631c6e573a90332f17f71f5fd19b528cb9": "152000000000000000000",
  "94a9a71691317c2064271b51c9353fbded3501a8": "3340000000000000000000",
  "80a0f6cc186cf6201400736e065a391f52a9df4a": "10000000000000000000000",
  "712ff7370a13ed360973fedc9ff5d2c93a505e9e": "3940000000000000000000",
  "42399659aca6a5a863ea2245c933fe9a35b7880e": "2044000000000000000000",
  "ae239acffd4ebe2e1ba5b4170572dc79cc6533ec": "12000000000000000000000",
  "007b9fc31905b4994b04c9e2cfdc5e2770503f42": "1999000000000000000000",
  "7480de62254f2ba82b578219c07ba5be430dc3cb": "7040000000000000000000",
  "917b8f9f3a8d09e9202c52c29e724196b897d35e": "161000000000000000000",
  "708ea707bae4357f1ebea959c3a250acd6aa21b3": "500000000000000000000",
  "6dc7053a718616cfc78bee6382ee51add0c70330": "2000000000000000000000",
  "c4dac5a8a0264fbc1055391c509cc3ee21a6e04c": "6501000000000000000000",
  "c1b2a0fb9cad45cd699192cd27540b88d3384279": "500000000000000000000",
  "b07cb9c12405b711807543c4934465f87f98bd2d": "2000000000000000000000",
  "c7f72bb758016b374714d4899bce22b4aec70a31": "1072706000000000000000",
  "0c480de9f7461002908b49f60fc61e2b62d3140b": "10000000000000000000000",
  "83d532d38d6dee3f60adc68b936133c7a2a1b0dd": "500000000000000000000",
  "12afbcba1427a6a39e7ba4849f7ab1c4358ac31b": "20000000000000000000000",
  "f8f6645e0dee644b3dad81d571ef9baf840021ad": "2000000000000000000000",
  "40cf890591eae4a18f812a2954cb295f633327e6": "48132000000000000000",
  "735b97f2fc1bd24b12076efaf3d1288073d20c8c": "20000000000000000000",
  "47c7e5efb48b3aed4b7c6e824b435f357df4c723": "18200000000000000000",
  "d34d708d7398024533a5a2b2309b19d3c55171bb": "400000000000000000000",
  "64370e87202645125a35b207af1231fb6072f9a7": "200000000000000000000",
  "b055af4cadfcfdb425cf65ba6431078f07ecd5ab": "100000000000000000000",
  "c7de5e8eafb5f62b1a0af2195cf793c7894c9268": "1000000000000000000000",
  "c63cd7882118b8a91e074d4c8f4ba91851303b9a": "260000000000000000000",
  "164d7aac3eecbaeca1ad5191b753f173fe12ec33": "744090000000000000000",
  "e4fb26d1ca1eecba3d8298d9d148119ac2bbf580": "400000000000000000000",
  "613ac53be565d46536b820715b9b8d3ae68a4b95": "3760000000000000000000",
  "7f616c6f008adfa082f34da7d0650460368075fb": "1000000000000000000000",
  "9af100cc3dae83a33402051ce4496b16615483f6": "2000000000000000000000",
  "b45cca0d36826662683cf7d0b2fdac687f02d0c4": "1000000000000000000000",
  "93a6b3ab423010f981a7489d4aad25e2625c5741": "20190033000000000000000",
  "ee049af005974dd1c7b3a9ca8d9aa77175ba53aa": "333333000000000000000",
  "687927e3048bb5162ae7c15cf76bd124f9497b9e": "2000000000000000000000",
  "1aa40270d21e5cde86b6316d1ac3c533494b79ed": "20000000000000000000",
  "426259b0a756701a8b663528522156c0288f0f24": "9900000000000000000000",
  "91c75e3cb4aa89f34619a164e2a47898f5674d9c": "2000000000000000000000",
  "437983388ab59a4ffc215f8e8269461029c3f1c1": "20000000000000000000000",
  "272a131a5a656a7a3aca35c8bd202222a7592258": "2674000000000000000000",
  "bc0ca4f217e052753614d6b019948824d0d8688b": "400000000000000000000",
  "cc6c03bd603e09de54e9c4d5ac6d41cbce715724": "98500000000000000000",
  "d79aff13ba2da75d46240cac0a2467c656949823": "1730000000000000000000",
  "477b24eee8839e4fd19d1250bd0b6645794a61ca": "8000000000000000000000",
  "79fd6d48315066c204f9651869c1096c14fc9781": "2000000000000000000000",
  "1463a873555bc0397e575c2471cf77fa9db146e0": "10000000000000000000000",
  "89ab13ee266d779c35e8bb04cd8a90cc2103a95b": "60000000000000000000000",
  "90acced7e48c08c6b934646dfa0adf29dc94074f": "56154000000000000000",
  "31ea6eab19d00764e9a95e183f2b1b22fc7dc40f": "20000000000000000000",
  "87a53ea39f59a35bada8352521645594a1a714cb": "1910000000000000000000",
  "1e1aed85b86c6562cb8fa1eb6f8f3bc9dcae6e79": "4516200000000000000000",
  "e36a8ea87f1e99e8a2dc1b2608d166667c9dfa01": "100000000000000000000",
  "ec2cb8b9378dff31aec3c22e0e6dadff314ab5dd": "2000000000000000000000",
  "3cadeb3d3eed3f62311d52553e70df4afce56f23": "4000000000000000000000",
  "3ceca96bb1cdc214029cbc5e181d398ab94d3d41": "80000000000000000000000",
  "3283eb7f9137dd39bed55ffe6b8dc845f3e1a079": "66224000000000000000",
  "0954a8cb5d321fc3351a7523a617d0f58da676a7": "2506000000000000000000",
  "de33d708a3b89e909eaf653b30fdc3a5d5ccb4b3": "177300000000000000000",
  "1c6702b3b05a5114bdbcaeca25531aeeb34835f4": "26071500000000000000000",
  "e5b96fc9ac03d448c1613ac91d15978145dbdfd1": "200000000000000000000",
  "fbf204c813f836d83962c7870c7808ca347fd33e": "20000000000000000000",
  "3b13631a1b89cb566548899a1d60915cdcc4205b": "2000000000000000000000",
  "a87f7abd6fa31194289678efb63cf584ee5e2a61": "4000000000000000000000",
  "c0a39308a80e9e84aaaf16ac01e3b01d74bd6b2d": "136499000000000000000",
  "ffd6da958eecbc016bab91058440d39b41c7be83": "20000000000000000000000",
  "0e3dd7d4e429fe3930a6414035f52bdc599d784d": "40110000000000000000",
  "e0663e8cd66792a641f56e5003660147880f018e": "2000000000000000000000",
  "5b78eca27fbdea6f26befba8972b295e7814364b": "2000000000000000000000",
  "ec9851bd917270610267d60518b54d3ca2b35b17": "40000000000000000000000",
  "bc9c95dfab97a574cea2aa803b5caa197cef0cff": "420000000000000000000",
  "100b4d0977fcbad4debd5e64a0497aeae5168fab": "314500000000000000000",
  "1b6610fb68bad6ed1cfaa0bbe33a24eb2e96fafb": "152000000000000000000",
  "b4524c95a7860e21840296a616244019421c4aba": "8000000000000000000000",
  "88975a5f1ef2528c300b83c0c607b8e87dd69315": "83500000000000000000",
  "853e6abaf44469c72f151d4e223819aced4e3728": "2000000000000000000000",
  "d604abce4330842e3d396ca73ddb5519ed3ec03f": "163940000000000000000",
  "d209482bb549abc4777bea6d7f650062c9c57a1c": "320880000000000000000",
  "590acbda37290c0d3ec84fc2000d7697f9a4b15d": "500000000000000000000",
  "571950ea2c90c1427d939d61b4f2de4cf1cfbfb0": "20000000000000000000",
  "cb94e76febe208116733e76e805d48d112ec9fca": "1000000000000000000000",
  "fa8e3b1f13433900737daaf1f6299c4887f85b5f": "715000000000000000000",
  "162d76c2e6514a3afb6fe3d3cb93a35c5ae783f1": "2000000000000000000000",
  "4bea288eea42c4955eb9faad2a9faf4783cbddac": "28790618000000000000000",
  "c8ab1a3cf46cb8b064df2e222d39607394203277": "2000000000000000000000",
  "318b2ea5f0aaa879c4d5e548ac9d92a0c67487b7": "200000000000000000000",
  "53c5fe0119e1e848640cee30adea96940f2a5d8b": "21746000000000000000000",
  "0701f9f147ec486856f5e1b71de9f117e99e2105": "173360000000000000000",
  "337cfe1157a5c6912010dd561533791769c2b6a6": "1000000000000000000000",
  "fd60d2b5af3d35f7aaf0c393052e79c4d823d985": "56400000000000000000",
  "0f049a8bdfd761de8ec02cee2829c4005b23c06b": "252000000000000000000",
  "924bce7a853c970bb5ec7bb759baeb9c7410857b": "13700000000000000000",
  "16abb8b021a710bdc78ea53494b20614ff4eafe8": "158000000000000000000",
  "9e7f65a90e8508867bccc914256a1ea574cf07e3": "1240000000000000000000",
  "01d03815c61f416b71a2610a2daba59ff6a6de5b": "9553100000000000000000",
  "3df762049eda8ac6927d904c7af42f94e5519601": "2000000000000000000000",
  "5593c9d4b664730fd93ca60151c25c2eaed93c3b": "200000000000000000000",
  "e023f09b2887612c7c9cf1988e3a3a602b3394c9": "2000000000000000000000",
  "4c13980c32dcf3920b78a4a7903312907c1b123f": "60024000000000000000",
  "a282e969cac9f7a0e1c0cd90f5d0c438ac570da3": "627760000000000000000",
  "3b22da2a0271c8efe102532773636a69b1c17e09": "502000000000000000000",
  "1aa1021f550af158c747668dd13b463160f95a40": "1470000000000000000000",
  "f15178ffc43aa8070ece327e930f809ab1a54f9d": "197600000000000000000",
  "db1293a506e90cad2a59e1b8561f5e66961a6788": "2000000000000000000000",
  "88c361640d6b69373b081ce0c433bd590287d5ec": "50000000000000000000000",
  "3737216ee91f177732fb58fa4097267207e2cf55": "1520000000000000000000",
  "a16d9e3d63986159a800b46837f45e8bb980ee0b": "2030400000000000000000",
  "ec76f12e57a65504033f2c0bce6fc03bd7fa0ac4": "3580000000000000000000",
  "d9f1b26408f0ec67ad1d0d6fe22e8515e1740624": "24000000000000000000",
  "716ba01ead2a91270635f95f25bfaf2dd610ca23": "44750000000000000000000",
  "42a98bf16027ce589c4ed2c95831e2724205064e": "10000000000000000000000",
  "0f88aac9346cb0e7347fba70905475ba8b3e5ece": "10000000000000000000000",
  "2d8c52329f38d2a2fa9cbaf5c583daf1490bb11c": "20000000000000000000",
  "3cea302a472a940379dd398a24eafdbadf88ad79": "3000000000000000000000",
  "a29d5bda74e003474872bd5894b88533ff64c2b5": "10000000000000000000000",
  "2d23766b6f6b05737dad80a419c40eda4d77103e": "3820000000000000000000",
  "b07249e055044a9155359a402937bbd954fe48b6": "100000000000000000000",
  "f1e980c559a1a8e5e50a47f8fffdc773b7e06a54": "30104784000000000000000",
  "8275cd684c3679d5887d03664e338345dc3cdde1": "15800000000000000000",
  "b27c1a24204c1e118d75149dd109311e07c073ab": "3100000000000000000000",
  "451b3699475bed5d7905f8905aa3456f1ed788fc": "2560000000000000000000",
  "31ad4d9946ef09d8e988d946b1227f9141901736": "22880000000000000000000",
  "52b8a9592634f7300b7c5c59a3345b835f01b95c": "2000000000000000000000",
  "b161725fdcedd17952d57b23ef285b7e4b1169e8": "50071000000000000000",
  "74fc5a99c0c5460503a13b0509459da19ce7cd90": "200000000000000000000",
  "d99df7421b9382e42c89b006c7f087702a0757c0": "480000000000000000000",
  "8a4f4a7f52a355ba105fca2072d3065fc8f7944b": "500000000000000000000",
  "12316fc7f178eac22eb2b25aedeadf3d75d00177": "19999999000000000000000",
  "f598db2e09a8a5ee7d720d2b5c43bb126d11ecc2": "200000000000000000000",
  "37b8beac7b1ca38829d61ab552c766f48a10c32f": "400000000000000000000",
  "851dc38adb4593729a76f33a8616dab6f5f59a77": "100000000000000000000",
  "bf4096bc547dbfc4e74809a31c039e7b389d5e17": "3940000000000000000000",
  "98d3731992d1d40e1211c7f735f2189afa0702e0": "8000000000000000000000",
  "0f4073c1b99df60a1549d69789c7318d9403a814": "20000000000000000000000",
  "a430995ddb185b9865dbe62539ad90d22e4b73c2": "10000000000000000000000",
  "898c72dd736558ef9e4be9fdc34fef54d7fc7e08": "1000000000000000000000",
  "f9b617f752edecae3e909fbb911d2f8192f84209": "2674000000000000000000",
  "e1ae029b17e373cde3de5a9152201a14cac4e119": "99968000000000000000",
  "d8e8474292e7a051604ca164c0707783bb2885e8": "13370000000000000000000",
  "f476f2cb7208a32e051fd94ea8662992638287a2": "100000000000000000000",
  "3a84e950ed410e51b7e8801049ab2634b285fea1": "18690000000000000000000",
  "5b7784caea01799ca30227827667ce207c5cbc76": "2000000000000000000000",
  "3af65b3e28895a4a001153391d1e69c31fb9db39": "3940000000000000000000",
  "95fb5afb14c1ef9ab7d179c5c300503fd66a5ee2": "34225000000000000000",
  "a8446c4781a737ac4328b1e15b8a0b3fbb0fd668": "21390500000000000000000",
  "4888fb25cd50dbb9e048f41ca47d78b78a27c7d9": "17300000000000000000000",
  "566c10d638e8b88b47d6e6a414497afdd00600d4": "99960000000000000000",
  "bd47f5f76e3b930fd9485209efa0d4763da07568": "1000000000000000000000",
  "1e1c6351776ac31091397ecf16002d979a1b2d51": "1400000000000000000000",
  "edf603890228d7d5de9309942b5cad4219ef9ad7": "5000000000000000000000",
  "1923cfc68b13ea7e2055803645c1e320156bd88d": "1337000000000000000000",
  "8f8f37d0ad8f335d2a7101b41156b688a81a9cbe": "70000000000000000000",
  "63334fcf1745840e4b094a3bb40bb76f9604c04c": "3978000000000000000000",
  "001762430ea9c3a26e5749afdb70da5f78ddbb8c": "200000000000000000000",
  "512116817ba9aaf843d1507c65a5ea640a7b9eec": "50000000000000000000",
  "2961fb391c61957cb5c9e407dda29338d3b92c80": "999942000000000000000",
  "fc2952b4c49fedd0bc0528a308495e6d6a1c71d6": "2000000000000000000000",
  "13ec812284026e409bc066dfebf9d5a4a2bf801e": "1610000000000000000000",
  "ef463c2679fb279164e20c3d2691358773a0ad95": "2000000000000000000000",
  "3aadf98b61e5c896e7d100a3391d3250225d61df": "234000000000000000000",
  "e8137fc1b2ec7cc7103af921899b4a39e1d959a1": "1490000000000000000000",
  "b1a2b43a7433dd150bb82227ed519cd6b142d382": "2738000000000000000000",
  "c1f39bd35dd9cec337b96f47c677818160df37b7": "20000000000000000000",
  "b587b44a2ca79e4bc1dd8bfdd43a207150f2e7e0": "630400000000000000000",
  "41485612d03446ec4c05e5244e563f1cbae0f197": "970000000000000000000",
  "a12623e629df93096704b16084be2cd89d562da4": "8500000000000000000000",
  "3f2f381491797cc5c0d48296c14fd0cd00cdfa2d": "804000000000000000000",
  "9470cc36594586821821c5c996b6edc83b6d5a32": "24000000000000000000",
  "3605372d93a9010988018f9f315d032ed1880fa1": "500066000000000000000",
  "12632388b2765ee4452b50161d1fffd91ab81f4a": "740000000000000000000",
  "274a3d771a3d709796fbc4d5f48fce2fe38c79d6": "20000000000000000000",
  "d60a52580728520df7546bc1e283291788dbae0c": "999910000000000000000",
  "1ab53a11bcc63ddfaa40a02b9e186496cdbb8aff": "1996800000000000000000",
  "c282e6993fbe7a912ea047153ffd9274270e285b": "139939000000000000000",
  "a291e9c7990d552dd1ae16cebc3fca342cbaf1d1": "20000000000000000000000",
  "5547fdb4ae11953e01292b7807fa9223d0e4606a": "98940000000000000000",
  "bded11612fb5c6da99d1e30e320bc0995466141e": "400000000000000000000",
  "b73b4ff99eb88fd89b0b6d57a9bc338e886fa06a": "32000000000000000000",
  "b1c751786939bba0d671a677a158c6abe7265e46": "10000000000000000000000",
  "e881bbbe69722d81efecaa48d1952a10a2bfac8f": "16000000000000000000000",
  "fe96c4cd381562401aa32a86e65b9d52fa8aee27": "2640000000000000000000",
  "683dba36f7e94f40ea6aea0d79b8f521de55076e": "140000000000000000000",
  "5ac2908b0f398c0df5bac2cb13ca7314fba8fa3d": "199800000000000000000",
  "8914a680a5aec5226d4baaec2e5552b44dd7c874": "100076000000000000000",
  "041170f581de80e58b2a045c8f7c1493b001b7cb": "889800000000000000000",
  "4665e47396c7db97eb2a03d90863d5d4ba319a94": "600000000000000000000",
  "ed4be04a052d7accb3dcce90319dba4020ab2c68": "37547947000000000000000",
  "4b0619d9d8aa313a9531ac7dbe04ca0d6a5ad1b6": "2000000000000000000000",
  "a21442ab05340ade68c915f3c3399b9955f3f7eb": "775000000000000000000",
  "655934da8e744eaa3de34dbbc0894c4eda0b61f2": "200000000000000000000",
  "6038740ae28d66ba93b0be08482b3205a0f7a07b": "316000000000000000000",
  "99924a9816bb7ddf3fec1844828e9ad7d06bf4e6": "1760000000000000000000",
  "6847825bdee8240e28042c83cad642f286a3bddc": "1500000000000000000000",
  "a718aaad59bf395cba2b23e09b02fe0c89816247": "999600000000000000000",
  "2c89f5fdca3d155409b638b98a742e55eb4652b7": "98500000000000000000000",
  "1a7044e2383f8708305b495bd1176b92e7ef043a": "200000000000000000000",
  "282e80a554875a56799fa0a97f5510e795974c4e": "1000000000000000000000",
  "ffb3bcc3196a8c3cb834cec94c34fed35b3e1054": "1340000000000000000000",
  "d135794b149a18e147d16e621a6931f0a40a969a": "20000000000000000000000",
  "6b94615db750656ac38c7e1cf29a9d13677f4e15": "12000000000000000000000",
  "ecbe425e670d39094e20fb5643a9d818eed236de": "5000000000000000000000",
  "511e0efb04ac4e3ff2e6550e498295bfcd56ffd5": "668500000000000000000",
  "ff65511cada259260c1ddc41974ecaecd32d6357": "1760000000000000000000",
  "9ffc5fe06f33f5a480b75aa94eb8556d997a16c0": "20000000000000000000",
  "57df23bebdc65eb75feb9cb2fad1c073692b2baf": "4000000000000000000000",
  "207ef80b5d60b6fbffc51f3a64b8c72036a5abbd": "6685000000000000000000",
  "c573e841fa08174a208b060ccb7b4c0d7697127f": "668500000000000000000",
  "411610b178d5617dfab934d293f512a93e5c10e1": "170000000000000000000",
  "9991614c5baa47dd6c96874645f97add2c3d8380": "1970000000000000000000",
  "2d3480bf0865074a72c7759ee5137b4d70c51ce9": "200000000000000000000",
  "9d40e012f60425a340d82d03a1c757bfabc706fb": "169799000000000000000",
  "47648bed01f3cd3249084e635d14daa9e7ec3c8a": "194000000000000000000",
  "a5ff62222d80c013cec1a0e8850ed4d354dac16d": "207600000000000000000",
  "f80d3619702fa5838c48391859a839fb9ce7160f": "1992800000000000000000",
  "7c0f5e072043c9ee740242197e78cc4b98cdf960": "200000000000000000000",
  "a40aa2bbce0c72b4d0dfffcc42715b2b54b01bfa": "1000000000000000000000",
  "2eeed50471a1a2bf53ee30b1232e6e9d80ef866d": "20000000000000000000",
  "0c2808b951ed9e872d7b32790fcc5994ae41ffdc": "102000000000000000000000",
  "7f06c89d59807fa60bc60136fcf814cbaf2543bd": "10000000000000000000000",
  "8d4b603c5dd4570c34669515fdcc665890840c77": "18200000000000000000",
  "d5e5c135d0c4c3303934711993d0d16ff9e7baa0": "2000000000000000000000",
  "241361559feef80ef137302153bd9ed2f25db3ef": "20000000000000000000000",
  "db63122de7037da4971531fae9af85867886c692": "277000000000000000000",
  "417e4e2688b1fd66d821529e46ed4f42f8b3db3d": "2000000000000000000000",
  "127db1cadf1b771cbd7475e1b272690f558c8565": "14000000000000000000000",
  "48659d8f8c9a2fd44f68daa55d23a608fbe500dc": "2000000000000000000000",
  "b3a64b1176724f5409e1414a3523661baee74b4a": "25610000000000000000",
  "aa14422d6f0ae5a758194ed15780c838d67f1ee1": "28503824000000000000000",
  "a0a0e65204541fca9b2fb282cd95138fae16f809": "10000000000000000000000",
  "d2107b353726c3a2b46566eaa7d9f80b5d21dbe3": "20000000000000000000",
  "e4cafb727fb5c6b70bb27533b8a9ccc9ef6888e1": "300443000000000000000",
  "09f3f601f605441140586ce0656fa24aa5b1d9ae": "1539400000000000000000",
  "87fcbe7c4193ffcb08143779c9bec83fe7fda9fc": "100275000000000000000",
  "03ebc63fda6660a465045e235fbe6e5cf195735f": "141840000000000000000",
  "bdbaf6434d40d6355b1e80e40cc4ab9c68d96116": "100000000000000000000",
  "4e2225a1bb59bc88a2316674d333b9b0afca6655": "155000000000000000000",
  "4dc3da13b2b4afd44f5d0d3189f444d4ddf91b1b": "2000000000000000000000",
  "4ba8e0117fc0b6a3e56b24a3a58fe6cef442ff98": "5640000000000000000000",
  "27146913563aa745e2588430d9348e86ea7c3510": "400000000000000000000",
  "4c5afe40f18ffc48d3a1aec41fc29de179f4d297": "2000000000000000000000",
  "8a810114b2025db9fbb50099a6e0cb9e2efa6bdc": "1910000000000000000000",
  "2dee90a28f192d676a8773232b56f18f239e2fad": "18587970000000000000000",
  "60676e92d18b000509c61de540e6c5ddb676d509": "1200000000000000000000",
  "9bfc659c9c601ea42a6b21b8f17084ec87d70212": "10000000000000000000000",
  "5d5d6e821c6eef96810c83c491468560ef70bfb5": "2000000000000000000000",
  "d5787668c2c5175b01a8ee1ac3ecc9c8b2aba95a": "1999944000000000000000",
  "33b336f5ba5edb7b1ccc7eb1a0d984c1231d0edc": "2000000000000000000000",
  "3abb8adfc604f48d5984811d7f1d52fef6758270": "4475000000000000000000",
  "980a84b686fc31bdc83c221058546a71b11f838a": "779471000000000000000",
  "0b507cf553568daaf65504ae4eaa17a8ea3cdbf5": "2000000000000000000000",
  "896009526a2c7b0c09a6f63a80bdf29d9c87de9c": "3462830000000000000000",
  "9696052138338c722f1140815cf7749d0d3b3a74": "500000000000000000000",
  "3831757eae7557cb8a37a4b10644b63e4d3b3c75": "200000000000000000000",
  "62dc72729024375fc37cbb9c7c2393d10233330f": "2000000000000000000000",
  "44098866a69b68c0b6bc168229b9603587058967": "188000000000000000000",
  "25adb8f96f39492c9bb47c5edc88624e46075697": "26740000000000000000000",
  "fd4de8e3748a289cf7d060517d9d38388db01fb8": "250000000000000000000",
  "6be7595ea0f068489a2701ec4649158ddc43e178": "2000000000000000000000",
  "d402b4f6a099ebe716cb14df4f79c0cd01c6071b": "2000000000000000000000",
  "a07682000b1bcf3002f85c80c0fa2949bd1e82fd": "4000000000000000000000",
  "eb4f00e28336ea09942588eeac921811c522143c": "2000000000000000000000",
  "8f31c7005197ec997a87e69bec48649ab94bb2a5": "4000000000000000000000",
  "e7fd8fd959aed2767ea7fa960ce1db53af802573": "1000000000000000000000",
  "a8ef9ad274436042903e413c3b0c62f5f52ed584": "10000000000000000000000",
  "d83ad260e9a6f432fb6ea28743299b4a09ad658c": "2000000000000000000000",
  "b5c816a8283ca4df68a1a73d63bd80260488df08": "200000000000000000000",
  "d7d3c75920590438b82c3e9515be2eb6ed7a8b1a": "60000000000000000000000",
  "af3cb5965933e7dad883693b9c3e15beb68a4873": "2000000000000000000000",
  "6e899e59a9b41ab7ea41df7517860f2acb59f4fd": "20000000000000000000000",
  "527a8ca1268633a6c939c5de1b929aee92aeac8d": "900000000000000000000",
  "1680cec5021ee93050f8ae127251839e74c1f1fd": "13098657000000000000000",
  "ff7843c7010aa7e61519b762dfe49124a76b0e4e": "933580000000000000000000",
  "140fba58dbc04803d84c2130f01978f9e0c73129": "400000000000000000000",
  "0261ad3a172abf1315f0ffec3270986a8409cb25": "203500000000000000000",
  "ab5a79016176320973e8cd38f6375530022531c0": "1000000000000000000000",
  "fca73eff8771c0103ba3cc1a9c259448c72abf0b": "1000000000000000000000",
  "07d41217badca5e0e60327d845a3464f0f27f84a": "4000000000000000000000",
  "2c1c19114e3d6de27851484b8d2715e50f8a1065": "100000000000000000000",
  "abd21eff954fc6a7de26912a7cbb303a6607804e": "1517000000000000000000",
  "f303d5a816affd97e83d9e4dac2f79072bb0098f": "960000000000000000000",
  "114cfefe50170dd97ae08f0a44544978c599548d": "863000000000000000000",
  "647b85044df2cf0b4ed4882e88819fe22ae5f793": "1000032000000000000000",
  "1b130d6fa51d5c48ec8d1d52dc8a227be8735c8a": "2000000000000000000000",
  "0d9d3f9bc4a4c6efbd59679b69826bc1f63d9916": "600000000000000000000",
  "c765e00476810947816af142d46d2ee7bca8cc4f": "500000000000000000000",
  "b57b04fa23d1203fae061eac4542cb60f3a57637": "191000000000000000000",
  "e192489b85a982c1883246d915b229cb13207f38": "5000000000000000000000",
  "5f483ffb8f680aedf2a38f7833afdcde59b61e4b": "2000000000000000000000",
  "b46d1182e5aacaff0d26b2fcf72f3c9ffbcdd97d": "3139000000000000000000",
  "59c7f785c93160e5807ed34e5e534bc6188647a7": "640000000000000000000",
  "18e4ce47483b53040adbab35172c01ef64506e0c": "9000000000000000000000",
  "296d66b521571a4e4103a7f562c511e6aa732d81": "668500000000000000000",
  "bcd99edc2160f210a05e3a1fa0b0434ced00439b": "2000000000000000000000",
  "f14f0eb86db0eb68753f16918e5d4b807437bd3e": "200000000000000000000",
  "60d5667140d12614b21c8e5e8a33082e32dfcf23": "20000000000000000000000",
  "8ccabf25077f3aa41545344d53be1b2b9c339000": "1695400000000000000000",
  "8cc0d7c016fa7aa950114aa1db094882eda274ea": "159800000000000000000",
  "c71145e529c7a714e67903ee6206e4c3042b6727": "1430000000000000000000",
  "c5e9939334f1252ed2ba26814487dfd2982b3128": "70000000000000000000",
  "f09b3e87f913ddfd57ae8049c731dba9b636dfc3": "608000000000000000000",
  "4349225a62f70aea480a029915a01e5379e64fa5": "2598000000000000000000",
  "666b4f37d55d63b7d056b615bb74c96b3b01991a": "4000000000000000000000",
  "8bd6b1c6d74d010d1008dba6ef835d4430b35c32": "50000000000000000000",
  "7363cd90fbab5bb8c49ac20fc62c398fe6fb744c": "2000000000000000000000",
  "b7479dab5022c4d5dbaaf8de171b4e951dd1a457": "80000000000000000000",
  "5a5468fa5ca226c7532ecf06e1bc1c45225d7ec9": "1910000000000000000000",
  "32a20d028e2c6218b9d95b445c771524636a22ef": "9500000000000000000000",
  "1bd28cd5c78aee51357c95c1ef9235e7c18bc854": "2000000000000000000000",
  "693492a5c51396a482881669ccf6d8d779f00951": "345827000000000000000",
  "bd723b289a7367b6ece2455ed61edb49670ab9c4": "4999995000000000000000",
  "1be3542c3613687465f15a70aeeb81662b65cca8": "2000000000000000000000",
  "5803e68b34da121aef08b602badbafb4d12481ca": "18000000000000000000000",
  "9ac907ee85e6f3e223459992e256a43fa08fa8b2": "10000000000000000000000",
  "833b6a8ec8da408186ac8a7d2a6dd61523e7ce84": "16000000000000000000000",
  "64628c6fb8ec743adbd87ce5e018d531d9210437": "26740000000000000000",
  "566c28e34c3808d9766fe8421ebf4f2b1c4f7d77": "1970000000000000000000",
  "171ad9a04bedc8b861e8ed4bddf5717813b1bb48": "400000000000000000000",
  "4f85bc1fc5cbc9c001e8f1372e07505370d8c71f": "940000000000000000000",
  "6d2f976734b9d0070d1883cf7acab8b3e4920fc1": "10000000000000000000000",
  "357a02c0a9dfe287de447fb67a70ec5b62366647": "26740000000000000000",
  "44a01fb04ac0db2cce5dbe281e1c46e28b39d878": "1999944000000000000000",
  "3630c5e565ceaa8a0f0ffe32875eae2a6ce63c19": "170016000000000000000",
  "334340ee4b9cdc81f850a75116d50ee9b69825bf": "2000000000000000000000",
  "c0afb7d8b79370cfd663c68cc6b9702a37cd9eff": "1000000000000000000000",
  "2016895df32c8ed5478269468423aea7b7fbce50": "20000000000000000000",
  "1e2fe4e4a77d141ff49a0c7fbc95b0a2b283eeeb": "2000000000000000000000",
  "260df8943a8c9a5dba7945327fd7e0837c11ad07": "200000000000000000000",
  "32fbeed6f626fcdfd51acafb730b9eeff612f564": "2000000000000000000000",
  "9bd88068e13075f3a8cac464a5f949d6d818c0f6": "6000000000000000000000",
  "ab4572fbb1d72b575d69ec6ad17333873e8552fc": "1999942000000000000000",
  "e44ea51063405154aae736be2bf1ee3b9be639ae": "4000000000000000000000",
  "617f20894fa70e94a86a49cd74e03238f64d3cd9": "5000057000000000000000",
  "3e914e3018ac00449341c49da71d04dfeeed6221": "4000000000000000000000",
  "590181d445007bd0875aaf061c8d51153900836a": "2000000000000000000000",
  "27987110221a880826adb2e7ab5eca78c6e31aec": "4000000000000000000000",
  "06618e9d5762df62028601a81d4487d6a0ecb80e": "1337000000000000000000",
  "8cc652dd13e7fe14dabbb36d5d320db9ffee8a54": "1790000000000000000000",
  "8973aefd5efaee96095d9e288f6a046c97374b43": "141000000000000000000",
  "dbd51cdf2c3bfacdff106221de2e19ad6d420414": "1760000000000000000000",
  "25697ef20cccaa70d32d376f8272d9c1070c3d78": "200000000000000000000",
  "0726c42e00f45404836eb1e280d073e7059687f5": "1623331000000000000000",
  "5e0785532c7723e4c0af9357d5274b73bdddddde": "25000088000000000000000",
  "38430e931d93be01b4c3ef0dc535f1e0a9610063": "10000000000000000000000",
  "143d536b8b1cb84f56a39e0bc81fd5442bcacce1": "100000000000000000000",
  "5c6d041da7af4487b9dc48e8e1f60766d0a56dbc": "1457800000000000000000",
  "f9bfb59d538afc4874d4f5941b08c9730e38e24b": "40000000000000000000",
  "83dbfd8eda01d0de8e158b16d0935fc2380a5dc7": "600000000000000000000",
  "0e6cd664ad9c1ed64bf98749f40644b626e3792c": "60000000000000000000000",
  "ce2e0da8934699bb1a553e55a0b85c169435bea3": "4999962000000000000000",
  "a39bfee4aec9bd75bd22c6b672898ca9a1e95d32": "10000000000000000000000",
  "1bc44c8761231ba1f11f5faa40fa669a013e12ce": "203586000000000000000",
  "68809af5d532a11c1a4d6e32aac75c4c52b08ead": "10000000000000000000000",
  "80cc21bd99f39005c58fe4a448909220218f66cb": "1000072000000000000000",
  "1080c1d8358a15bc84dac8253c6883319020df2c": "2674000000000000000000",
  "9eaf6a328a4076024efa6b67b48b21eedcc0f0b8": "158000000000000000000",
  "1e7b5e4d1f572becf2c00fc90cb4767b4a6e33d4": "112970000000000000000",
  "acbd185589f7a68a67aa4b1bd65077f8c64e4e21": "200000000000000000000",
  "ff78541756ab2b706e0d70b18adb700fc4f1643d": "43250000000000000000000",
  "7f0ec3db804692d4d1ea3245365aab0590075bc4": "4000000000000000000000",
  "4a918032439159bb315b6725b6830dc83697739f": "343800000000000000000",
  "bc1b021a78fde42d9b5226d6ec26e06aa3670090": "80000000000000000000",
  "2f2523cc834f0086052402626296675186a8e582": "16000000000000000000000",
  "9db2e15ca681f4c66048f6f9b7941ed08b1ff506": "4000000000000000000000",
  "20b9a9e6bd8880d9994ae00dd0b9282a0beab816": "500000000000000000000",
  "3bddbc8134f77d55597fc97c26d26698090604eb": "13700000000000000000",
  "80c3a9f695b16db1597286d1b3a8b7696c39fa27": "100000000000000000000",
  "53194d8afa3e883502767edbc30586af33b114d3": "2000000000000000000000",
  "e2efd0a9bc407ece03d67e8ec8e9d283f48d2a49": "12280000000000000000000",
  "1cb450920078aab2317c7db3b38af7dd298b2d41": "340000000000000000000",
  "ca8276c477b4a07b80107b843594189607b53bec": "6000000000000000000000",
  "147f4210ab5804940a0b7db8c14c28396b62a6bf": "2000000000000000000000",
  "d3df3b53cb3b4755de54e180451cc44c9e8ae0aa": "659801000000000000000",
  "f7c708015071d4fb0a3a2a09a45d156396e3349e": "3000000000000000000000",
  "a8cafac32280d021020bf6f2a9782883d7aabe12": "100000000000000000000",
  "399aa6f5d078cb0970882bc9992006f8fbdf3471": "1000000000000000000000",
  "15669180dee29598869b08a721c7d24c4c0ee63f": "1000000000000000000000",
  "bba8ab22d2fedbcfc63f684c08afdf1c175090b5": "99091000000000000000",
  "5e5a441974a83d74c687ebdc633fb1a49e7b1ad7": "3000000000000000000000",
  "98b769cc305cecfb629a00c907069d7ef9bc3a12": "26000000000000000000",
  "c820c711f07705273807aaaa6de44d0e4b48be2e": "155000000000000000000",
  "12aa7d86ddfbad301692feac8a08f841cb215c37": "137000000000000000000",
  "6ff5d361b52ad0b68b1588607ec304ae5665fc98": "1940000000000000000000",
  "2382a9d48ec83ea3652890fd0ee79c907b5b2dc1": "133700000000000000000",
  "b2a144b1ea67b9510f2267f9da39d3f93de26642": "2000000000000000000000",
  "b3e20eb4de18bd060221689894bee5aeb25351ee": "73535000000000000000",
  "101a0a64f9afcc448a8a130d4dfcbee89537d854": "15200000000000000000000",
  "1b826fb3c012b0d159e294ba5b8a499ff3c0e03c": "2000000000000000000000",
  "aafb7b013aa1f8541c7e327bf650adbd194c208f": "1358000000000000000000",
  "96eb523e832f500a017de13ec27f5d366c560eff": "307600000000000000000",
  "c7bf17c4c11f98941f507e77084fffbd2dbd3db5": "1000000000000000000000",
  "840ec83ea93621f034e7bb3762bb8e29ded4c479": "2500000000000000000000",
  "0e9c511864a177f49be78202773f60489fe04e52": "6000000000000000000000",
  "f6f1a44309051c6b25e47dff909b179bb9ab591c": "1940000000000000000000",
  "63fe6bcc4b8a9850abbe75803730c932251f145b": "18200000000000000000",
  "f88b58db37420b464c0be88b45ee2b95290f8cfa": "40000000000000000000",
  "9d4d321177256ebd9afbda304135d517c3dc5693": "616000000000000000000",
  "8c1fbe5f0aea359c5aa1fa08c8895412ca8e05a6": "1000000000000000000000",
  "cb0dd7cf4e5d8661f6028943a4b9b75c914436a7": "120000000000000000000000",
  "a3979a92760a135adf69d72f75e167755f1cb8c3": "100000000000000000000",
  "ca22cda3606da5cad013b8074706d7e9e721a50c": "6816200000000000000000",
  "157559adc55764cc6df79323092534e3d6645a66": "6000000000000000000000",
  "4f52ad6170d25b2a2e850eadbb52413ff2303e7f": "3040000000000000000000",
  "eed28c3f068e094a304b853c950a6809ebcb03e0": "17300000000000000000000",
  "2e47f287f498233713850d3126823cc67dcee255": "14600000000000000000",
  "6c359e58a13d4578a9338e335c67e7639f5fb4d7": "218000000000000000000",
  "4968a2cedb457555a139295aea28776e54003c87": "10092310000000000000000",
  "4041374b0feef4792e4b33691fb86897a4ff560c": "365000000000000000000",
  "83e48055327c28b5936fd9f4447e73bdb2dd3376": "2674000000000000000000",
  "32b7feebc5c59bf65e861c4c0be42a7611a5541a": "2212000000000000000000",
  "21a6db6527467bc6dad54bc16e9fe2953b6794ed": "14000000000000000000000",
  "e8ead1bb90ccc3aea2b0dcc5b58056554655d1d5": "7760000000000000000000",
  "7a94b19992ceb8ce63bc92ee4b5aded10c4d9725": "16770000000000000000000",
  "90e93e4dc17121487952333614002be42356498e": "1910000000000000000000",
  "aab00abf5828d7ebf26b47ceaccdb8ba03325166": "10000000000000000000000",
  "0a9ab2638b1cfd654d25dab018a0aebddf85fd55": "21801000000000000000",
  "b12ed07b8a38ad5506363fc07a0b6d799936bdaf": "10000000000000000000000",
  "f4a9d00cefa97b7a58ef9417fc6267a5069039ee": "21800000000000000000",
  "04a1cada1cc751082ff8da928e3cfa000820a9e9": "40000000000000000000",
  "9018cc1f48d2308e252ab6089fb99a7c1d569410": "200000000000000000000",
  "895d694e880b13ccd0848a86c5ce411f88476bbf": "199955000000000000000",
  "40a7f72867a7dc86770b162b7557a434ed50cce9": "1000000000000000000000",
  "467ea10445827ef1e502daf76b928a209e0d4032": "2000000000000000000000",
  "7553aa23b68aa5f57e135fe39fdc235eaca8c98c": "1000000000000000000000",
  "31b43b015d0081643c6cda46a7073a6dfdbca825": "50019600000000000000000",
  "d82fd9fdf6996bedad2843159c06f37e0924337d": "1688800000000000000000",
  "24a4eb36a7e498c36f99975c1a8d729fd6b305d7": "258000000000000000000",
  "91d66ea6288faa4b3d606c2aa45c7b6b8a252739": "2000000000000000000000",
  "83a402438e0519773d5448326bfb61f8b20cf52d": "1520000000000000000000",
  "c2fafdd30acb6d6706e9293cb02641f9edbe07b5": "1494224000000000000000",
  "79dba256472db4e058f2e4cdc3ea4e8a42773833": "1460000000000000000000",
  "498abdeb14c26b7b7234d70fceaef361a76dff72": "3000000000000000000000",
  "7b73242d75ca9ad558d650290df17692d54cd8b8": "2000200000000000000000",
  "6ec3659571b11f889dd439bcd4d67510a25be57e": "123000000000000000000",
  "ab098633eeee0ccefdf632f9575456f6dd80fc86": "200000000000000000000000",
  "f4a51fce4a1d5b94b0718389ba4e7814139ca738": "300000000000000000000",
  "8f561b41b209f248c8a99f858788376250609cf3": "1700000000000000000000",
  "05d0f4d728ebe82e84bf597515ad41b60bf28b39": "4200000000000000000000",
  "dfdf43393c649caebe1bb18059decb39f09fb4e8": "400000000000000000000",
  "0089508679abf8c71bf6781687120e3e6a84584d": "1800000000000000000000",
  "80907f593148b57c46c177e23d25abc4aae18361": "100000000000000000000",
  "94fcceadfe5c109c5eaeaf462d43873142c88e22": "4800000000000000000000",
  "e89249738b7eced7cb666a663c49cbf6de8343ea": "2000000000000000000000",
  "23c99ba087448e19c9701df66e0cab52368331fa": "2000000000000000000000",
  "a68e0c30cba3bc5a883e540320f999c7cd558e5c": "1799869000000000000000",
  "88888a57bd9687cbf950aeeacf9740dcc4d1ef59": "1820000000000000000000",
  "e9b36fe9b51412ddca1a521d6e94bc901213dda8": "10000000000000000000000",
  "a9145046fa3628cf5fd4c613927be531e6db1fdd": "112000000000000000000",
  "e82c58c579431b673546b53a86459acaf1de9b93": "1000000000000000000000",
  "bd6a474d66345bcdd707594adb63b30c7822af54": "4000000000000000000000",
  "6a6159074ab573e0ee581f0f3df2d6a594629b74": "310000000000000000000",
  "2e7f465520ec35cc23d68e75651bb6689544a196": "1050049000000000000000",
  "ac6d02e9a46b379fac4ac9b1d7b5d47bc850ce16": "1760000000000000000000",
  "bd59094e074f8d79142ab1489f148e32151f2089": "20000000000000000000",
  "0ba6e46af25a13f57169255a34a4dac7ce12be04": "500000000000000000000",
  "35145f620397c69cb8e00962961f0f4886643989": "6000000000000000000000",
  "d84b922f7841fc5774f00e14604ae0df42c8551e": "4011000000000000000000",
  "44232ff66ddad1fd841266380036afd7cf7d7f42": "200000000000000000000",
  "516954025fca2608f47da81c215eedfd844a09ff": "382000000000000000000",
  "e5aa0b833bb916dc19a8dd683f0ede241d988eba": "3000000000000000000000",
  "80ea1acc136eca4b68c842a95adf6b7fee7eb8a2": "4000000000000000000000",
  "98a0e54c6d9dc8be96276cebf4fec460f6235d85": "1969803000000000000000",
  "91620f3eb304e813d28b0297556d65dc4e5de5aa": "3820000000000000000000",
  "7bb984c6dbb9e279966afafda59c01d02627c804": "8050000000000000000000",
  "41f489a1ec747bc29c3e5f9d8db97877d4d1b4e9": "133700000000000000000",
  "8dbc3e6cb433e194f40f82b40faadb1f8b856116": "1910000000000000000000",
  "889da40fb1b60f9ea9bd7a453e584cf7b1b4d9f7": "40000000000000000000",
  "debbdd831e0f20ae6e378252decdf92f7cf0c658": "2000000000000000000000",
  "a22ade0ddb5c6ef8d0cd8de94d82b11082cb2e91": "1020000000000000000000",
  "823219a25976bb2aa4af8bad41ac3526b493361f": "2000000000000000000000",
  "6d39a9e98f81f769d73aad2cead276ac1387babe": "394000000000000000000",
  "751abcb6cc033059911815c96fd191360ab0442d": "8000000000000000000000",
  "64d80c3b8ba68282290b75e65d8978a15a87782c": "1970000000000000000000",
  "6ba8f7e25fc2d871618e24e40184199137f9f6aa": "400020000000000000000",
  "25a74c2ac75dc8baa8b31a9c7cb4b7829b2456da": "2000000000000000000000",
  "0f7b61c59b016322e8226cafaee9d9e76d50a1b3": "4000000000000000000000",
  "7526e482529f0a14eec98871dddd0e721b0cd9a2": "20000000000000000000",
  "071dd90d14d41f4ff7c413c24238d3359cd61a07": "36400000000000000000000",
  "a986762f7a4f294f2e0b173279ad2c81a2223458": "20000000000000000000",
  "e667f652f957c28c0e66d0b63417c80c8c9db878": "601650000000000000000",
  "7b98e23cb96beee80a168069ebba8f20edd55ccf": "214500000000000000000",
  "2d8e5bb8d3521695c77e7c834e0291bfacee7408": "1970000000000000000000",
  "f23d01589eb12d439f7448ff54307529f191858d": "2000000000000000000000",
  "abd9605b3e91acfd777830d16463478ae0fc7720": "133700000000000000000",
  "eabb90d37989aab31feae547e0e6f3999ce6a35d": "2000000000000000000000",
  "0abfb39b11486d79572866195ba26c630b6784db": "121500000000000000000000",
  "d56a144d7af0ae8df649abae535a15983aa04d02": "5000000000000000000000",
  "998c1f93bcdb6ff23c10d0dc924728b73be2ff9f": "1002750000000000000000",
  "bc62b3096a91e7dc11a1592a293dd2542150d751": "1000000000000000000000",
  "0c8f66c6017bce5b20347204b602b743bad78d60": "2000000000000000000000",
  "4c5b3dc0e2b9360f91289b1fe13ce12c0fbda3e1": "2000000000000000000000",
  "b44605552471a6eee4daab71ff3bb41326d473e0": "839200000000000000000",
  "fc3d226bb36a58f526568857b0bb12d109ec9301": "2000000000000000000000",
  "adc8228ef928e18b2a807d00fb3c6c79cd1d9e96": "22800000000000000000",
  "9df32a501c0b781c0281022f42a1293ffd7b892a": "9000000000000000000000",
  "e7da609d40cde80f00ce5b4ffb6aa9d0b03494fc": "1000000000000000000000",
  "9b64d3cd8d2b73f66841b5c46bb695b88a9ab75d": "20769000000000000000",
  "8e9c08f738661f9676236eff82ba6261dd3f4822": "100000000000000000000",
  "deb97254474c0d2f5a7970dcdb2f52fb1098b896": "1000000000000000000000",
  "b4256273962bf631d014555cc1da0dcc31616b49": "2000000000000000000000",
  "23abd9e93e7957e5b636be6579051c15e5ce0b0e": "17188400000000000000000",
  "382591e7217b435e8e884cdbf415fe377a6fe29e": "8022000000000000000000",
  "f17adb740f45cbbde3094e7e13716f8103f563bd": "2000000000000000000000",
  "61ed5596c697207f3d55b2a51aa7d50f07fa09e8": "2000000000000000000000",
  "788e809741a3b14a22a4b1d937c82cfea489eebe": "7000000000000000000000",
  "992646ac1acaabf5ddaba8f9429aa6a94e7496a7": "1000110000000000000000",
  "51296f5044270d17707646129c86aad1645eadc1": "1337133000000000000000",
  "6ee8aad7e0a065d8852d7c3b9a6e5fdc4bf50c00": "20000000000000000000",
  "30db6b9b107e62102f434a9dd0960c2021f5ce4c": "599742000000000000000",
  "63fc93001305adfbc9b85d29d9291a05f8f1410b": "1000000000000000000000",
  "df6ed6006a6abe886ed33d95a4de28fc12183927": "910000000000000000000",
  "4745ab181a36aa8cbf2289d0c45165bc7ebe2381": "39400000000000000000",
  "7bb0fdf5a663b5fba28d9c902af0c811e252f298": "200000000000000000000",
  "e0ff0bd9154439c4a5b7233e291d7d868af53f33": "396110000000000000000",
  "09261f9acb451c3788844f0c1451a35bad5098e3": "8664000000000000000000",
  "2813d263fc5ff2479e970595d6b6b560f8d6d6d1": "2000000000000000000000",
  "2cd19694d1926a0fa9189edebafc671cf1b2caa5": "1000000000000000000000",
  "05336e9a722728d963e7a1cf2759fd0274530fca": "915583000000000000000",
  "e5b7af146986c0ff8f85d22e6cc334077d84e824": "2000000000000000000000",
  "3e4fbd661015f6461ed6735cefef01f31445de3a": "16200000000000000000000",
  "4f5df5b94357de948604c51b7893cddf6076baad": "3760000000000000000000",
  "9567a0de811de6ff095b7ee64e7f1b83c2615b80": "267400000000000000000",
  "955db3b74360b9a268677e73cea821668af6face": "30000000000000000000000",
  "3e040d40cb80ba0125f3b15fdefcc83f3005da1b": "1038000000000000000000",
  "43f470ed659e2991c375957e5ddec5bd1d382231": "100000000000000000000",
  "047f9bf1529daf87d407175e6f171b5e59e9ff3e": "650000000000000000000",
  "15e3b584056b62c973cf5eb096f1733e54c15c91": "936702000000000000000",
  "c03de42a109b657a64e92224c08dc1275e80d9b2": "20000000000000000000",
  "e4fc13cfcbac1b17ce7783acd423a845943f6b3a": "20000000000000000000",
  "65ff874fafce4da318d6c93d57e2c38a0d73e820": "1000160000000000000000",
  "8b997dbc078ad02961355da0a159f2927ed43d64": "197000000000000000000",
  "2f5080b83f7e2dc0a1dd11b092ad042bff788f4c": "3338355000000000000000",
  "1b3920d001c43e72b24e7ca46f0fd6e0c20a5ff2": "2000000000000000000000",
  "5ade77fd81c25c0af713b10702768c1eb2f975e7": "20000000000000000000",
  "acaaddcbf286cb0e215dda55598f7ff0f4ada5c6": "1000000000000000000000",
  "64e0217a5b38aa40583625967fa9883690388b6f": "200000000000000000000",
  "ae648155a658370f929be384f7e001047e49dd46": "13561000000000000000000",
  "f7c1b443968b117b5dd9b755572fcd39ca5ec04b": "456082000000000000000",
  "de027efbb38503226ed871099cb30bdb02af1335": "1000000000000000000000",
  "49cf1e54be363106b920729d2d0ba46f0867989a": "268000000000000000000",
  "e7f4d7fe6f561f7fa1da3005fd365451ad89df89": "200000000000000000000",
  "b036916bdacf94b69e5a8a65602975eb026104dd": "20000000000000000000",
  "e923c06177b3427ea448c0a6ff019b54cc548d95": "36281000000000000000",
  "ad927e03d1599a78ca2bf0cad2a183dceb71eac0": "1970000000000000000000",
  "ef39ca9173df15531d73e6b72a684b51ba0f2bb4": "1598000000000000000000",
  "6443b8ae639de91cf73c5ae763eeeed3ddbb9253": "2000000000000000000000",
  "8026435aac728d497b19b3e7e57c28c563954f2b": "1730000000000000000000",
  "ed327a14d5cfadd98103fc0999718d7ed70528ea": "1440000000000000000000",
  "38a3dccf2fcfe0c91a2624bd0cbf88ee4a076c33": "2000000000000000000000",
  "f0b1f9e27832c6de6914d70afc238c749995ace4": "2000000000000000000000",
  "770d98d31b4353fceee8560c4ccf803e88c0c4e0": "600000000000000000000",
  "ba1f0e03cb9aa021f4dcebfa94e5c889c9c7bc9e": "32200000000000000000000",
  "233842b1d0692fd11140cf5acda4bf9630bae5f8": "2000000000000000000000",
  "b5dd50a15da34968890a53b4f13fe1af081baaaa": "4000000000000000000000",
  "72072a0ef1cff3d567cdd260e708ddc11cbc9a31": "100000000000000000000",
  "81a88196fac5f23c3e12a69dec4b880eb7d97310": "2000000000000000000000",
  "6c63f84556d290bfcd99e434ee9997bfd779577a": "2000000000000000000000",
  "5f167aa242bc4c189adecb3ac4a7c452cf192fcf": "1999980000000000000000",
  "445cb8de5e3df520b499efc980f52bff40f55c76": "2000000000000000000000",
  "aec27ce2133e82d052520afb5c576d9f7eb93ed2": "65232380000000000000000",
  "07dc2bf83bc6af19a842ffea661af5b41b67fda1": "1500000000000000000000",
  "febd48d0ffdbd5656cd5e686363a61145228f279": "2800000000000000000000",
  "a86db07d9f812f4796622d40e03d135874a88a74": "20000000000000000000",
  "5413c97ffa4a6e2a7bba8961dc9fce8530a787d7": "1000000000000000000000",
  "e2ff9ee4b6ecc14141cc74ca52a9e7a2ee14d908": "1400000000000000000000",
  "2e8eb30a716e5fe15c74233e039bfb1106e81d12": "100000000000000000000",
  "fd88d114220f081cb3d5e15be8152ab07366576a": "300000000000000000000",
  "e408fceaa1b98f3c640f48fcba39f056066d6308": "10000000000000000000000",
  "057dd29f2d19aa3da42327ea50bce86ff5c911d9": "4000000000000000000000",
  "ed1065dbcf9d73c04ffc7908870d881468c1e132": "2000000000000000000000",
  "bbc9d8112e5beb02dd29a2257b1fe69b3536a945": "2000000000000000000000",
  "79c1be19711f73bee4e6316ae7549459aacea2e0": "400000000000000000000",
  "1bcf3441a866bdbe963009ce33c81cbb0261b02c": "182000000000000000000",
  "e2e26e4e1dcf30d048cc6ecf9d51ec1205a4e926": "4000000000000000000000",
  "77701e2c493da47c1b58f421b5495dee45bea39b": "6068279000000000000000",
  "37a05aceb9395c8635a39a7c5d266ae610d10bf2": "30000000000000000000000",
  "c6355ec4768c70a49af69513cd83a5bca7e3b9cd": "6000000000000000000000",
  "e3c0c128327a9ad80148139e269773428e638cb0": "2000000000000000000000",
  "f7f4898c4c526d955f21f055cb6e47b915e51964": "2288000000000000000000",
  "29824e94cc4348bc963279dcdf47391715324cd3": "1940000000000000000000",
  "eaa45cea02d87d2cc8fda9434e2d985bd4031584": "1920750000000000000000",
  "e08b9aba6bd9d28bc2056779d2fbf0f2855a3d9d": "2000000000000000000000",
  "87c498170934b8233d1ad1e769317d5c475f2f40": "1015200000000000000000",
  "352d29a26e8a41818181746467f582e6e84012e0": "6000000000000000000000",
  "403220600a36f73f24e190d1edb2d61be3f41354": "304000000000000000000",
  "0a48296f7631708c95d2b74975bc4ab88ac1392a": "5000000000000000000000",
  "ffe0e997f1977a615f5a315af413fd4869343ba0": "100076000000000000000",
  "ca66b2280fa282c5b67631ce552b62ee55ad8474": "1969488000000000000000",
  "2b6ed29a95753c3ad948348e3e7b1a251080ffb9": "250000000000000000000000",
  "492e70f04d18408cb41e25603730506b35a2876b": "39400000000000000000",
  "0e6baaa3deb989f289620076668618e9ac332865": "200000000000000000000",
  "b753a75f9ed10b21643a0a3dc0517ac96b1a4068": "401800000000000000000",
  "3ad915d550b723415620f5a9b5b88a85f382f035": "1000000000000000000000",
  "c992be59c6721caf4e028f9e8f05c25c55515bd4": "20000000000000000000",
  "02b643d6fabd437a851accbe79abb7fde126dccf": "7200000000000000000000",
  "88797e58675ed5cc4c19980783dbd0c956085153": "2000000000000000000000",
  "ac142eda1157b9a9a64390df7e6ae694fac98905": "200000000000000000000",
  "656579daedd29370d9b737ee3f5cd9d84bc2b342": "1430000000000000000000",
  "9bb9b02a26bfe1ccc3f0c6219e261c397fc5ca78": "1337000000000000000000",
  "bee8d0b008421954f92d000d390fb8f8e658eaee": "1000000000000000000000",
  "7989d09f3826c3e5af8c752a8115723a84d80970": "415554000000000000000",
  "7cd5d81eab37e11e6276a3a1091251607e0d7e38": "62856000000000000000",
  "6ce1b0f6adc47051e8ab38b39edb4186b03babcc": "1207800000000000000000",
  "abfcf5f25091ce57875fc674dcf104e2a73dd2f2": "19700000000000000000",
  "1c3ef05dae9dcbd489f3024408669de244c52a02": "20000000000000000000000",
  "cfa8b37127149bdbfee25c34d878510951ea10eb": "2000000000000000000000",
  "74863acec75d03d53e860e64002f2c165e538377": "1000000000000000000000",
  "59b9e733cba4be00429b4bd9dfa64732053a7d55": "20000000000000000000",
  "aeadfcd0978edad74a32bd01a0a51d37f246e661": "260000000000000000000",
  "08090876baadfee65c3d363ba55312748cfa873d": "1700170000000000000000",
  "e589fa76984db5ec4004b46ee8a59492c30744ce": "2800000000000000000000",
  "3485361ee6bf06ef6508ccd23d94641f814d3e2f": "2000000000000000000000",
  "5cb731160d2e8965670bde925d9de5510935347d": "40000000000000000000",
  "8ef4d8a2c23c5279187b64e96f741404085385f3": "299598000000000000000",
  "e246683cc99db7c4a52bcbacaab0b32f6bfc93d7": "2000000000000000000000",
  "7d273e637ef1eac481119413b91c989dc5eac122": "500000000000000000000",
  "6efba8fb2ac5b6730729a972ec224426a287c3ad": "283152000000000000000",
  "0773eeacc050f74720b4a1bd57895b1cceeb495d": "10000000000000000000000",
  "88a122a2382c523931fb51a0ccad3beb5b7259c3": "2000000000000000000000",
  "b0b779b94bfa3c2e1f587bcc9c7e21789222378f": "1550000000000000000000",
  "86f95c5b11a293940e35c0b898d8b75f08aab06d": "29605000000000000000000",
  "cf2288ef4ebf88e86db13d8a0e0bf52a056582c3": "2533000000000000000000",
  "71ea5b11ad8d29b1a4cb67bf58ca6c9f9c338c16": "1600000000000000000000",
  "9917d68d4af341d651e7f0075c6de6d7144e7409": "5660000000000000000000",
  "1e5800227d4dcf75e30f5595c5bed3f72e341e3b": "248300000000000000000",
  "123759f333e13e3069e2034b4f05398918119d36": "20000000000000000000000",
  "f798d16da4e460c460cd485fae0fa0599708eb82": "1000000000000000000000",
  "864bec5069f855a4fd5892a6c4491db07c88ff7c": "1000000000000000000000",
  "fa283299603d8758e8cab082125d2c8f7d445429": "6415633000000000000000",
  "c811c2e9aa1ac3462eba5e88fcb5120e9f6e2ca2": "1400140000000000000000",
  "61547d376e5369bcf978fc162c3c56ae453547e8": "200000000000000000000",
  "0d747ee5969bf79d57381d6fe3a2406cd0d8ce27": "100000000000000000000000",
  "f8962b75db5d24c7e8b7cef1068c3e67cebb30a5": "280000000000000000000",
  "35bf6688522f35467a7f75302314c02ba176800e": "17400000000000000000000",
  "05cb6c3b0072d3116761b532b218443b53e8f6c5": "141722000000000000000000",
  "91c80caa081b38351d2a0e0e00f80a34e56474c1": "1000000000000000000000",
  "d75a502a5b677287470f65c5aa51b87c10150572": "907400000000000000000",
  "3e194b4ecef8bb711ea2ff24fec4e87bd032f7d1": "2575465000000000000000",
  "736bf1402c83800f893e583192582a134eb532e9": "9999996000000000000000",
  "c2cb1ada5da9a0423873814793f16144ef36b2f3": "1334326000000000000000",
  "efcce06bd6089d0e458ef561f5a689480afe7000": "600000000000000000000",
  "bfe6bcb0f0c07852643324aa5df5fd6225abc3ca": "74500000000000000000",
  "9d799e943e306ba2e5b99c8a6858cbb52c0cf735": "300000000000000000000",
  "f45b1dcb2e41dc27ffa024daadf619c11175c087": "19700000000000000000",
  "08e38ee0ce48c9ca645c1019f73b5355581c56e6": "1600000000000000000000",
  "2cb4c3c16bb1c55e7c6b7a19b127a1ac9390cc09": "3397053000000000000000",
  "bdc02cd4330c93d6fbda4f6db2a85df22f43c233": "2000000000000000000000",
  "acec91ef6941cf630ba9a3e787a012f4a2d91dd4": "80000000000000000000000",
  "27ac073be79ce657a93aa693ee43bf0fa41fef04": "50000000000000000000000",
  "22fe884d9037291b4d52e6285ae68dea0be9ffb5": "2000000000000000000000",
  "c3107a9af3322d5238df0132419131629539577d": "492650000000000000000",
  "b5cac5ed03477d390bb267d4ebd46101fbc2c3da": "197000000000000000000",
  "58fb947364e7695765361ebb1e801ffb8b95e6d0": "200000000000000000000",
  "32860997d730b2d83b73241a25d3667d51c908ef": "499938000000000000000",
  "c79d5062c796dd7761f1f13e558d73a59f82f38b": "8000000000000000000000",
  "fa142fe47eda97e6503b386b18a2bedd73ccb5b1": "850080000000000000000",
  "6ca5de00817de0cedce5fd000128dede12648b3c": "20000000000000000000",
  "214b743955a512de6e0d886a8cbd0282bee6d2a2": "2000000000000000000000",
  "ede79ae1ff4f1606d59270216fa46ab2ddd4ecaa": "146000000000000000000",
  "528101ce46b720a2214dcdae6618a53177ffa377": "508876000000000000000",
  "b5870ce342d43343333673038b4764a46e925f3e": "1000000000000000000000",
  "843bd3502f45f8bc4da370b323bdac3fcf5f19a6": "1476000000000000000000",
  "5067f4549afbfe884c59cbc12b96934923d45db0": "1000000000000000000000",
  "6f2a42e6e033d01061131929f7a6ee1538021e52": "2000000000000000000000",
  "e9e1f7cb00a110edd0ebf8b377ef8a7bb856117f": "200000000000000000000",
  "a387ecde0ee4c8079499fd8e03473bd88ad7522a": "1970000000000000000000",
  "6dff90e6dc359d2590882b1483edbcf887c0e423": "1000000000000000000000",
  "22e512149a18d369b73c71efa43e86c9edabaf1d": "1455000000000000000000",
  "a3203095edb7028e6871ce0a84f548459f83300a": "4000000000000000000000",
  "93b4bf3fdff6de3f4e56ba6d7799dc4b93a6548f": "19100000000000000000",
  "8c75956e8fed50f5a7dd7cfd27da200f6746aea6": "1000000000000000000000",
  "afc8ebe8988bd4105acc4c018e546a1e8f9c7888": "500000000000000000000",
  "bf9acd4445d9c9554689cabbbab18800ff1741c2": "1000000000000000000000",
  "603f2fab7afb6e017b94766069a4b43b38964923": "1656954000000000000000",
  "a1f765c44fe45f790677944844be4f2d42165fbd": "3687750000000000000000",
  "4dc9d5bb4b19cecd94f19ec25d200ea72f25d7ed": "2000000000000000000000",
  "48f60a35484fe7792bcc8a7b6393d0dda1f6b717": "3600000000000000000000",
  "588ed990a2aff44a94105d58c305257735c868ac": "16100000000000000000000",
  "710be8fd5e2918468be2aabea80d828435d79612": "17600000000000000000",
  "03ea6d26d080e57aee3926b18e8ed73a4e5b2826": "200000000000000000000",
  "20824ba1dbebbef9846ef3d0f6c1b017e6912ec4": "7170194000000000000000",
  "f7500c166f8bea2f82347606e5024be9e4f4ce99": "20000000000000000000",
  "9d369165fb70b81a3a765f188fd60cbe5e7b0968": "2000000000000000000000",
  "6fddbd9bca66e28765c2162c8433548c1052ed11": "82720000000000000000000",
  "8b81156e698639943c01a75272ad3d35851ab282": "344946000000000000000",
  "75804aac64b4199083982902994d9c5ed8828f11": "557800000000000000000",
  "d6e8e97ae9839b9ee507eedb28edfb7477031439": "2000000000000000000000",
  "6c808cabb8ff5fbb6312d9c8e84af8cf12ef0875": "4000086000000000000000",
  "afa539586e4719174a3b46b9b3e663a7d1b5b987": "5000000000000000000000",
  "f8a065f287d91d77cd626af38ffa220d9b552a2b": "1910000000000000000000",
  "30e60900cacc7203f314dc604347255167fc2a0f": "2000000000000000000000",
  "796f87ba617a2930b1670be92ed1281fb0b346e1": "128400000000000000000",
  "f114ff0d0f24eff896edde5471dea484824a99b3": "13700000000000000000",
  "0b80fc70282cbdd5fde35bf78984db3bdb120188": "1000160000000000000000",
  "da7ad025ebde25d22243cb830ea1d3f64a566323": "500000000000000000000",
  "65a52141f56bef98991724c6e7053381da8b5925": "60140000000000000000",
  "bbc8eaff637e94fcc58d913c7770c88f9b479277": "200000000000000000000",
  "0469e8c440450b0e512626fe817e6754a8152830": "2000000000000000000000",
  "0727be0a2a00212048b5520fbefb953ebc9d54a0": "10000000000000000000000",
  "7d858493f07415e0912d05793c972113eae8ae88": "1818000000000000000000",
  "7091303116d5f2389b23238b4d656a8596d984d3": "1094014000000000000000",
  "3702e704cc21617439ad4ea27a5714f2fda1e932": "1000000000000000000000",
  "b87de1bcd29269d521b8761cc39cfb4319d2ead5": "1000000000000000000000",
  "f639ac31da9f67271bd10402b7654e5ce763bd47": "399996000000000000000",
  "e7735ec76518fc6aa92da8715a9ee3f625788f13": "1997803000000000000000",
  "51277fe7c81eebd252a03df69a6b9f326e272207": "59965000000000000000",
  "3b8098533f7d9bdcd307dbb23e1777ca18418936": "2000000000000000000000",
  "2cba6d5d0dc204ea8a25ada2e26f5675bd5f2fdc": "1330755000000000000000",
  "5c3c1c645b917543113b3e6c1c054da1fe742b9a": "800000000000000000000",
  "5ecdbaeab9106ffe5d7b519696609a05baeb85ad": "20000000000000000000",
  "45a820a0672f17dc74a08112bc643fd1167736c3": "199943000000000000000",
  "beef94213879e02622142bea61290978939a60d7": "5728109000000000000000",
  "6cd212aee04e013f3d2abad2a023606bfb5c6ac7": "1999944000000000000000",
  "92698e345378c62d8eda184d94366a144b0c105b": "1400000000000000000000",
  "2d5b42fc59ebda0dfd66ae914bc28c1b0a6ef83a": "206764195000000000000000",
  "b7a6791c16eb4e2162f14b6537a02b3d63bfc602": "780700000000000000000",
  "fa105f1a11b6e4b1f56012a27922e2ac2da4812f": "9550000000000000000000",
  "2306df931a940d58c01665fa4d0800802c02edfe": "1000000000000000000000",
  "f37bf78c5875154711cb640d37ea6d28cfcb1259": "200000000000000000000",
  "66201bd227ae6dc6bdfed5fbde811fecfe5e9dd9": "594808000000000000000",
  "2bafbf9e9ed2c219f7f2791374e7d05cb06777e7": "220000000000000000000",
  "8e9b35ad4a0a86f758446fffde34269d940ceacd": "4000000000000000000000",
  "1b43232ccd4880d6f46fa751a96cd82473315841": "80000000000000000000",
  "6eefdc850e87b715c72791773c0316c3559b58a4": "4000000000000000000000",
  "f2c03e2a38998c21648760f1e5ae7ea3077d8522": "2642456000000000000000",
  "0625d06056968b002206ff91980140242bfaa499": "1000000000000000000000",
  "6158e107c5eb54cb7604e0cd8dc1e07500d91c3c": "50000000000000000000",
  "02477212ffdd75e5155651b76506b1646671a1eb": "1760000000000000000000",
  "fa44a855e404c86d0ca8ef3324251dfb349c539e": "1552000000000000000000",
  "49897fe932bbb3154c95d3bce6d93b6d732904dd": "4000000000000000000000",
  "9b6641b13e172fc072ca4b8327a3bc28a15b66a9": "120000000000000000000",
  "a46b4387fb4dcce011e76e4d73547d4481e09be5": "1337000000000000000000",
  "72bb27cb99f3e2c2cf90a98f707d30e4a201a071": "1640000000000000000000",
  "b6bfe1c3ef94e1846fb9e3acfe9b50c3e9069233": "1999944000000000000000",
  "e6cb3f3124c9c9cc3834b1274bc3336456a38bac": "427382000000000000000",
  "fcbc5c71ace79741450b012cf6b8d3f17db68a70": "9550000000000000000000",
  "15dbb48c98309764f99ced3692dcca35ee306bac": "150000000000000000000000",
  "2e10910ba6e0bc17e055556614cb87090f4d7e5b": "200000000000000000000",
  "e5fbe34984b637196f331c679d0c0c47d83410e1": "2000050000000000000000",
  "6d120f0caae44fd94bcafe55e2e279ef96ba5c7a": "4000000000000000000000",
  "aa5afcfd8309c2df9d15be5e6a504e7d706624c5": "5846763000000000000000",
  "37959c20b7e9931d72f5a8ae869dafddad3b6d5c": "200000000000000000000",
  "b041310fe9eed6864cedd4bee58df88eb4ed3cac": "10000000000000000000000",
  "986df47e76e4d7a789cdee913cc9831650936c9d": "5000000000000000000000",
  "35aaa0465d1c260c420fa30e2629869fb6559207": "704976000000000000000",
  "7f655c6789eddf455cb4b88099720639389eebac": "6000000000000000000000",
  "9e3eb509278fe0dcd8e0bbe78a194e06b6803943": "940000000000000000000",
  "3e9410d3b9a87ed5e451a6b91bb8923fe90fb2b5": "200000000000000000000",
  "9e960dcd03d5ba99cb115d17ff4c09248ad4d0be": "200000000000000000000",
  "f057aa66ca767ede124a1c5b9cc5fc94ef0b0137": "2077730000000000000000",
  "f38a6ca80168537e974d14e1c3d13990a44c2c1b": "6000000000000000000000",
  "229e430de2b74f442651ddcdb70176bc054cad54": "13545000000000000000",
  "27bf9f44ba7d05c33540c3a53bb02cbbffe7c3c6": "2000000000000000000000",
  "10389858b800e8c0ec32f51ed61a355946cc409b": "200000000000000000000",
  "fd2929271e9d2095a264767e7b0df52ea0d1d400": "3000040000000000000000",
  "44250d476e062484e9080a3967bf3a4a732ad73f": "20000000000000000000",
  "0c67033dd8ee7f0c8ae534d42a51f7d9d4f7978f": "200000000000000000000",
  "e083d34863e0e17f926b7928edff317e998e9c4b": "400000000000000000000",
  "7f7192c0df1c7db6d9ed65d71184d8e4155a17ba": "79800000000000000000",
  "51e7b55c2f9820eed73884361b5066a59b6f45c6": "2000000000000000000000",
  "4fa983bb5e3073a8edb557effeb4f9fb1d60ef86": "1599800000000000000000",
  "5a5ee8e9bb0e8ab2fecb4b33d29478be50bbd44b": "776000000000000000000",
  "1f3959fc291110e88232c36b7667fc78a379613f": "18200000000000000000",
  "2d7d5c40ddafc450b04a74a4dabc2bb5d665002e": "2000000000000000000000",
  "5215183b8f80a9bc03d26ce91207832a0d39e620": "1000000000000000000000",
  "5607590059a9fec1881149a44b36949aef85d560": "2000000000000000000000",
  "f7c50f922ad16b61c6d1baa045ed816815bac48f": "12566370000000000000000",
  "da10978a39a46ff0bb848cf65dd9c77509a6d70e": "2000000000000000000000",
  "a7dcbba9b9bf6762c145416c506a71e3b497209c": "1999944000000000000000",
  "54e01283cc8b384538dd646770b357c960d6cacd": "5000000000000000000000",
  "78cf8336b328db3d87813a472b9e89b75e0cf3bc": "1000000000000000000000",
  "ba24fc436753a739db2c8d40e6d4d04c528e86fa": "13000000000000000000000",
  "dfe929a61c1b38eddbe82c25c2d6753cb1e12d68": "402500000000000000000",
  "2b49fba29830360fcdb6da23bbfea5c0bbac5281": "20000000000000000000",
  "76becae4a31d36f3cb577f2a43594fb1abc1bb96": "24860000000000000000000",
  "e0cf698a053327ebd16b7d7700092fe2e8542446": "95275000000000000000",
  "a3802d8a659e89a2c47e905430b2a827978950a7": "1000000000000000000000",
  "75636cdb109050e43d5d6ec47e359e218e857eca": "22886800000000000000000",
  "3d813ff2b6ed57b937dabf2b381d148a411fa085": "100000000000000000000",
  "a9252551a624ae513719dabe5207fbefb2fd7749": "40000000000000000000",
  "c749668042e71123a648975e08ed6382f83e05e2": "14000000000000000000000",
  "04eca501630abce35218b174956b891ba25efb23": "1000060000000000000000",
  "790f91bd5d1c5cc4739ae91300db89e1c1303c93": "2000000000000000000000",
  "009560a3de627868f91fa8bfe1c1b7afaf08186b": "524000000000000000000",
  "1329dd19cd4baa9fc64310efeceab22117251f12": "200000000000000000000",
  "7005a772282b1f62afda63f89b5dc6ab64c84cb9": "18000000000000000000000",
  "abfe936425dcc7b74b955082bbaaf2a11d78bc05": "1400000000000000000000",
  "97d0d9725e3b70e675843173938ed371b62c7fac": "170000000000000000000",
  "41ed2d8e7081482c919fc23d8f0091b3c82c4685": "1295460000000000000000",
  "992365d764c5ce354039ddfc912e023a75b8e168": "18200000000000000000",
  "e1c607c0a8a060da8f02a8eb38a013ea8cda5b8c": "805000000000000000000",
  "3b2c45990e21474451cf4f59f01955b331c7d7c9": "2000000000000000000000",
  "29ac2b458454a36c7e96c73a8667222a12242c71": "4000000000000000000000",
  "b8555010776e3c5cb311a5adeefe9e92bb9a64b9": "4000000000000000000000",
  "30380087786965149e81423b15e313ba32c5c783": "18200000000000000000",
  "a2f86bc061884e9eef05640edd51a2f7c0596c69": "2000050000000000000000",
  "9f98eb34d46979b0a6de8b05aa533a89b825dcf1": "86500000000000000000",
  "c81fb7d20fd2800192f0aac198d6d6a37d3fcb7d": "259500000000000000000",
  "a4035ab1e5180821f0f380f1131b7387c8d981cd": "20000000000000000000",
  "782f52f0a676c77716d574c81ec4684f9a020a97": "850055000000000000000",
  "261e0fa64c51137465eecf5b90f197f7937fdb05": "18000000000000000000000",
  "276fd7d24f8f883f5a7a28295bf17151c7a84b03": "2000000000000000000000",
  "a1f5b840140d5a9acef402ac3cc3886a68cad248": "2000000000000000000000",
  "d2bf67a7f3c6ce56b7be41675dbbadfe7ea93a33": "400000000000000000000",
  "8ee584337ddbc80f9e3498df55f0a21eacb57fb1": "20000000000000000000",
  "34393c5d91b9de597203e75bac4309b5fa3d28c3": "194000000000000000000",
  "114cbbbf6fb52ac414be7ec61f7bb71495ce1dfa": "3000000000000000000000",
  "ab7c42c5e52d641a07ad75099c62928b7f86622f": "335940000000000000000",
  "80bf995ed8ba92701d10fec49f9e7d014dbee026": "572153000000000000000",
  "4a192035e2619b24b0709d56590e9183ccf2c1d9": "10000000000000000000000",
  "376cd7577383e902951b60a2017ba7ea29e33576": "2000000000000000000000",
  "f5437e158090b2a2d68f82b54a5864b95dd6dbea": "4010732000000000000000",
  "13a5eecb38305df94971ef2d9e179ae6cebab337": "330000000000000000000",
  "efc8cf1963c9a95267b228c086239889f4dfd467": "10000000000000000000000",
  "db77b88dcb712fd17ee91a5b94748d720c90a994": "2000000000000000000000",
  "9aaafa0067647ed999066b7a4ca5b4b3f3feaa6f": "1000000000000000000000",
  "ae36f7452121913e800e0fcd1a65a5471c23846f": "164000000000000000000",
  "b124bcb6ffa430fcae2e86b45f27e3f21e81ee08": "2000000000000000000000",
  "f2813a64c5265d020235cb9c319b6c96f906c41e": "350000000000000000000",
  "e848ca7ebff5c24f9b9c316797a43bf7c356292d": "114000000000000000000",
  "21a6feb6ab11c766fdd977f8df4121155f47a1c0": "57200000000000000000",
  "e95e92bbc6de07bf3a660ebf5feb1c8a3527e1c5": "18200000000000000000",
  "0b369e002e1b4c7913fcf00f2d5e19c58165478f": "64520000000000000000",
  "0909648c18a3ce5bae7a047ec2f868d24cdda81d": "3820000000000000000000",
  "d32b45564614516c91b07fa9f72dcf787cce4e1c": "291000000000000000000",
  "cf1bdb799b2ea63ce134668bdc198b54840f180b": "18200000000000000000",
  "ae062c448618643075de7a0030342dced63dbad7": "825982000000000000000",
  "99dfd0504c06c743e46534fd7b55f1f9c7ec3329": "2000000000000000000000",
  "87fc4635263944ce14a46c75fa4a821f39ce7f72": "20000000000000000000",
  "27c2d7ca504daa3d9066dc09137dc42f3aaab452": "600000000000000000000",
  "cc60f836acdef3548a1fefcca13ec6a937db44a0": "86500000000000000000",
  "c910a970556c9716ea53af66ddef93143124913d": "1580000000000000000000",
  "8173c835646a672e0152be10ffe84162dd256e4c": "492000000000000000000",
  "e989733ca1d58d9e7b5029ba5d444858bec03172": "581595000000000000000",
  "86806474c358047d9406e6a07f40945bc8328e67": "6884000000000000000000",
  "5395a4455d95d178b4532aa4725b193ffe512961": "1000000000000000000000",
  "56397638bb3cebf1f62062794b5eb942f916171d": "2000000000000000000000",
  "6958f83bb2fdfb27ce0409cd03f9c5edbf4cbedd": "20000000000000000000000",
  "26ff0a51e7cece8400276978dbd6236ef162c0e6": "100020000000000000000000",
  "4ca783b556e5bf53aa13c8116613d65782c9b642": "25200000000000000000000",
  "15a0aec37ff9ff3d5409f2a4f0c1212aaccb0296": "1000000000000000000000",
  "50378af7ef54043f892ab7ce97d647793511b108": "19700000000000000000",
  "e7c6b5fc05fc748e5b4381726449a1c0ad0fb0f1": "2000000000000000000000",
  "5317ecb023052ca7f5652be2fa854cfe4563df4d": "499986000000000000000",
  "c94f7c35c027d47df8ef4f9df85a9248a17dd23b": "29944000000000000000",
  "6a63fc89abc7f36e282d80787b7b04afd6553e71": "160000000000000000000",
  "5fd3d6777ec2620ae83a05528ed425072d3ca8fd": "2000000000000000000000",
  "29adcf83b6b20ac6a434abb1993cbd05c60ea2e4": "10000000000000000000000",
  "8c6f9f4e5b7ae276bf58497bd7bf2a7d25245f64": "2730000000000000000000",
  "d94a57882a52739bbe2a0647c80c24f58a2b4f1c": "1341230000000000000000",
  "7286e89cd9de8f7a8a00c86ffdb53992dd9251d1": "1940000000000000000000",
  "5773b6026721a1dd04b7828cd62b591bfb34534c": "27000000000000000000000",
  "11fefb5dc1a4598aa712640c517775dfa1d91f8c": "10000000000000000000000",
  "c6e324beeb5b36765ecd464260f7f26006c5c62e": "2000000000000000000000",
  "118fbd753b9792395aef7a4d78d263cdcaabd4f7": "999800000000000000000",
  "f8298591523e50b103f0b701d623cbf0f74556f6": "200000000000000000000",
  "ab0ced762e1661fae1a92afb1408889413794825": "1910000000000000000000",
  "fa67b67b4f37a0150915110ede073b05b853bda2": "647490000000000000000",
  "ca122cf0f2948896b74843f49afed0ba1618eed7": "560000000000000000000",
  "186b95f8e5effddcc94f1a315bf0295d3b1ea588": "1999944000000000000000",
  "2915624bcb679137b8dae9ab57d11b4905eaee4b": "20000000000000000000",
  "0c6845bf41d5ee273c3ee6b5b0d69f6fd5eabbf7": "3000026000000000000000",
  "cb7479109b43b26657f4465f4d18c6f974be5f42": "1820000000000000000000",
  "8dd6a9bae57f518549ada677466fea8ab04fd9b4": "4000000000000000000000",
  "34958a46d30e30b273ecc6e5d358a212e5307e8c": "2000000000000000000000",
  "2003717907a72560f4307f1beecc5436f43d21e7": "500000000000000000000",
  "55ab99b0e0e55d7bb874b7cfe834de631c97ec23": "1031400000000000000000",
  "79b48d2d6137c3854d611c01ea42427a0f597bb7": "191000000000000000000",
  "d609ec0be70d0ad26f6e67c9d4762b52ee51122c": "1000000000000000000000",
  "e8c3f045bb7d38c9d2f395b0ba8492b253230901": "9000000000000000000000",
  "aaca60d9d700e78596bbbbb1f1e2f70f4627f9d8": "999996000000000000000",
  "89d75b8e0831e46f80bc174188184e006fde0eae": "1000000000000000000000",
  "b3667894b7863c068ad344873fcff4b5671e0689": "20000000000000000000000",
  "bc1609d685b76b48ec909aa099219022f89b2ccd": "1182000000000000000000",
  "88ee7f0efc8f778c6b687ec32be9e7d6f020b674": "2000000000000000000000",
  "470ac5d1f3efe28f3802af925b571e63868b397d": "2000000000000000000000",
  "abf8ffe0708a99b528cc1ed4e9ce4b0d0630be8c": "2263600000000000000000",
  "8cee38d6595788a56e3fb94634b3ffe1fbdb26d6": "20000000000000000000000",
  "19798cbda715ea9a9b9d6aab942c55121e98bf91": "1200000000000000000000",
  "e25a167b031e84616d0f013f31bda95dcc6350b9": "10560000000000000000000",
  "6196c3d3c0908d254366b7bca55745222d9d4db1": "4000000000000000000000",
  "e8e9850586e94f5299ab494bb821a5f40c00bd04": "3820000000000000000000",
  "1059cbc63e36c43e88f30008aca7ce058eeaa096": "100000000000000000000000",
  "c4f2913b265c430fa1ab8adf26c333fc1d9b66f2": "20000000000000000000",
  "26e9e2ad729702626417ef25de0dc800f7a779b3": "1000000000000000000000",
  "0dfbd4817050d91d9d625c02053cf61a3ee28572": "340000000000000000000",
  "709fe9d2c1f1ce42207c9585044a60899f35942f": "2000000000000000000000",
  "7ad82caea1a8b4ed05319b9c9870173c814e06ee": "616000000000000000000",
  "2a595f16eee4cb0c17d9a2d939b3c10f6c677243": "1100000000000000000000",
  "a8f89dd5cc6e64d7b1eeace00702022cd7d2f03d": "700000000000000000000",
  "c0a6cbad77692a3d88d141ef769a99bb9e3c9951": "100000000000000000000",
  "868c23be873466d4c74c220a19b245d1787e807f": "1366481000000000000000",
  "2905b192e83ce659aa355b9d0c204e3e95f9bb9a": "2160817000000000000000",
  "50b9fef0a1329b02d16506255f5a2db71ec92d1f": "1325464000000000000000",
  "fc10b7a67b3268d5331bfb6a14def5ea4a162ca3": "200000000000000000000",
  "85eb256b51c819d60ea61a82d12c9358d59c1cae": "460000000000000000000",
  "75de7e9352e90b13a59a5878ffecc7831cac4d82": "2740000000000000000000",
  "d32b2c79c36478c5431901f6d700b04dbe9b8810": "396000000000000000000",
  "2d0326b23f0409c0c0e9236863a133075a94ba18": "210380000000000000000",
  "d2e21ed56868fab28e0947927adaf29f23ebad6c": "1994000000000000000000",
  "2ad6c9d10c261819a1a0ca2c48d8c7b2a71728df": "1000000000000000000000",
  "7d445267c59ab8d2a2d9e709990e09682580c49f": "1000000000000000000000",
  "b6047cdf932db3e4045f4976122341537ed5961e": "20000000000000000000",
  "2b3cf97311ff30f460945a9d8099f4a88e26d456": "2000000000000000000000",
  "7f4f593b618c330ba2c3d5f41eceeb92e27e426c": "2775000000000000000000",
  "72a2fc8675feb972fa41b50dffdbbae7fa2adfb7": "2853840000000000000000",
  "076561a856455d7ef86e63f87c73dbb628a55f45": "900000000000000000000",
  "03d1724fd00e54aabcd2de2a91e8462b1049dd3a": "2640000000000000000000",
  "7ea0f96ee0a573a330b56897761f3d4c0130a8e3": "1337000000000000000000",
  "fe65c4188d7922576909642044fdc52395560165": "4000000000000000000000",
  "57883010b4ac857fedac03eab2551723a8447ffb": "1000000000000000000000",
  "0729a8a4a5ba23f579d0025b1ad0f8a0d35cdfd2": "9700000000000000000000",
  "e75c1fb177089f3e58b1067935a6596ef1737fb5": "99910000000000000000",
  "e0e978753d982f7f9d1d238a18bd4889aefe451b": "9700000000000000000000",
  "5620f46d1451c2353d6243a5d4b427130be2d407": "60000000000000000000",
  "f3d688f06bbdbf50f9932c4145cbe48ecdf68904": "20000000000000000000",
  "3aa948ea02397755effb2f9dc9392df1058f7e33": "850000000000000000000",
  "20d1417f99c569e3beb095856530fe12d0fceaaa": "1182175000000000000000",
  "ac77bdf00fd5985b5db12bbef800380abc2a0677": "1000000000000000000000",
  "267a7e6e82e1b91d51deddb644f0e96dbb1f7f7e": "20000000000000000000",
  "4bbcbf38b3c90163a84b1cd2a93b58b2a3348d87": "8000000000000000000000",
  "4c6b93a3bec16349540cbfcae96c9621d6645010": "2000000000000000000000",
  "c9308879056dfe138ef8208f79a915c6bc7e70a8": "10000000000000000000000",
  "c48b693cacefdbd6cb5d7895a42e3196327e261c": "1000000000000000000000",
  "a0951970dfd0832fb83bda12c23545e79041756c": "600000000000000000000",
  "7cdf74213945953db39ad0e8a9781add792e4d1d": "2000000000000000000000",
  "75621865b6591365606ed378308c2d1def4f222c": "3100000000000000000000",
  "67d6a8aa1bf8d6eaf7384e993dfdf10f0af68a61": "198067000000000000000",
  "8f0af37566d152802f1ae8f928b25af9b139b448": "200000000000000000000",
  "2c6afcd4037c1ed14fa74ff6758e0945a185a8e8": "17600000000000000000",
  "c1b2aa8cb2bf62cdc13a47ecc4657facaa995f98": "1000129000000000000000",
  "9e8144e08e89647811fe6b72d445d6a5f80ad244": "10000000000000000000000",
  "e04ff5e5a7e2af995d8857ce0290b53a2b0eda5d": "1000000000000000000000",
  "03dedfcd0b3c2e17c705da248790ef98a6bd5751": "1337000000000000000000",
  "698a8a6f01f9ab682f637c7969be885f6c5302bf": "19400000000000000000",
  "d82c6fedbdac98af2eed10b00f32b00056ca5a6d": "200000000000000000000",
  "2697b339813b0c2d964b2471eb1c606f4ecb9616": "1154000000000000000000",
  "987c9bcd6e3f3990a52be3eda4710c27518f4f72": "400000000000000000000",
  "c5d48ca2db2f85d8c555cb0e9cfe826936783f9e": "200000000000000000000",
  "da214c023e2326ff696c00393168ce46ffac39ec": "1000000000000000000000",
  "86570ab259c9b1c32c9729202f77f590c07dd612": "200000000000000000000",
  "a646a95c6d6f59f104c6541d7760757ab392b08c": "4200000000000000000000",
  "1933e334c40f3acbad0c0b851158206924beca3a": "7551541000000000000000",
  "3552a496eba67f12be6eedab360cd13661dc7480": "300000000000000000000",
  "2a9c96c19151ffcbe29a4616d0c52b3933b4659f": "69263000000000000000",
  "3b7b8e27de33d3ce7961b98d19a52fe79f6c25be": "100000000000000000000000",
  "a1911405cf6e999ed011f0ddcd2a4ff7c28f2526": "40000000000000000000",
  "0cae108e6db99b9e637876b064c6303eda8a65c8": "3000000000000000000000",
  "3883becc08b9be68ad3b0836aac3b620dc0017ef": "2000000000000000000000",
  "d0abcc70c0420e0e172f97d43b87d5e80c336ea9": "10000000000000000000000",
  "cbf16a0fe2745258cd52db2bf21954c975fc6a15": "300000000000000000000",
  "1b23cb8663554871fbbe0d9e60397efb6faedc3e": "200000000000000000000",
  "fbede32c349f3300ef4cd33b4de7dc18e443d326": "3160000000000000000000",
  "5e806e845730f8073e6cc9018ee90f5c05f909a3": "9480000000000000000000",
  "425c338a1325e3a1578efa299e57d986eb474f81": "2000000000000000000000",
  "8bf297f8f453523ed66a1acb7676856337b93bf0": "4000000000000000000000",
  "38e8a31af2d265e31a9fff2d8f46286d1245a467": "20000000000000000000",
  "7edafba8984baf631a820b6b92bbc2c53655f6bd": "2000000000000000000000",
  "aa0200f1d17e9c54da0647bb96395d57a78538d8": "1056000000000000000000",
  "433eb94a339086ed12d9bde9cd1d458603c97dd6": "100000000000000000000000",
  "cd7e47909464d871b9a6dc76a8e9195db3485e7a": "9850000000000000000000",
  "5975d78d974ee5bb9e4d4ca2ae77c84b9c3b4b82": "1370000000000000000000",
  "cea2896623f4910287a2bdc5be83aea3f2e6de08": "9359000000000000000000",
  "cb4ad0c723da46ab56d526da0c1d25c73daff10a": "510000000000000000000",
  "e2cf360aa2329eb79d2bf7ca04a27a17c532e4d8": "102000000000000000000",
  "ea60549ec7553f511d2149f2d4666cbd9243d93c": "2000000000000000000000",
  "cbb7be17953f2ccc93e1bc99805bf45511434e4c": "50440000000000000000000",
  "3549bd40bbbc2b30095cac8be2c07a0588e0aed6": "20000000000000000000",
  "6510df42a599bcb0a519cca961b488759a6f6777": "2000000000000000000000",
  "ed12a1ba1fb8adfcb20dfa19582e525aa3b74524": "6685000000000000000000",
  "135eb8c0e9e101deedec11f2ecdb66ae1aae8867": "20000000000000000000000",
  "ee906d7d5f1748258174be4cbc38930302ab7b42": "200000000000000000000",
  "253f1e742a2cec86b0d7b306e5eacb6ccb2f8554": "20040000000000000000000",
  "ecd1a62802351a41568d23033004acc6c005a5d3": "50000000000000000000",
  "558c54649a8a6e94722bd6d21d14714f71780534": "2000000000000000000000",
  "ca657ec06fe5bc09cf23e52af7f80cc3689e6ede": "900000000000000000000",
  "74bf7a5ab59293149b5c60cf364263e5ebf1aa0d": "115800000000000000000",
  "7a6d781c77c4ba1fcadf687341c1e31799e93d27": "274000000000000000000",
  "77028e409cc43a3bd33d21a9fc53ec606e94910e": "3880000000000000000000",
  "4781a10a4df5eebc82f4cfe107ba1d8a7640bd66": "1790000000000000000000",
  "78e08bc533413c26e291b3143ffa7cc9afb97b78": "200000000000000000000",
  "03ef6ad20ff7bd4f002bac58d47544cf879ae728": "6895000000000000000000",
  "0e3696cf1f4217b163d1bc12a5ea730f1c32a14a": "4000000000000000000000",
  "825135b1a7fc1605614c8aa4d0ac6dbad08f480e": "1430000000000000000000",
  "286b186d61ea1fd78d9930fe12b06537b05c3d51": "1000000000000000000000",
  "8d6657f59711b1f803c6ebef682f915b62f92dc9": "2000000000000000000000",
  "da8bbee182e455d2098acb338a6d45b4b17ed8b6": "2000000000000000000000",
  "3f2da093bb16eb064f8bfa9e30b929d15f8e1c4c": "2000000000000000000000",
  "f5d9cf00d658dd45517a48a9d3f5f633541a533d": "116400000000000000000",
  "c5f64babb7033142f20e46d7aa6201ed86f67103": "2000000000000000000000",
  "a2e2b5941e0c01944bfe1d5fb4e8a34b922ccfb1": "200000000000000000000",
  "6114b0eae5576903f80bfb98842d24ed92237f1e": "100000000000000000000",
  "38df0c4abe7ded5fe068eadf154ac691774324a4": "1790000000000000000000",
  "1c2010bd662df417f2a271879afb13ef4c88a3ae": "4000000000000000000000",
  "918967918cd897dd0005e36dc6c883ef438fc8c7": "140000000000000000000",
  "a522de7eb6ae1250522a513133a93bd42849475c": "20000000000000000000000",
  "7de442c82386154d2e993cbd1280bb7ca6b12ada": "4002000000000000000000",
  "66424bd8785b8cb461102a900283c35dfa07ef6a": "40221000000000000000",
  "7bbbec5e70bdead8bb32b42805988e9648c0aa97": "1000076000000000000000",
  "fec06fe27b44c784b2396ec92f7b923ad17e9077": "2000000000000000000000",
  "95d550427b5a514c751d73a0f6d29fb65d22ed10": "300000000000000000000",
  "8dde60eb08a099d7daa356daaab2470d7b025a6b": "197000000000000000000",
  "81bccbff8f44347eb7fca95b27ce7c952492aaad": "152240000000000000000",
  "3995e096b08a5a726800fcd17d9c64c64e088d2b": "200000000000000000000",
  "4ee13c0d41200b46d19dee5c4bcec71d82bb8e38": "7893915000000000000000",
  "c41461a3cfbd32c9865555a4813137c076312360": "999999000000000000000",
  "3300fb149aded65bcba6c04e9cd6b7a03b893bb1": "18200000000000000000",
  "29f9286c0e738d1721a691c6b95ab3d9a797ede8": "200000000000000000000000",
  "34c8e5f1330fcb4b14ca75cb2580a4b93d204e36": "2000000000000000000000",
  "ec5df227bfa85d7ad76b426e1cee963bc7f519dd": "1000000000000000000000",
  "797510e386f56393ced8f477378a444c484f7dad": "1000000000000000000000",
  "0191eb547e7bf6976b9b1b577546761de65622e2": "1999980000000000000000",
  "615a6f36777f40d6617eb5819896186983fd3731": "5910000000000000000000",
  "17580b766f7453525ca4c6a88b01b50570ea088c": "100000000000000000000",
  "945d96ea573e8df7262bbfa572229b4b16016b0f": "209300000000000000000",
  "2de0964400c282bdd78a919c6bf77c6b5f796179": "200000000000000000000",
  "304ec69a74545721d7316aef4dcfb41ac59ee2f0": "200000000000000000000",
  "be2b326e78ed10e550fee8efa8f8070396522f5a": "39400000000000000000000",
  "1a0841b92a7f7075569dc4627e6b76cab05ade91": "1520000000000000000000",
  "5fa61f152de6123516c751242979285f796ac791": "204000000000000000000",
  "68c8791dc342c373769ea61fb7b510f251d32088": "1000000000000000000000",
  "4167cd48e733418e8f99ffd134121c4a4ab278c4": "3640000000000000000000",
  "598aaabae9ed833d7bc222e91fcaa0647b77580b": "1800000000000000000000",
  "979f30158b574b999aab348107b9eed85b1ff8c1": "970000000000000000000",
  "3ad06149b21c55ff867cc3fb9740d2bcc7101231": "197000000000000000000000",
  "7133843a78d939c69d4486e10ebc7b602a349ff7": "329000000000000000000",
  "8bdfda6c215720eda2136f91052321af4e936c1f": "1000008000000000000000",
  "3e1c53300e4c168912163c7e99b95da268ad280a": "1003200000000000000000",
  "e07ebbc7f4da416e42c8d4f842aba16233c12580": "2000000000000000000000",
  "bac8922c4acc7d2cb6fd59a14eb45cf3e702214b": "800000000000000000000",
  "bb6c284aac8a69b75cddb00f28e145583b56bece": "2000000000000000000000",
  "0372ee5508bf8163ed284e5eef94ce4d7367e522": "100000000000000000000",
  "17125b59ac51cee029e4bd78d7f5947d1ea49bb2": "22000000000000000000000",
  "c88ca1e6e5f4d558d13780f488f10d4ad3130d34": "1550000000000000000000",
  "a825fd5abb7926a67cf36ba246a24bd27be6f6ed": "17600000000000000000",
  "04241b41ecbd0bfdf1295e9d4fa59ea09e6c6186": "1870000000000000000000",
  "6de4d15219182faf3aa2c5d4d2595ff23091a727": "1580000000000000000000",
  "b203d29e6c56b92699c4b92d1f6f84648dc4cfbc": "400000000000000000000",
  "80b42de170dbd723f454e88f7716452d92985092": "300202000000000000000",
  "0a5b79d8f23b6483dbe2bdaa62b1064cc76366ae": "1969803000000000000000",
  "32034e8581d9484e8af42a28df190132ec29c466": "3460000000000000000000",
  "7ee604c7a9dc2909ce321de6b9b24f5767577555": "5533575000000000000000",
  "a387ce4e961a7847f560075c64e1596b5641d21c": "668500000000000000000",
  "fcc9d4a4262e7a027ab7519110d802c495ceea39": "6370000000000000000000",
  "ff8a2ca5a81333f19998255f203256e1a819c0aa": "224000000000000000000",
  "f9811fa19dadbf029f8bfe569adb18228c80481a": "200000000000000000000",
  "0d1f2a57713ebc6e94de29846e8844d376665763": "5000000000000000000000",
  "eab0bd148309186cf8cbd13b7232d8095acb833a": "10691800000000000000000",
  "36928b55bc861509d51c8cf1d546bfec6e3e90af": "1970000000000000000000",
  "30480164bcd84974ebc0d90c9b9afab626cd1c73": "800000000000000000000",
  "36339f84a5c2b44ce53dfdb6d4f97df78212a7df": "321600000000000000000",
  "cfeacaaed57285e0ac7268ce6a4e35ecfdb242d7": "1086400000000000000000",
  "572dd8cd3fe399d1d0ec281231b7cefc20b9e4bb": "10400000000000000000000",
  "5dded049a6e1f329dc4b971e722c9c1f2ade83f0": "1000000000000000000000",
  "9756e176c9ef693ee1eec6b9f8b151d313beb099": "1200000000000000000000",
  "01e6415d587b065490f1ed7f21d6e0f386ee6747": "2000000000000000000000",
  "b4413576869c08f9512ad311fe925988a52d3414": "10000000000000000000000",
  "da9f55460946d7bfb570ddec757ca5773b58429a": "507600000000000000000",
  "7180b83ee5574317f21c8072b191d895d46153c3": "460000000000000000000",
  "0aca9a5626913b08cfc9a66d40508dce52b60f87": "1910000000000000000000",
  "5cd0e475b54421bdfc0c12ea8e082bd7a5af0a6a": "59000000000000000000",
  "7edb02c61a227287611ad950696369cc4e647a68": "274000000000000000000",
  "b2676841ee9f2d31c172e82303b0fe9bbf9f1e09": "200000000000000000000",
  "a2222259dd9c3e3ded127084f808e92a1887302c": "162000000000000000000",
  "4b3a7cc3a7d7b00ed5282221a60259f25bf6538a": "1000000000000000000000",
  "e33ff987541dde5cdee0a8a96dcc3f33c3f24cc2": "200000000000000000000000",
  "1e1a4828119be309bd88236e4d482b504dc55711": "2955000000000000000000",
  "9b1811c3051f46e664ae4bc9c824d18592c4574a": "199955000000000000000",
  "59fe00696dbd87b7976b29d1156c8842a2e17914": "2000000000000000000000",
  "48010ef3b8e95e3f308f30a8cb7f4eb4bf60d965": "2000000000000000000000",
  "c90300cb1d4077e6a6d7e169a460468cf4a492d7": "2000000000000000000000",
  "6dedf62e743f4d2c2a4b87a787f5424a7aeb393c": "180000000000000000000",
  "fb744b951d094b310262c8f986c860df9ab1de65": "52009000000000000000",
  "193ac65183651800e23580f8f0ead3bb597eb8a4": "50020000000000000000",
  "bf05ff5ecf0df2df887759fb8274d93238ac267d": "800000000000000000000",
  "6c0e712f405c59725fe829e9774bf4df7f4dd965": "57413800000000000000000",
  "2744ff67464121e35afc2922177164fa2fcb0267": "100000000000000000000",
  "d09cb2e6082d693a13e8d2f68dd1dd8461f55840": "1000000000000000000000",
  "bc171e53d17ac9b61241ae436deec7af452e7496": "5348000000000000000000",
  "71fa22cc6d33206b7d701a163a0dab31ae4d31d6": "1610000000000000000000",
  "4da8030769844bc34186b85cd4c7348849ff49e9": "10000000000000000000000",
  "c8616b4ec09128cdff39d6e4b9ac86eec471d5f2": "19400000000000000000",
  "407295ebd94b48269c2d569c9b9af9aa05e83e5e": "10000000000000000000000",
  "d45d5daa138dd1d374c71b9019916811f4b20a4e": "576000000000000000000",
  "42c6edc515d35557808d13cd44dcc4400b2504e4": "197876000000000000000",
  "0bc95cb32dbb574c832fa8174a81356d38bc92ac": "2000000000000000000000",
  "5a6071bcebfcba4ab57f4db96fc7a68bece2ba5b": "2000000000000000000000",
  "54c93e03a9b2e8e4c3672835a9ee76f9615bc14e": "19400000000000000000",
  "3c03bbc023e1e93fa3a3a6e428cf0cd8f95e1ec6": "1520000000000000000000",
  "ba1531fb9e791896bcf3a80558a359f6e7c144bd": "3940000000000000000000",
  "aa56a65dc4abb72f11bae32b6fbb07444791d5c9": "748600000000000000000",
  "e437acbe0f6227b0e36f36e4bcf7cf613335fb68": "200000000000000000000",
  "39d4a931402c0c79c457186f24df8729cf957031": "4000000000000000000000",
  "e22b20c77894463baf774cc256d5bddbbf7ddd09": "1000000000000000000000",
  "70a4067d448cc25dc8e70e651cea7cf84e92109e": "176000000000000000000",
  "aa3925dc220bb4ae2177b2883078b6dc346ca1b2": "8000000000000000000000",
  "ad57aa9d00d10c439b35efcc0becac2e3955c313": "200000000000000000000",
  "e93d47a8ca885d540c4e526f25d5c6f2c108c4b8": "112640000000000000000000",
  "232ce782506225fd9860a2edc14a7a3047736da2": "20000000000000000000",
  "49a645e0667dfd7b32d075cc2467dd8c680907c4": "129560000000000000000",
  "cf2e734042a355d05ffb2e3915b16811f45a695e": "2000000000000000000000",
  "39b1c471ae94e12164452e811fbbe2b3cd7275ac": "2000000000000000000000",
  "ffad3dd74e2c1f796ac640de56dc99b4c792a402": "5000000000000000000000",
  "a69d7cd17d4842fe03f62a90b2fbf8f6af7bb380": "100000000000000000000",
  "2001bef77b66f51e1599b02fb110194a0099b78d": "2000000000000000000000",
  "95e7616424cd0961a71727247437f0069272280e": "400000000000000000000",
  "c04f4bd4049f044685b883b62959ae631d667e35": "5820000000000000000000",
  "ede0147ec032c3618310c1ff25690bf172193dac": "2000000000000000000000",
  "66719c0682b2ac7f9e27abebec7edf8decf0ae0d": "20000000000000000000",
  "45272b8f62e9f9fa8ce04420e1aea3eba9686eac": "4000000000000000000000",
  "d1da0c8fb7c210e0f2ec618f85bdae7d3e734b1c": "1970000000000000000000",
  "e9133e7d31845d5f2b66a2618792e869311acf66": "24050000000000000000000",
  "ebb62cf8e22c884b1b28c6fa88fbbc17938aa787": "798000000000000000000",
  "6205c2d5647470848a3840f3887e9b015d34755c": "1800000000000000000000",
  "76ca22bcb8799e5327c4aa2a7d0949a1fcce5f29": "1524180000000000000000",
  "6b925dd5d8ed6132ab6d0860b82c44e1a51f1fee": "1480000000000000000000",
  "797bb7f157d9feaa17f76da4f704b74dc1038341": "3340000000000000000000",
  "ae8954f8d6166de507cf61297d0fc7ca6b9e7128": "300000000000000000000",
  "75c1ad23d23f24b384d0c3149177e86697610d21": "6426082000000000000000",
  "805d846fb0bc02a7337226d685be9ee773b9198a": "19999800000000000000000",
  "c3cb6b36af443f2c6e258b4a39553a818747811f": "1610000000000000000000",
  "cea43f7075816b60bbfce68b993af0881270f6c4": "2000000000000000000000",
  "e0388aeddd3fe2ad56f85748e80e710a34b7c92e": "500000000000000000000",
  "e131f87efc5ef07e43f0f2f4a747b551d750d9e6": "19999000000000000000000",
  "c2b2cbe65bc6c2ee7a3c75b2e47c189c062e8d8b": "20000000000000000000000",
  "bd8765f41299c7f479923c4fd18f126d7229047d": "4000000000000000000000",
  "c83ba6dd9549be1d3287a5a654d106c34c6b5da2": "7000000000000000000000",
  "f870995fe1e522321d754337a45c0c9d7b38951c": "20000000000000000000",
  "0d8ed7d0d15638330ed7e4eaccab8a458d75737e": "2000000000000000000000",
  "36c510bf8d6e569bf2f37d47265dbcb502ff2bce": "30000000000000000000000",
  "0eccf617844fd61fba62cb0e445b7ac68bcc1fbe": "387260000000000000000",
  "ae10e27a014f0d306baf266d4897c89aeee2e974": "20000000000000000000000",
  "1827039f09570294088fddf047165c33e696a492": "9550000000000000000000",
  "23378f42926d0184b793b0c827a6dd3e3d334fcd": "56000000000000000000",
  "467124ae7f452f26b3d574f6088894fa5d1cfb3b": "2700000000000000000000",
  "aae61e43cb0d0c96b30699f77e00d711d0a3979b": "1000000000000000000000",
  "15c7edb8118ee27b342285eb5926b47a855bc7a5": "20000000000000000000",
  "0d5d98565c647ca5f177a2adb9d3022fac287f21": "200000000000000000000",
  "7222fec7711781d26eaa4e8485f7aa3fac442483": "456000000000000000000",
  "dc44275b1715baea1b0345735a29ac42c9f51b4f": "1164000000000000000000",
  "04d82af9e01a936d97f8f85940b970f9d4db9936": "200000000000000000000",
  "45533390e340fe0de3b3cf5fb9fc8ea552e29e62": "1460000000000000000000",
  "1284f0cee9d2ff2989b65574d06ffd9ab0f7b805": "400000000000000000000",
  "ed9ebccba42f9815e78233266dd6e835b6afc31b": "6000000000000000000000",
  "e4324912d64ea3aef76b3c2ff9df82c7e13ae991": "2000000000000000000000",
  "94c742fd7a8b7906b3bfe4f8904fc0be5c768033": "20000000000000000000000",
  "62fb8bd1f0e66b90533e071e6cbe6111fef0bc63": "17600000000000000000000",
  "2c83aeb02fcf067d65a47082fd977833ab1cec91": "150400000000000000000",
  "06cbfa08cdd4fba737bac407be8224f4eef35828": "593459000000000000000",
  "67ee406ea4a7ae6a3a381eb4edd2f09f174b4928": "1036000000000000000000",
  "83c23d8a502124ee150f08d71dc6727410a0f901": "33999600000000000000000",
  "f7c00cdb1f020310d5acab7b496aaa44b779085e": "1670000000000000000000",
  "d096565b7c7407d06536580355fdd6d239144aa1": "250000000000000000000",
  "f8d52dcc5f96cc28007b3ecbb409f7e22a646caa": "149200000000000000000",
  "0c222c7c41c9b048efcce0a232434362e12d673b": "10007600000000000000000",
  "503bdbd8bc421c32a443032deb2e3e4cd5ba8b4e": "2000000000000000000000",
  "77da5e6c72fb36bce1d9798f7bcdf1d18f459c2e": "22380000000000000000",
  "e62f98650712eb158753d82972b8e99ca3f61877": "2000000000000000000000",
  "87a7c508ef71582dd9a54372f89cb01f252fb180": "200000000000000000000",
  "f61283b4bd8504058ca360e993999b62cbc8cd67": "255000000000000000000",
  "9ccddcb2cfc2b25b08729a0a98d9e6f0202ea2c1": "100000000000000000000",
  "d460a4b908dd2b056759b488850b66a838fc77a8": "1970000000000000000000",
  "5431b1d18751b98fc9e2888ac7759f1535a2db47": "2000000000000000000000",
  "da2a14f9724015d79014ed8e5909681d596148f1": "48499000000000000000",
  "c989434f825aaf9c552f685eba7c11db4a5fc73a": "501000000000000000000",
  "2b701d16c0d3cc1e4cd85445e6ad02eea4ac012d": "600000000000000000000",
  "78b978a9d7e91ee529ea4fc4b76feaf8762f698c": "32000000000000000000000",
  "c89cf504b9f3f835181fd8424f5ccbc8e1bddf7d": "10000000000000000000000",
  "e94941b6036019b4016a30c1037d5a6903babaad": "780000000000000000000",
  "95d98d0c1069908f067a52acac2b8b534da37afd": "2054053000000000000000",
  "8284923b62e68bbf7c2b9f3414d13ef6c812a904": "3880000000000000000000",
  "3e5a39fdda70df1126ab0dc49a7378311a537a1f": "2400000000000000000000",
  "a2ace4c993bb1e5383f8ac74e179066e814f0591": "100000000000000000000",
  "0609d83a6ce1ffc9b690f3e9a81e983e8bdc4d9d": "70000000000000000000000",
  "d119417c46732cf34d1a1afb79c3e7e2cd8eece4": "2000000000000000000000",
  "fdb33944f2360615e5be239577c8a19ba52d9887": "601650000000000000000",
  "dd95dbe30f1f1877c5dd7684aeef302ab6885192": "8372000000000000000000",
  "413f4b02669ccff6806bc826fcb7deca3b0ea9bc": "20000000000000000000",
  "5800cd8130839e94495d2d8415a8ea2c90e0c5cb": "200000000000000000000",
  "65053191319e067a25e6361d47f37f6318f83419": "394000000000000000000",
  "9bc573bcda23b8b26f9073d90c230e8e71e0270b": "999544000000000000000",
  "97f7760657c1e202759086963eb4211c5f8139b9": "49770000000000000000000",
  "126897a311a14ad43b78e0920100c4426bfd6bdd": "973581000000000000000",
  "d5276f0cd5ffd5ffb63f98b5703d5594ede0838b": "400000000000000000000",
  "e9c35c913ca1fceab461582fe1a5815164b4fd21": "8000000000000000000000",
  "b43067fe70d9b55973ba58dc64dd7f311e554259": "200000000000000000000",
  "6f8f0d15cc96fb7fe94f1065bc6940f8d12957b2": "1000000000000000000000",
  "b1dba5250ba9625755246e067967f2ad2f0791de": "80000000000000000000000",
  "72b7a03dda14ca9c661a1d469fd33736f673c8e8": "2000000000000000000000",
  "e792349ce9f6f14f81d0674096befa1f9221cdea": "1685365000000000000000",
  "1815279dff9952da3be8f77249dbe22243377be7": "4749800000000000000000",
  "33481e856ebed48ea708a27426ef28e867f57cd1": "200000000000000000000",
  "8eb8c71982a00fb84275293253f8044544b66b49": "400000000000000000000",
  "65f5870f26bce089677dfc23b5001ee492483428": "5067230000000000000000",
  "8e23facd12c765c36ab81a6dd34d8aa9e68918ae": "167310000000000000000",
  "4912d902931676ff39fc34fe3c3cc8fb2182fa7a": "20000000000000000000",
  "c09a66172aea370d9a63da04ff71ffbbfcff7f94": "2000000000000000000000",
  "e969ea1595edc5c4a707cfde380929633251a2b0": "200000000000000000000",
  "4f2b47e2775a1fa7178dad92985a5bbe493ba6d6": "200000000000000000000",
  "cab9a97ada065c87816e6860a8f1426fe6b3d775": "1000000000000000000000",
  "cdfd8217339725d7ebac11a63655f265eff1cc3d": "4999962000000000000000",
  "ab4004c0403f7eabb0ea586f212156c4203d67f1": "1999944000000000000000",
  "1c7cb2fe6bf3e09cbcdc187af38fa8f5053a70b6": "9970823000000000000000",
  "a951b244ff50cfae591d5e1a148df6a938ef2a1a": "1734000000000000000000",
  "b158db43fa62d30e65f3d09bf781c7b67372ebaa": "1999000000000000000000",
  "25e037f00a18270ba5ec3420229ddb0a2ce38fa2": "10000000000000000000000",
  "2aaea1f1046f30f109faec1c63ef5c7594eb08da": "4000000000000000000000",
  "73d7269ff06c9ffd33754ce588f74a966abbbbba": "6600000000000000000000",
  "4c767b65fd91161f4fbdcc6a69e2f6ad711bb918": "720000000000000000000",
  "92ae5b7c7eb492ff1ffa16dd42ad9cad40b7f8dc": "865000000000000000000",
  "a04f2ae02add14c12faf65cb259022d0830a8e26": "100000000000000000000000",
  "63ef2fbc3daf5edaf4a295629ccf31bcdf4038e5": "1460000000000000000000",
  "749ad6f2b5706bbe2f689a44c4b640b58e96b992": "100000000000000000000",
  "4d836d9d3b0e2cbd4de050596faa490cffb60d5d": "300000000000000000000",
  "59f6247b0d582aaa25e5114765e4bf3c774f43c2": "50000000000000000000",
  "1293c78c7d6a443b9d74b0ba5ee7bb47fd418588": "6685000000000000000000",
  "67bc85e87dc34c4e80aafa066ba8d29dbb8e438e": "402500000000000000000",
  "a09f4d5eaa65a2f4cb750a49923401dae59090af": "140000000000000000000",
  "ebbd4db9019952d68b1b0f6d8cf0683c00387bb5": "332330000000000000000",
  "b16479ba8e7df8f63e1b95d149cd8529d735c2da": "846477000000000000000",
  "e1b2aca154b8e0766c4eba30bc10c7f35036f368": "19980000000000000000",
  "5c464197791c8a3da3c925436f277ab13bf2faa2": "8000000000000000000000",
  "170a88a8997f92d238370f1affdee6347050b013": "3000800000000000000000",
  "dadbfafd8b62b92a24efd75256dd83abdbd7bbdb": "19700000000000000000",
  "bb993b96ee925ada7d99d786573d3f89180ce3aa": "2000000000000000000000",
  "f2c362b0ef991bc82fb36e66ff75932ae8dd8225": "74000000000000000000",
  "7f2382ffd8f83956467937f9ba72374623f11b38": "600000000000000000000",
  "74d1a4d0c7524e018d4e06ed3b648092b5b6af2c": "50000000000000000000",
  "24a750eae5874711116dd7d47b7186ce990d3103": "200000000000000000000",
  "a8e42a4e33d7526cca19d9a36dcd6e8040d0ea73": "1080000000000000000000",
  "3e1b2230afbbd310b4926a4c776d5ae7819c661d": "30000000000000000000000",
  "6af9f0dfeeaebb5f64bf91ab771669bf05295553": "400000000000000000000",
  "41e4a20275e39bdcefeb655c0322744b765140c2": "10000000000000000000000",
  "ceb089ec8a78337e8ef88de11b49e3dd910f748f": "1000000000000000000000",
  "e6bcd30a8fa138c5d9e5f6c7d2da806992812dcd": "260000000000000000000000",
  "e08c60313106e3f9334fe6f7e7624d211130c077": "40000000000000000000",
  "f5cffbba624e7eb321bc83c60ca68199b4e36671": "2000000000000000000000",
  "d7c2803ed7b0e0837351411a8e6637d168bc5b05": "29549015000000000000000",
  "0f3665d48e9f1419cd984fc7fa92788710c8f2e4": "2000000000000000000000",
  "b48921c9687d5510744584936e8886bdbf2df69b": "1000000000000000000000",
  "a94bbb8214cf8da0c2f668a2ac73e86248528d4b": "960000000000000000000",
  "be0c2a80b9de084b172894a76cf4737a4f529e1a": "1999944000000000000000",
  "fcf199f8b854222f182e4e1d099d4e323e2aae01": "1000000000000000000000",
  "b52dfb45de5d74e3df208332bc571c809b8dcf32": "6000000000000000000000",
  "704819d2e44d6ed1da25bfce84c49fcca25613e5": "400000000000000000000",
  "6ff6cc90d649de4e96cffee1077a5b302a848dcb": "28600000000000000000",
  "4d9c77d0750c5e6fbc247f2fd79274686cb353d6": "20000000000000000000",
  "68e8022740f4af29eb48db32bcecddfd148d3de3": "1000000000000000000000",
  "2cb615073a40dcdb99faa848572e987b3b056efb": "799600000000000000000",
  "64adcceec53dd9d9dd15c8cc1a9e736de4241d2c": "56000000000000000000",
  "2aec809df9325b9f483996e99f7331097f08aa0e": "4000000000000000000000",
  "438c2f54ff8e629bab36b1442b760b12a88f02ae": "2000000000000000000000",
  "9e35399071a4a101e9194daa3f09f04a0b5f9870": "4000000000000000000000",
  "a5c336083b04f9471b8c6ed73679b74d66c363ec": "3014100000000000000000",
  "7ad3f307616f19dcb143e6444dab9c3c33611f52": "50000000000000000000",
  "455cb8ee39ffbc752331e5aefc588ef0ee593454": "999963000000000000000",
  "c4c01afc3e0f045221da1284d7878574442fb9ac": "7419944000000000000000",
  "99268327c373332e06c3f6164287d455b9d5fa4b": "2000000000000000000000",
  "4367ae4b0ce964f4a54afd4b5c368496db169e9a": "2000000000000000000000",
  "2cd79eb52027b12c18828e3eaab2969bfcd287e9": "20000000000000000000",
  "b96841cabbc7dbd69ef0cf8f81dff3c8a5e21570": "12000000000000000000000",
  "d7ebddb9f93987779b680155375438db65afcb6a": "100600000000000000000",
  "0631d18bbbbd30d9e1732bf36edae2ce8901ab80": "3024800000000000000000",
  "5fad960f6b2c84569c9f4d47bf1985fcb2c65da6": "999972000000000000000",
  "01d599ee0d5f8c38ab2d392e2c65b74c3ce31820": "510000000000000000000",
  "ff0cc8dac824fa24fc3caa2169e6e057cf638ad6": "4000000000000000000000",
  "c25266c7676632f13ef29be455ed948add567792": "1337000000000000000000",
  "9c344098ba615a398f11d009905b177c44a7b602": "1000000000000000000000",
  "3b0accaf4b607cfe61d17334c214b75cdefdbd89": "2000000000000000000000",
  "6d6634b5b8a40195d949027af4828802092ceeb6": "3000000000000000000000",
  "208c45732c0a378f17ac8324926d459ba8b658b4": "2955000000000000000000",
  "c24399b4bf86f7338fbf645e3b22b0e0b7973912": "2000000000000000000000",
  "29763dd6da9a7c161173888321eba6b63c8fb845": "328000000000000000000",
  "9c2fd54089af665df5971d73b804616039647375": "1000000000000000000000",
  "0e09646c99af438e99fa274cb2f9c856cb65f736": "1910000000000000000000",
  "be73274d8c5aa44a3cbefc8263c37ba121b20ad3": "500000000000000000000",
  "ecfd004d02f36cd4d8b4a8c1a9533b6af85cd716": "5003800000000000000000",
  "f978b025b64233555cc3c19ada7f4199c9348bf7": "400000000000000000000000",
  "705ddd38355482b8c7d3b515bda1500dd7d7a817": "400000000000000000000",
  "2b8a0dee5cb0e1e97e15cfca6e19ad21f995efad": "504206000000000000000",
  "1098cc20ef84bad5146639c4cd1ca6c3996cb99b": "18200000000000000000",
  "afdac5c1cb56e245bf70330066a817eaafac4cd1": "20000000000000000000",
  "910e996543344c6815fb97cda7af4b8698765a5b": "103400000000000000000",
  "94612781033b57b146ee74e753c672017f5385e4": "3600000000000000000000",
  "d03fc165576aaed525e5502c8e140f8b2e869639": "6850000000000000000000",
  "293384c42b6f8f2905ce52b7205c2274376c612b": "1400000000000000000000",
  "09ee12b1b42b05af9cf207d5fcac255b2ec411f2": "58929000000000000000",
  "dbd71efa4b93c889e76593de609c3b04cbafbe08": "20000000000000000000",
  "fa86ca27bf2854d98870837fb6f6dfe4bf6453fc": "322061000000000000000",
  "61ff8e67b34d9ee6f78eb36ffea1b9f7c15787af": "1640000000000000000000",
  "6d4cbf3d8284833ae99344303e08b4d614bfda3b": "12000000000000000000000",
  "2ff160c44f72a299b5ec2d71e28ce5446d2fcbaf": "360000000000000000000",
  "94a7cda8f481f9d89d42c303ae1632b3b709db1d": "300000000000000000000",
  "7566496162ba584377be040a4f87777a707acaeb": "4000000000000000000000",
  "bdc461462b6322b462bdb33f22799e8108e2417d": "668500000000000000000",
  "7e47637e97c14622882be057bea229386f4052e5": "440000000000000000000",
  "3b5c251d7fd7893ba209fe541cecd0ce253a990d": "30000000000000000000000",
  "0e498800447177b8c8afc3fdfa7f69f4051bb629": "2140234000000000000000",
  "b71623f35107cf7431a83fb3d204b29ee0b1a7f4": "19700000000000000000",
  "1d395b30adda1cf21f091a4f4a7b753371189441": "100000000000000000000000",
  "2c2428e4a66974edc822d5dbfb241b2728075158": "2000000000000000000000",
  "a575f2891dcfcda83c5cf01474af11ee01b72dc2": "100076000000000000000",
  "ad728121873f0456d0518b80ab6580a203706595": "500000000000000000000",
  "48669eb5a801d8b75fb6aa58c3451b7058c243bf": "30940000000000000000000",
  "b3ae54fba09d3ee1d6bdd1e957923919024c35fa": "65513000000000000000",
  "0d35408f226566116fb8acdaa9e2c9d59b76683f": "940000000000000000000",
  "df211cd21288d6c56fae66c3ff54625dd4b15427": "2500024000000000000000",
  "8a746c5d67064711bfca685b95a4fe291a27028e": "40000000000000000000",
  "1cf105ab23023b554c583e86d7921179ee83169f": "1970000000000000000000",
  "8cfedef198db0a9143f09129b3fd64dcbb9b4956": "2000000000000000000000",
  "1e381adcf801a3bf9fd7bfac9ccc2b8482ad5e66": "600200000000000000000",
  "e74608f506866ada6bfbfdf20fea440be76989ef": "1999944000000000000000",
  "27e63989ca1e903bc620cf1b9c3f67b9e2ae6581": "1337000000000000000000",
  "bb0857f1c911b24b86c8a70681473fe6aaa1cce2": "100000000000000000000",
  "4f8e8d274fb22a3fd36a47fe72980471544b3434": "200000000000000000000",
  "127d3fc5003bf63c0d83e93957836515fd279045": "111890000000000000000",
  "95809e8da3fbe4b7f281f0b8b1715f420f7d7d63": "2000000000000000000000",
  "28904bb7c4302943b709b14d7970e42b8324e1a1": "10027500000000000000000",
  "c07e3867ada096807a051a6c9c34cc3b3f4ad34a": "1788210000000000000000",
  "f0b469eae89d400ce7d5d66a9695037036b88903": "20000000000000000000000",
  "7445202f0c74297a004eb3726aa6a82dd7c02fa1": "2000000000000000000000",
  "c58f62fee9711e6a05dc0910b618420aa127f288": "3980000000000000000000",
  "801d65c518b11d0e3f4f470221417013c8e53ec5": "4000000000000000000000",
  "41010fc8baf8437d17a04369809a168a17ca56fb": "100000000000000000000",
  "a1998144968a5c70a6415554cefec2824690c4a5": "20000000000000000000",
  "e9559185f166fc9513cc71116144ce2deb0f1d4b": "20000000000000000000000",
  "ed5b4c41e762d942404373caf21ed4615d25e6c1": "2013960000000000000000",
  "665b000f0b772750cc3c217a5ef429a92bf1ccbb": "4000000000000000000000",
  "febd9f81cf78bd5fb6c4b9a24bd414bb9bfa4c4e": "1990019000000000000000",
  "a072691c8dd7cd4237ff72a75c1a9506d0ce5b9e": "370000000000000000000",
  "6765df25280e8e4f38d4b1cf446fc5d7eb659e34": "100000000000000000000",
  "524fb210522c5e23bb67dfbf8c26aa616da49955": "999971000000000000000",
  "e987e6139e6146a717fef96bc24934a5447fe05d": "2000000000000000000000",
  "d6110276cfe31e42825a577f6b435dbcc10cf764": "1000000000000000000000",
  "5e51b8a3bb09d303ea7c86051582fd600fb3dc1a": "20000000000000000000",
  "5c4f24e994ed8f850ea7818f471c8fac3bcf0452": "1724800000000000000000",
  "85b2998d0c73302cb2ba13f489313301e053be15": "10000000000000000000000",
  "0af6c8d539c96d50259e1ba6719e9c8060f388c2": "1000000000000000000000",
  "7d901b28bf7f88ef73d8f73cca97564913ea8a24": "955000000000000000000",
  "e01859f242f1a0ec602fa8a3b0b57640ec89075e": "555000000000000000000",
  "c66ae4cee87fb3353219f77f1d6486c580280332": "29550000000000000000",
  "2d40558b06f90a3923145592123b6774e46e31f4": "1000000000000000000000",
  "ccf43975b76bfe735fec3cb7d4dd24f805ba0962": "60000000000000000000",
  "1703b4b292b8a9deddede81bb25d89179f6446b6": "19690000000000000000000",
  "0e9096d343c060db581a120112b278607ec6e52b": "20000000000000000000",
  "f65819ac4cc14c137f05dd7977c7dae08d1a4ab5": "102000000000000000000",
  "ca373fe3c906b8c6559ee49ccd07f37cd4fb5266": "1790000000000000000000",
  "d28298524df5ec4b24b0ffb9df85170a145a9eb5": "287700000000000000000",
  "5fcda847aaf8d7fa8bca08029ca2849166aa15a3": "623350000000000000000",
  "bdc739a699700b2e8e2c4a4c7b058a0e513ddebe": "2000000000000000000000",
  "0bb05f7224bb5804856556c07eeadbed87ba8f7c": "401100000000000000000",
  "ab416fe30d58afe5d9454c7fce7f830bcc750356": "114515000000000000000",
  "3eee6f1e96360b7689b3069adaf9af8eb60ce481": "1000000000000000000000",
  "9a0d3cee3d9892ea3b3700a27ff84140d9025493": "60000000000000000000",
  "5dc36de5359450a1ec09cb0c44cf2bb42b3ae435": "1117500000000000000000",
  "35c8adc11125432b3b77acd64625fe58ebee9d66": "2000000000000000000000",
  "a5e9cd4b74255d22b7d9b27ae8dd43ed6ed0252b": "766527000000000000000",
  "31ea12d49a35a740780ddeeaece84c0835b26270": "200000000000000000000",
  "7aef7b551f0b9c46e755c0f38e5b3a73fe1199f5": "1490000000000000000000",
  "cc6d7b12061bc96d104d606d65ffa32b0036eb07": "10000000000000000000000",
  "322021022678a0166d204b3aaa7ad4ec4b88b7d0": "400000000000000000000",
  "b31196714a48dff726ea9433cd2912f1a414b3b3": "2680000000000000000000",
  "0f2fb884c8aaff6f543ac6228bd08e4f60b0a5fd": "3145000000000000000000",
  "7d9d221a3df89ddd7b5f61c1468c6787d6b333e6": "138000000000000000000",
  "367f59cc82795329384e41e1283115e791f26a01": "2000000000000000000000",
  "fd9579f119bbc819a02b61e38d8803c942f24d32": "105600000000000000000",
  "3e2f26235e137a7324e4dc154b5df5af46ea1a49": "22458000000000000000",
  "4c1579af3312e4f88ae93c68e9449c2e9a68d9c4": "2000000000000000000000",
  "ffb04726dfa41afdc819168418610472970d7bfc": "4000000000000000000000",
  "403c64896a75cad816a9105e18d8aa5bf80f238e": "985000000000000000000",
  "5cd588a14ec648ccf64729f9167aa7bf8be6eb3d": "1000000000000000000000",
  "24b2be118b16d8b2174769d17b4cf84f07ca946d": "2000000000000000000000",
  "d3bb59fa31258be62f8ed232f1a7d47b4a0b41ee": "100000000000000000000",
  "cc9ac715cd6f2610c52b58676456884297018b29": "13370000000000000000",
  "6f2a31900e240395b19f159c1d00dfe4d898ebdf": "1999600000000000000000",
  "d60b247321a32a5affb96b1e279927cc584de943": "2265500000000000000000",
  "f7a1ade2d0f529123d1055f19b17919f56214e67": "500000000000000000000",
  "bea00df17067a43a82bc1daecafb6c14300e89e6": "1820000000000000000000",
  "a2968fc1c64bac0b7ae0d68ba949874d6db253f4": "20000000000000000000000",
  "92d8ad9a4d61683b80d4a6672e84c20d62421e80": "20000000000000000000",
  "6ed2a12b02f8c688c7b5d3a6ea14d63687dab3b6": "2000000000000000000000",
  "7a63869fc767a4c6b1cd0e0649f3634cb121d24b": "77500000000000000000",
  "84f522f0520eba52dd18ad21fa4b829f2b89cb97": "4949566000000000000000",
  "d6234aaf45c6f22e66a225ffb93add629b4ef80f": "1000000000000000000000",
  "e3d8bf4efe84b1616d1b89e427ddc6c8830685ae": "2000000000000000000000",
  "a3db364a332d884ba93b2617ae4d85a1489bea47": "1700000000000000000000",
  "9f7986924aeb02687cd64189189fb167ded2dd5c": "985000000000000000000",
  "2eaf4e2a46b789ccc288c8d1d9294e3fb0853896": "2000000000000000000000",
  "a02dc6aa328b880de99eac546823fccf774047fb": "1970000000000000000000",
  "873b7f786d3c99ff012c4a7cae2677270240b9c5": "1730000000000000000000",
  "1d69c83d28ff0474ceebeacb3ad227a144ece7a3": "5474937000000000000000",
  "7b827cae7ff4740918f2e030ab26cb98c4f46cf5": "7460000000000000000000",
  "3083ef0ed4c4401196774a95cf4edc83edc1484f": "170000000000000000000000",
  "40ad74bc0bce2a45e52f36c3debb1b3ada1b7619": "6790000000000000000000",
  "05423a54c8d0f9707e704173d923b946edc8e700": "127543000000000000000",
  "22eb7db0ba56b0f8b816ccb206e615d929185b0d": "80500000000000000000",
  "66082c75a8de31a53913bbd44de3a0374f7faa41": "1460000000000000000000",
  "e3d3eaa299887865569e88be219be507189be1c9": "456156000000000000000",
  "ae57cc129a96a89981dac60d2ffb877d5dc5e432": "1110994000000000000000",
  "1a2434cc774422d48d53d59c5d562cce8407c94b": "30000000000000000000",
  "21546914dfd3af2add41b0ff3e83ffda7414e1e0": "5969100000000000000000",
  "4dcf62a3de3f061db91498fd61060f1f6398ff73": "1999944000000000000000",
  "6fd98e563d12ce0fd60f4f1f850ae396a9823c02": "1261000000000000000000",
  "edf8a3e1d40f13b79ec8e3e1ecf262fd92116263": "158000000000000000000",
  "c09e3cfc19f605ff3ec9c9c70e2540d7ee974366": "500000000000000000000",
  "953572f0ea6df9b197cae40e4b8ecc056c4371c5": "1000000000000000000000",
  "163cc8be227646cb09719159f28ed09c5dc0dce0": "1337000000000000000000",
  "a3932a31d6ff75fb3b1271ace7caa7d5e1ff1051": "20000000000000000000000",
  "f9a94bd56198da245ed01d1e6430b24b2708dcc0": "749938000000000000000",
  "3eb8b33b21d23cda86d8288884ab470e164691b5": "500000000000000000000",
  "84bcbf22c09607ac84341d2edbc03bfb1739d744": "500000000000000000000",
  "961c59adc74505d1864d1ecfcb8afa0412593c93": "40000000000000000000000",
  "f068dfe95d15cd3a7f98ffa688b4346842be2690": "1255160000000000000000",
  "291efe0081dce8c14799f7b2a43619c0c3b3fc1f": "1200000000000000000000",
  "be4fd073617022b67f5c13499b827f763639e4e3": "2000000000000000000000",
  "e40a7c82e157540a0b00901dbb86c716e1a062da": "49800000000000000000",
  "6635b46f711d2da6f0e16370cd8ee43efb2c2d52": "2000000000000000000000",
  "43748928e8c3ec4436a1d092fbe43ac749be1251": "400000000000000000000",
  "b557ab9439ef50d237b553f02508364a466a5c03": "200000000000000000000",
  "11928378d27d55c520ceedf24ceb1e822d890df0": "8000000000000000000000",
  "61518464fdd8b73c1bb6ac6db600654938dbf17a": "200000000000000000000",
  "004bfbe1546bc6c65b5c7eaa55304b38bbfec6d3": "2000000000000000000000",
  "a5e0fc3c3affed3db6710947d1d6fb017f3e276d": "2000000000000000000000",
  "8ecbcfacbfafe9f00c3922a24e2cf0026756ca20": "5640000000000000000000",
  "fb5ffaa0f7615726357891475818939d2037cf96": "20000000000000000000",
  "ae222865799079aaf4f0674a0cdaab02a6d570ff": "2000000000000000000000",
  "9edc90f4be210865214ab5b35e5a8dd77415279d": "4000000000000000000000",
  "9d7831e834c20b1baa697af1d8e0c621c5afff9a": "86500000000000000000",
  "046d274b1af615fb505a764ad8dda770b1db2f3d": "2000000000000000000000",
  "eaea23aa057200e7c9c15e8ff190d0e66c0c0e83": "2000000000000000000000",
  "417a3cd19496530a6d4204c3b5a17ce0f207b1a5": "8000000000000000000000",
  "a035a3652478f82dbd6d115faa8ca946ec9e681d": "109880000000000000000",
  "4f5801b1eb30b712d8a0575a9a71ff965d4f34eb": "300000000000000000000",
  "91dbb6aaad149585be47375c5d6de5ff09191518": "20000000000000000000000",
  "d043a011ec4270ee7ec8b968737515e503f83028": "500000000000000000000",
  "bb371c72c9f0316cea2bd9c6fbb4079e775429ef": "1760000000000000000000",
  "aa1df92e51dff70b1973e0e924c66287b494a178": "534400000000000000000",
  "bd5f46caab2c3d4b289396bbb07f203c4da82530": "80000000000000000000",
  "4d29fc523a2c1629532121da9998e9b5ab9d1b45": "15800000000000000000",
  "addb26317227f45c87a2cb90dc4cfd02fb23caf8": "1000000000000000000000",
  "52e46783329a769301b175009d346768f4c87ee4": "2000000000000000000000",
  "caad9dc20d589ce428d8fda3a9d53a607b7988b5": "4000000000000000000000",
  "95034e1621865137cd4739b346dc17da3a27c34e": "1580000000000000000000",
  "0c3239e2e841242db989a61518c22247e8c55208": "263656000000000000000",
  "5a0d609aae2332b137ab3b2f26615a808f37e433": "160000000000000000000000",
  "2334c590c7a48769103045c5b6534c8a3469f44a": "17443200000000000000000",
  "ddfcca13f934f0cfbe231da13039d70475e6a1d0": "1000169000000000000000",
  "ee7288d91086d9e2eb910014d9ab90a02d78c2a0": "2000000000000000000000",
  "fb91fb1a695553f0c68e21276decf0b83909b86d": "100016000000000000000",
  "38695fc7e1367ceb163ebb053751f9f68ddb07a0": "2000000000000000000000",
  "65093b239bbfba23c7775ca7da5a8648a9f54cf7": "400000000000000000000",
  "73d8fee3cb864dce22bb26ca9c2f086d5e95e63b": "1000000000000000000000",
  "f7155213449892744bc60f2e04400788bd041fdd": "66850000000000000000",
  "d1a71b2d0858e83270085d95a3b1549650035e23": "14900000000000000000000",
  "eac17b81ed5191fb0802aa54337313834107aaa4": "8000000000000000000000",
  "bb076aac92208069ea318a31ff8eeb14b7e996e3": "149000000000000000000",
  "9f46e7c1e9078cae86305ac7060b01467d6685ee": "668500000000000000000",
  "1598127982f2f8ad3b6b8fc3cf27bf617801ba2b": "173000000000000000000",
  "e91dac0195b19e37b59b53f7c017c0b2395ba44c": "1880000000000000000000",
  "a436c75453ccca4a1f1b62e5c4a30d86dde4be68": "2000000000000000000000",
  "11001b89ed873e3aaec1155634b4681643986323": "1000000000000000000000",
  "ab93b26ece0a0aa21365afed1fa9aea31cd54468": "1608000000000000000000",
  "e77febabdf080f0f5dca1d3f5766f2a79c0ffa7c": "1386000000000000000000",
  "1c4af0e863d2656c8635bc6ffec8dd9928908cb5": "2000000000000000000000",
  "0c48ae62d1539788eba013d75ea60b64eeba4e80": "2213311000000000000000",
  "423cc4594cf4abb6368de59fd2b1230734612143": "2000000000000000000000",
  "7f6b28c88421e4857e459281d78461692489d3fb": "2000000000000000000000",
  "806854588ecce541495f81c28a290373df0274b2": "582000000000000000000",
  "dc76e85ba50b9b31ec1e2620bce6e7c8058c0eaf": "20000000000000000000",
  "b00996b0566ecb3e7243b8227988dcb352c21899": "12000000000000000000000",
  "f5d14552b1dce0d6dc1f320da6ffc8a331cd6f0c": "1337000000000000000000",
  "55a61b109480b5b2c4fcfdef92d90584160c0d35": "44700000000000000000",
  "b8947822d5ace7a6ad8326e95496221e0be6b73d": "20000000000000000000",
  "492de46aaf8f1d708d59d79af1d03ad2cb60902f": "2000000000000000000000",
  "0e0d6633db1e0c7f234a6df163a10e0ab39c200f": "200000000000000000000",
  "f8bf9c04874e5a77f38f4c38527e80c676f7b887": "2000000000000000000000",
  "15528350e0d9670a2ea27f7b4a33b9c0f9621d21": "4000086000000000000000",
  "eccf7a0457b566b346ca673a180f444130216ac3": "100000000000000000000",
  "10cf560964ff83c1c9674c783c0f73fcd89943fc": "40000000000000000000000",
  "e7f06f699be31c440b43b4db0501ec0e25261644": "500000000000000000000",
  "b6ce4dc560fc73dc69fb7a62e388db7e72ea764f": "966000000000000000000",
  "f456055a11ab91ff668e2ec922961f2a23e3db25": "18200000000000000000",
  "8dfbafbc0e5b5c86cd1ad697feea04f43188de96": "390060000000000000000",
  "085b4ab75d8362d914435cedee1daa2b1ee1a23b": "3880000000000000000000",
  "e400d651bb3f2d23d5f849e6f92d9c5795c43a8a": "2674000000000000000000",
  "851aa91c82f42fad5dd8e8bb5ea69c8f3a5977d1": "148607000000000000000",
  "4c935bb250778b3c4c7f7e07fc251fa630314aab": "1500000000000000000000",
  "ebd356156a383123343d48843bffed6103e866b3": "1970000000000000000000",
  "da0b48e489d302b4b7bf204f957c1c9be383b0df": "2000000000000000000000",
  "7085ae7e7e4d932197b5c7858c00a3674626b7a5": "6000000000000000000000",
  "5b06d1e6930c1054692b79e3dbe6ecce53966420": "205400000000000000000",
  "8df53d96191471e059de51c718b983e4a51d2afd": "32000000000000000000000",
  "0678654ac6761db904a2f7e8595ec1eaac734308": "878000000000000000000",
  "89fee30d1728d96cecc1dab3da2e771afbcfaa41": "1999944000000000000000",
  "59c5d06b170ee4d26eb0a0eb46cb7d90c1c91019": "10000000000000000000000",
  "2b129c26b75dde127f8320bd0f63410c92a9f876": "2200000000000000000000",
  "3d6ae053fcbc318d6fd0fbc353b8bf542e680d27": "14300000000000000000",
  "755a60bf522fbd8fff9723446b7e343a7068567e": "20000000000000000000000",
  "947e11e5ea290d6fc3b38048979e0cd44ec7c17f": "2000000000000000000000",
  "711ecf77d71b3d0ea95ce4758afecdb9c131079d": "760000000000000000000",
  "de9eff4c798811d968dccb460d9b069cf30278e0": "400000000000000000000",
  "4e892e8081bf36e488fddb3b2630f3f1e8da30d2": "12003800000000000000000",
  "8ede7e3dc50749c6c50e2e28168478c34db81946": "19999800000000000000000",
  "0c30cacc3f72269f8b4f04cf073d2b05a83d9ad1": "2001000000000000000000",
  "e51eb87e7fb7311f5228c479b48ec9878831ac4c": "2000000000000000000000",
  "8b01da34d470c1d115acf4d8113c4dd8a8c338e4": "25220000000000000000000",
  "4329fc0931cbeb033880fe4c9398ca45b0e2d11a": "2000400000000000000000",
  "540c072802014ef0d561345aec481e8e11cb3570": "8000000000000000000000",
  "21e5d2bae995ccfd08a5c16bb524e1f630448f82": "2800000000000000000000",
  "5cf8c03eb3e872e50f7cfd0c2f8d3b3f2cb5183a": "200000000000000000000",
  "5c0f2e51378f6b0d7bab617331580b6e39ad3ca5": "9600000000000000000000",
  "d2f241255dd7c3f73c07043071ec08ddd9c5cde5": "500000000000000000000",
  "cbe1b948864d8474e765145858fca4550f784b92": "10000000000000000000000",
  "30742ccdf4abbcd005681f8159345c9e79054b1a": "668500000000000000000",
  "6aeb9f74742ea491813dbbf0d6fcde1a131d4db3": "440800000000000000000",
  "821eb90994a2fbf94bdc3233910296f76f9bf6e7": "10000000000000000000000",
  "25c1a37ee5f08265a1e10d3d90d5472955f97806": "1820000000000000000000",
  "7ef98b52bee953bef992f305fda027f8911c5851": "514717000000000000000",
  "8adc53ef8c18ed3051785d88e996f3e4b20ecd51": "42000000000000000000000",
  "007f4a23ca00cd043d25c2888c1aa5688f81a344": "773658000000000000000",
  "4a735d224792376d331367c093d31c8794341582": "1900000000000000000000",
  "05440c5b073b529b4829209dff88090e07c4f6f5": "1288000000000000000000",
  "5e772e27f28800c50dda973bb33e10762e6eea20": "1790000000000000000000",
  "a429fa88731fdd350e8ecd6ea54296b6484fe695": "1969606000000000000000",
  "e0d76b7166b1f3a12b4091ee2b29de8caa7d07db": "2000000000000000000000",
  "7ebd95e9c470f7283583dc6e9d2c4dce0bea8f84": "14000000000000000000000",
  "883a78aeabaa50d8ddd8570bcd34265f14b19363": "3879951000000000000000",
  "51f9c432a4e59ac86282d6adab4c2eb8919160eb": "530000000000000000000000",
  "b86607021b62d340cf2652f3f95fd2dc67698bdf": "5000000000000000000000",
  "acc0909fda2ea6b7b7a88db7a0aac868091ddbf6": "22155000000000000000",
  "69b80ed90f84834afa3ff82eb964703b560977d6": "26740000000000000000",
  "ca4ca9e4779d530ecbacd47e6a8058cfde65d98f": "800000000000000000000",
  "5d6c5c720d66a6abca8397142e63d26818eaab54": "40000000000000000000",
  "c2c13e72d268e7150dc799e7c6cf03c88954ced7": "700000000000000000000",
  "6bbd1e719390e6b91043f8b6b9df898ea8001b34": "2000053000000000000000",
  "a9ba6f413b82fcddf3affbbdd09287dcf50415ca": "4000000000000000000000",
  "ced3c7be8de7585140952aeb501dc1f876ecafb0": "4000000000000000000000",
  "1c63fa9e2cbbf23c49fcdef1cbabfe6e0d1e14c1": "1000000000000000000000",
  "7d6e990daa7105de2526339833f77b5c0b85d84f": "20000000000000000000000",
  "68addf019d6b9cab70acb13f0b3117999f062e12": "49941000000000000000",
  "a77428bcb2a0db76fc8ef1e20e461a0a32c5ac15": "401100000000000000000",
  "26048fe84d9b010a62e731627e49bc2eb73f408f": "4000000000000000000000",
  "ff26138330274df4e0a3081e6df7dd983ec6e78f": "2000000000000000000000",
  "b7382d37db0398ac72410cf9813de9f8e1ec8dad": "1000070000000000000000",
  "44f62f2aaabc29ad3a6b04e1ff6f9ce452d1c140": "17000000000000000000000",
  "47fef58584465248a0810d60463ee93e5a6ee8d3": "283100000000000000000",
  "bd2b70fecc37640f69514fc7f3404946aad86b11": "1200000000000000000000",
  "649a85b93653075fa6562c409a565d087ba3e1ba": "2000000000000000000000",
  "55866486ec168f79dbe0e1abb18864d98991ae2c": "16100000000000000000",
  "d7e74afdbad55e96cebc5a374f2c8b768680f2b0": "99000000000000000000",
  "a8c1d6aa41fe3d65f67bd01de2a866ed1ed9ae52": "30000000000000000000",
  "744c0c77ba7f236920d1e434de5da33e48ebf02c": "1970000000000000000000",
  "9445ba5c30e98961b8602461d0385d40fbd80311": "10000000000000000000000",
  "eb835c1a911817878a33d167569ea3cdd387f328": "1000000000000000000000",
  "761a6e362c97fbbd7c5977acba2da74687365f49": "183840000000000000000",
  "38202c5cd7078d4f887673ab07109ad8ada89720": "1000000000000000000000",
  "5abfec25f74cd88437631a7731906932776356f9": "11901484239480000000000000",
  "28e4af30cd93f686a122ad7bb19f8a8785eee342": "2101000000000000000000",
  "3a9b111029ce1f20c9109c7a74eeeef34f4f2eb2": "4000000000000000000000",
  "7bb9571f394b0b1a8eba5664e9d8b5e840677bea": "19700000000000000000",
  "50fb36c27107ee2ca9a3236e2746cca19ace6b49": "2000000000000000000000",
  "a3bc979b7080092fa1f92f6e0fb347e28d995045": "2800000000000000000000",
  "d04b861b3d9acc563a901689941ab1e1861161a2": "20000000000000000000",
  "58c555bc293cdb16c6362ed97ae9550b92ea180e": "20000000000000000000",
  "8bf02bd748690e1fd1c76d270833048b66b25fd3": "11800000000000000000000",
  "fbc01db54e47cdc3c438694ab717a856c23fe6e9": "8456774000000000000000",
  "9c9a07a8e57c3172a919ef64789474490f0d9f51": "10000000000000000000000",
  "fc7e22a503ec5abe9b08c50bd14999f520fa4884": "6387725000000000000000",
  "9b773669e87d76018c090f8255e54409b9dca8b2": "20000000000000000000",
  "ffe8cbc1681e5e9db74a0f93f8ed25897519120f": "1507000000000000000000",
  "4d4cf5807429615e30cdface1e5aae4dad3055e6": "600000000000000000000",
  "cfde0fc75d6f16c443c3038217372d99f5d907f7": "2419000000000000000000",
  "818ffe271fc3973565c303f213f6d2da89897ebd": "5734655000000000000000",
  "ba1fcaf223937ef89e85675503bdb7ca6a928b78": "640000000000000000000",
  "a30a45520e5206d9004070e6af3e7bb2e8dd5313": "400000000000000000000",
  "a747439ad0d393b5a03861d77296326de8bb9db9": "1000000000000000000000",
  "14d00aad39a0a7d19ca05350f7b03727f08dd82e": "500000000000000000000",
  "551999ddd205563327b9b530785acff9bc73a4ba": "6000000000000000000000",
  "a4670731175893bbcff4fa85ce97d94fc51c4ba8": "8000000000000000000000",
  "f858171a04d357a13b4941c16e7e55ddd4941329": "41984000000000000000",
  "a6484cc684c4c91db53eb68a4da45a6a6bda3067": "6000000000000000000000",
  "00d75ed60c774f8b3a5a5173fb1833ad7105a2d9": "2005500000000000000000",
  "bf92418a0c6c31244d220260cb3e867dd7b4ef49": "99800000000000000000",
  "716d50cca01e938500e6421cc070c3507c67d387": "2000000000000000000000",
  "82a8b96b6c9e13ebec1e9f18ac02a60ea88a48ff": "1999998000000000000000",
  "5a565285374a49eedd504c957d510874d00455bc": "100000000000000000000",
  "778c79f4de1953ebce98fe8006d53a81fb514012": "999800000000000000000",
  "41b2d34fde0b1029262b4172c81c1590405b03ae": "1000000000000000000000",
  "4039bd50a2bde15ffe37191f410390962a2b8886": "200000000000000000000",
  "c033be10cb48613bd5ebcb33ed4902f38b583003": "3000000000000000000000",
  "5d5751819b4f3d26ed0c1ac571552735271dbefa": "1000000000000000000000",
  "b600429752f399c80d0734744bae0a022eca67c6": "20000000000000000000",
  "f875619d8a23e45d8998d184d480c0748970822a": "4000000000000000000000",
  "71c7230a1d35bdd6819ed4b9a88e94a0eb0786dd": "4365000000000000000000",
  "b2f9c972c1e9737755b3ff1b3088738396395b26": "20000000000000000000000",
  "a66a4963b27f1ee1932b172be5964e0d3ae54b51": "173000000000000000000",
  "53ce88e66c5af2f29bbd8f592a56a3d15f206c32": "140840000000000000000",
  "433e3ba1c51b810fc467d5ba4dea42f7a9885e69": "40000000000000000000000",
  "c7837ad0a0bf14186937ace06c5546a36aa54f46": "4000000000000000000000",
  "c3f8f67295a5cd049364d05d23502623a3e52e84": "6000000000000000000000",
  "3fd0bb47798cf44cdfbe4d333de637df4a00e45c": "100040000000000000000",
  "a1ae8d4540d4db6fdde7146f415b431eb55c7983": "197000000000000000000",
  "5cccf1508bfd35c20530aa642500c10dee65eaed": "850000000000000000000",
  "a53ead54f7850af21438cbe07af686279a315b86": "10000000000000000000000",
  "8cf6da0204dbc4860b46ad973fc111008d9e0c46": "200000000000000000000",
  "8e7936d592008fdc7aa04edeeb755ab513dbb89d": "20000000000000000000",
  "4a53dcdb56ce4cdce9f82ec0eb13d67352e7c88b": "4200000000000000000000",
  "2b4f4507bb6b9817942ce433781b708fbcd166fd": "18200000000000000000",
  "026432af37dc5113f1f46d480a4de0b28052237e": "355800000000000000000",
  "e780a56306ba1e6bb331952c22539b858af9f77d": "50000000000000000000000",
  "d1f1694d22671b5aad6a94995c369fbe6133676f": "1000000000000000000000",
  "7c45f0f8442a56dbd39dbf159995415c52ed479b": "2000000000000000000000",
  "b65941d44c50d24666670d364766e991c02e11c2": "600000000000000000000",
  "45e68db8dbbaba5fc2cb337c62bcd0d61b059189": "2000000000000000000000",
  "05f3631f5664bdad5d0132c8388d36d7d8920918": "20000000000000000000",
  "5475d7f174bdb1f789017c7c1705989646079d49": "9400000000000000000000",
  "c7bf2ed1ed312940ee6aded1516e268e4a604856": "6000000000000000000000",
  "39aaf0854db6eb39bc7b2e43846a76171c0445de": "1850000000000000000000",
  "c817df1b91faf30fe3251571727c9711b45d8f06": "1999944000000000000000",
  "7d13d6705884ab2157dd8dcc7046caf58ee94be4": "137200000000000000000000",
  "478dc09a1311377c093f9cc8ae74111f65f82f39": "4000000000000000000000",
  "8043ed22f997e5a2a4c16e364486ae64975692c4": "1130513000000000000000",
  "b9a985501ee950829b17fae1c9cf348c3156542c": "294100000000000000000",
  "d5cba5b26bea5d73fabb1abafacdef85def368cc": "200000000000000000000",
  "6776e133d9dc354c12a951087b639650f539a433": "120000000000000000000",
  "804ca94972634f633a51f3560b1d06c0b293b3b1": "200000000000000000000",
  "0be1fdf626ee6189102d70d13b31012c95cd1cd6": "2000000000000000000000",
  "f848fce9ab611c7d99206e23fac69ad488b94fe1": "48500000000000000000",
  "f01195d657ef3c942e6cb83949e5a20b5cfa8b1e": "25760000000000000000000",
  "78a5e89900bd3f81dd71ba869d25fec65261df15": "51900000000000000000000",
  "d6f1e55b1694089ebcb4fe7d7882aa66c8976176": "19998846000000000000000",
  "d5294b666242303b6df0b1c88d37429bc8c965aa": "300700000000000000000",
  "3171877e9d820cc618fc0919b29efd333fda4934": "1000000000000000000000",
  "2901f8077f34190bb47a8e227fa29b30ce113b31": "100000000000000000000",
  "6b2284440221ce16a8382de5ff0229472269deec": "1000000000000000000000",
  "1bba03ff6b4ad5bf18184acb21b188a399e9eb4a": "1790000000000000000000",
  "80744618de396a543197ee4894abd06398dd7c27": "2000000000000000000000",
  "1b799033ef6dc7127822f74542bb22dbfc09a308": "100000000000000000000",
  "d513a45080ff2febe62cd5854abe29ee4467f996": "153200000000000000000",
  "e761d27fa3502cc76bb1a608740e1403cf9dfc69": "280000000000000000000",
  "53989ed330563fd57dfec9bd343c3760b0799390": "6208000000000000000000",
  "ccf7110d1bd9a74bfd1d7d7d2d9d55607e7b837d": "900000000000000000000",
  "f373e9daac0c8675f53b797a160f6fc034ae6b23": "100000000000000000000",
  "abc9a99e8a2148a55a6d82bd51b98eb5391fdbaf": "6000000000000000000000",
  "ffec0913c635baca2f5e57a37aa9fb7b6c9b6e26": "805000000000000000000",
  "581a3af297efa4436a29af0072929abf9826f58b": "2000000000000000000000",
  "924efa6db595b79313277e88319625076b580a10": "2000000000000000000000",
  "65d8dd4e251cbc021f05b010f2d5dc520c3872e0": "834956000000000000000",
  "6c67d6db1d03516c128b8ff234bf3d49b26d2941": "100000000000000000000000",
  "496d365534530a5fc1577c0a5241cb88c4da7072": "1790000000000000000000",
  "b85ff03e7b5fc422981fae5e9941dacbdaba7584": "1337000000000000000000",
  "e13540ecee11b212e8b775dc8e71f374aae9b3f8": "2000000000000000000000",
  "a02e3f8f5959a7aab7418612129b701ca1b80010": "20000000000000000000",
  "a7a3f153cdc38821c20c5d8c8241b294a3f82b24": "500000000000000000000",
  "366175403481e0ab15bb514615cbb989ebc68f82": "2000000000000000000000",
  "5104ecc0e330dd1f81b58ac9dbb1a9fbf88a3c85": "100000000000000000000000",
  "a466d770d898d8c9d405e4a0e551efafcde53cf9": "492500000000000000000",
  "5fa8a54e68176c4fe2c01cf671c515bfbdd528a8": "330000000000000000000000",
  "e2e15c60dd381e3a4be25071ab249a4c5c5264da": "2350502000000000000000",
  "0628bfbe5535782fb588406bc96660a49b011af5": "1520000000000000000000",
  "04d6b8d4da867407bb997749debbcdc0b358538a": "1000000000000000000000",
  "0e6ec313376271dff55423ab5422cc3a8b06b22b": "4000000000000000000000",
  "8787d12677a5ec291e57e31ffbfad105c3324b87": "12438777000000000000000",
  "58e2f11223fc8237f69d99c6289c148c0604f742": "24000000000000000000000",
  "5600730a55f6b20ebd24811faa3de96d1662abab": "1880000000000000000000",
  "fce089635ce97abac06b44819be5bb0a3e2e0b37": "92491000000000000000",
  "fa0c1a988c8a17ad3528eb28b3409daa58225f26": "200000000000000000000",
  "7ae1c19e53c71cee4c73fae2d7fc73bf9ab5e392": "1000000000000000000000",
  "bd17eed82b9a2592019a1b1b3c0fbad45c408d22": "250000000000000000000",
  "884a7a39d0916e05f1c242df55607f37df8c5fda": "23400000000000000000000",
  "ca70f4ddbf069d2143bd6bbc7f696b52789b32e7": "3000000000000000000000",
  "7b25bb9ca8e702217e9333225250e53c36804d48": "1880000000000000000000",
  "ea8317197959424041d9d7c67a3ece1dbb78bb55": "394000000000000000000",
  "5cb953a0e42f5030812226217fffc3ce230457e4": "100000000000000000000",
  "d1f4dc1ddb8abb8848a8b14e25f3b55a8591c266": "250000000000000000000",
  "6a42ca971c6578d5ade295c3e7f4ad331dd3424e": "6000000000000000000000",
  "07e1162ceae3cf21a3f62d105990302e307f4e3b": "1530000000000000000000",
  "5d1dc3387b47b8451e55106c0cc67d6dc72b7f0b": "2000000000000000000000",
  "5d2819e8d57821922ee445650ccaec7d40544a8d": "200000000000000000000",
  "4c24b78baf2bafc7fcc69016426be973e20a50b2": "3000000000000000000000",
  "630c5273126d517ce67101811cab16b8534cf9a8": "9422595000000000000000",
  "291f929ca59b54f8443e3d4d75d95dee243cef78": "499938000000000000000",
  "2dd325fdffb97b19995284afa5abdb574a1df16a": "500000000000000000000",
  "4fce8429ba49caa0369d1e494db57e89eab2ad39": "200000000000000000000000",
  "712b76510214dc620f6c3a1dd29aa22bf6d214fb": "6000000000000000000000",
  "266f2da7f0085ef3f3fa09baee232b93c744db2e": "60000000000000000000000",
  "0770c61be78772230cb5a3bb2429a72614a0b336": "6767695000000000000000",
  "02dfcb17a1b87441036374b762a5d3418b1cb4d4": "1340860000000000000000",
  "5e67df8969101adabd91accd6bb1991274af8df2": "500000000000000000000",
  "7d9c59631e2ba2e8e82891f3979922aaa3b567a1": "8000000000000000000000",
  "949f8c107bc7f0aceaa0f17052aadbd2f9732b2e": "2000000000000000000000",
  "ea4e809e266ae5f13cdbe38f9d0456e6386d1274": "4500000000000000000000",
  "cd5510a242dfb0183de925fba866e312fabc1657": "2400000000000000000000",
  "a36e0d94b95364a82671b608cb2d373245612909": "150011000000000000000",
  "0ec46696ffac1f58005fa8439824f08eed1df89b": "10000000000000000000000",
  "c6fb1ee37417d080a0d048923bdabab095d077c6": "200000000000000000000",
  "53c9eca40973f63bb5927be0bc6a8a8be1951f74": "2000000000000000000000",
  "ea14bfda0a6e76668f8788321f07df37824ec5df": "200000000000000000000000",
  "dfb4d4ade52fcc818acc7a2c6bb2b00224658f78": "7750000000000000000000",
  "5997ffefb3c1d9d10f1ae2ac8ac3c8e2d2292783": "1000000000000000000000",
  "8eceb2e124536c5b5ffc640ed14ff15ed9a8cb71": "2000000000000000000000",
  "8f02bda6c36922a6be6a509be51906d393f7b99b": "1019835000000000000000",
  "530077c9f7b907ff9cec0c77a41a70e9029add4a": "2000000000000000000000",
  "08936a37df85b3a158cafd9de021f58137681347": "18200000000000000000",
  "8e9c429266df057efa78dd1d5f77fc40742ad466": "300061000000000000000",
  "acc59f3b30ceffc56461cc5b8df48902240e0e7b": "2000000000000000000000",
  "f5534815dc635efa5cc84b2ac734723e21b29372": "1580000000000000000000",
  "f873e57a65c93b6e18cb75f0dc077d5b8933dc5c": "197000000000000000000",
  "25b78c9fad85b43343f0bfcd0fac11c9949ca5eb": "2000000000000000000000",
  "aad2b7f8106695078e6c138ec81a7486aaca1eb2": "200000000000000000000",
  "509c8668036d143fb8ae70b11995631f3dfcad87": "1000000000000000000000",
  "3602458da86f6d6a9d9eb03daf97fe5619d442fa": "2000000000000000000000",
  "9f607b3f12469f446121cebf3475356b71b4328c": "4000000000000000000000",
  "fe3827d57630cf8761d512797b0b858e478bbd12": "20000000000000000000",
  "9d9c4efe9f433989e23be94049215329fa55b4cb": "256215000000000000000",
  "9bd905f1719fc7acd0159d4dc1f8db2f21472338": "1000000000000000000000",
  "7d82e523cc2dc591da3954e8b6bb2caf6461e69c": "2316058000000000000000",
  "74afe54902d615782576f8baac13ac970c050f6e": "177670000000000000000",
  "aff11ccf699304d5f5862af86083451c26e79ae5": "1999000000000000000000",
  "3885fee67107dc3a3c741ee290c98918c9b99397": "20000000000000000000",
  "36343aeca07b6ed58a0e62fa4ecb498a124fc971": "300000000000000000000",
  "c94a28fb3230a9ddfa964e770f2ce3c253a7be4f": "200000000000000000000",
  "9882967cee68d2a839fad8ab4a7c3dddf6c0adc8": "1336866000000000000000",
  "95df4e3445d7662624c48eba74cf9e0a53e9f732": "56000000000000000000000",
  "ca9faa17542fafbb388eab21bc4c94e8a7b34788": "1999999000000000000000",
  "c8b1850525d946f2ae84f317b15188c536a5dc86": "2685000000000000000000",
  "39bac68d947859f59e9226089c96d62e9fbe3cde": "40000000000000000000",
  "a9bfc410dddb20711e45c07387eab30a054e19ac": "1154750000000000000000",
  "540a1819bd7c35861e791804e5fbb3bc97c9abb1": "1454400000000000000000",
  "667b61c03bb937a9f5d0fc5a09f1ea3363c77035": "4250000000000000000000",
  "010df1df4bed23760d2d1c03781586ddf7918e54": "60000000000000000000",
  "bd51ee2ea143d7b1d6b77e7e44bdd7da12f485ac": "1318800000000000000000",
  "fb5125bf0f5eb0b6f020e56bfc2fdf3d402c097e": "5910000000000000000000",
  "3f0c83aac5717962734e5ceaeaecd39b28ad06be": "2000000000000000000000",
  "f10661ff94140f203e7a482572437938bec9c3f7": "20000000000000000000000",
  "bd3097a79b3c0d2ebff0e6e86ab0edadbed47096": "1670000000000000000000",
  "edeb4894aadd0081bbddd3e8846804b583d19f27": "2000000000000000000000",
  "49c9771fca19d5b9d245c891f8158fe49f47a062": "10000000000000000000000",
  "6405dd13e93abcff377e700e3c1a0086eca27d29": "18200000000000000000",
  "ce5e04f0184369bcfa06aca66ffa91bf59fa0fb9": "40000000000000000000",
  "4364309a9fa07095600f79edc65120cdcd23dc64": "10000000000000000000000",
  "b749b54e04d5b19bdcedfb84da7701ab478c27ae": "2680000000000000000000",
  "f593c65285ee6bbd6637f3be8f89ad40d489f655": "3000000000000000000000",
  "d224f880f9479a89d32f09e52be990b288135cef": "17300000000000000000000",
  "85bb51bc3bfe9a1b2a2f6b1cda95bca8b38c8d5e": "321750000000000000000",
  "caf4481d9db78dc4f25f7b4ac8bd3b1ca0106b31": "5000000000000000000000",
  "51ca8bd4dc644fac47af675563d5804a0da21eeb": "788000000000000000000",
  "19f643e1a8fa04ae16006028138333a59a96de87": "20000000000000000000",
  "58b808a65b51e6338969afb95ec70735e451d526": "39998000000000000000000",
  "574921838cc77d6c98b17d903a3ae0ee0da95bd0": "53480000000000000000000",
  "7c6924d07c3ef5891966fe0a7856c87bef9d2034": "2000000000000000000000",
  "f9767e4ecb4a5980527508d7bec3d45e4c649c13": "1910000000000000000000",
  "f3be99b9103ce7550aa74ff1db18e09dfe32e005": "2000000000000000000000",
  "625644c95a873ef8c06cdb9e9f6d8d7680043d62": "1800000000000000000000",
  "6a44af96b3f032ae641beb67f4b6c83342d37c5d": "29000000000000000000",
  "d3a10ec7a5c9324999dd9e9b6bde7c911e584bda": "600000000000000000000",
  "e8ddbed732ebfe754096fde9086b8ea4a4cdc616": "2000000000000000000000",
  "235fa66c025ef5540070ebcf0d372d8177c467ab": "33400000000000000000000",
  "4d08471d68007aff2ae279bc5e3fe4156fbbe3de": "40000000000000000000000",
  "dadc00ab7927603c2fcf31cee352f80e6c4d6351": "1999664000000000000000",
  "7393cbe7f9ba2165e5a7553500b6e75da3c33abf": "100000000000000000000",
  "77617ebc4bebc5f5ddeb1b7a70cdeb6ae2ffa024": "1970000000000000000000",
  "7fea1962e35d62059768c749bedd96cab930d378": "2000000000000000000000",
  "243b3bca6a299359e886ce33a30341fafe4d573d": "20000000000000000000000",
  "b94d47b3c052a5e50e4261ae06a20f45d8eee297": "2000000000000000000000",
  "e727e67ef911b81f6cf9c73fcbfebc2b02b5bfc6": "2000000000000000000000",
  "e510d6797fba3d6693835a844ea2ad540691971b": "17381000000000000000000",
  "0cdc960b998c141998160dc179b36c15d28470ed": "500038000000000000000",
  "3e76a62db187aa74f63817533b306cead0e8cebe": "31200000000000000000000",
  "495b641b1cdea362c3b4cbbd0f5cc50b1e176b9c": "1000000000000000000000",
  "5126460d692c71c9af6f05574d93998368a23799": "52000000000000000000",
  "a008019863c1a77c1499eb39bbd7bf2dd7a31cb9": "137000000000000000000",
  "65ee20b06d9ad589a7e7ce04b9f5f795f402aece": "2000000000000000000000",
  "f432b9dbaf11bdbd73b6519fc0a904198771aac6": "152000000000000000000",
  "85946d56a4d371a93368539690b60ec825107454": "1730000000000000000000",
  "26f9f7cefd7e394b9d3924412bf2c2831faf1f85": "4000000000000000000000",
  "d4ebb1929a23871cf77fe049ab9602be08be0a73": "1910000000000000000000",
  "4fdac1aa517007e0089430b3316a1badd12c01c7": "500000000000000000000",
  "05e671de55afec964b074de574d5158d5d21b0a3": "3940000000000000000000",
  "20181c4b41f6f972b66958215f19f570c15ddff1": "1600000000000000000000",
  "cc9519d1f3985f6b255eaded12d5624a972721e1": "1000000000000000000000",
  "169bbefc41cfd7d7cbb8dfc63020e9fb06d49546": "2000000000000000000000",
  "175a183a3a235ffbb03ba835675267229417a091": "16000000000000000000000",
  "8dde3cb8118568ef4503fe998ccdf536bf19a098": "4000000000000000000000",
  "6a05b21c4f17f9d73f5fb2b0cb89ff5356a6cc7e": "1500000000000000000000",
  "5cc4cba621f220637742057f6055b80dffd77e13": "39997692000000000000000",
  "ecb94c568bfe59ade650645f4f26306c736cace4": "267400000000000000000",
  "dfa6b8b8ad3184e357da282951d79161cfb089bc": "400000000000000000000",
  "a3058c51737a4e96c55f2ef6bd7bb358167ec2a7": "606093000000000000000",
  "051d424276b21239665186133d653bb8b1862f89": "1000000000000000000000",
  "d05ffb2b74f867204fe531653b0248e21c13544e": "1000000000000000000000",
  "e1f63ebbc62c7b7444040eb99623964f7667b376": "20000000000000000000",
  "e5a3d7eb13b15c100177236d1beb30d17ee15420": "2000000000000000000000",
  "18fa8625c9dc843c78c7ab259ff87c9599e07f10": "1000000000000000000000",
  "64264aedd52dcae918a012fbcd0c030ee6f71821": "1000000000000000000000",
  "6f1f4907b8f61f0c51568d692806b382f50324f5": "2000000000000000000000",
  "becef61c1c442bef7ce04b73adb249a8ba047e00": "1000400000000000000000",
  "7b893286427e72db219a21fc4dcd5fbf59283c31": "10000000000000000000000",
  "ce5eb63a7bf4fbc2f6e4baa0c68ab1cb4cf98fb4": "2000000000000000000000",
  "66ec16ee9caab411c55a6629e318de6ee216491d": "865000000000000000000",
  "30b66150f1a63457023fdd45d0cc6cb54e0c0f06": "1000000000000000000000",
  "87183160d172d2e084d327b86bcb7c1d8e6784ef": "4000086000000000000000",
  "c420388fbee84ad656dd68cdc1fbaa9392780b34": "187767000000000000000",
  "90f774c9147dde90853ddc43f08f16d455178b8c": "4000000000000000000000",
  "1e1d7a5f2468b94ea826982dbf2125793c6e4a5a": "999940000000000000000",
  "8043fdd0bc4c973d1663d55fc135508ec5d4f4fa": "20000000000000000000",
  "7bca1da6c80a66baa5db5ac98541c4be276b447d": "679000000000000000000",
  "73550beb732ba9ddafda7ae406e18f7feb0f8bb2": "2800000000000000000000",
  "adc19ec835afe3e58d87dc93a8a9213c90451326": "1971200000000000000000",
  "821d798af19989c3ae5b84a7a7283cd7fda1fabe": "20000000000000000000000",
  "4c4e6f13fb5e3f70c3760262a03e317982691d10": "100000000000000000000",
  "664e43119870af107a448db1278b044838ffcdaf": "400000000000000000000",
  "8da1178f55d97772bb1d24111a404a4f8715b95d": "878149000000000000000",
  "5e6e9747e162f8b45c656e0f6cae7a84bac80e4e": "2000000000000000000000",
  "c7eac31abce6d5f1dea42202b6a674153db47a29": "591000000000000000000",
  "d96711540e2e998343d4f590b6fc8fac3bb8b31d": "1758944000000000000000",
  "9da4ec407077f4b9707b2d9d2ede5ea5282bf1df": "4000000000000000000000",
  "f60c1b45f164b9580e20275a5c39e1d71e35f891": "2000000000000000000000",
  "eb6394a7bfa4d28911d5a5b23e93f35e340c2294": "78000000000000000000",
  "a89ac93b23370472daac337e9afdf642543f3e57": "10000000000000000000000",
  "bb618e25221ad9a740b299ed1406bc3934b0b16d": "1000000000000000000000",
  "817ac33bd8f847567372951f4a10d7a91ce3f430": "200015000000000000000",
  "fe6a895b795cb4bf85903d3ce09c5aa43953d3bf": "3400000000000000000000",
  "3673954399f6dfbe671818259bb278e2e92ee315": "200000000000000000000000",
  "df0ff1f3d27a8ec9fb8f6b0cb254a63bba8224a5": "4367636000000000000000",
  "ff12e49d8e06aa20f886293c0b98ed7eff788805": "4000000000000000000000",
  "5aef16a226dd68071f2483e1da42598319f69b2c": "2000000000000000000000",
  "0266ab1c6b0216230b9395443d5fa75e684568c6": "1000000000000000000000",
  "14a7352066364404db50f0d0d78d754a22198ef4": "1880000000000000000000",
  "444caf79b71338ee9aa7c733b02acaa7dc025948": "40000000000000000000",
  "64e2de21200b1899c3a0c0653b5040136d0dc842": "20000000000000000000000",
  "36e156610cd8ff64e780d89d0054385ca76755aa": "14000000000000000000000",
  "0a6ebe723b6ed1f9a86a69ddda68dc47465c2b1b": "1185000000000000000000",
  "38bf2a1f7a69de0e2546adb808b36335645da9ff": "2000320000000000000000",
  "39f44663d92561091b82a70dcf593d754005973a": "199999000000000000000",
  "24b9e6644f6ba4cde126270d81f6ab60f286dff4": "133700000000000000000",
  "9b59eb213b1e7565e45047e04ea0374f10762d16": "2000000000000000000000",
  "309544b6232c3dd737f945a03193d19b5f3f65b9": "1087440000000000000000",
  "b28bb39f3466517cd46f979cf59653ee7d8f152e": "450000000000000000000",
  "9da8e22ca10e67fea44e525e4751eeac36a31194": "260000000000000000000",
  "4f8ae80238e60008557075ab6afe0a7f2e74d729": "100000000000000000000",
  "74ed33acf43f35b98c9230b9e6642ecb5330839e": "681872000000000000000",
  "22842ab830da509913f81dd1f04f10af9edd1c55": "2000000000000000000000",
  "a8f37f0ab3a1d448a9e3ce40965f97a646083a34": "329800000000000000000",
  "582b70669c97aab7d68148d8d4e90411e2810d56": "999972000000000000000",
  "d5e55100fbd1956bbed2ca518d4b1fa376032b0b": "100000000000000000000",
  "b7cc6b1acc32d8b295df68ed9d5e60b8f64cb67b": "300000000000000000000",
  "e081ca1f4882db6043d5a9190703fde0ab3bf56d": "400000000000000000000",
  "c02077449a134a7ad1ef7e4d927affeceeadb5ae": "18200000000000000000",
  "e09fea755aee1a44c0a89f03b5deb762ba33006f": "1100070000000000000000",
  "b3717731dad65132da792d876030e46ac227bb8a": "1000000000000000000000",
  "157eb3d3113bd3b597714d3a954edd018982a5cb": "2000000000000000000000",
  "dc57345b38e0f067c9a31d9deac5275a10949321": "200000000000000000000",
  "40ea5044b204b23076b1a5803bf1d30c0f88871a": "14000000000000000000000",
  "2bab0fbe28d58420b52036770a12f9952aea6911": "3820000000000000000000",
  "adaa0e548c035affed64ca678a963fabe9a26bfd": "70000000000000000000",
  "bb48eaf516ce2dec3e41feb4c679e4957641164f": "3820000000000000000000",
  "7693bdeb6fc82b5bca721355223175d47a084b4d": "22000000000000000000000",
  "03cb98d7acd817de9d886d22fab3f1b57d92a608": "1600000000000000000000",
  "f88900db737955b1519b1a7d170a18864ce590eb": "18200000000000000000",
  "757fa55446c460968bb74b5ebca96c4ef2c709c5": "1015200000000000000000",
  "da855d53477f505ec4c8d5e8bb9180d38681119c": "5600000000000000000000",
  "e41aea250b877d423a63ba2bce2f3a61c0248d56": "260000000000000000000",
  "8262169b615870134eb4ac6c5f471c6bf2f789fc": "462500000000000000000",
  "66b0c100c49149935d14c0dc202cce907cea1a3d": "1970000000000000000000",
  "854c0c469c246b83b5d1b3eca443b39af5ee128a": "1600000000000000000000",
  "eb6810691d1ae0d19e47bd22cebee0b3ba27f88a": "2499922000000000000000",
  "24dcc24bd9c7210ceacfb30da98ae04a4d7b8ab9": "1000000000000000000000",
  "e31b4eef184c24ab098e36c802714bd4743dd0d4": "200000000000000000000",
  "99b8c824869de9ed24f3bff6854cb6dd45cc3f9f": "1880000000000000000000",
  "2ae73a79aea0278533accf21070922b1613f8f32": "3097417000000000000000",
  "ddbd2b932c763ba5b1b7ae3b362eac3e8d40121a": "10000000000000000000000",
  "1b4bbcb18165211b265b280716cb3f1f212176e8": "472325000000000000000",
  "e177e0c201d335ba3956929c571588b51c5223ae": "2000000000000000000000",
  "1945fe377fe6d4b71e3e791f6f17db243c9b8b0f": "2185500000000000000000",
  "3e9b34a57f3375ae59c0a75e19c4b641228d9700": "17900000000000000000",
  "a4d6c82eddae5947fbe9cdfbd548ae33d91a7191": "8000000000000000000000",
  "bad4425e171c3e72975eb46ac0a015db315a5d8f": "2000000000000000000000",
  "a2d2aa626b09d6d4e4b13f7ffc5a88bd7ad36742": "4639390000000000000000",
  "b61c34fcacda701a5aa8702459deb0e4ae838df8": "35000000000000000000000",
  "145e0600e2a927b2dd8d379356b45a2e7d51d3ae": "2545843000000000000000",
  "8df339214b6ad1b24663ce716034749d6ef838d9": "11000000000000000000000",
  "8fd9a5c33a7d9edce0997bdf77ab306424a11ea9": "2000000000000000000000",
  "097da12cfc1f7c1a2464def08c29bed5e2f851e9": "20000000000000000000",
  "ddabf13c3c8ea4e3d73d78ec717afafa430e5479": "41600000000000000000000",
  "9eeb07bd2b7890195e7d46bdf2071b6617514ddb": "2000000000000000000000",
  "819af9a1c27332b1c369bbda1b3de1c6e933d640": "314308000000000000000",
  "d7d2c6fca8ad1f75395210b57de5dfd673933909": "340000000000000000000",
  "cdd5d881a7362c9070073bdfbc75e72453ac510e": "842000000000000000000",
  "e9ac36376efa06109d40726307dd1a57e213eaa9": "194000000000000000000",
  "1bea4df5122fafdeb3607eddda1ea4ffdb9abf2a": "346000000000000000000",
  "3e5e93fb4c9c9d1246f8f247358e22c3c5d17b6a": "150000000000000000000",
  "6c1ddd33c81966dc8621776071a4129482f2c65f": "40000000000000000000000",
  "2ccb66494d0af689abf9483d365d782444e7dead": "1000000000000000000000",
  "19571a2b8f81c6bcf66ab3a10083295617150003": "492500000000000000000",
  "38ac664ee8e0795e4275cb852bcba6a479ad9c8d": "20000000000000000000",
  "c4803bb407c762f90b7596e6fde194931e769590": "4000000000000000000000",
  "93507e9e8119cbceda8ab087e7ecb071383d6981": "14000000000000000000000",
  "b672734afcc224e2e609fc51d4f059732744c948": "295500000000000000000",
  "fbbbebcfbe235e57dd2306ad1a9ec581c7f9f48f": "40000000000000000000",
  "8c81410ea8354cc5c65c41be8bd5de733c0b111d": "9550000000000000000000",
  "942c6b8c955bc0d88812678a236725b32739d947": "1550000000000000000000",
  "d2e817738abf1fb486583f80c350318bed860c80": "240010000000000000000",
  "bff5df769934b8943ca9137d0efef2fe6ebbb34e": "100000000000000000000",
  "6c4e426e8dc005dfa3516cb8a680b02eea95ae8e": "1337000000000000000000",
  "f645dd7c890093e8e4c8aa92a6bb353522d3dc98": "134000000000000000000",
  "4bac846af4169f1d95431b341d8800b22180af1a": "20000000000000000000",
  "0514954c3c2fb657f9a06f510ea22748f027cdd3": "400000000000000000000",
  "163dca73d7d6ea3f3e6062322a8734180c0b78ef": "2941400000000000000000",
  "feaca2ac74624bf348dac9985143cfd652a4be55": "26148245000000000000000",
  "fe80e9232deaff19baf99869883a4bdf0004e53c": "855680000000000000000",
  "17108dab2c50f99de110e1b3b3b4cd82f5df28e7": "980000000000000000000",
  "837a645dc95c49549f899c4e8bcf875324b2f57c": "600400000000000000000",
  "762998e1d75227fced7a70be109a4c0b4ed86414": "20000000000000000000",
  "c0a7e8435dff14c25577739db55c24d5bf57a3d9": "49250000000000000000000",
  "aead88d689416b1c91f2364421375b7d3c70fb2e": "2000000000000000000000",
  "9279b2228cec8f7b4dda3f320e9a0466c2f585ca": "5000000000000000000000",
  "36726f3b885a24f92996da81625ec8ad16d8cbe6": "1543723000000000000000",
  "3951e48e3c869e6b72a143b6a45068cdb9d466d0": "20000000000000000000",
  "f5d61ac4ca95475e5b7bffd5f2f690b316759615": "31040000000000000000000",
  "158a0d619253bf4432b5cd02c7b862f7c2b75636": "135733000000000000000",
  "e56d431324c92911a1749df292709c14b77a65cd": "8200000000000000000000",
  "9976947eff5f6ae5da08dd541192f378b428ff94": "8000000000000000000000",
  "83210583c16a4e1e1dac84ebd37e3d0f7c57eba4": "2000000000000000000000",
  "dcb64df43758c7cf974fa660484fbb718f8c67c1": "20000000000000000000000",
  "d4205592844055b3c7a1f80cefe3b8eb509bcde7": "178973000000000000000",
  "d0648a581b3508e135a2935d12c9657045d871ca": "8022000000000000000000",
  "e7d17524d00bad82497c0f27156a647ff51d2792": "20000000000000000000",
  "21582e99e502cbf3d3c23bdffb76e901ac6d56b2": "100000000000000000000",
  "e61f280915c774a31d223cf80c069266e5adf19b": "880000000000000000000",
  "03c91d92943603e752203e05340e566013b90045": "802200000000000000000",
  "22561c5931143536309c17e832587b625c390b9a": "4000000000000000000000",
  "e399c81a1d701b44f0b66f3399e66b275aaaf8c1": "1000000000000000000000",
  "7f8dbce180ed9c563635aad2d97b4cbc428906d9": "2674000000000000000000",
  "9f61beb46f5e853d0a8521c7446e68e34c7d0973": "560000000000000000000",
  "6d3f2ba856ccbb0237fa7661156b14b013f21240": "1000000000000000000000",
  "5f742e487e3ab81af2f94afdbe1b9b8f5ccc81bc": "2172412000000000000000",
  "b600feab4aa96c537504d96057223141692c193a": "400000000000000000000",
  "fab487500df20fb83ebed916791d561772adbebf": "1999980000000000000000",
  "f8704c16d2fd5ba3a2c01d0eb20484e6ecfa3109": "200000000000000000000",
  "3f1bc420c53c002c9e90037c44fe6a8ef4ddc962": "173000000000000000000",
  "82e577b515cb2b0860aafe1ce09a59e09fe7d040": "600000000000000000000",
  "bc999e385c5aebcac8d6f3f0d60d5aa725336d0d": "2000000000000000000000",
  "e16ce35961cd74bd590d04c4ad4a1989e05691c6": "146000000000000000000",
  "eb76424c0fd597d3e341a9642ad1ee118b2b579d": "4000000000000000000000",
  "c440c7ca2f964b6972ef664a2261dde892619d9c": "20000000000000000000000",
  "460d5355b2ceeb6e62107d81e51270b26bf45620": "2005500000000000000000",
  "fcada300283f6bcc134a91456760b0d77de410e0": "2000000000000000000000",
  "be8d7f18adfe5d6cc775394989e1930c979d007d": "1000000000000000000000",
  "a7f9220c8047826bd5d5183f4e676a6d77bfed36": "153368000000000000000",
  "98d204f9085f8c8e7de23e589b64c6eff692cc63": "2000000000000000000000",
  "5a2916b8d2e8cc12e207ab464d433e2370d823d9": "2000000000000000000000",
  "c42d6aeb710e3a50bfb44d6c31092969a11aa7f3": "150052000000000000000",
  "04ce45f600db18a9d0851b29d9393ebdaafe3dc5": "20000000000000000000",
  "7a1370a742ec2687e761a19ac5a794329ee67404": "2999988000000000000000",
  "da2ad58e77deddede2187646c465945a8dc3f641": "660000000000000000000",
  "ec58bc0d0c20d8f49465664153c5c196fe59e6be": "400000000000000000000",
  "f8063af4cc1dd9619ab5d8bff3fcd1faa8488221": "2000000000000000000000",
  "b9231eb26e5f9e4b4d288f03906704fab96c87d6": "19700000000000000000000",
  "6e5c2d9b1c546a86eefd5d0a5120c9e4e730190e": "199600000000000000000",
  "e49936a92a8ccf710eaac342bc454b9b14ebecb1": "2000000000000000000000",
  "21dbdb817a0d8404c6bdd61504374e9c43c9210e": "9999917000000000000000",
  "5cebe30b2a95f4aefda665651dc0cf7ef5758199": "18200000000000000000",
  "597038ff91a0900cbbab488af483c790e6ec00a0": "10000000000000000000000",
  "0fa5d8c5b3f294efd495ab69d768f81872508548": "2000000000000000000000",
  "feef3b6eabc94affd3310c1c4d0e65375e131119": "20000000000000000000",
  "1ce81d31a7923022e125bf48a3e03693b98dc9dd": "2000000000000000000000",
  "5887dc6a33dfed5ac1edefe35ef91a216231ac96": "250000000000000000000",
  "4e8e47ae3b1ef50c9d54a38e14208c1abd3603c2": "2235000000000000000000",
  "e845e387c4cbdf982280f6aa01c40e4be958ddb2": "25000000000000000000000",
  "71d9494e50c5dd59c599dba3810ba1755e6537f0": "4000000000000000000000",
  "6eb5578a6bb7c32153195b0d8020a6914852c059": "660000000000000000000000",
  "543f8c674e2462d8d5daa0e80195a8708e11a29e": "63940000000000000000",
  "a0459ef3693aacd1647cd5d8929839204cef53be": "1000000000000000000000",
  "dda371e600d30688d4710e088e02fdf2b9524d5f": "6920000000000000000000",
  "dd4dd6d36033b0636fcc8d0938609f4dd64f4a86": "60000000000000000000",
  "3bd624b548cb659736907ed8aa3c0c705e24b575": "2000000000000000000000",
  "414599092e879ae25372a84d735af5c4e510cd6d": "400000000000000000000",
  "3d66cd4bd64d5c8c1b5eea281e106d1c5aad2373": "1951100000000000000000",
  "5948bc3650ed519bf891a572679fd992f8780c57": "197000000000000000000",
  "8b74a7cb1bb8c58fce267466a30358adaf527f61": "13620000000000000000000",
  "3f10800282d1b7ddc78fa92d8230074e1bf6aeae": "4925000000000000000000",
  "32dbb6716c54e83165829a4abb36757849b6e47d": "1000000000000000000000",
  "e6b3ac3f5d4da5a8857d0b3f30fc4b2b692b77d7": "1460000000000000000000",
  "052a58e035f1fe9cdd169bcf20970345d12b9c51": "1490000000000000000000",
  "581bdf1bb276dbdd86aedcdb397a01efc0e00c5b": "1000000000000000000000",
  "604e9477ebf4727c745bcabbedcb6ccf29994022": "1000060000000000000000",
  "59b96deb8784885d8d3b4a166143cc435d2555a1": "1337000000000000000000",
  "37d980a12ee3bf23cc5cdb63b4ae45691f74c837": "2000000000000000000000",
  "3bfbd3847c17a61cf3f17b52f8eba1b960b3f39f": "3000000000000000000000",
  "49c941e0e5018726b7290fc473b471d41dae80d1": "500000000000000000000",
  "f26bcedce3feadcea3bc3e96eb1040dfd8ffe1a0": "775000000000000000000",
  "d0944aa185a1337061ae20dc9dd96c83b2ba4602": "200000000000000000000",
  "904caa429c619d940f8e6741826a0db692b19728": "1000000000000000000000",
  "b95c9b10aa981cf4a67a71cc52c504dee8cf58bd": "4000000000000000000000",
  "15874686b6733d10d703c9f9bec6c52eb8628d67": "2000000000000000000000",
  "1374facd7b3f8d68649d60d4550ee69ff0484133": "269700000000000000000",
  "b0e469c886593815b3495638595daef0665fae62": "1940000000000000000000",
  "47ff6feb43212060bb1503d7a397fc08f4e70352": "2000000000000000000000",
  "c60b04654e003b4683041f1cbd6bc38fda7cdbd6": "2000000000000000000000",
  "3ecdb532e397579662b2a46141e78f8235936a5f": "66850000000000000000",
  "b3a8c2cb7d358e5739941d945ba9045a023a8bbb": "1000000000000000000000",
  "32ef5cdc671df5562a901aee5db716b9be76dcf6": "2000000000000000000000",
  "c94110e71afe578aa218e4fc286403b0330ace8d": "2000000000000000000000",
  "9b43dcb95fde318075a567f1e6b57617055ef9e8": "3940000000000000000000",
  "efeea010756f81da4ba25b721787f058170befbd": "32470000000000000000",
  "c88255eddcf521c6f81d97f5a42181c9073d4ef1": "290793000000000000000",
  "dd47189a3e64397167f0620e484565b762bfbbf4": "1850000000000000000000",
  "82f39b2758ae42277b86d69f75e628d958ebcab0": "40000000000000000000000",
  "e37f5fdc6ec97d2f866a1cfd0d3a4da4387b22b5": "10000000000000000000000",
  "62331df2a3cbee3520e911dea9f73e905f892505": "2000000000000000000000",
  "8c5d16ed65e3ed7e8b96ca972bc86173e3500b03": "2000000000000000000000",
  "8b9841862e77fbbe919470935583a93cf027e450": "2000054000000000000000",
  "c8dd27f16bf22450f5771b9fe4ed4ffcb30936f4": "197000000000000000000",
  "dec8a1a898f1b895d8301fe64ab3ad5de941f689": "787803000000000000000",
  "61c4ee7c864c4d6b5e37ea1331c203739e826b2f": "30063000000000000000",
  "3250e3e858c26adeccadf36a5663c22aa84c4170": "5000000000000000000000",
  "299e0bca55e069de8504e89aca6eca21d38a9a5d": "55500000000000000000",
  "d50f7fa03e389876d3908b60a537a6706304fb56": "100000000000000000000",
  "69073269729e6414b26ec8dc0fd935c73b579f1e": "30000000000000000000000",
  "14fcd1391e7d732f41766cdacd84fa1deb9ffdd2": "2000000000000000000000",
  "823768746737ce6da312d53e54534e106f967cf3": "20000000000000000000",
  "882f75708386653c80171d0663bfe30b017ed0ad": "2000000000000000000000",
  "a25b086437fd2192d0a0f64f6ed044f38ef3da32": "335000000000000000000",
  "5a9c8b69fc614d69564999b00dcb42db67f97e90": "3429227000000000000000",
  "a2b701f9f5cdd09e4ba62baebae3a88257105885": "1000000000000000000000",
  "5e7b8c54dc57b0402062719dee7ef5e37ea35d62": "2877224000000000000000",
  "7ffabfbc390cbe43ce89188f0868b27dcb0f0cad": "6370000000000000000000",
  "b5cdbc4115406f52e5aa85d0fea170d2979cc7ba": "1337000000000000000000",
  "263814309de4e635cf585e0d365477fc40e66cf7": "146000000000000000000",
  "24cff0e9336a9f80f9b1cb968caf6b1d1c4932a4": "200200000000000000000",
  "d3a941c961e8ca8b1070f23c6d6d0d2a758a4444": "200000000000000000000",
  "a97beb3a48c45f1528284cb6a95f7de453358ec6": "31000000000000000000000",
  "4dd131c74a068a37c90aded4f309c2409f6478d3": "400008000000000000000",
  "653675b842d7d8b461f722b4117cb81dac8e639d": "31000000000000000000",
  "561be9299b3e6b3e63b79b09169d1a948ae6db01": "500000000000000000000",
  "dc067ed3e12d711ed475f5156ef7e71a80d934b9": "9550000000000000000000",
  "08d97eadfcb7b064e1ccd9c8979fbee5e77a9719": "266063000000000000000",
  "6e4c2ab7db026939dbd3bc68384af660a61816b2": "167000000000000000000",
  "bf4c73a7ede7b164fe072114843654e4d8781dde": "2000000000000000000000",
  "f504943aaf16796e0b341bbcdf21d11cc586cdd1": "9000000000000000000000",
  "ea81ca8638540cd9d4d73d060f2cebf2241ffc3e": "1970000000000000000000",
  "9944fee9d34a4a880023c78932c00b59d5c82a82": "750022000000000000000",
  "12f460ae646cd2780fd35c50a6af4b9accfa85c6": "1000000000000000000000",
  "4e232d53b3e6be8f895361d31c34d4762b12c82e": "1760000000000000000000",
  "6bb2aca23fa1626d18efd6777fb97db02d8e0ae4": "40000000000000000000000",
  "bc4e471560c99c8a2a4b1b1ad0c36aa6502b7c4b": "12000000000000000000000",
  "2e2cbd7ad82547b4f5ff8b3ab56f942a6445a3b0": "200000000000000000000",
  "21ecb2dfa65779c7592d041cd2105a81f4fd4e46": "1000000000000000000000",
  "34318625818ec13f11835ae97353ce377d6f590a": "1520000000000000000000",
  "a7ef35ce87eda6c28df248785815053ec97a5045": "4999998000000000000000",
  "6a514e6242f6b68c137e97fea1e78eb555a7e5f7": "20000000000000000000",
  "9340b5f678e45ee05eb708bb7abb6ec8f08f1b6b": "6000000000000000000000",
  "43cc08d0732aa58adef7619bed46558ad7774173": "4443926000000000000000",
  "12e9a4ad2ad57484dd700565bddb46423bd9bd31": "19999800000000000000000",
  "ebbeeb259184a6e01cccfc2207bbd883785ac90a": "619966000000000000000",
  "704ab1150d5e10f5e3499508f0bf70650f028d4b": "4000000000000000000000",
  "fc361105dd90f9ede566499d69e9130395f12ac8": "395000000000000000000000",
  "c1b9a5704d351cfe983f79abeec3dbbbae3bb629": "20000000000000000000",
  "66f50406eb1b11a946cab45927cca37470e5a208": "2000000000000000000000",
  "53942e7949d6788bb780a7e8a0792781b1614b84": "15899600000000000000000",
  "32ba9a7d0423e03a525fe2ebeb661d2085778bd8": "20000000000000000000000",
  "11c0358aa6479de21866fe21071924b65e70f8b9": "36400000000000000000000",
  "76cb9c8b69f4387675c48253e234cb7e0d74a426": "7396300000000000000000",
  "9f5f44026b576a4adb41e95961561d41039ca391": "250000000000000000000",
  "533a73a4a2228eee05c4ffd718bbf3f9c1b129a7": "6000000000000000000000",
  "dcc52d8f8d9fc742a8b82767f0555387c563efff": "500000000000000000000",
  "f456a75bb99655a7412ce97da081816dfdb2b1f2": "200000000000000000000",
  "d0c101fd1f01c63f6b1d19bc920d9f932314b136": "20000000000000000000000",
  "dabc225042a6592cfa13ebe54efa41040878a5a2": "259550000000000000000",
  "38eec6e217f4d41aa920e424b9525197041cd4c6": "4428166000000000000000",
  "8a247d186510809f71cffc4559471c3910858121": "1790000000000000000000",
  "4f152b2fb8659d43776ebb1e81673aa84169be96": "2000000000000000000000",
  "b4496ddb27799a222457d73979116728e8a1845b": "2610331000000000000000",
  "4a4053b31d0ee5dbafb1d06bd7ac7ff3222c47d6": "1400000000000000000000",
  "0f7bea4ef3f73ae0233df1e100718cbe29310bb0": "2000000000000000000000",
  "c836e24a6fcf29943b3608e662290a215f6529ea": "292000000000000000000",
  "1765361c2ec2f83616ce8363aae21025f2566f40": "5000000000000000000000",
  "b6e6c3222b6b6f9be2875d2a89f127fb64100fe2": "8008000000000000000000",
  "01bbc14f67af0639aab1441e6a08d4ce7162090f": "1309500000000000000000",
  "af2058c7282cf67c8c3cf930133c89617ce75d29": "6920000000000000000000",
  "464d9c89cce484df000277198ed8075fa63572d1": "20000000000000000000",
  "50cd97e9378b5cf18f173963236c9951ef7438a5": "1400000000000000000000",
  "cb47bd30cfa8ec5468aaa6a94642ced9c819c8d4": "4000000000000000000000",
  "6b10f8f8b3e3b60de90aa12d155f9ff5ffb22c50": "2000000000000000000000",
  "09b7a988d13ff89186736f03fdf46175b53d16e0": "6000000000000000000000",
  "5bfafe97b1dd1d712be86d41df79895345875a87": "500000000000000000000",
  "a06cd1f396396c0a64464651d7c205efaf387ca3": "1999944000000000000000",
  "fc0096b21e95acb8d619d176a4a1d8d529badbef": "384601000000000000000",
  "a74444f90fbb54e56f3ac9b6cfccaa4819e4614a": "20000000000000000000",
  "3c15b3511df6f0342e7348cc89af39a168b7730f": "1000000000000000000000",
  "3d6ff82c9377059fb30d9215723f60c775c891fe": "250066000000000000000",
  "a524a8cccc49518d170a328270a2f88133fbaf5d": "294500000000000000000",
  "8a7a06be199a3a58019d846ac9cbd4d95dd757de": "3000200000000000000000",
  "d744ac7e5310be696a63b003c40bd039370561c6": "1670000000000000000000",
  "fe362688845fa244cc807e4b1130eb3741a8051e": "1000000000000000000000",
  "b2d0360515f17daba90fcbac8205d569b915d6ac": "6000000000000000000000",
  "c53594c7cfb2a08f284cc9d7a63bbdfc0b319732": "49200000000000000000000",
  "b3c228731d186d2ded5b5fbe004c666c8e469b86": "29000000000000000000",
  "63e414603e80d4e5a0f5c18774204642258208e4": "5000000000000000000000",
  "826ce5790532e0548c6102a30d3eac836bd6388f": "18000000000000000000000",
  "c5e812f76f15f2e1f2f9bc4823483c8804636f67": "73000000000000000000",
  "116fef5e601642c918cb89160fc2293ba71da936": "802200000000000000000",
  "08b84536b74c8c01543da88b84d78bb95747d822": "200000000000000000000",
  "04a80afad53ef1f84165cfd852b0fdf1b1c24ba8": "58000000000000000000",
  "2b0362633614bfcb583569438ecc4ea57b1d337e": "20000000000000000000000",
  "e95179527deca5916ca9a38f215c1e9ce737b4c9": "10000000000000000000000",
  "2c5df866666a194b26cebb407e4a1fd73e208d5e": "1000000000000000000000",
  "529e824fa072582b4032683ac7eecc1c04b4cac1": "2000000000000000000000",
  "78634371e17304cbf339b1452a4ce438dc764cce": "10000000000000000000000",
  "e172dfc8f80cd1f8cd8539dc26082014f5a8e3e8": "3000000000000000000000",
  "b07618328a901307a1b7a0d058fcd5786e9e72fe": "30239500000000000000000",
  "b0571153db1c4ed7acaefe13ecdfdb72e7e4f06a": "80520000000000000000000",
  "ad910a23d6850613654af786337ad2a70868ac6d": "1999800000000000000000",
  "4da5edc688b0cb62e1403d1700d9dcb99ffe3fd3": "2000000000000000000000",
  "be2471a67f6047918772d0e36839255ed9d691ae": "4000000000000000000000",
  "28868324337e11ba106cb481da962f3a8453808d": "2000000000000000000000",
  "d8f94579496725b5cb53d7985c989749aff849c0": "17000000000000000000000",
  "4981c5ff66cc4e9680251fc4cd2ff907cb327865": "750000000000000000000",
  "fd2872d19e57853cfa16effe93d0b1d47b4f93fb": "4000000000000000000000",
  "63c8dfde0b8e01dadc2e748c824cc0369df090b3": "3880000000000000000000",
  "c4dd048bfb840e2bc85cb53fcb75abc443c7e90f": "3716000000000000000000",
  "f579714a45eb8f52c3d57bbdefd2c15b2e2f11df": "1560000000000000000000",
  "cc7b0481cc32e6faef2386a07022bcb6d2c3b4fc": "3160000000000000000000",
  "a0aa5f0201f04d3bbeb898132f7c11679466d901": "36600000000000000000",
  "f3df63a97199933330383b3ed7570b96c4812334": "2000000000000000000000",
  "42732d8ef49ffda04b19780fd3c18469fb374106": "425068000000000000000",
  "6f92d6e4548c78996509ee684b2ee29ba3c532b4": "1000000000000000000000",
  "fff4bad596633479a2a29f9a8b3f78eefd07e6ee": "100000000000000000000",
  "ac4460a76e6db2b9fcd152d9c7718d9ac6ed8c6f": "200000000000000000000",
  "553b6b1c57050e88cf0c31067b8d4cd1ff80cb09": "400000000000000000000",
  "84b6b6adbe2f5b3e2d682c66af1bc4905340c3ed": "619333000000000000000",
  "9f4a7195ac7c151ca258cafda0cab083e049c602": "1537100000000000000000",
  "2955c357fd8f75d5159a3dfa69c5b87a359dea8c": "2000000000000000000000",
  "11d7844a471ef89a8d877555583ceebd1439ea26": "10098000000000000000000",
  "34b454416e9fb4274e6addf853428a0198d62ee1": "407000000000000000000",
  "308dd21cebe755126704b48c0f0dc234c60ba9b1": "200000000000000000000",
  "381db4c8465df446a4ce15bf81d47e2f17c980bf": "32000000000000000000000",
  "1abc4e253b080aeb437984ab05bca0979aa43e1c": "1000000000000000000000",
  "53e35b12231f19c3fd774c88fec8cbeedf1408b2": "512000000000000000000",
  "69e2e2e704307ccc5b5ca3f164fece2ea7b2e512": "7000000000000000000000",
  "1914f1eb95d1277e93b6e61b668b7d77f13a11a1": "970000000000000000000",
  "50e13023bd9ca96ad4c53fdfd410cb6b1f420bdf": "200000000000000000000",
  "46224f32f4ece5c8867090d4409d55e50b18432d": "6000000000000000000000",
  "ff83855051ee8ffb70b4817dba3211ed2355869d": "400000000000000000000",
  "fb39189af876e762c71d6c3e741893df226cedd6": "4000000000000000000000",
  "9875623495a46cdbf259530ff838a1799ec38991": "2000000000000000000000",
  "e1b39b88d9900dbc4a6cdc481e1060080a8aec3c": "2000000000000000000000",
  "5baf6d749620803e8348af3710e5c4fbf20fc894": "5003680000000000000000",
  "9c54e4ed479a856829c6bb42da9f0b692a75f728": "7520000000000000000000",
  "486a6c8583a84484e3df43a123837f8c7e2317d0": "323378000000000000000",
  "d235d15cb5eceebb61299e0e827fa82748911d89": "4000000000000000000000",
  "47d792a756779aedf1343e8883a6619c6c281184": "2000000000000000000000",
  "70c213488a020c3cfb39014ef5ba6404724bcaa3": "1940000000000000000000",
  "133c490fa5bf7f372888e607d958fab7f955bae1": "1580000000000000000000",
  "a9e194661aac704ee9dea043974e9692ded84a5d": "482400000000000000000",
  "bc6b58364bf7f1951c309e0cba0595201cd73f9a": "1812400000000000000000",
  "2309d34091445b3232590bd70f4f10025b2c9509": "10000000000000000000000",
  "d89bc271b27ba3ab6962c94a559006ae38d5f56a": "2000000000000000000000",
  "ff0e2fec304207467e1e3307f64cbf30af8fd9cd": "2000000000000000000000",
  "c0b0b7a8a6e1acdd05e47f94c09688aa16c7ad8d": "64234000000000000000",
  "b66f92124b5e63035859e390628869dbdea9485e": "9850000000000000000000",
  "a9e6e25e656b762558619f147a21985b8874edfe": "2000000000000000000000",
  "a43e1947a9242b355561c30a829dfeeca2815af8": "3878255000000000000000",
  "8b20ad3b94656dbdc0dd21a393d8a7d9e02138cb": "3000000000000000000000",
  "aca2a838330b17302da731d30db48a04f0f207c1": "1337000000000000000000",
  "fa60868aafd4ff4c5c57914b8ed58b425773dfa9": "8557400000000000000000",
  "1848003c25bfd4aa90e7fcb5d7b16bcd0cffc0d8": "1000000000000000000000",
  "b4b185d943ee2b58631e33dff5af6854c17993ac": "1000000000000000000000",
  "7719888795ad745924c75760ddb1827dffd8cda8": "1999980000000000000000",
  "ccd521132d986cb96869842622a7dda26c3ed057": "2000000000000000000000",
  "253e32b74ea4490ab92606fda0aa257bf23dcb8b": "10000000000000000000000",
  "3712367e5e55a96d5a19168f6eb2bc7e9971f869": "1000000000000000000000",
  "8f29a14a845ad458f2d108b568d813166bcdf477": "10000000000000000000000",
  "51a8c2163602a32ee24cf4aa97fd9ea414516941": "62904000000000000000",
  "61cea71fa464d62a07063f920b0cc917539733d8": "1670000000000000000000",
  "6f81f3abb1f933b1df396b8e9cc723a89b7c9806": "280000000000000000000",
  "61b1b8c012cd4c78f698e470f90256e6a30f48dd": "200000000000000000000",
  "4f3f2c673069ac97c2023607152981f5cd6063a0": "600000000000000000000",
  "e2efa5fca79538ce6068bf31d2c516d4d53c08e5": "131200000000000000000",
  "2383c222e67e969190d3219ef14da37850e26c55": "2000000000000000000000",
  "eac3af5784927fe9a598fc4eec38b8102f37bc58": "1000000000000000000000",
  "4fe56ab3bae1b0a44433458333c4b05a248f8241": "2180000000000000000000",
  "fe9cfc3bb293ddb285e625f3582f74a6b0a5a6cd": "1970000000000000000000",
  "f48e1f13f6af4d84b371d7de4b273d03a263278e": "600000000000000000000",
  "1ba9228d388727f389150ea03b73c82de8eb2e09": "7258000000000000000000",
  "37a7a6ff4ea3d60ec307ca516a48d3053bb79cbb": "2000000000000000000000",
  "e33840d8bca7da98a6f3d096d83de78b70b71ef8": "2000000000000000000000",
  "8e7fd23848f4db07906a7d10c04b21803bb08227": "1000000000000000000000",
  "07d4334ec385e8aa54eedaeadb30022f0cdfa4ab": "2629946000000000000000",
  "d4b085fb086f3d0d68bf12926b1cc3142cae8770": "3700000000000000000000",
  "5a87f034e6f68f4e74ffe60c64819436036cf7d7": "20000000000000000000",
  "c00ab080b643e1c2bae363e0d195de2efffc1c44": "500000000000000000000",
  "22f3c779dd79023ea92a78b65c1a1780f62d5c4a": "1970000000000000000000",
  "c7d5c7054081e918ec687b5ab36e973d18132935": "182000000000000000000",
  "9662ee021926682b31c5f200ce457abea76c6ce9": "670500000000000000000",
  "116a09df66cb150e97578e297fb06e13040c893c": "2000000000000000000000",
  "b7240af2af90b33c08ae9764103e35dce3638428": "8464547000000000000000",
  "e8b28acda971725769db8f563d28666d41ddab6c": "10000000000000000000000",
  "17d4918dfac15d77c47f9ed400a850190d64f151": "2000000000000000000000",
  "c42250b0fe42e6b7dcd5c890a6f0c88f5f5fb574": "149800000000000000000",
  "5da2a9a4c2c0a4a924cbe0a53ab9d0c627a1cfa0": "733202000000000000000",
  "5869fb867d71f1387f863b698d09fdfb87c49b5c": "3666000000000000000000",
  "d49a75bb933fca1fca9aa1303a64b6cb44ea30e1": "10000000000000000000000",
  "76331e30796ce664b2700e0d4153700edc869777": "2000000000000000000000",
  "8a5fb75793d043f1bcd43885e037bd30a528c927": "356500000000000000000",
  "fc0ee6f7c2b3714ae9916c45566605b656f32441": "1760000000000000000000",
  "bf50ce2e264b9fe2b06830617aedf502b2351b45": "1000000000000000000000",
  "0f6000de1578619320aba5e392706b131fb1de6f": "499986000000000000000",
  "c953f934c0eb2d0f144bdab00483fd8194865ce7": "2000000000000000000000",
  "24fd9a6c874c2fab3ff36e9afbf8ce0d32c7de92": "1337000000000000000000",
  "c6cd68ec35362c5ad84c82ad4edc232125912d99": "27750000000000000000000",
  "2a67660a1368efcd626ef36b2b1b601980941c05": "133700000000000000000",
  "9deb39027af877992b89f2ec4a1f822ecdf12693": "2000000000000000000000",
  "c12f881fa112b8199ecbc73ec4185790e614a20f": "2000000000000000000000",
  "d58a52e078a805596b0d56ea4ae1335af01c66eb": "267400000000000000000",
  "4d7cfaa84cb33106800a8c802fb8aa463896c599": "1790000000000000000000",
  "0ee391f03c765b11d69026fd1ab35395dc3802a0": "200000000000000000000",
  "a192f06ab052d5fd7f94eea8318e827815fe677a": "131400000000000000000",
  "8f0ab894bd3f4e697dbcfb859d497a9ba195994a": "39501652000000000000000",
  "387eeafd6b4009deaf8bd5b85a72983a8dcc3487": "4000000000000000000000",
  "03b0f17cd4469ddccfb7da697e82a91a5f9e7774": "20000000000000000000",
  "11172b278ddd44eea2fdf4cb1d16962391c453d9": "935900000000000000000000",
  "33d172ab075c51db1cd40a8ca8dbff0d93b843bb": "5727139000000000000000",
  "909b5e763a39dcc795223d73a1dbb7d94ca75ac8": "2000000000000000000000",
  "0ca12ab0b9666cf0cec6671a15292f2653476ab2": "210000600000000000000000",
  "6b5ae7bf78ec75e90cb503c778ccd3b24b4f1aaf": "800000000000000000000",
  "d9e3857efd1e202a441770a777a49dcc45e2e0d3": "223500000000000000000",
  "d703c6a4f11d60194579d58c2766a7ef16c30a29": "2000000000000000000000",
  "838bd565f99fde48053f7917fe333cf84ad548ab": "200000000000000000000",
  "8168edce7f2961cf295b9fcd5a45c06cdeda6ef5": "200000000000000000000",
  "de50868eb7e3c71937ec73fa89dd8b9ee10d45aa": "1000000000000000000000",
  "087498c0464668f31150f4d3c4bcdda5221ba102": "20000000000000000000",
  "613fab44b16bbe554d44afd178ab1d02f37aeaa5": "2000000000000000000000",
  "e2ee691f237ee6529b6557f2fcdd3dcf0c59ec63": "5450048000000000000000",
  "a9ed377b7d6ec25971c1a597a3b0f3bead57c98f": "400000000000000000000",
  "175feeea2aa4e0efda12e1588d2f483290ede81a": "200000000000000000000",
  "b51ddcb4dd4e8ae6be336dd9654971d9fec86b41": "421133000000000000000",
  "92c0f573eccf62c54810ee6ba8d1f113542b301b": "3384000000000000000000",
  "a109e18bb0a39c9ef82fa19597fc5ed8e9eb6d58": "1640000000000000000000",
  "f74e6e145382b4db821fe0f2d98388f45609c69f": "100000000000000000000",
  "378f37243f3ff0bef5e1dc85eb4308d9340c29f9": "2000200000000000000000",
  "84e9949680bece6841b9a7e5250d08acd87d16cd": "200000000000000000000",
  "882bd3a2e9d74110b24961c53777f22f1f46dc5d": "13370000000000000000000",
  "acce01e0a70610dc70bb91e9926fa9957f372fba": "537000000000000000000",
  "c5f687717246da8a200d20e5e9bcac60b67f3861": "28650000000000000000",
  "e14617f6022501e97e7b3e2d8836aa61f0ff2dba": "200000000000000000000",
  "076ee99d3548623a03b5f99859d2d785a1778d48": "200000000000000000000",
  "2c424ee47f583cdce07ae318b6fad462381d4d2b": "4000000000000000000000",
  "f98250730c4c61c57f129835f2680894794542f3": "4000000000000000000000",
  "ed1b24b6912d51b334ac0de6e771c7c0454695ea": "40000000000000000000",
  "ffd5170fd1a8118d558e7511e364b24906c4f6b3": "60085000000000000000",
  "bf49c14898316567d8b709c2e50594b366c6d38c": "733202000000000000000",
  "65ea26eabbe2f64ccccfe06829c25d4637520225": "700000000000000000000",
  "5c5419565c3aad4e714e0739328e3521c98f05cc": "528000000000000000000",
  "c53b50fd3b2b72bc6c430baf194a515585d3986d": "20000000000000000000",
  "2b74c373d04bfb0fd60a18a01a88fbe84770e58c": "40000000000000000000",
  "d97f4526dea9b163f8e8e33a6bcf92fb907de6ec": "284000000000000000000",
  "a4a49f0bc8688cc9e6dc04e1e08d521026e65574": "200000000000000000000",
  "575c00c2818210c28555a0ff29010289d3f82309": "10000000000000000000000",
  "3f1233714f204de9de4ee96d073b368d8197989f": "38606000000000000000",
  "f964d98d281730ba35b2e3a314796e7b42fedf67": "1543800000000000000000",
  "1deec01abe5c0d952de9106c3dc30639d85005d6": "2000000000000000000000",
  "12d60d65b7d9fc48840be5f891c745ce76ee501e": "21359400000000000000000",
  "5c6136e218de0a61a137b2b3962d2a6112b809d7": "294273000000000000000",
  "cd43258b7392a930839a51b2ef8ad23412f75a9f": "2000000000000000000000",
  "db3f258ab2a3c2cf339c4499f75a4bd1d3472e9e": "1500000000000000000000",
  "0edd4b580ff10fe06c4a03116239ef96622bae35": "197000000000000000000",
  "1d157c5876c5cad553c912caf6ce2d5277e05c73": "2000000000000000000000",
  "cda1b886e3a795c9ba77914e0a2fe5676f0f5ccf": "106024000000000000000",
  "f50cbafd397edd556c0678988cb2af5c2617e0a2": "716000000000000000000",
  "327bb49e754f6fb4f733c6e06f3989b4f65d4bee": "20000000000000000000",
  "c44bdec8c36c5c68baa2ddf1d431693229726c43": "100000000000000000000000",
  "34e2849bea583ab0cc37975190f322b395055582": "7780340000000000000000",
  "9221c9ce01232665741096ac07235903ad1fe2fc": "126489000000000000000",
  "ff3ded7a40d3aff0d7a8c45fa6136aa0433db457": "1999800000000000000000",
  "10b5b34d1248fcf017f8c8ffc408ce899ceef92f": "267400000000000000000",
  "f1a1f320407964fd3c8f2e2cc8a4580da94f01ea": "2000040000000000000000",
  "6c800d4b49ba07250460f993b8cbe00b266a2553": "492500000000000000000",
  "f827d56ed2d32720d4abf103d6d0ef4d3bcd559b": "26265000000000000000",
  "ffb9c7217e66743031eb377af65c77db7359dcda": "40000000000000000000",
  "530319db0a8f93e5bb7d4dbf4816314fbed8361b": "2000000000000000000000",
  "9c28a2c4086091cb5da226a657ce3248e8ea7b6f": "280000000000000000000",
  "db23a6fef1af7b581e772cf91882deb2516fc0a7": "200000000000000000000",
  "6636d7ac637a48f61d38b14cfd4865d36d142805": "500000000000000000000",
  "b3c260609b9df4095e6c5dff398eeb5e2df49985": "254030000000000000000",
  "58e5c9e344c806650dacfc904d33edba5107b0de": "19100000000000000000",
  "4f67396d2553f998785f704e07a639197dd1948d": "300080000000000000000",
  "510d8159cc945768c7450790ba073ec0d9f89e30": "2560000000000000000000",
  "593c48935beaff0fde19b04d309cd530a28e52ce": "4000000000000000000000",
  "c27f4e08099d8cf39ee11601838ef9fc06d7fc41": "1790000000000000000000",
  "07723e3c30e8b731ee456a291ee0e798b0204a77": "2000000000000000000000",
  "0a652e2a8b77bd97a790d0e91361c98890dbb04e": "1000000000000000000000",
  "671015b97670b10d5e583f3d62a61c1c79c5143f": "400000000000000000000",
  "7cc24a6a958c20c7d1249660f7586226950b0d9a": "1970000000000000000000",
  "6ef9e8c9b6217d56769af97dbb1c8e1b8be799d2": "182000000000000000000",
  "5c4368918ace6409c79eca80cdaae4391d2b624e": "4000000000000000000000",
  "043707071e2ae21eed977891dc79cd5d8ee1c2da": "2000000000000000000000",
  "39bfd978689bec048fc776aa15247f5e1d7c39a2": "20000000000000000000000",
  "05915d4e225a668162aee7d6c25fcfc6ed18db03": "66348000000000000000",
  "3f551ba93cd54693c183fb9ad60d65e1609673c9": "2000000000000000000000",
  "a8c0b02faf02cb5519dda884de7bbc8c88a2da81": "16700000000000000000",
  "bd0c5cd799ebc48642ef97d74e8e429064fee492": "326000000000000000000",
  "0a931b449ea8f12cdbd5e2c8cc76bad2c27c0639": "23031000000000000000",
  "2ea5fee63f337a376e4b918ea82148f94d48a626": "1864242000000000000000",
  "cc6c2df00e86eca40f21ffda1a67a1690f477c65": "3160000000000000000000",
  "e5e37e19408f2cfbec83349dd48153a4a795a08f": "4200000000000000000000",
  "f555a27bb1e2fd4e2cc784caee92939fc06e2fc9": "2000000000000000000000",
  "dcf9719be87c6f46756db4891db9b611d2469c50": "1000000000000000000000",
  "8e2f9034c9254719c38e50c9aa64305ed696df1e": "4728000000000000000000",
  "a01f12d70f44aa7b113b285c22dcdb45873454a7": "18200000000000000000",
  "bce40475d345b0712dee703d87cd7657fc7f3b62": "7750000000000000000000",
  "bb19bf91cbad74cceb5f811db27e411bc2ea0656": "17600000000000000000",
  "acc062702c59615d3444ef6214b8862b009a02ed": "1499936000000000000000",
  "449ac4fbe383e36738855e364a57f471b2bfa131": "197000000000000000000000",
  "ad59a78eb9a74a7fbdaefafa82eada8475f07f95": "500000000000000000000",
  "6b6577f3909a4d6de0f411522d4570386400345c": "1880000000000000000000",
  "79bf2f7b6e328aaf26e0bb093fa22da29ef2f471": "1790000000000000000000",
  "940f715140509ffabf974546fab39022a41952d2": "1400000000000000000000",
  "1d572edd2d87ca271a6714c15a3b37761dcca005": "127674000000000000000",
  "d78ecd25adc86bc2051d96f65364866b42a426b7": "3877300000000000000000",
  "f9729d48282c9e87166d5eef2d01eda9dbf78821": "99981000000000000000",
  "17762560e82a93b3f522e0e524adb8612c3a7470": "1000000000000000000000",
  "d500e4d1c9824ba9f5b635cfa3a8c2c38bbd4ced": "400000000000000000000",
  "a11effab6cf0f5972cffe4d56596e98968144a8f": "1670000000000000000000",
  "f64ecf2117931c6d535a311e4ffeaef9d49405b8": "2674000000000000000000",
  "229cc4711b62755ea296445ac3b77fc633821cf2": "39481000000000000000",
  "fc989cb487bf1a7d17e4c1b7c4b7aafdda6b0a8d": "20000000000000000000",
  "ea8527febfa1ade29e26419329d393b940bbb7dc": "1999944000000000000000",
  "bce13e22322acfb355cd21fd0df60cf93add26c6": "200000000000000000000",
  "19ff244fcfe3d4fa2f4fd99f87e55bb315b81eb6": "200000000000000000000",
  "d2581a55ce23ab10d8ad8c44378f59079bd6f658": "8800000000000000000000",
  "4073fa49b87117cb908cf1ab512da754a932d477": "1970000000000000000000",
  "b6a82933c9eadabd981e5d6d60a6818ff806e36b": "400000000000000000000",
  "c79806032bc7d828f19ac6a640c68e3d820fa442": "20000000000000000000",
  "577b2d073c590c50306f5b1195a4b2ba9ecda625": "373600000000000000000",
  "7f13d760498d7193ca6859bc95c901386423d76c": "5000000000000000000000",
  "416784af609630b070d49a8bcd12235c6428a408": "20000000000000000000000",
  "fbe71622bcbd31c1a36976e7e5f670c07ffe16de": "400000000000000000000",
  "a5698035391e67a49013c0002079593114feb353": "240000000000000000000",
  "ab2871e507c7be3965498e8fb462025a1a1c4264": "775000000000000000000",
  "9c78fbb4df769ce2c156920cfedfda033a0e254a": "1970000000000000000000",
  "95e6f93dac228bc7585a25735ac2d076cc3a4017": "6000000000000000000000",
  "3c1f91f301f4b565bca24751aa1f761322709ddd": "1790000000000000000000",
  "f77f9587ff7a2d7295f1f571c886bd33926a527c": "1999800000000000000000",
  "755f587e5efff773a220726a13d0f2130d9f896b": "1000000000000000000000",
  "8c6aa882ee322ca848578c06cb0fa911d3608305": "600000000000000000000",
  "492cb5f861b187f9df21cd4485bed90b50ffe22d": "499928000000000000000",
  "95a577dc2eb3ae6cb9dfc77af697d7efdfe89a01": "136000000000000000000",
  "4173419d5c9f6329551dc4d3d0ceac1b701b869e": "88000000000000000000",
  "456ae0aca48ebcfae166060250525f63965e760f": "300000000000000000000",
  "81f8de2c283d5fd4afbda85dedf9760eabbbb572": "3000000000000000000000",
  "cd0af3474e22f069ec3407870dd770443d5b12b0": "2626262000000000000000",
  "283c2314283c92d4b064f0aef9bb5246a7007f39": "200000000000000000000",
  "29b3f561ee7a6e25941e98a5325b78adc79785f3": "100000000000000000000",
  "cd4306d7f6947ac1744d4e13b8ef32cb657e1c00": "499986000000000000000",
  "d9ec2efe99ff5cf00d03a8317b92a24aef441f7e": "2000000000000000000000",
  "83dbf8a12853b40ac61996f8bf1dc8fdbaddd329": "970000000000000000000",
  "9d93fab6e22845f8f45a07496f11de71530debc7": "1998000000000000000000",
  "fd204f4f4aba2525ba728afdf78792cbdeb735ae": "2000000000000000000000",
  "99fad50038d0d9d4c3fbb4bce05606ecadcd5121": "2000000000000000000000",
  "d206aaddb336d45e7972e93cb075471d15897b5d": "600000000000000000000",
  "428a1ee0ed331d7952ccbe1c7974b2852bd1938a": "2208370000000000000000",
  "690228e4bb12a8d4b5e0a797b0c5cf2a7509131e": "1880000000000000000000",
  "fa3a1aa4488b351aa7560cf5ee630a2fd45c3222": "878850000000000000000",
  "0372e852582e0934344a0fed2178304df25d4628": "20000000000000000000000",
  "35ea2163a38cdf9a123f82a5ec00258dae0bc767": "4000000000000000000000",
  "d1fed0aee6f5dfd7e25769254c3cfad15adeccaa": "730000000000000000000",
  "c05b740620f173f16e52471dc38b9c514a0b1526": "140000000000000000000",
  "87e3062b2321e9dfb0875ce3849c9b2e3522d50a": "10000000000000000000000",
  "303fbaebbe46b35b6e5b74946a5f99bc1585cae7": "878148000000000000000",
  "e7a8e471eafb798f4554cc6e526730fd56e62c7d": "1000000000000000000000",
  "ad7dd053859edff1cb6f9d2acbed6dd5e332426f": "1970000000000000000000",
  "dc4345d6812e870ae90c568c67d2c567cfb4f03c": "6700000000000000000000",
  "a6a08252c8595177cc2e60fc27593e2379c81fb1": "20055000000000000000",
  "a9af21acbe482f8131896a228036ba51b19453c3": "49999000000000000000",
  "86e3fe86e93da486b14266eadf056cbfa4d91443": "2000000000000000000000",
  "744b03bba8582ae5498e2dc22d19949467ab53fc": "500000000000000000000",
  "d3118ea3c83505a9d893bb67e2de142d537a3ee7": "20000000000000000000",
  "b32f1c2689a5ce79f1bc970b31584f1bcf2283e7": "20000000000000000000",
  "4828e4cbe34e1510afb72c2beeac8a4513eaebd9": "3940000000000000000000",
  "b07bcc085ab3f729f24400416837b69936ba8873": "2000140000000000000000",
  "bdc74873af922b9df474853b0fa7ff0bf8c82695": "3999000000000000000000",
  "15ebd1c7cad2aff19275c657c4d808d010efa0f5": "200550000000000000000",
  "cbc04b4d8b82caf670996f160c362940d66fcf1a": "6000000000000000000000",
  "8197948121732e63d9c148194ecad46e30b749c8": "4000000000000000000000",
  "69797bfb12c9bed682b91fbc593591d5e4023728": "10000000000000000000000",
  "be9b8c34b78ee947ff81472eda7af9d204bc8466": "150000000000000000000",
  "df3f57b8ee6434d047223def74b20f63f9e4f955": "250500000000000000000",
  "a3ae1879007d801cb5f352716a4dd8ba2721de3d": "200000000000000000000000",
  "cb4bb1c623ba28dc42bdaaa6e74e1d2aa1256c2a": "1999944000000000000000",
  "e03c00d00388ecbf4f263d0ac778bb41a57a40d9": "1000072000000000000000",
  "fc2c1f88961d019c3e9ea33009152e0693fbf88a": "8000000000000000000000",
  "8599cbd5a6a9dcd4b966be387d69775da5e33c6f": "58180000000000000000000",
  "b7a31a7c38f3db09322eae11d2272141ea229902": "2000000000000000000000",
  "231a15acc199c89fa9cb22441cc70330bdcce617": "500000000000000000000",
  "3fbed6e7e0ca9c84fbe9ebcf9d4ef9bb49428165": "2000000000000000000000",
  "92cfd60188efdfb2f8c2e7b1698abb9526c1511f": "2000000000000000000000",
  "5c936f3b9d22c403db5e730ff177d74eef42dbbf": "75000000000000000000",
  "931fe712f64207a2fd5022728843548bfb8cbb05": "2000000000000000000000",
  "08d54e83ad486a934cfaeae283a33efd227c0e99": "1039000000000000000000",
  "a339a3d8ca280e27d2415b26d1fc793228b66043": "1013600000000000000000",
  "581f34b523e5b41c09c87c298e299cbc0e29d066": "1131607000000000000000",
  "caaa68ee6cdf0d34454a769b0da148a1faaa1865": "7216000000000000000000",
  "0838a7768d9c2aca8ba279adfee4b1f491e326f1": "200000000000000000000",
  "dde77a4740ba08e7f73fbe3a1674912931742eeb": "19867021000000000000000",
  "cbe810fe0fecc964474a1db97728bc87e973fcbd": "10000000000000000000000",
  "86c28b5678af37d727ec05e4447790f15f71f2ea": "200000000000000000000",
  "dd6c062193eac23d2fdbf997d5063a346bb3b470": "20000000000000000000",
  "5975b9528f23af1f0e2ec08ac8ebaa786a2cb8e0": "345827000000000000000",
  "e29d8ae452dcf3b6ac645e630409385551faae0a": "80276000000000000000",
  "2fbc85798a583598b522166d6e9dda121d627dbc": "200000000000000000000",
  "7a36aba5c31ea0ca7e277baa32ec46ce93cf7506": "20000000000000000000000",
  "dbcbcd7a57ea9db2349b878af34b1ad642a7f1d1": "200000000000000000000",
  "92aae59768eddff83cfe60bb512e730a05a161d7": "1708015000000000000000",
  "a5e93b49ea7c509de7c44d6cfeddef5910deaaf2": "2000000000000000000000",
  "e33d980220fab259af6a1f4b38cf0ef3c6e2ea1a": "2000000000000000000000",
  "8ed0af11ff2870da0681004afe18b013f7bd3882": "4000000000000000000000",
  "f23e5c633221a8f7363e65870c9f287424d2a960": "1380000000000000000000",
  "96334bfe04fffa590213eab36514f338b864b736": "400000000000000000000",
  "fa1f1971a775c3504fef5079f640c2c4bce7ac05": "2000000000000000000000",
  "df44c47fc303ac76e74f97194cca67b5bb3c023f": "591000000000000000000",
  "4b74f5e58e2edf76daf70151964a0b8f1de0663c": "324020000000000000000",
  "e38b91b35190b6d9deed021c30af094b953fdcaa": "33340000000000000000",
  "6b38de841fad7f53fe02da115bd86aaf662466bd": "1730000000000000000000",
  "11675a25554607a3b6c92a9ee8f36f75edd3e336": "159800000000000000000",
  "0ba8705bf55cf219c0956b5e3fc01c4474a6cdc1": "94963000000000000000",
  "0f05f120c89e9fbc93d4ab0c5e2b4a0df092b424": "30000000000000000000000",
  "fdd1195f797d4f35717d15e6f9810a9a3ff55460": "18200000000000000000",
  "63a61dc30a8e3b30a763c4213c801cbf98738178": "1000000000000000000000",
  "e5bdf34f4ccc483e4ca530cc7cf2bb18febe92b3": "126260000000000000000",
  "d6e09e98fe1300332104c1ca34fbfac554364ed9": "2000000000000000000000",
  "5bd6862d517d4de4559d4eec0a06cad05e2f946e": "200000000000000000000",
  "7294ec9da310bc6b4bbdf543b0ef45abfc3e1b4d": "22000000000000000000000",
  "ae34861d342253194ffc6652dfde51ab44cad3fe": "466215000000000000000",
  "f50ae7fab4cfb5a646ee04ceadf9bf9dd5a8e540": "3999952000000000000000",
  "dd2bdfa917c1f310e6fa35aa8af16939c233cd7d": "400000000000000000000",
  "e0060462c47ff9679baef07159cae08c29f274a9": "2000000000000000000000",
  "b7d12e84a2e4c4a6345af1dd1da9f2504a2a996e": "200000000000000000000",
  "f5500178cb998f126417831a08c2d7abfff6ab5f": "1308923000000000000000",
  "fd377a385272900cb436a3bb7962cdffe93f5dad": "2000000000000000000000",
  "a4a83a0738799b971bf2de708c2ebf911ca79eb2": "600000000000000000000",
  "52a5e4de4393eeccf0581ac11b52c683c76ea15d": "19999800000000000000000",
  "b07fdeaff91d4460fe6cd0e8a1b0bd8d22a62e87": "5260000000000000000000",
  "35f5860149e4bbc04b8ac5b272be55ad1aca58e0": "200000000000000000000",
  "fb135eb15a8bac72b69915342a60bbc06b7e077c": "20000000000000000000000",
  "02d4a30968a39e2b3498c3a6a4ed45c1c6646822": "2000000000000000000000",
  "e44b7264dd836bee8e87970340ed2b9aed8ed0a5": "5772100000000000000000",
  "e90a354cec04d69e5d96ddc0c5138d3d33150aa0": "499971000000000000000",
  "693d83be09459ef8390b2e30d7f7c28de4b4284e": "2000000000000000000000",
  "87bf7cd5d8a929e1c785f9e5449106ac232463c9": "77800000000000000000",
  "e5f8ef6d970636b0dcaa4f200ffdc9e75af1741c": "2000000000000000000000",
  "fef09d70243f39ed8cd800bf9651479e8f4aca3c": "200000000000000000000",
  "e98c91cadd924c92579e11b41217b282956cdaa1": "135800000000000000000",
  "c2836188d9a29253e0cbda6571b058c289a0bb32": "2000000000000000000000",
  "afa6946effd5ff53154f82010253df47ae280ccc": "1970000000000000000000",
  "43c7ebc5b3e7af16f47dc5617ab10e0f39b4afbb": "1910000000000000000000",
  "097ecda22567c2d91cb03f8c5215c22e9dcda949": "20055000000000000000",
  "3e66b84769566ab67945d5fa81373556bcc3a1fa": "152000000000000000000",
  "56373daab46316fd7e1576c61e6affcb6559ddd7": "215340000000000000000",
  "faaeba8fc0bbda553ca72e30ef3d732e26e82041": "1338337000000000000000",
  "f54c19d9ef3873bfd1f7a622d02d86249a328f06": "44284729000000000000000",
  "825309a7d45d1812f51e6e8df5a7b96f6c908887": "2365000000000000000000",
  "89009e3c6488bd5e570d1da34eabe28ed024de1b": "20000000000000000000000",
  "63977cad7d0dcdc52b9ac9f2ffa136e8642882b8": "75000000000000000000",
  "c239abdfae3e9af5457f52ed2b91fd0ab4d9c700": "2000000000000000000000",
  "1a4ec6a0ae7f5a9427d23db9724c0d0cffb2ab2f": "179000000000000000000",
  "a12a6c2d985daf0e4f5f207ae851aaf729b332cd": "100000000000000000000000",
  "cbe52fc533d7dd608c92a260b37c3f45deb4eb33": "1000000000000000000000",
  "abb2e6a72a40ba6ed908cdbcec3c5612583132fe": "1460000000000000000000",
  "6503860b191008c15583bfc88158099301762828": "1000000000000000000000",
  "a0228240f99e1de9cb32d82c0f2fa9a3d44b0bf3": "1600000000000000000000",
  "e154daeadb545838cbc6aa0c55751902f528682a": "4925000000000000000000",
  "8e92aba38e72a098170b92959246537a2e5556c0": "267400000000000000000",
  "d23d7affacdc3e9f3dae7afcb4006f58f8a44600": "3600000000000000000000",
  "00d78d89b35f472716eceafebf600527d3a1f969": "27750000000000000000000",
  "120f9de6e0af7ec02a07c609ca8447f157e6344c": "267400000000000000000",
  "e0352fdf819ba265f14c06a6315c4ac1fe131b2e": "1000000000000000000000",
  "8f47328ee03201c9d35ed2b5412b25decc859362": "2000000000000000000000",
  "453e359a3397944c5a275ab1a2f70a5e5a3f6989": "240000000000000000000",
  "9bf58efbea0784eb068adecfa0bb215084c73a35": "5800000000000000000000",
  "21bfe1b45cacde6274fd8608d9a178bf3eeb6edc": "2009400000000000000000",
  "d1d5b17ffe2d7bbb79cc7d7930bcb2e518fb1bbf": "3000000000000000000000",
  "20a29c5079e26b3f18318bb2e50e8e8b346e5be8": "499986000000000000000",
  "7d392852f3abd92ff4bb5bb26cb60874f2be6795": "1000070000000000000000",
  "55852943492970f8d629a15366cdda06a94f4513": "2000000000000000000000",
  "ab5dfc1ea21adc42cf8c3f6e361e243fd0da61e5": "300000000000000000000",
  "9d2bfc36106f038250c01801685785b16c86c60d": "380000000000000000000000",
  "6e60aee1a78f8eda8b424c73e353354ae67c3042": "3490300000000000000000",
  "7e29290038493559194e946d4e460b96fc38a156": "309072000000000000000",
  "6006e36d929bf45d8f16231b126a011ae283d925": "176000000000000000000",
  "d6d03572a45245dbd4368c4f82c95714bd2167e2": "1162200000000000000000",
  "d1432538e35b7664956ae495a32abdf041a7a21c": "19700000000000000000000",
  "2276264bec8526c0c0f270677abaf4f0e441e167": "1000000000000000000000",
  "c8814e34523e38e1f927a7dce8466a447a093603": "10000000000000000000000",
  "688a569e965524eb1d0ac3d3733eab909fb3d61e": "1320000000000000000000",
  "90dc09f717fc2a5b69fd60ba08ebf40bf4e8246c": "4000086000000000000000",
  "239a733e6b855ac592d663156186a8a174d2449e": "1637020000000000000000",
  "bcdfacb9d9023c3417182e9100e8ea1d373393a3": "59100000000000000000",
  "ba6440aeb3737b8ef0f1af9b0c15f4c214ffc7cf": "1000000000000000000000",
  "322e5c43b0f524389655a9b3ff24f2d4db3da10f": "4650000000000000000000",
  "be5a60689998639ad75bc105a371743eef0f7940": "501700000000000000000",
  "b727a9fc82e1cffc5c175fa1485a9befa2cdbdd1": "999000000000000000000",
  "a3883a24f7f166205f1a6a9949076c26a76e7178": "1820000000000000000000",
  "5e95fe5ffcf998f9f9ac0e9a81dab83ead77003d": "539766000000000000000",
  "e60955dc0bc156f6c41849f6bd776ba44b0ef0a1": "299982000000000000000",
  "af203e229d7e6d419df4378ea98715515f631485": "1970000000000000000000",
  "86499a1228ff2d7ee307759364506f8e8c8307a5": "1970000000000000000000",
  "1a04cec420ad432215246d77fe178d339ed0b595": "316000000000000000000",
  "cc2b5f448f3528d3fe41cc7d1fa9c0dc76f1b776": "60000000000000000000",
  "cb50587412822304ebcba07dab3a0f09fffee486": "1370000000000000000000",
  "4ae2a04d3909ef454e544ccfd614bfefa71089ae": "442800000000000000000",
  "c8a2c4e59e1c7fc54805580438aed3e44afdf00e": "44000000000000000000",
  "5792814f59a33a1843faa01baa089eb02ffb5cf1": "499986000000000000000",
  "a1f2854050f872658ed82e52b0ad7bbc1cb921f6": "2010918000000000000000",
  "92dca5e102b3b81b60f1a504634947c374a88ccb": "2000000000000000000000",
  "732fead60f7bfdd6a9dec48125e3735db1b6654f": "20000000000000000000",
  "6bf7b3c065f2c1e7c6eb092ba0d15066f393d1b8": "400000000000000000000",
  "cde36d81d128c59da145652193eec2bfd96586ef": "4000000000000000000000",
  "40eddb448d690ed72e05c225d34fc8350fa1e4c5": "7000000000000000000000",
  "454b61b344c0ef965179238155f277c3829d0b38": "2000000000000000000000",
  "ac3da526cfce88297302f34c49ca520dc271f9b2": "800000000000000000000",
  "c989eec307e8839b9d7237cfda08822962abe487": "400000000000000000000",
  "e99de258a4173ce9ac38ede26c0b3bea3c0973d5": "1656800000000000000000",
  "ff0cb06c42e3d88948e45bd7b0d4e291aefeea51": "1910000000000000000000",
  "0990e81cd785599ea236bd1966cf526302c35b9c": "1000000000000000000000",
  "6da0ed8f1d69339f059f2a0e02471cb44fb8c3bb": "935900000000000000000",
  "5d958a9bd189c2985f86c58a8c69a7a78806e8da": "10200000000000000000000",
  "98be696d51e390ff1c501b8a0f6331b628ddc5ad": "2000000000000000000000",
  "09d0b8cd077c69d9f32d9cca43b3c208a21ed48b": "150011000000000000000",
  "96e7c0c9d5bf10821bf140c558a145b7cac21397": "1056000000000000000000",
  "5b736eb18353629bde9676dadd165034ce5ecc68": "1970000000000000000000",
  "e5a365343cc4eb1e770368e1f1144a77b832d7e0": "20000000000000000000",
  "4cf5537b85842f89cfee359eae500fc449d2118f": "1000000000000000000000",
  "c71f1d75873f33dcb2dd4b3987a12d0791a5ce27": "1015200000000000000000",
  "9bf703b41c3624e15f4054962390bcba3052f0fd": "6055000000000000000000",
  "145e1de0147911ccd880875fbbea61f6a142d11d": "4000000000000000000000",
  "68419c6dd2d3ce6fcbb3c73e2fa079f06051bde6": "1970000000000000000000",
  "d8eb78503ec31a54a90136781ae109004c743257": "1000000000000000000000",
  "f25e4c70bc465632c89e5625a832a7722f6bffab": "4488000000000000000000",
  "7b4d2a38269069c18557770d591d24c5121f5e83": "700000000000000000000",
  "27d158ac3d3e1109ab6e570e90e85d3892cd7680": "100000000000000000000",
  "d3679a47df2d99a49b01c98d1c3e0c987ce1e158": "280000000000000000000",
  "095b949de3333a377d5019d893754a5e4656ff97": "340000000000000000000",
  "6b17598a8ef54f797ae515ccb6517d1859bf8011": "100000000000000000000",
  "3eaf0879b5b6db159b589f84578b6a74f6c10357": "7253657000000000000000",
  "40d45d9d7625d15156c932b771ca7b0527130958": "100000000000000000000000",
  "0392549a727f81655429cb928b529f25df4d1385": "26248000000000000000",
  "c5b009baeaf788a276bd35813ad65b400b849f3b": "1000000000000000000000",
  "6ed884459f809dfa1016e770edaf3e9fef46fa30": "3400170000000000000000",
  "439d2f2f5110a4d58b1757935015408740fec7f8": "3830421000000000000000",
  "dc46c13325cd8edf0230d068896486f007bf4ef1": "1337000000000000000000",
  "8c54c7f8b9896e75d7d5f5c760258699957142ad": "40000000000000000000",
  "61c8f1fa43bf846999ecf47b2b324dfb6b63fe3a": "800000000000000000000",
  "935069444a6a984de2084e46692ab99f671fc727": "9000000000000000000000",
  "fc49c1439a41d6b3cf26bb67e0365224e5e38f5f": "1000076000000000000000",
  "e1dfb5cc890ee8b2877e885d267c256187d019e6": "100000000000000000000",
  "ee7c3ded7c28f459c92fe13b4d95bafbab02367d": "700000000000000000000",
  "a5874d754635a762b381a5c4c792483af8f23d1d": "50000000000000000000",
  "cfbb32b7d024350e3321fa20c9a914035372ffc6": "401100000000000000000",
  "2bc429d618a66a4cf82dbb2d824e9356effa126a": "1999944000000000000000",
  "db244f97d9c44b158a40ed9606d9f7bd38913331": "102000000000000000000",
  "55e220876262c218af4f56784798c7e55da09e91": "133566000000000000000",
  "ca41ccac30172052d522cd2f2f957d248153409f": "1970000000000000000000",
  "b11fa7fb270abcdf5a2eab95aa30c4b53636efbf": "800000000000000000000",
  "0ffea06d7113fb6aec2869f4a9dfb09007facef4": "225416000000000000000",
  "646628a53c2c4193da88359ce718dadd92b7a48d": "200032000000000000000",
  "ca8409083e01b397cf12928a05b68455ce6201df": "1600000000000000000000",
  "dbbcbb79bf479a42ad71dbcab77b5adfaa872c58": "1730000000000000000000",
  "db7d4037081f6c65f9476b0687d97f1e044d0a1d": "660000000000000000000",
  "4be90d412129d5a4d0424361d6649d4e47a62316": "1015200000000000000000",
  "e3ab3ca9b870e3f548517306bba4de2591afafc2": "1200062000000000000000",
  "5c61ab79b408dd3229f662593705d72f1e147bb8": "22729000000000000000000",
  "4f177f9d56953ded71a5611f393322c30279895c": "246000000000000000000",
  "e6cb260b716d4c0ab726eeeb07c8707204e276ae": "1000000000000000000000",
  "44355253b27748e3f34fe9cae1fb718c8f249529": "200000000000000000000",
  "a309df54cabce70c95ec3033149cd6678a6fd4cf": "223600000000000000000",
  "ec4867d2175ab5b9469361595546554684cda460": "3000000000000000000000",
  "8d06e464245cad614939e0af0845e6d730e20374": "200359000000000000000",
  "9810e34a94db6ed156d0389a0e2b80f4fd6b0a8a": "2000000000000000000000",
  "dcfff3e8d23c2a34b56bd1b3bd45c79374432239": "5000000000000000000000",
  "7d7dd5ee614dbb6fbfbcd26305247a058c41faa1": "2000000000000000000000",
  "8a9eca9c5aba8e139f8003edf1163afb70aa3aa9": "660000000000000000000",
  "d942de4784f7a48716c0fd4b9d54a6e54c5f2f3e": "20000000000000000000000",
  "07dae622630d1136381933d2ad6b22b839d82102": "200000000000000000000",
  "abf12fa19e82f76c718f01bdca0003674523ef30": "2000000000000000000000",
  "411c831cc6f44f1965ec5757ab4e5b3ca4cffd1f": "425000000000000000000",
  "99129d5b3c0cde47ea0def4dfc070d1f4a599527": "2000000000000000000000",
  "c5cdcee0e85d117dabbf536a3f4069bf443f54e7": "1969606000000000000000",
  "f218bd848ee7f9d38bfdd1c4eb2ed2496ae4305f": "500000000000000000000",
  "fe549bbfe64740189892932538daaf46d2b61d4f": "40000000000000000000",
  "dc3f0e7672f71fe7525ba30b9755183a20b9166a": "9603617000000000000000",
  "0e83b850481ab44d49e0a229a2e464902c69539b": "100000000000000000000",
  "07ddd0422c86ef65bf0c7fc3452862b1228b08b8": "2065302000000000000000",
  "a68c313445c22d919ee46cc2d0cdff043a755825": "75189000000000000000",
  "a9e9dbce7a2cb03694799897bed7c54d155fdaa8": "197559000000000000000",
  "18fccf62d2c3395453b7587b9e26f5cff9eb7482": "1000000000000000000000",
  "ff41d9e1b4effe18d8b0d1f63fc4255fb4e06c3d": "1337000000000000000000",
  "8f69eafd0233cadb4059ab779c46edf2a0506e48": "1788210000000000000000",
  "9aa48c66e4fb4ad099934e32022e827427f277ba": "10000000000000000000000",
  "f46980e3a4a9d29a6a6e90604537a3114bcb2897": "500000000000000000000",
  "801732a481c380e57ed62d6c29de998af3fa3b13": "100000000000000000000",
  "0cd6a141918d126b106d9f2ebf69e102de4d3277": "20000000000000000000",
  "17589a6c006a54cad70103123aae0a82135fdeb4": "4000000000000000000000",
  "8725e8c753b3acbfdca55f3c62dfe1a59454968a": "1000090000000000000000",
  "d20dcb0b78682b94bc3000281448d557a20bfc83": "895000000000000000000",
  "e84f8076a0f2969ecd333eef8de41042986291f2": "432000000000000000000",
  "b3145b74506d1a8d047cdcdc55392a7b5350799a": "129314663000000000000000",
  "0d9a825ff2bcd397cbad5b711d9dcc95f1cc112d": "12800000000000000000000",
  "0ca670eb2c8b96cba379217f5929c2b892f39ef6": "2000000000000000000000",
  "25cfc4e25c35c13b69f7e77dbfb08baf58756b8d": "40000000000000000000000",
  "182db85293f606e88988c3704cb3f0c0bbbfca5a": "133700000000000000000",
  "bd73c3cbc26a175062ea0320dd84b253bce64358": "394000000000000000000",
  "2680713d40808e2a50ed013150a2a694b96a7f1d": "1790000000000000000000",
  "51e32f14f4ca5e287cdac057a7795ea9e0439953": "500000000000000000000",
  "b1e9c5f1d21e61757a6b2ee75913fc5a1a4101c3": "2000000000000000000000",
  "d4c4d1a7c3c74984f6857b2f5f07e8face68056d": "2000000000000000000000",
  "4651dc420e08c3293b27d2497890eb50223ae2f4": "20000000000000000000000",
  "c74a3995f807de1db01a2eb9c62e97d0548f696f": "1000000000000000000000",
  "0505a08e22a109015a22f685305354662a5531d5": "2600000000000000000000",
  "39c773367c8825d3596c686f42bf0d14319e3f84": "133700000000000000000",
  "0f929cf895db017af79f3ead2216b1bd69c37dc7": "2000000000000000000000",
  "bdd3254e1b3a6dc6cc2c697d45711aca21d516b2": "2000000000000000000000",
  "ae5d221afcd3d29355f508eadfca408ce33ca903": "100000000000000000000000",
  "916cf17d71412805f4afc3444a0b8dd1d9339d16": "14300000000000000000",
  "4319263f75402c0b5325f263be4a5080651087f0": "983086000000000000000",
  "0f1c249cd962b00fd114a9349f6a6cc778d76c4d": "2000000000000000000000",
  "54febcce20fe7a9098a755bd90988602a48c089e": "640000000000000000000",
  "2c1800f35fa02d3eb6ff5b25285f5e4add13b38d": "906400000000000000000",
  "72b904440e90e720d6ac1c2ad79c321dcc1c1a86": "1550000000000000000000",
  "b0aa00950c0e81fa3210173e729aaf163a27cd71": "40000000000000000000000",
  "663604b0503046e624cd26a8b6fb4742dce02a6f": "65400000000000000000",
  "3c98594bf68b57351e8814ae9e6dfd2d254aa06f": "300000000000000000000",
  "9c45202a25f6ad0011f115a5a72204f2f2198866": "5014000000000000000000",
  "b02d062873334545cea29218e4057760590f7423": "3186000000000000000000",
  "7bddb2ee98de19ee4c91f661ee8e67a91d054b97": "1000000000000000000000",
  "9cf2928beef09a40f9bfc953be06a251116182fb": "6000000000000000000000",
  "51b4758e9e1450e7af4268c3c7b1e7bd6f5c7550": "1000000000000000000000",
  "eb570dba975227b1c42d6e8dea2c56c9ad960670": "2000000000000000000000",
  "970d8b8a0016d143054f149fb3b8e550dc0797c7": "1000000000000000000000",
  "c7b39b060451000ca1049ba154bcfa00ff8af262": "100000000000000000000000",
  "945e18769d7ee727c7013f92de24d117967ff317": "2000000000000000000000",
  "d18eb9e1d285dabe93e5d4bae76beefe43b521e8": "668500000000000000000",
  "c618521321abaf5b26513a4a9528086f220adc6f": "27000000000000000000",
  "dd65f6e17163b5d203641f51cc7b24b00f02c8fb": "200000000000000000000",
  "131faed12561bb7aee04e5185af802b1c3438d9b": "219000000000000000000",
  "1ced6715f862b1ff86058201fcce5082b36e62b2": "6684522000000000000000",
  "a0ff5b4cf016027e8323497d4428d3e5a83b8795": "6596500000000000000000",
  "02e816afc1b5c0f39852131959d946eb3b07b5ad": "1000000000000000000000",
  "153cf2842cb9de876c276fa64767d1a8ecf573bb": "2000000000000000000000",
  "3bc6e3ee7a56ce8f14a37532590f63716b9966e8": "2000000000000000000000",
  "f6d25d3f3d846d239f525fa8cac97bc43578dbac": "896000000000000000000",
  "2066774d822793ff25f1760909479cf62491bf88": "55160000000000000000000",
  "46779a5656ff00d73eac3ad0c38b6c853094fb40": "230752000000000000000",
  "22eed327f8eb1d1338a3cb7b0f8a4baa5907cd95": "23445000000000000000",
  "ff88ebacc41b3687f39e4b59e159599b80cba33f": "400000000000000000000",
  "2874f3e2985d5f7b406627e17baa772b01abcc9e": "6014000000000000000000",
  "eb10458daca79e4a6b24b29a8a8ada711b7f2eb6": "3998000000000000000000",
  "541060fc58c750c40512f83369c0a63340c122b6": "1970000000000000000000",
  "fd2757cc3551a095878d97875615fe0c6a32aa8a": "598200000000000000000",
  "be659d85e7c34f8833ea7f488de1fbb5d4149bef": "9072500000000000000000",
  "e149b5726caf6d5eb5bf2acc41d4e2dc328de182": "1940000000000000000000",
  "2fe0cc424b53a31f0916be08ec81c50bf8eab0c1": "600000000000000000000",
  "e3712701619ca7623c55db3a0ad30e867db0168b": "20000000000000000000",
  "f8ca336c8e91bd20e314c20b2dd4608b9c8b9459": "846000000000000000000",
  "68acdaa9fb17d3c309911a77b05f5391fa034ee9": "8950000000000000000000",
  "e77d7deab296c8b4fa07ca3be184163d5a6d606c": "92538000000000000000",
  "e6b9545f7ed086e552924639f9a9edbbd5540b3e": "3760000000000000000000",
  "2866b81decb02ee70ae250cee5cdc77b59d7b679": "2000000000000000000000",
  "60e3cc43bcdb026aad759c7066f555bbf2ac66f5": "2000000000000000000000",
  "fcbd85feea6a754fcf3449449e37ff9784f7773c": "3086000000000000000000",
  "38a744efa6d5c2137defef8ef9187b649eee1c78": "4000000000000000000000",
  "9d7655e9f3e5ba5d6e87e412aebe9ee0d49247ee": "2620100000000000000000",
  "2020b81ae53926ace9f7d7415a050c031d585f20": "341200000000000000000",
  "4244f1331158b9ce26bbe0b9236b9203ca351434": "10000000000000000000000",
  "99c236141daec837ece04fdaee1d90cf8bbdc104": "2184000000000000000000",
  "943d37864a4a537d35c8d99723cd6406ce2562e6": "2000000000000000000000",
  "d79483f6a8444f2549d611afe02c432d15e11051": "20000000000000000000",
  "9fd64373f2fbcd9c0faca60547cad62e26d9851f": "1000000000000000000000",
  "b89c036ed7c492879921be41e10ca1698198a74c": "1820000000000000000000",
  "7462c89caa9d8d7891b2545def216f7464d5bb21": "109162000000000000000",
  "bb0366a7cfbd3445a70db7fe5ae34885754fd468": "6160000000000000000000",
  "6c52cf0895bb35e656161e4dc46ae0e96dd3e62c": "4000086000000000000000",
  "b9cf71b226583e3a921103a5316f855a65779d1b": "24000000000000000000000",
  "016b60bb6d67928c29fd0313c666da8f1698d9c5": "2000000000000000000000",
  "9454b3a8bff9709fd0e190877e6cb6c89974dbd6": "2674000000000000000000",
  "84aac7fa197ff85c30e03b7a5382b957f41f3afb": "157600000000000000000",
  "db6e560c9bc620d4bea3a94d47f7880bf47f2d5f": "89500000000000000000",
  "eefd05b0e3c417d55b3343060486cdd5e92aa7a6": "1430000000000000000000",
  "3a59a08246a8206f8d58f70bb1f0d35c5bcc71bd": "185000000000000000000",
  "9bfff50db36a785555f07652a153b0c42b1b8b76": "2000000000000000000000",
  "d44f5edf2bcf2433f211dadd0cc450db1b008e14": "267400000000000000000",
  "2378fd4382511e968ed192106737d324f454b535": "1000000000000000000000",
  "c94089553ae4c22ca09fbc98f57075cf2ec59504": "4000000000000000000000",
  "08ef3fa4c43ccdc57b22a4b9b2331a82e53818f2": "4000000000000000000000",
  "e48e65125421880d42bdf1018ab9778d96928f3f": "4200000000000000000000",
  "67518e5d02b205180f0463a32004471f753c523e": "1984289000000000000000",
  "0da7401262384e2e8b4b26dd154799b55145efa0": "300000000000000000000",
  "0b6920a64b363b8d5d90802494cf564b547c430d": "1200000000000000000000",
  "a5ab4bd3588f46cb272e56e93deed386ba8b753d": "1332989000000000000000",
  "1788da9b57fd05edc4ff99e7fef301519c8a0a1e": "2000000000000000000000",
  "17b2d6cf65c6f4a347ddc6572655354d8a412b29": "2000000000000000000000",
  "d0319139fbab2e8e2accc1d924d4b11df6696c5a": "200000000000000000000",
  "4c377bb03ab52c4cb79befa1dd114982924c4ae9": "1827814000000000000000",
  "fb949c647fdcfd2514c7d58e31f28a532d8c5833": "20000000000000000000000",
  "70e5e9da735ff077249dcb9aaf3db2a48d9498c0": "1000000000000000000000",
  "fe6f5f42b6193b1ad16206e4afb5239d4d7db45e": "1730000000000000000000",
  "bda4be317e7e4bed84c0495eee32d607ec38ca52": "2309457000000000000000",
  "5910106debd291a1cd80b0fbbb8d8d9e93a7cc1e": "2000000000000000000000",
  "ba42f9aace4c184504abf5425762aca26f71fbdc": "37400000000000000000",
  "beb4fd315559436045dcb99d49dcec03f40c42dc": "2000000000000000000000",
  "452b64db8ef7d6df87c788639c2290be8482d575": "8000000000000000000000",
  "66e09427c1e63deed7e12b8c55a6a19320ef4b6a": "170000000000000000000",
  "faad905d847c7b23418aeecbe3addb8dd3f8924a": "1970000000000000000000",
  "a29319e81069e5d60df00f3de5adee3505ecd5fb": "2000000000000000000000",
  "cf348f2fe47b7e413c077a7baf3a75fbf8428692": "2000000000000000000000",
  "e1e8c50b80a352b240ce7342bbfdf5690cc8cb14": "394000000000000000000",
  "131c792c197d18bd045d7024937c1f84b60f4438": "4000000000000000000000",
  "e49af4f34adaa2330b0e49dc74ec18ab2f92f827": "2000000000000000000000",
  "f2e99f5cbb836b7ad36247571a302cbe4b481c69": "1970000000000000000000",
  "c93fbde8d46d2bcc0fa9b33bd8ba7f8042125565": "1400000000000000000000",
  "038779ca2dbe663e63db3fe75683ea0ec62e2383": "1670000000000000000000",
  "a33cb450f95bb46e25afb50fe05feee6fb8cc8ea": "776000000000000000000",
  "40ab66fe213ea56c3afb12c75be33f8e32fd085d": "4000000000000000000000",
  "6403d062549690c8e8b63eae41d6c109476e2588": "2000000000000000000000",
  "bfb0ea02feb61dec9e22a5070959330299c43072": "20000000000000000000000",
  "99c475bf02e8b9214ada5fad02fdfd15ba365c0c": "591000000000000000000",
  "904966cc2213b5b8cb5bd6089ef9cddbef7edfcc": "2000000000000000000000",
  "767a03655af360841e810d83f5e61fb40f4cd113": "985000000000000000000",
  "ab209fdca979d0a647010af9a8b52fc7d20d8cd1": "9129000000000000000000",
  "6294eae6e420a3d5600a39c4141f838ff8e7cc48": "2955000000000000000000",
  "9777cc61cf756be3b3c20cd4491c69d275e7a120": "10000000000000000000000",
  "bcbf6ba166e2340db052ea23d28029b0de6aa380": "3880000000000000000000",
  "9f10f2a0463b65ae30b070b3df18cf46f51e89bd": "1910000000000000000000",
  "8d9952d0bb4ebfa0efd01a3aa9e8e87f0525742e": "3460000000000000000000",
  "4f23b6b817ffa5c664acdad79bb7b726d30af0f9": "1760000000000000000000",
  "b4c20040ccd9a1a3283da4d4a2f365820843d7e2": "1000000000000000000000",
  "7f49e7a4269882bd8722d4a6f566347629624079": "2000000000000000000000",
  "33629bd52f0e107bc071176c64df108f64777d49": "33425000000000000000",
  "6a7b2e0d88867ff15d207c222bebf94fa6ce8397": "60000000000000000000000",
  "b7ce684b09abda53389a875369f71958aeac3bdd": "2000000000000000000000",
  "ffbc3da0381ec339c1c049eb1ed9ee34fdcea6ca": "4000000000000000000000",
  "849ab80790b28ff1ffd6ba394efc7463105c36f7": "34600000000000000000",
  "b0b36af9aeeedf97b6b02280f114f13984ea3260": "985000000000000000000",
  "4d57e716876c0c95ef5eaebd35c8f41b069b6bfe": "2000000000000000000000",
  "2d2b032359b363964fc11a518263bfd05431e867": "149600000000000000000",
  "2ccc1f1cb5f4a8002e186b20885d9dbc030c0894": "2000000000000000000000",
  "016c85e1613b900fa357b8283b120e65aefcdd08": "799954000000000000000",
  "710b0274d712c77e08a5707d6f3e70c0ce3d92cf": "6400000000000000000000",
  "3cd3a6e93579c56d494171fc533e7a90e6f59464": "2000000000000000000000",
  "fe0e30e214290d743dd30eb082f1f0a5225ade61": "200000000000000000000",
  "d0718520eae0a4d62d70de1be0ca431c5eea2482": "2000000000000000000000",
  "af7f79cb415a1fb8dbbd094607ee8d41fb7c5a3b": "10000000000000000000000",
  "b7d252ee9402b0eef144295f0e69f0db586c0871": "660000000000000000000",
  "c3b928a76fad6578f04f0555e63952cd21d1520a": "2000000000000000000000",
  "a7a517d7ad35820b09d497fa7e5540cde9495853": "2000000000000000000000",
  "e6e886317b6a66a5b4f81bf164c538c264351765": "2000000000000000000000",
  "0770b43dbae4b1f35a927b4fa8124d3866caf97b": "1016390000000000000000",
  "52b4257cf41b6e28878d50d57b99914ffa89873a": "3930150000000000000000",
  "e08bc29c2b48b169ff2bdc16714c586e6cb85ccf": "20000000000000000000",
  "2372c4c1c9939f7aaf6cfac04090f00474840a09": "10000000000000000000000",
  "ab6b65eab8dfc917ec0251b9db0ecfa0fa032849": "500000000000000000000",
  "582e7cc46f1d7b4e6e9d95868bfd370573178f4c": "2000000000000000000000",
  "f167f5868dcf4233a7830609682caf2df4b1b807": "2396150000000000000000",
  "ec82f50d06475f684df1b392e00da341aa145444": "2000000000000000000000",
  "0968ee5a378f8cadb3bafdbed1d19aaacf936711": "1000000000000000000000",
  "a86613e6c4a4c9c55f5c10bcda32175dcbb4af60": "10696140000000000000000",
  "a5cd123992194b34c4781314303b03c54948f4b9": "2010462000000000000000",
  "52f058d46147e9006d29bf2c09304ad1cddd6e15": "1500000000000000000000",
  "160226efe7b53a8af462d117a0108089bdecc2d1": "200550000000000000000",
  "256292a191bdda34c4da6b6bd69147bf75e2a9ab": "14051000000000000000",
  "1b8aa0160cd79f005f88510a714913d70ad3be33": "201760000000000000000",
  "d4b2ff3bae1993ffea4d3b180231da439f7502a2": "2000000000000000000000",
  "e408aa99835307eea4a6c5eb801fe694117f707d": "500000000000000000000",
  "e60a55f2df996dc3aedb696c08dde039b2641de8": "2000000000000000000000",
  "73df3c3e7955f4f2d859831be38000b1076b3884": "1970000000000000000000",
  "6228ade95e8bb17d1ae23bfb0518414d497e0eb8": "400000000000000000000",
  "0f46c81db780c1674ac73d314f06539ee56ebc83": "9850000000000000000000",
  "762d6f30dab99135e4eca51d5243d6c8621102d5": "282000000000000000000",
  "4ba0d9e89601772b496847a2bb4340186787d265": "1000000000000000000000",
  "ca747576446a4c8f30b08340fee198de63ec92cf": "7020000000000000000000",
  "99c31fe748583787cdd3e525b281b218961739e3": "1015200000000000000000",
  "1210f80bdb826c175462ab0716e69e46c24ad076": "100000000000000000000",
  "3f75ae61cc1d8042653b5baec4443e051c5e7abd": "95500000000000000000",
  "5c4892907a0720df6fd3413e63ff767d6b398023": "13189467000000000000000",
  "17f14632a7e2820be6e8f6df823558283dadab2d": "2000000000000000000000",
  "1dc7f7dad85df53f1271152403f4e1e4fdb3afa0": "200000000000000000000",
  "5a30feac37ac9f72d7b4af0f2bc73952c74fd5c3": "2000000000000000000000",
  "136d4b662bbd1080cfe4445b0fa213864435b7f1": "4000000000000000000000",
  "c1ec81dd123d4b7c2dd9b4d438a7072c11dc874c": "2000000000000000000000",
  "09f9575be57d004793c7a4eb84b71587f97cbb6a": "200000000000000000000",
  "2c4b470307a059854055d91ec3794d80b53d0f4a": "20000000000000000000000",
  "6af6c7ee99df271ba15bf384c0b764adcb4da182": "999972000000000000000",
  "0dae3ee5b915b36487f9161f19846d101433318a": "1910000000000000000000",
  "0dcf9d8c9804459f647c14138ed50fad563b4154": "173000000000000000000",
  "bfa8c858df102cb12421008b0a31c4c7190ad560": "200000000000000000000",
  "c2fd0bf7c725ef3e047e5ae1c29fe18f12a7299c": "1337000000000000000000",
  "d70a612bd6dda9eab0dddcff4aaf4122d38feae4": "540000000000000000000",
  "e07137ae0d116d033533c4eab496f8a9fb09569c": "1400000000000000000000",
  "7f49f20726471ac1c7a83ef106e9775ceb662566": "5910000000000000000000",
  "1e706655e284dcf0bb37fe075d613a18dc12ff4a": "4376760000000000000000",
  "03af7ad9d5223cf7c8c13f20df67ebe5ffc5bb41": "200000000000000000000",
  "228242f8336eecd8242e1f000f41937e71dffbbf": "5000000000000000000000",
  "e8ed51bbb3ace69e06024b33f86844c47348db9e": "165170600000000000000000",
  "3b566a8afad19682dc2ce8679a3ce444a5b0fd4f": "2000000000000000000000",
  "dc738fb217cead2f69594c08170de1af10c419e3": "100000000000000000000000",
  "13032446e7d610aa00ec8c56c9b574d36ca1c016": "2000000000000000000000",
  "6ca6a132ce1cd288bee30ec7cfeffb85c1f50a54": "2000000000000000000000",
  "b85f26dd0e72d9c29ebaf697a8af77472c2b58b5": "11900000000000000000000",
  "055bd02caf19d6202bbcdc836d187bd1c01cf261": "100000000000000000000",
  "3c322e611fdb820d47c6f8fc64b6fad74ca95f5e": "242514000000000000000",
  "8daddf52efbd74da95b969a5476f4fbbb563bfd2": "835000000000000000000",
  "c63ac417992e9f9b60386ed953e6d7dff2b090e8": "4000086000000000000000",
  "27f03cf1abc5e1b51dbc444b289e542c9ddfb0e6": "5000000000000000000000",
  "d8f4bae6f84d910d6d7d5ac914b1e68372f94135": "100000000000000000000",
  "9f83a293c324d4106c18faa8888f64d299054ca0": "200000000000000000000",
  "39ee4fe00fbced647068d4f57c01cb22a80bccd1": "6000000000000000000000",
  "404100db4c5d0eec557823b58343758bcc2c8083": "20000000000000000000",
  "02751dc68cb5bd737027abf7ddb77390cd77c16b": "20000000000000000000",
  "d10302faa1929a326904d376bf0b8dc93ad04c4c": "1790000000000000000000",
  "cc419fd9912b85135659e77a93bc3df182d45115": "10000000000000000000000",
  "10097198b4e7ee91ff82cc2f3bd95fed73c540c0": "2000000000000000000000",
  "7e24d9e22ce1da3ce19f219ccee523376873f367": "5900150000000000000000",
  "2e4ee1ae996aa0a1d92428d06652a6bea6d2d15d": "2000000000000000000000",
  "91a4149a2c7b1b3a67ea28aff34725e0bf8d7524": "1940000000000000000000",
  "ead65262ed5d122df2b2751410f98c32d1238f51": "101680000000000000000",
  "e20954d0f4108c82d4dcb2148d26bbd924f6dd24": "10000000000000000000000",
  "ebb7d2e11bc6b58f0a8d45c2f6de3010570ac891": "26740000000000000000",
  "ef115252b1b845cd857f002d630f1b6fa37a4e50": "1970000000000000000000",
  "01a818135a414210c37c62b625aca1a54611ac36": "260000000000000000000",
  "ea1ea0c599afb9cd36caacbbb52b5bbb97597377": "1069600000000000000000",
  "7a7a4f807357a4bbe68e1aa806393210c411ccb3": "30000000000000000000000",
  "6d40ca27826d97731b3e86effcd7b92a4161fe89": "2000000000000000000000",
  "8431277d7bdd10457dc017408c8dbbbd414a8df3": "39400000000000000000",
  "69b81d5981141ec7a7141060dfcf8f3599ffc63e": "5000000000000000000000",
  "47688410ff25d654d72eb2bc06e4ad24f833b094": "160440000000000000000",
  "6c101205b323d77544d6dc52af37aca3cec6f7f1": "10000000000000000000000",
  "fb685c15e439965ef626bf0d834cd1a89f2b5695": "3940000000000000000000",
  "673706b1b0e4dc7a949a7a796258a5b83bb5aa83": "16100000000000000000000",
  "ecdaf93229b45ee672f65db506fb5eca00f7fce6": "1605009000000000000000",
  "ec6904bae1f69790591709b0609783733f2573e3": "500000000000000000000",
  "812ea7a3b2c86eed32ff4f2c73514cc63bacfbce": "1000000000000000000000",
  "196c02210a450ab0b36370655f717aa87bd1c004": "259456000000000000000",
  "d96ac2507409c7a383ab2eee1822a5d738b36b56": "200000000000000000000",
  "ae2f9c19ac76136594432393b0471d08902164d3": "698600000000000000000",
  "9d32962ea99700d93228e9dbdad2cc37bb99f07e": "3327560000000000000000",
  "17e584e810e567702c61d55d434b34cdb5ee30f6": "5000000000000000000000",
  "a3a93ef9dbea2636263d06d8492f6a41de907c22": "60000000000000000000",
  "2b5016e2457387956562587115aa8759d8695fdf": "200000000000000000000000",
  "140129eaa766b5a29f5b3af2574e4409f8f6d3f1": "6400000000000000000000",
  "7025965d2b88da197d4459be3dc9386344cc1f31": "2005500000000000000000",
  "388bdcdae794fc44082e667501344118ea96cd96": "1670000000000000000000",
  "eee9d0526eda01e43116a395322dda8970578f39": "9999980000000000000000",
  "6ec89b39f9f5276a553e8da30e6ec17aa47eefc7": "447500000000000000000",
  "7e236666b2d06e63ea4e2ab84357e2dfc977e50e": "999972000000000000000",
  "68df947c495bebaeb8e889b3f953d533874bf106": "546000000000000000000",
  "d40ed66ab3ceff24ca05ecd471efb492c15f5ffa": "500000000000000000000",
  "f0c70d0d6dab7663aa9ed9ceea567ee2c6b02765": "2089349000000000000000",
  "b589676d15a04448344230d4ff27c95edf122c49": "1000000000000000000000",
  "a0347f0a98776390165c166d32963bf74dcd0a2f": "1000000000000000000000",
  "d47d8685faee147c520fd986709175bf2f886bef": "2000000000000000000000",
  "a1dcd0e5b05a977c9623e5ae2f59b9ada2f33e31": "100000000000000000000",
  "4979194ec9e97db9bee8343b7c77d9d7f3f1dc9f": "20000000000000000000",
  "7cd20eccb518b60cab095b720f571570caaa447e": "500000000000000000000",
  "2ff830cf55fb00d5a0e03514fecd44314bd6d9f1": "10000000000000000000000",
  "0bb25ca7d188e71e4d693d7b170717d6f8f0a70a": "336870000000000000000",
  "e9a2b4914e8553bf0d7c00ca532369b879f931bf": "2000000000000000000000",
  "720e6b22bf430966fa32b6acb9a506eebf662c61": "152000000000000000000",
  "7ade5d66b944bb860c0efdc86276d58f4653f711": "2000000000000000000000",
  "2eaff9f8f8113064d3957ac6d6e11eee42c8195d": "1970000000000000000000",
  "0c8fd7775e54a6d9c9a3bf890e761f6577693ff0": "9850000000000000000000",
  "290a56d41f6e9efbdcea0342e0b7929a8cdfcb05": "344000000000000000000",
  "d73ed2d985b5f21b55b274643bc6da031d8edd8d": "49250000000000000000000",
  "80156d10efa8b230c99410630d37e269d4093cea": "2000000000000000000000",
  "0989c200440b878991b69d6095dfe69e33a22e70": "1910000000000000000000",
  "ec8014efc7cbe5b0ce50f3562cf4e67f8593cd32": "17300000000000000000",
  "de612d0724e84ea4a7feaa3d2142bd5ee82d3201": "20000000000000000000",
  "0f832a93df9d7f74cd0fb8546b7198bf5377d925": "143000000000000000000",
  "aa2c670096d3f939305325427eb955a8a60db3c5": "2003010000000000000000",
  "25287b815f5c82380a73b0b13fbaf982be24c4d3": "40000000000000000000",
  "e75c3b38a58a3f33d55690a5a59766be185e0284": "500000000000000000000",
  "1940dc9364a852165f47414e27f5002445a4f143": "10850000000000000000000",
  "e5b826196c0e1bc1119b021cf6d259a610c99670": "200000000000000000000",
  "82a15cef1d6c8260eaf159ea3f0180d8677dce1c": "2000000000000000000000",
  "da06044e293c652c467fe74146bf185b21338a1c": "1000000000000000000000",
  "f815c10a032d13c34b8976fa6e3bd2c9131a8ba9": "1337000000000000000000",
  "cd95fa423d6fc120274aacde19f4eeb766f10420": "200000000000000000000",
  "e3a4f83c39f85af9c8b1b312bfe5fc3423afa634": "28650000000000000000",
  "768ce0daa029b7ded022e5fc574d11cde3ecb517": "322000000000000000000",
  "e3ec18a74ed43855409a26ade7830de8e42685ef": "19700000000000000000",
  "b2bdbedf95908476d7148a370cc693743628057f": "4000000000000000000000",
  "bbb8ffe43f98de8eae184623ae5264e424d0b8d7": "107600000000000000000",
  "090cebef292c3eb081a05fd8aaf7d39bf07b89d4": "4000000000000000000000",
  "dd2a233adede66fe1126d6c16823b62a021feddb": "2000000000000000000000",
  "d8cd64e0284eec53aa4639afc4750810b97fab56": "20000000000000000000",
  "e5953fea497104ef9ad2d4e5841c271f073519c2": "704000000000000000000",
  "967d4142af770515dd7062af93498dbfdff29f20": "20200000000000000000",
  "fd191a35157d781373fb411bf9f25290047c5eef": "1000000000000000000000",
  "8967d7b9bdb7b4aed22e65a15dc803cb7a213f10": "400000000000000000000",
  "51e43fe0d25c782860af81ea89dd793c13f0cbb1": "60000000000000000000",
  "a38476691d34942eea6b2f76889223047db4617a": "2000000000000000000000",
  "1321ccf29739b974e5a516f18f3a843671e39642": "4000000000000000000000",
  "4d71a6eb3d7f327e1834278e280b039eddd31c2f": "6000000000000000000000",
  "dc2d15a69f6bb33b246aef40450751c2f6756ad2": "1996000000000000000000",
  "ec89f2b678a1a15b9134ec5eb70c6a62071fbaf9": "200000000000000000000",
  "27bf943c1633fe32f8bcccdb6302b407a5724e44": "940229000000000000000",
  "d0a6c6f9e9c4b383d716b31de78d56414de8fa91": "300000000000000000000",
  "7b6175ec9befc738249535ddde34688cd36edf25": "10000000000000000000000",
  "41ce79950935cff55bf78e4ccec2fe631785db95": "2000000000000000000000",
  "5598b3a79a48f32b1f5fc915b87b645d805d1afe": "500000000000000000000",
  "5c4881165cb42bb82e97396c8ef44adbf173fb99": "110600000000000000000",
  "25b0533b81d02a617b9229c7ec5d6f2f672e5b5a": "1000000000000000000000",
  "015f097d9acddcddafaf2a107eb93a40fc94b04c": "20000000000000000000000",
  "b84b53d0bb125656cddc52eb852ab71d7259f3d5": "16000000000000000000000",
  "1a79c7f4039c67a39d7513884cdc0e2c34222490": "20000000000000000000",
  "926209b7fda54e8ddb9d9e4d3d19ebdc8e88c29f": "2000000000000000000000",
  "c2fe7d75731f636dcd09dbda0671393ba0c82a7d": "2200000000000000000000",
  "30248d58e414b20fed3a6c482b59d9d8f5a4b7e2": "60000000000000000000",
  "d0e194f34b1db609288509ccd2e73b6131a2538b": "999972000000000000000",
  "e8f29969e75c65e01ce3d86154207d0a9e7c76f2": "2991807000000000000000",
  "cb93199b9c90bc4915bd859e3d42866dc8c18749": "231800000000000000000",
  "e6fe0afb9dcedd37b2e22c451ba6feab67348033": "10000000000000000000000",
  "82f854c9c2f087dffa985ac8201e626ca5467686": "100000000000000000000000",
  "63bb664f9117037628594da7e3c5089fd618b5b5": "20000000000000000000",
  "f8d17424c767bea31205739a2b57a7277214eebe": "42000000000000000000",
  "4ca8db4a5efefc80f4cd9bbcccb03265931332b6": "200000000000000000000",
  "c56e6b62ba6e40e52aab167d21df025d0055754b": "2000000000000000000000",
  "0d8c40a79e18994ff99ec251ee10d088c3912e80": "114600000000000000000",
  "40a331195b977325c2aa28fa2f42cb25ec3c253c": "2000000000000000000000",
  "a2c5854ff1599f98892c5725d262be1da98aadac": "314315000000000000000",
  "23ab09e73f87aa0f3be0139df0c8eb6be5634f95": "8000000000000000000000",
  "b8040536958d5998ce4bec0cfc9c2204989848e9": "24472420000000000000000",
  "42d6b263d9e9f4116c411424fc9955783c763030": "2000000000000000000000",
  "c496cbb0459a6a01600fc589a55a32b454217f9d": "274000000000000000000",
  "48302c311ef8e5dc664158dd583c81194d6e0d58": "3364760000000000000000",
  "d5b284040130abf7c1d163712371cc7e28ad66da": "1970000000000000000000",
  "d22f0ca4cd479e661775053bcc49e390f670dd8a": "1000000000000000000000",
  "e597f083a469c4591c3d2b1d2c772787befe27b2": "280000000000000000000",
  "668b6ba8ab08eace39c502ef672bd5ccb6a67a20": "31135320000000000000000",
  "a3bff1dfa9971668360c0d82828432e27bf54e67": "200000000000000000000",
  "ee655bb4ee0e8d5478526fb9f15e4064e09ff3dd": "200000000000000000000",
  "121f855b70149ac83473b9706fb44d47828b983b": "1400000000000000000000",
  "20a15256d50ce058bf0eac43aa533aa16ec9b380": "20000000000000000000",
  "69bcfc1d43b4ba19de7b274bdffb35139412d3d7": "985000000000000000000",
  "db288f80ffe232c2ba47cc94c763cf6fc9b82b0d": "85000000000000000000",
  "e1cb83ec5eb6f1eeb85e99b2fc63812fde957184": "20000000000000000000000",
  "a419a984142363267575566089340eea0ea20819": "1999944000000000000000",
  "8489f6ad1d9a94a297789156899db64154f1dbb5": "358849000000000000000",
  "d609bf4f146eea6b0dc8e06ddcf4448a1fccc9fa": "2000000000000000000000",
  "df1fa2e20e31985ebe2c0f0c93b54c0fb67a264b": "200000000000000000000",
  "efe8ff87fc260e0767638dd5d02fc4672e0ec06d": "2000000000000000000000",
  "eef1bbb1e5a83fde8248f88ee3018afa2d1332eb": "200000000000000000000",
  "4b3aab335ebbfaa870cc4d605e7d2e74c668369f": "60000000000000000000000",
  "8f4fb1aea7cd0f570ea5e61b40a4f4510b6264e4": "4000000000000000000000",
  "0b0b3862112aeec3a03492b1b05f440eca54256e": "4000000000000000000000",
  "dff4007931786593b229efe5959f3a4e219e51af": "4925000000000000000000",
  "fec14e5485de2b3eef5e74c46146db8e454e0335": "179000000000000000000",
  "ac21c1e5a3d7e0b50681679dd6c792dbca87decb": "100000000000000000000000",
  "796ebbf49b3e36d67694ad79f8ff36767ac6fab0": "60800000000000000000",
  "ae7739124ed153052503fc101410d1ffd8cd13b7": "999942000000000000000",
  "86026cad3fe4ea1ce7fca260d3d45eb09ea6a364": "200000000000000000000",
  "b2fc84a3e50a50af02f94da0383ed59f71ff01d7": "30000000000000000000000",
  "bbab000b0408ed015a37c04747bc461ab14e151b": "6000000000000000000000",
  "c4ff6fbb1f09bd9e102ba033d636ac1c4c0f5304": "1000000000000000000000",
  "cc606f511397a38fc7872bd3b0bd03c71bbd768b": "1000000000000000000000",
  "f346d7de92741c08fc58a64db55b062dde012d14": "295106000000000000000",
  "33f15223310d44de8b6636685f3a4c3d9c5655a5": "250500000000000000000",
  "3c860e2e663f46db53427b29fe3ea5e5bf62bbcc": "98500000000000000000",
  "acb94338554bc488cc88ae2d9d94080d6bdf8410": "1000000000000000000000",
  "9c5cc111092c122116f1a85f4ee31408741a7d2f": "492500000000000000000",
  "5f76f0a306269c78306b3d650dc3e9c37084db61": "2400000000000000000000",
  "2c0cc3f951482cc8a2925815684eb9f94e060200": "6000000000000000000000",
  "b74372dbfa181dc9242f39bf1d3731dffe2bdacf": "2000000000000000000000",
  "3bab4b01a7c84ba13feea9b0bb191b77a3aadca3": "200000000000000000000",
  "39aa05e56d7d32385421cf9336e90d3d15a9f859": "26000000000000000000",
  "4a52bad20357228faa1e996bed790c93674ba7d0": "1337000000000000000000",
  "ff128f4b355be1dc4a6f94fa510d7f15d53c2aff": "2720000000000000000000",
  "92793ac5b37268774a7130de2bbd330405661773": "40110000000000000000",
  "db19a3982230368f0177219cb10cb259cdb2257c": "2000000000000000000000",
  "8d1794da509cb297053661a14aa892333231e3c1": "199600000000000000000",
  "9b7c8810cc7cc89e804e6d3e38121850472877fe": "2000000000000000000000",
  "ed3cbc3782cebd67989b305c4133b2cde32211eb": "400000000000000000000",
  "8532490897bbb4ce8b7f6b837e4cba848fbe9976": "100000000000000000000",
  "c384ac6ee27c39e2f278c220bdfa5baed626d9d3": "600000000000000000000",
  "b1459285863ea2db3759e546ceb3fb3761f5909c": "1122309000000000000000",
  "634efc24371107b4cbf03f79a93dfd93e431d5fd": "1221341000000000000000",
  "ef9f59aeda418c1494682d941aab4924b5f4929a": "100000000000000000000000",
  "e7311c9533f0092c7248c9739b5b2c864a34b1ce": "2803436000000000000000",
  "e6e621eaab01f20ef0836b7cad47464cb5fd3c96": "316014000000000000000",
  "cd102cd6db3df14ad6af0f87c72479861bfc3d24": "2000000000000000000000",
  "005a9c03f69d17d66cbb8ad721008a9ebbb836fb": "2000000000000000000000",
  "a072cebe62a9e9f61cc3fbf88a9efbfe3e9a8d70": "400000000000000000000",
  "f2ab1161750244d0ecd048ee0d3e51abb143a2fd": "1235800000000000000000",
  "f686785b89720b61145fea80978d6acc8e0bc196": "4000000000000000000000",
  "0a2b4fc5d81ace67dc4bba03f7b455413d46fe3d": "197000000000000000000",
  "c32ec7e42ad16ce3e2555ad4c54306eda0b26758": "2000000000000000000000",
  "f3fa723552a5d0512e2b62f48dca7b2b8105305b": "137000000000000000000",
  "6dc3f92baa1d21dab7382b893261a0356fa7c187": "1730000000000000000000",
  "4627c606842671abde8295ee5dd94c7f549534f4": "286600000000000000000",
  "e39e46e15d22ce56e0c32f1877b7d1a264cf94f3": "20000000000000000000000",
  "d7d157e4c0a96437a6d285741dd23ec4361fa36b": "2000000000000000000000",
  "68f8f45155e98c5029a4ebc5b527a92e9fa83120": "4436101000000000000000",
  "9aba2b5e27ff78baaab5cdc988b7be855cebbdce": "9999000000000000000000",
  "66b39837cb3cac8a802afe3f12a258bbca62dacd": "400000000000000000000",
  "d39b7cbc94003fc948f0cde27b100db8ccd6e063": "400000000000000000000",
  "3db9ed7f024c7e26372feacf2b050803445e3810": "1285600000000000000000",
  "3fbc1e4518d73400c6d046359439fb68ea1a49f4": "16400000000000000000000",
  "e3da4f3240844c9b6323b4996921207122454399": "11539639000000000000000",
  "09afa73bc047ef46b977fd9763f87286a6be68c6": "501500000000000000000",
  "1dbe8e1c2b8a009f85f1ad3ce80d2e05350ee39c": "135400000000000000000",
  "2c5a2d0abda03bbe215781b4ff296c8c61bdbaf6": "30617000000000000000",
  "9a9d1dc0baa77d6e20c3d849c78862dd1c054c87": "880000000000000000000",
  "3ccef88679573947e94997798a1e327e08603a65": "807700000000000000000",
  "850b9db18ff84bf0c7da49ea3781d92090ad7e64": "2600000000000000000000",
  "361c75931696bc3d427d93e76c77fd13b241f6f4": "549212000000000000000",
  "c8f2b320e6dfd70906c597bad2f9501312c78259": "1504800000000000000000",
  "8dc1d5111d09af25fdfcac455c7cec283e6d6775": "2000000000000000000000",
  "cd7ece086b4b619b3b369352ee38b71ddb06439a": "200000000000000000000",
  "f607c2150d3e1b99f24fa1c7d540add35c4ebe1e": "3098020000000000000000",
  "32485c818728c197fea487fbb6e829159eba8370": "1053893000000000000000",
  "8e670815fb67aeaea57b86534edc00cdf564fee5": "3300000000000000000000",
  "10df681506e34930ac7a5c67a54c3e89ce92b981": "2153800000000000000000",
  "1cf2eb7a8ccac2adeaef0ee87347d535d3b94058": "2000000000000000000000",
  "f0dc43f205619127507b2b1c1cfdf32d28310920": "301973000000000000000",
  "f2c2904e9fa664a11ee25656d8fd2cc0d9a522a0": "13370000000000000000",
  "70670fbb05d33014444b8d1e8e7700258b8caa6d": "2000000000000000000000",
  "5160ed612e1b48e73f3fc15bc4321b8f23b8a24b": "562800000000000000000",
  "54a62bf9233e146ffec3876e45f20ee8414adeba": "10000000000000000000000",
  "26d4ec17d5ceb2c894bdc59d0a6a695dad2b43cc": "2935300000000000000000",
  "205fc843e19a4913d1881eb69b69c0fa3be5c50b": "9700000000000000000000",
  "e001aba77c02e172086c1950fffbcaa30b83488f": "1970000000000000000000",
  "21efbca09b3580b98e73f5b2f7f4dc0bf02c529c": "2000000000000000000000",
  "c4d916574e68c49f7ef9d3d82d1638b2b7ee0985": "1580000000000000000000",
  "cab0d32cf3767fa6b3537c84328baa9f50458136": "8960000000000000000000",
  "7ce4686446f1949ebed67215eb0d5a1dd72c11b8": "2217776000000000000000",
  "7837fcb876da00d1eb3b88feb3df3fa4042fac82": "1760000000000000000000",
  "71e38ff545f30fe14ca863d4f5297fd48c73a5ce": "3580000000000000000000",
  "e528a0e5a267d667e9393a6584e19b34dc9be973": "5600000000000000000000",
  "c5374928cdf193705443b14cc20da423473cd9cf": "138139000000000000000",
  "e406f5dd72cab66d8a6ecbd6bfb494a7b6b09afe": "100000000000000000000",
  "d7ef340e66b0d7afcce20a19cb7bfc81da33d94e": "3000000000000000000000",
  "e012db453827a58e16c1365608d36ed658720507": "2000000000000000000000",
  "d59638d3c5faa7711bf085745f9d5bdc23d498d8": "2000000000000000000000",
  "008fc7cbadffbd0d7fe44f8dfd60a79d721a1c9c": "1000000000000000000000",
  "8a3470282d5e2a2aefd7a75094c822c4f5aeef8a": "242743000000000000000",
  "38b3965c21fa893931079beacfffaf153678b6eb": "170374000000000000000",
  "57dd9471cbfa262709f5f486bcb774c5f527b8f8": "197000000000000000000",
  "5a60c924162873fc7ea4da7f972e350167376031": "83583000000000000000",
  "b9013c51bd078a098fae05bf2ace0849c6be17a5": "80000000000000000000",
  "dc23b260fcc26e7d10f4bd044af794579460d9da": "500038000000000000000",
  "45db03bccfd6a5f4d0266b82a22a368792c77d83": "8000000000000000000000",
  "3e0cbe6a6dcb61f110c45ba2aa361d7fcad3da73": "8022000000000000000000",
  "42d3a5a901f2f6bd9356f112a70180e5a1550b60": "925000000000000000000",
  "47219229e8cd56659a65c2a943e2dd9a8f4bfd89": "1520000000000000000000",
  "a20d071b1b003063497d7990e1249dabf36c35f7": "1000000000000000000000",
  "6835c8e8b74a2ca2ae3f4a8d0f6b954a3e2a8392": "60140000000000000000",
  "0c2d5c920538e953caaf24f0737f554cc6927742": "1000000000000000000000",
  "eedf6c4280e6eb05b934ace428e11d4231b5905b": "200000000000000000000",
  "ffa696ecbd787e66abae4fe87b635f07ca57d848": "1337000000000000000000",
  "3e81772175237eb4cbe0fe2dcafdadffeb6a1999": "8800000000000000000000",
  "b44783c8e57b480793cbd69a45d90c7b4f0c48ac": "20000000000000000000",
  "f84f090adf3f8db7e194b350fbb77500699f66fd": "1970000000000000000000",
  "2e9824b5c132111bca24ddfba7e575a5cd7296c1": "17201900000000000000000",
  "5cce72d068c7c3f55b1d2819545e77317cae8240": "1940000000000000000000",
  "d815e1d9f4e2b5e57e34826b7cfd8881b8546890": "17300000000000000000",
  "f901c00fc1db88b69c4bc3252b5ca70ea6ee5cf6": "400000000000000000000",
  "a960b1cadd3b5c1a8e6cb3abcaf52ee7c3d9fa88": "1522704000000000000000",
  "f7e45a12aa711c709acefe95f33b78612d2ad22a": "66230000000000000000000",
  "c332df50b13c013490a5d7c75dbfa366da87b6d6": "4000000000000000000000",
  "d467cf064c0871989b90d8b2eb14ccc63b360823": "200000000000000000000",
  "b9144b677c2dc614ceefdf50985f1183208ea64c": "2000000000000000000000",
  "ea7c4d6dc729cd6b157c03ad237ca19a209346c3": "2000000000000000000000",
  "9c9de44724a4054da0eaa605abcc802668778bea": "200020000000000000000",
  "d7140c8e5a4307fab0cc27badd9295018bf87970": "109600000000000000000",
  "c33acdb3ba1aab27507b86b15d67faf91ecf6293": "2000000000000000000000",
  "db2a0c9ab64df58ddfb1dbacf8ba0d89c85b31b4": "4000000000000000000000",
  "bfcb9730246304700da90b4153e71141622e1c41": "1000000000000000000000",
  "07dc8c8b927adbedfa8f5d639b4352351f2f36d2": "314382000000000000000",
  "2d5391e938b34858cf965b840531d5efda410b09": "1400000000000000000000",
  "0b5e2011ebc25a007f21362960498afb8af280fb": "2000000000000000000000",
  "ed9fb1f5af2fbf7ffc5029cee42b70ff5c275bf5": "280000000000000000000",
  "a3232d068d50064903c9ebc563b515acc8b7b097": "2002000000000000000000",
  "66274fea82cd30b6c29b23350e4f4f3d310a5899": "2070000000000000000000",
  "dbfb1bb464b8a58e500d2ed8de972c45f5f1c0fb": "1600000000000000000000",
  "a1f8d8bcf90e777f19b3a649759ad95027abdfc3": "200000000000000000000",
  "5bd23547477f6d09d7b2a005c5ee650c510c56d7": "10000000000000000000000",
  "ec3b8b58a12703e581ce5ffd7e21c57d1e5c663f": "1700000000000000000000",
  "54310b3aa88703a725dfa57de6e646935164802c": "1910000000000000000000",
  "8f41b1fbf54298f5d0bc2d122f4eb95da4e5cd3d": "354200000000000000000",
  "c80b36d1beafba5fcc644d60ac6e46ed2927e7dc": "13370000000000000000",
  "1ea492bce1ad107e337f4bd4a7ac9a7babcccdab": "100000000000000000000",
  "aaf023fef290a49bb78bb7abc95d669c50d528b0": "200000000000000000000",
  "80b79f338390d1ba1b3737a29a0257e5d91e0731": "20000000000000000000",
  "f382e4c20410b951089e19ba96a2fee3d91cce7e": "5054000000000000000000",
  "0748713145ef83c3f0ef4d31d823786f7e9cc689": "4500000000000000000000",
  "21e219c89ca8ac14ae4cba6130eeb77d9e6d3962": "789580000000000000000",
  "ca9a042a6a806ffc92179500d24429e8ab528117": "1100000000000000000000",
  "bcc9593b2da6df6a34d71b1aa38dacf876f95b88": "20000000000000000000",
  "d1438267231704fc7280d563adf4763844a80722": "200000000000000000000",
  "4989e1ab5e7cd00746b3938ef0f0d064a2025ba5": "2000000000000000000000",
  "bd4b60faec740a21e3071391f96aa534f7c1f44e": "182000000000000000000",
  "8c7cb4e48b25031aa1c4f92925d631a8c3edc761": "1000000000000000000000",
  "322788b5e29bf4f5f55ae1ddb32085fda91b8ebe": "200000000000000000000",
  "f15e182c4fbbad79bd93342242d4dccf2be58925": "1940000000000000000000",
  "1548b770a5118ede87dba2f690337f616de683ab": "527558000000000000000",
  "69c2d835f13ee90580408e6a3283c8cca6a434a2": "656000000000000000000",
  "a1e4380a3b1f749673e270229993ee55f35663b4": "2000000000000000000000",
  "c7675e5647b9d8daf4d3dff1e552f6b07154ac38": "180000000000000000000",
  "a02c1e34064f0475f7fa831ccb25014c3aa31ca2": "60000000000000000000",
  "517c75430de401c341032686112790f46d4d369e": "388000000000000000000",
  "29681d9912ddd07eaabb88d05d90f766e862417d": "1000000000000000000000",
  "544dda421dc1eb73bb24e3e56a248013b87c0f44": "1970000000000000000000",
  "2ab97e8d59eee648ab6caf8696f89937143864d6": "3820000000000000000000",
  "79c130c762b8765b19d2abc9a083ab8f3aad7940": "3940000000000000000000",
  "f9650d6989f199ab1cc479636ded30f241021f65": "850000000000000000000",
  "d1c96e70f05ae0e6cd6021b2083750a7717cde56": "500000000000000000000",
  "88106c27d20b74b4b98ca62b232bd5c97411171f": "197000000000000000000",
  "37ab66083a4fa23848b886f9e66d79cdc150cc70": "88510000000000000000000",
  "8e6156336be2cdbe32140df08a2ba55fd0a58463": "74480000000000000000",
  "2982d76a15f847dd41f1922af368fe678d0e681e": "100000000000000000000",
  "209e8e29d33beae8fb6baa783d133e1d9ec1bc0b": "835000000000000000000",
  "b325674c01e3f7290d5226339fbeac67d221279f": "2800000000000000000000",
  "f20c9a99b74759d782f25c1ceca802a27e0b436c": "1670000000000000000000",
  "61bf84d5ab026f58c873f86ff0dfca82b55733ae": "2000000000000000000000",
  "0734a0a81c9562f4d9e9e10a8503da15db46d76e": "18200000000000000000",
  "0521bc3a9f8711fecb10f50797d71083e341eb9d": "20000000000000000000",
  "3301d9ca2f3bfe026279cd6819f79a293d98156e": "50000000000000000000000",
  "549d51af29f724c967f59423b85b2681e7b15136": "3760000000000000000000",
  "2053ac97548a0c4e8b80bc72590cd6a098fe7516": "187000000000000000000",
  "aa321fdbd449180db8ddd34f0fe906ec18ee0914": "685000000000000000000",
  "697f55536bf85ada51841f0287623a9f0ed09a17": "10000000000000000000000",
  "df57353aaff2aadb0a04f9014e8da7884e86589c": "152800000000000000000",
  "6807ddc88db489b033e6b2f9a81553571ab3c805": "29944000000000000000",
  "90057af9aa66307ec9f033b29724d3b2f41eb6f9": "121930000000000000000000",
  "3ff836b6f57b901b440c30e4dbd065cf37d3d48c": "200000000000000000000",
  "91051764af6b808e4212c77e30a5572eaa317070": "1000000000000000000000",
  "7faa30c31519b584e97250ed2a3cf3385ed5fd50": "2000000000000000000000",
  "fb842ca2c5ef133917a236a0d4ac40690110b038": "306000000000000000000",
  "aa167026d39ab7a85635944ed9edb2bfeba11850": "8298000000000000000000",
  "57beea716cbd81700a73d67f9ff039529c2d9025": "200000000000000000000",
  "654b7e808799a83d7287c67706f2abf49a496404": "1970000000000000000000",
  "dde8f0c31b7415511dced1cd7d46323e4bd12232": "1610000000000000000000",
  "8667fa1155fed732cfb8dca5a0d765ce0d0705ed": "81770000000000000000",
  "905526568ac123afc0e84aa715124febe83dc87c": "17900000000000000000",
  "8e98766524b0cf2747c50dd43b9567594d9731de": "1997200000000000000000",
  "c6df2075ebd240d44869c2be6bdf82e63d4ef1f5": "20000000000000000000",
  "2ff5cab12c0d957fd333f382eeb75107a64cb8e8": "10000000000000000000000",
  "3055efd26029e0d11b930df4f53b162c8c3fd2ce": "499938000000000000000",
  "b2c53efa33fe4a3a1a80205c73ec3b1dbcad0602": "1918595000000000000000",
  "766b3759e8794e926dac473d913a8fb61ad0c2c9": "86500000000000000000",
  "882aa798bf41df179f85520130f15ccdf59b5e58": "2000000000000000000000",
  "80b23d380b825c46e0393899a85556462da0e18c": "2000000000000000000000",
  "51f4663ab44ff79345f427a0f6f8a6c8a53ff234": "20000000000000000000000",
  "8d5ef172bf77315ea64e85d0061986c794c6f519": "3940000000000000000000",
  "75ac547017134c04ae1e11d60e63ec04d18db4ef": "6000000000000000000000",
  "ce1b0cb46aaecfd79b880cad0f2dda8a8dedd0b1": "20000000000000000000",
  "21408b4d7a2c0e6eca4143f2cacdbbccba121bd8": "20000000000000000000000",
  "9c526a140683edf1431cfaa128a935e2b614d88b": "111000000000000000000",
  "599728a78618d1a17b9e34e0fed8e857d5c40622": "14000000000000000000000",
  "6ac4d4be2db0d99da3faaaf7525af282051d6a90": "80185000000000000000",
  "785c8ea774d73044a734fa790a1b1e743e77ed7c": "238750000000000000000",
  "ff2726294148b86c78a9372497e459898ed3fee3": "1970000000000000000000",
  "68a86c402388fddc59028fec7021e98cbf830eac": "19100000000000000000",
  "6121af398a5b2da69f65c6381aec88ce9cc6441f": "640000000000000000000",
  "5a6686b0f17e07edfc59b759c77d5bef164d3879": "1490000000000000000000",
  "a2d38de1c73906f6a7ca6efeb97cf6f69cc421be": "1000000000000000000000",
  "ae3f98a443efe00f3e711d525d9894dc9a61157b": "295500000000000000000",
  "5f1c8a04c90d735b8a152909aeae636fb0ce1665": "6999974000000000000000",
  "d687cec0059087fdc713d4d2d65e77daefedc15f": "60000000000000000000",
  "845203750f7148a9aa262921e86d43bf641974fd": "100000000000000000000",
  "64464a6805b462412a901d2db8174b06c22deea6": "475600000000000000000",
  "053471cd9a41925b3904a5a8ffca3659e034be23": "199600000000000000000",
  "911ff233e1a211c0172c92b46cf997030582c83a": "1970000000000000000000",
  "d930b27a78876485d0f48b70dd5336549679ca8f": "40000000000000000000",
  "6ba9b21b35106be159d1c1c2657ac56cd29ffd44": "4480000000000000000000",
  "ebac2b4408ef5431a13b8508e86250982114e145": "4000000000000000000000",
  "931df34d1225bcd4224e63680d5c4c09bce735a6": "68000000000000000000",
  "23eb6fd85671a9063ab7678ebe265a20f61a02b3": "2000000000000000000000",
  "b32af3d3e8d075344926546f2e32887bf93b16bd": "200000000000000000000",
  "8261fa230c901d43ff579f4780d399f31e6076bc": "2000000000000000000000",
  "84a74ceecff65cb93b2f949d773ef1ad7fb4a245": "92998000000000000000",
  "da982e9643ffece723075a40fe776e5ace04b29b": "160884000000000000000",
  "ba70e8b4759c0c3c82cc00ac4e9a94dd5bafb2b8": "890342000000000000000",
  "82f2e991fd324c5f5d17768e9f61335db6319d6c": "500000000000000000000",
  "3e84b35c5b2265507061d30b6f12da033fe6f8b9": "1790000000000000000000",
  "2895e80999d406ad592e2b262737d35f7db4b699": "1940000000000000000000",
  "65f534346d2ffb787fa9cf185d745ba42986bd6e": "500000000000000000000",
  "c7368b9709a5c1b51c0adf187a65df14e12b7dba": "9489681000000000000000",
  "ba176dbe3249e345cd4fa967c0ed13b24c47e586": "399990000000000000000",
  "cff6a6fe3e9a922a12f21faa038156918c4fcb9c": "78800000000000000000",
  "bcbd31252ec288f91e298cd812c92160e738331a": "1975802000000000000000",
  "5543dd6d169eec8a213bbf7a8af9ffd15d4ff759": "18200000000000000000",
  "b65bd780c7434115162027565223f44e5498ff8c": "19999800000000000000000",
  "4cadf573ce4ceec78b8e1b21b0ed78eb113b2c0e": "2000000000000000000000",
  "04aafc8ae5ce6f4903c89d7fac9cb19512224777": "500000000000000000000",
  "fdc4d4765a942f5bf96931a9e8cc7ab8b757ff4c": "87000000000000000000000",
  "38c7851f5ffd4cee98df30f3b25597af8a6ca263": "2631920000000000000000",
  "0e320219838e859b2f9f18b72e3d4073ca50b37d": "2000000000000000000000",
  "bbbf39b1b67995a42241504f9703d2a14a515696": "1580000000000000000000",
  "5b800bfd1b3ed4a57d875aed26d42f1a7708d72a": "6392000000000000000000",
  "5b85e60e2af0544f2f01c64e2032900ebd38a3c7": "2000000000000000000000",
  "c9ac01c3fb0929033f0ccc7e1acfeaaba7945d47": "12459235000000000000000",
  "f355d3ec0cfb907d8dbb1bf3464e458128190bac": "4925600000000000000000",
  "69c08d744754de709ce96e15ae0d1d395b3a2263": "1000000000000000000000",
  "cef77451dfa2c643e00b156d6c6ff84e2373eb66": "188000000000000000000",
  "f3034367f87d24d3077fa9a2e38a8b0ccb1104ef": "1000000000000000000000",
  "73473e72115110d0c3f11708f86e77be2bb0983c": "20000000000000000000",
  "761e6caec189c230a162ec006530193e67cf9d19": "2000000000000000000000",
  "e9caf827be9d607915b365c83f0d3b7ea8c79b50": "3000000000000000000000",
  "eda4b2fa59d684b27a810df8978a73df308a63c2": "4000000000000000000000",
  "065ff575fd9c16d3cb6fd68ffc8f483fc32ec835": "200000000000000000000",
  "a72ee666c4b35e82a506808b443cebd5c632c7dd": "800000000000000000000",
  "5b30608c678e1ac464a8994c3b33e5cdf3497112": "400000000000000000000",
  "b0c7ce4c0dc3c2bbb99cc1857b8a455f611711ce": "4000000000000000000000",
  "d7274d50804d9c77da93fa480156efe57ba501de": "1940000000000000000000",
  "a609c26dd350c235e44b2b9c1dddccd0a9d9f837": "1000000000000000000000",
  "bddfa34d0ebf1b04af53b99b82494a9e3d8aa100": "12000000000000000000000",
  "fd40242bb34a70855ef0fd90f3802dec2136b327": "1930600000000000000000",
  "58aed6674affd9f64233272a578dd9386b99c263": "3400000000000000000000",
  "24434a3e32e54ecf272fe3470b5f6f512f675520": "5910000000000000000000",
  "a379a5070c503d2fac89b8b3afa080fd45ed4bec": "19700000000000000000000",
  "37e169a93808d8035698f815c7235613c1e659f2": "1000000000000000000000",
  "849b116f596301c5d8bb62e0e97a8248126e39f3": "300000000000000000000",
  "fe7011b698bf3371132d7445b19eb5b094356aee": "2000000000000000000000",
  "f16de1891d8196461395f9b136265b3b9546f6ef": "31313000000000000000",
  "6c6564e5c9c24eaaa744c9c7c968c9e2c9f1fbae": "1357800000000000000000",
  "8bb0212f3295e029cab1d961b04133a1809e7b91": "2000000000000000000000",
  "408a69a40715e1b313e1354e600800a1e6dc02a5": "35144000000000000000",
  "ddf0cce1fe996d917635f00712f4052091dff9ea": "2000000000000000000000",
  "50fef296955588caae74c62ec32a23a454e09ab8": "1201200000000000000000",
  "d913f0771949753c4726acaa2bd3619c5c20ff77": "3000000000000000000000",
  "9d6ecfa03af2c6e144b7c4692a86951e902e9e1f": "3000310000000000000000",
  "ecbe5e1c9ad2b1dccf0a305fc9522f4669dd3ae7": "5000000000000000000000",
  "33e9b71823952e1f66958c278fc28b1196a6c5a4": "100000000000000000000",
  "9de20bc37e7f48a80ffd7ad84ffbf1a1abe1738c": "200000000000000000000",
  "16f313cf8ad000914a0a176dc6a4342b79ec2538": "2000000000000000000000",
  "991ac7ca7097115f26205eee0ef7d41eb4e311ae": "20000000000000000000",
  "ddfafdbc7c90f1320e54b98f374617fbd01d109f": "13370000000000000000",
  "26b11d066588ce74a572a85a6328739212aa8b40": "2000000000000000000000",
  "ef2c34bb487d3762c3cca782ccdd7a8fbb0a9931": "180000000000000000000",
  "a9be88ad1e518b0bbb024ab1d8f0e73f790e0c76": "2800000000000000000000",
  "4a7494cce44855cc80582842be958a0d1c0072ee": "2400000000000000000000",
  "23569542c97d566018c907acfcf391d14067e87e": "2000000000000000000000",
  "d252960b0bf6b2848fdead80136db5f507f8be02": "2000000000000000000000",
  "2c0f5b9df43625798e7e03c1a5fd6a6d091af82b": "31200000000000000000",
  "a7c9d388ebd873e66b1713448397d0f37f8bd3a8": "5000000000000000000000",
  "3259bd2fddfbbc6fbad3b6e874f0bbc02cda18b5": "11886645000000000000000",
  "f287ff52f461117adb3e1daa71932d1493c65f2e": "3640000000000000000000",
  "c852428d2b586497acd30c56aa13fb5582f84402": "945600000000000000000",
  "296f00de1dc3bb01d47a8ccd1e5d1dd9a1eb7791": "1000000000000000000000",
  "817493cd9bc623702a24a56f9f82e3fd48f3cd31": "2920000000000000000000",
  "7adfedb06d91f3cc7390450b85550270883c7bb7": "322312000000000000000",
  "8d544c32c07fd0842c761d53a897d6c950bb7599": "200000000000000000000",
  "86297d730fe0f7a9ee24e08fb1087b31adb306a7": "2000000000000000000000",
  "f64fe0939a8d1eea2a0ecd9a9730fd7958e33109": "20600000000000000000",
  "b06eab09a610c6a53d56a946b2c43487ac1d5b2d": "1000000000000000000000",
  "bae9b82f7299631408659dd74e891cb8f3860fe5": "1970000000000000000000",
  "0eda80f4ed074aea697aeddf283b63dbca3dc4da": "2000000000000000000000",
  "ea686c5057093c171c66db99e01b0ececb308683": "384907000000000000000",
  "425725c0f08f0811f5f006eec91c5c5c126b12ae": "150000000000000000000",
  "b18e67a5050a1dc9fb190919a33da838ef445014": "20000000000000000000",
  "8dd484ff8a307364eb66c525a571aac701c5c318": "4000000000000000000000",
  "6671b182c9f741a0cd3c356c73c23126d4f9e6f4": "200000000000000000000",
  "ba0249e01d945bef93ee5ec61925e03c5ca509fd": "4000000000000000000000",
  "b2968f7d35f208871631c6687b3f3daeabc6616c": "156060000000000000000",
  "a6f62b8a3d7f11220701ab9ffffcb327959a2785": "506000000000000000000",
  "c885a18aabf4541b7b7b7ecd30f6fae6869d9569": "2000000000000000000000",
  "33fb577a4d214fe010d32cca7c3eeda63f87ceef": "1000000000000000000000",
  "be86d0b0438419ceb1a038319237ba5206d72e46": "999942000000000000000",
  "466292f0e80d43a78774277590a9eb45961214f4": "970000000000000000000",
  "b33c0323fbf9c26c1d8ac44ef74391d0804696da": "20000000000000000000",
  "f7bc4c44910d5aedd66ed2355538a6b193c361ec": "96980000000000000000",
  "d0f04f52109aebec9a7b1e9332761e9fe2b97bb5": "4000000000000000000000",
  "cb4a914d2bb029f32e5fef5c234c4fec2d2dd577": "1800000000000000000000",
  "2e619f57abc1e987aa936ae3a2264962e7eb2d9a": "756000000000000000000",
  "166bf6dab22d841b486c38e7ba6ab33a1487ed8c": "20000000000000000000000",
  "c3a046e3d2b2bf681488826e32d9c061518cfe8c": "2600000000000000000000",
  "d082275f745a2cac0276fbdb02d4b2a3ab1711fe": "30000000000000000000",
  "a701df79f594901afe1444485e6b20c3bda2b9b3": "1000000000000000000000",
  "dec3eec2640a752c466e2b7e7ee685afe9ac41f4": "1324245000000000000000",
  "8134dd1c9df0d6c8a5812426bb55c761ca831f08": "122360000000000000000",
  "bfc57aa666fae28e9f107a49cb5089a4e22151dd": "1000000000000000000000",
  "c3c2297329a6fd99117e54fc6af379b4d556547e": "6000000000000000000000",
  "40585200683a403901372912a89834aadcb55fdb": "2000000000000000000000",
  "cd49bf185e70d04507999f92a4de4455312827d0": "1000000000000000000000",
  "9c6bc9a46b03ae5404f043dfcf21883e4110cc33": "200000000000000000000",
  "1f49b86d0d3945590698a6aaf1673c37755ca80d": "700000000000000000000",
  "efeb1997aad277cc33430e6111ed0943594048b8": "2000000000000000000000",
  "7c0883054c2d02bc7a852b1f86c42777d0d5c856": "500000000000000000000",
  "ff49a775814ec00051a795a875de24592ea400d4": "200000000000000000000000",
  "f039683d7b3d225bc7d8dfadef63163441be41e2": "34380000000000000000",
  "a3ba0d3a3617b1e31b4e422ce269e873828d5d69": "850000000000000000000",
  "d116f3dcd5db744bd008887687aa0ec9fd7292aa": "1000000000000000000000",
  "5719f49b720da68856f4b9e708f25645bdbc4b41": "640000000000000000000",
  "870796abc0db84af82da52a0ed68734de7e636f5": "300000000000000000000",
  "68b6854788a7c6496cdbf5f84b9ec5ef392b78bb": "19700000000000000000000",
  "8c2fbeee8eacc5c5d77c16abd462ee9c8145f34b": "1940000000000000000000",
  "421684baa9c0b4b5f55338e6f6e7c8e146d41cb7": "1500000000000000000000",
  "dd26b429fd43d84ec179825324bad5bfb916b360": "5142000000000000000000",
  "3821862493242c0aeb84b90de05d250c1e50c074": "322200000000000000000",
  "68a7425fe09eb28cf86eb1793e41b211e57bd68d": "668500000000000000000",
  "da875e4e2f3cabe4f37e0eaed7d1f6dcc6ffef43": "2000000000000000000000",
  "c2663f8145dbfec6c646fc5c49961345de1c9f11": "690000000000000000000",
  "e89c22f1a4e1d4746ecfaa59ed386fee12d51e37": "44932000000000000000",
  "eff86b5123bcdc17ed4ce8e05b7e12e51393a1f7": "500000000000000000000",
  "6c3d18704126aa99ee3342ce60f5d4c85f1867cd": "50000000000000000000",
  "b8d531a964bcea13829620c0ced72422dadb4cca": "169990000000000000000",
  "7c29d47d57a733f56b9b217063b513dc3b315923": "4000000000000000000000",
  "bc1e80c181616342ebb3fb3992072f1b28b802c6": "4000000000000000000000",
  "31313ffd635bf2f3324841a88c07ed146144ceeb": "1970000000000000000000",
  "cc4feb72df98ff35a138e01761d1203f9b7edf0a": "7000000000000000000000",
  "741693c30376508513082020cc2b63e9fa92131b": "1200000000000000000000",
  "aa3135cb54f102cbefe09e96103a1a796718ff54": "57800000000000000000",
  "ef61155ba009dcdebef10b28d9da3d1bc6c9ced4": "59100000000000000000",
  "b3c94811e7175b148b281c1a845bfc9bb6fbc115": "200000000000000000000",
  "96d9cca8f55eea0040ec6eb348a1774b95d93ef4": "4000000000000000000000",
  "ce62125adec3370ac52110953a4e760be9451e3b": "152000000000000000000",
  "aca1e6bc64cc3180f620e94dc5b1bcfd8158e45d": "2000000000000000000000",
  "bc237148d30c13836ffa2cad520ee4d2e5c4eeff": "1970000000000000000000",
  "0e024e7f029c6aaf3a8b910f5e080873b85795aa": "1000000000000000000000",
  "7283cd4675da58c496556151dafd80c7f995d318": "760000000000000000000",
  "39b299327490d72f9a9edff11b83afd0e9d3c450": "200000000000000000000",
  "5f333a3b2310765a0d1832b9be4c0a03704c1c09": "1000000000000000000000",
  "5aaf1c31254a6e005fba7f5ab0ec79d7fc2b630e": "5910000000000000000000",
  "833db42c14163c7be4cab86ac593e06266d699d5": "174212000000000000000000",
  "f32d25eb0ea2b8b3028a4c7a155dc1aae865784d": "5710684000000000000000",
  "1fa2319fed8c2d462adf2e17feec6a6f30516e95": "125300000000000000000",
  "c49cfaa967f3afbf55031061fc4cef88f85da584": "2000000000000000000000",
  "43db7ff95a086d28ebbfb82fb8fb5f230a5ebccd": "16100000000000000000",
  "cf3f9128b07203a3e10d7d5755c0c4abc6e2cac2": "5000000000000000000000",
  "8f4d1e7e4561284a34fef9673c0d34e12af4aa03": "2000000000000000000000",
  "934af21b7ebfa467e2ced65aa34edd3a0ec71332": "35420000000000000000000",
  "5d231a70c1dfeb360abd97f616e2d10d39f3cab5": "400000000000000000000",
  "2d5d7335acb0362b47dfa3a8a4d3f5949544d380": "200000000000000000000",
  "d1e1f2b9c16c309874dee7fac32675aff129c398": "72800000000000000000",
  "a43b6da6cb7aac571dff27f09d39f846f53769b1": "380000000000000000000",
  "779274bf1803a336e4d3b00ddd93f2d4f5f4a62e": "1000000000000000000000",
  "a644ed922cc237a3e5c4979a995477f36e50bc62": "583900000000000000000",
  "ee6c03429969ca1262cb3f0a4a54afa7d348d7f5": "256100000000000000000",
  "4f06246b8d4bd29661f43e93762201d286935ab1": "4818730000000000000000",
  "e04972a83ca4112bc871c72d4ae1616c2f0728db": "267606000000000000000",
  "df098f5e4e3dffa51af237bda8652c4f73ed9ca6": "502000000000000000000",
  "dfded2574b27d1613a7d98b715159b0d00baab28": "20000000000000000000000",
  "17d931d4c56294dcbe77c8655be4695f006d4a3c": "2000000000000000000000",
  "3ccb71aa6880cb0b84012d90e60740ec06acd78f": "2000000000000000000000",
  "e57d2995b0ebdf3f3ca6c015eb04260dbb98b7c6": "2000000000000000000000",
  "fb3860f4121c432ebdc8ec6a0331b1b709792e90": "600400000000000000000",
  "fa00c376e89c05e887817a9dd0748d96f341aa89": "300700000000000000000",
  "c7a018f0968a51d1f6603c5c49dc545bcb0ff293": "4000000000000000000000",
  "7d73863038ccca22f96affda10496e51e1e6cd48": "20000000000000000000",
  "38ea6f5b5a7b88417551b4123dc127dfe9342da6": "400000000000000000000",
  "014b7f67b14f5d983d87014f570c8b993b9872b5": "200000000000000000000",
  "8ac89bd9b8301e6b0677fa25fcf0f58f0cc7b611": "20000000000000000000",
  "7eb4b0185c92b6439a08e7322168cb353c8a774a": "10165988000000000000000",
  "d29dc08efbb3d72e263f78ab7610d0226de76b00": "12000000000000000000000",
  "72a8260826294726a75bf39cd9aa9e07a3ea14cd": "2000000000000000000000",
  "4cb5c6cd713ca447b848ae2f56b761ca14d7ad57": "267400000000000000000",
  "49185dd7c23632f46c759473ebae966008cd3598": "254030000000000000000",
  "13d67a7e25f2b12cdb85585009f8acc49b967301": "1999944000000000000000",
  "9d913b5d339c95d87745562563fea98b23c60cc4": "170718000000000000000",
  "abdc9f1bcf4d19ee96591030e772c334302f7d83": "40110000000000000000000",
  "e9a5ae3c9e05977dd1069e9fd9d3aefbae04b8df": "1970000000000000000000",
  "1fd296be03ad737c92f9c6869e8d80a71c5714aa": "13370000000000000000",
  "2f13657526b177cad547c3908c840eff647b45d9": "1170685000000000000000",
  "e69fcc26ed225f7b2e379834c524d70c1735e5bc": "2000000000000000000000",
  "bade43599e02f84f4c3014571c976b13a36c65ab": "4000000000000000000000",
  "184a4f0beb71ffd558a6b6e8f228b78796c4cf3e": "12000000000000000000000",
  "d1de5aad3a5fd803f1b1aeb6103cb8e14fe723b7": "20000000000000000000",
  "0bd67dbde07a856ebd893b5edc4f3a5be4202616": "2000000000000000000000",
  "6b30f1823910b86d3acb5a6afc9defb6f3a30bf8": "4200000000000000000000",
  "9a63d185a79129fdab19b58bb631ea36a420544e": "42000000000000000000",
  "df660a91dab9f730f6190d50c8390561500756ca": "2000000000000000000000",
  "a1a1f0fa6d20b50a794f02ef52085c9d036aa6ca": "1000000000000000000000",
  "4ec768295eeabafc42958415e22be216cde77618": "59600000000000000000",
  "c348fc5a461323b57be303cb89361b991913df28": "100000000000000000000000",
  "3a7db224acae17de7798797d82cdf8253017dfa8": "5000000000000000000000",
  "8bea40379347a5c891d59a6363315640f5a7e07a": "1999992000000000000000",
  "2257fca16a6e5c2a647c3c29f36ce229ab93b17e": "4000000000000000000000",
  "e492818aa684e5a676561b725d42f3cc56ae5198": "800000000000000000000",
  "c841884fa4785fb773b28e9715fae99a5134305d": "2000000000000000000000",
  "0d9443a79468a5bbf7c13c6e225d1de91aee07df": "70000000000000000000",
  "6d4008b4a888a826f248ee6a0b0dfde9f93210b9": "5460000000000000000000",
  "884980eb4565c1048317a8f47fdbb461965be481": "3999922000000000000000",
  "985d70d207892bed398590024e2421b1cc119359": "20000000000000000000000",
  "d9ec8fe69b7716c0865af888a11b2b12f720ed33": "4000000000000000000000",
  "49b74e169265f01a89ec4c9072c5a4cd72e4e835": "16100000000000000000000",
  "4c3e95cc3957d252ce0bf0c87d5b4f2234672e70": "2500000000000000000000",
  "d9ff115d01266c9f73b063c1c238ef3565e63b36": "680000000000000000000",
  "48c5c6970b9161bb1c7b7adfed9cdede8a1ba864": "4000000000000000000000",
  "ea6afe2cc928ac8391eb1e165fc40040e37421e7": "2997569000000000000000",
  "08ccda50e4b26a0ffc0ef92e9205310706bec2c7": "6077440000000000000000",
  "e6e9a39d750fe994394eb68286e5ea62a6997882": "600000000000000000000",
  "4b58101f44f7e389e12d471d1635b71614fdd605": "160000000000000000000",
  "8d93dac785f88f1a84bf927d53652b45a154ccdd": "158000000000000000000",
  "415d096ab06293183f3c033d25f6cf7178ac3bc7": "40000000000000000000",
  "c3e387b03ce95ccfd7fa51dd840183bc43532809": "2000000000000000000000",
  "da34b2eae30bafe8daeccde819a794cd89e09549": "2000000000000000000000",
  "fa279bfd8767f956bf7fa0bd5660168da75686bd": "2674000000000000000000",
  "b98ca31785ef06be49a1e47e864f60d076ca472e": "4000000000000000000000",
  "b768b5234eba3a9968b34d6ddb481c8419b3655d": "14974000000000000000",
  "31047d703f63b93424fbbd6e2f1f9e74de13e709": "2850123000000000000000",
  "9a24ce8d485cc4c86e49deb39022f92c7430e67e": "1300000000000000000000",
  "e62f9d7c64e8e2635aeb883dd73ba684ee7c1079": "8000000000000000000000",
  "f15d9d5a21b1929e790371a17f16d95f0c69655c": "2000000000000000000000",
  "285ae51b9500c58d541365d97569f14bb2a3709b": "2000000000000000000000",
  "09c177f1ae442411ddacf187d46db956148360e7": "8950000000000000000000",
  "12173074980153aeaa4b0dcbc7132eadcec21b64": "240000000000000000000",
  "351f16e5e0735af56751b0e225b2421171394090": "13370000000000000000000",
  "ac52b77e15664814f39e4f271be641308d91d6cc": "220000000000000000000",
  "99c883258546cc7e4e971f522e389918da5ea63a": "4000000000000000000000",
  "aa16269aac9c0d803068d82fc79151dadd334b66": "4000000000000000000000",
  "7c9a110cb11f2598b2b20e2ca400325e41e9db33": "26000000000000000000000",
  "583e83ba55e67e13e0e76f8392d873cd21fbf798": "20000000000000000000",
  "555ebe84daa42ba256ea789105cec4b693f12f18": "100000000000000000000",
  "978c430ce4359b06bc2cdf5c2985fc950e50d5c8": "480000000000000000000",
  "dc1eb9b6e64351f56424509645f83e79eee76cf4": "4000000000000000000000",
  "5b290c01967c812e4dc4c90b174c1b4015bae71e": "149946000000000000000",
  "e7d213947fcb904ad738480b1eed2f5c329f27e8": "18718000000000000000",
  "c517d0315c878813c717e18cafa1eab2654e01da": "10000000000000000000000",
  "7e972a8a7c2a44c93b21436c38d21b9252c345fe": "1790000000000000000000",
  "9cb28ac1a20a106f7f373692c5ce4c73f13732a1": "1000000000000000000000",
  "14ab164b3b524c82d6abfbc0de831126ae8d1375": "2000000000000000000000",
  "d46f8223452982a1eea019a8816efc2d6fc00768": "137000000000000000000",
  "5cdc4708f14f40dcc15a795f7dc8cb0b7faa9e6e": "537000000000000000000",
  "66fdc9fee351fa1538eb0d87d819fcf09e7c106a": "6016500000000000000000",
  "e7be82c6593c1eeddd2ae0b15001ff201ab57b2f": "19100000000000000000",
  "47d20e6ae4cad3f829eac07e5ac97b66fdd56cf5": "1000000000000000000000",
  "0f2d8daf04b5414a0261f549ff6477b80f2f1d07": "200000000000000000000000",
  "84bfcef0491a0ae0694b37ceac024584f2aa0467": "1999944000000000000000",
  "ec5feafe210c12bfc9a5d05925a123f1e73fbef8": "456000000000000000000000",
  "7023c70956e04a92d70025aad297b539af355869": "2000000000000000000000",
  "d66ddf1159cf22fd8c7a4bc8d5807756d433c43e": "2200000000000000000000",
  "d0638ea57189a6a699024ad78c71d939c1c2ff8c": "2632000000000000000000",
  "70d25ed2c8ada59c088cf70dd22bf2db93acc18a": "1056600000000000000000",
  "a4875928458ec2005dbb578c5cd33580f0cf1452": "1000000000000000000000",
  "b5ad5157dda921e6bafacd9086ae73ae1f611d3f": "2000000000000000000000",
  "c493489e56c3bdd829007dc2f956412906f76bfa": "48968000000000000000",
  "c57612de91110c482e6f505bcd23f3c5047d1d61": "3580000000000000000000",
  "9b18478655a4851cc906e660feac61f7f4c8bffc": "4174120000000000000000",
  "b21b7979bf7c5ca01fa82dd640b41c39e6c6bc75": "1999944000000000000000",
  "a9d4a2bcbe5b9e0869d70f0fe2e1d6aacd45edc5": "198800000000000000000",
  "6f29bb375be5ed34ed999bb830ee2957dde76d16": "2000000000000000000000",
  "a006268446643ec5e81e7acb3f17f1c351ee2ed9": "4000000000000000000000",
  "42ddd014dc52bfbcc555325a40b516f4866a1dd3": "2000000000000000000000",
  "d6d6776958ee23143a81adadeb08382009e996c2": "3000000000000000000000",
  "d34e03d36a2bd4d19a5fa16218d1d61e3ffa0b15": "320000000000000000000",
  "dac0c177f11c5c3e3e78f2efd663d13221488574": "1000000000000000000000",
  "814135da8f9811075783bf1ab67062af8d3e9f40": "20000000000000000000",
  "7c3eb713c4c9e0381cd8154c7c9a7db8645cde17": "200000000000000000000",
  "f49c47b3efd86b6e6a5bc9418d1f9fec814b69ef": "20000000000000000000000",
  "35f1da127b83376f1b88c82a3359f67a5e67dd50": "1910000000000000000000",
  "44dfba50b829becc5f4f14d1b04aab3320a295e5": "1000000000000000000000",
  "0b924df007e9c0878417cfe63b976ea1a382a897": "40000000000000000000",
  "82438fd2b32a9bdd674b49d8cc5fa2eff9781847": "20000000000000000000",
  "794529d09d017271359730027075b87ad83dae6e": "310000000000000000000",
  "f4b49100757772f33c177b9a76ba95226c8f3dd8": "6700000000000000000000",
  "8563c49361b625e768771c96151dbfbd1c906976": "2000000000000000000000",
  "0b9df80fbe232009dacf0aa8cac59376e2476203": "2000000000000000000000",
  "149b6dbde632c19f5af47cb493114bebd9b03c1f": "12000000000000000000000",
  "d7a1431ee453d1e49a0550d1256879b4f5d10201": "1670000000000000000000",
  "1d37616b793f94911838ac8e19ee9449df921ec4": "1500000000000000000000",
  "d6670c036df754be43dadd8f50feea289d061fd6": "5988459000000000000000",
  "02778e390fa17510a3428af2870c4273547d386c": "16163700000000000000000",
  "b89f4632df5909e58b2a9964f74feb9a3b01e0c5": "21406707000000000000000",
  "76c27535bcb59ce1fa2d8c919cabeb4a6bba01d1": "2000000000000000000000",
  "36bf43ff35df90908824336c9b31ce33067e2f50": "346837200000000000000000",
  "b53bcb174c2518348b818aece020364596466ba3": "2000000000000000000000",
  "b4dd460cd016725a64b22ea4f8e06e06674e033e": "5370000000000000000000",
  "cda1741109c0265b3fb2bf8d5ec9c2b8a3346b63": "20000000000000000000",
  "feb8b8e2af716ae41fc7c04bcf29540156461e6b": "1555396000000000000000",
  "a49f523aa51364cbc7d995163d34eb590ded2f08": "2659160000000000000000",
  "a7e74f0bdb278ff0a805a648618ec52b166ff1be": "100000000000000000000",
  "5ead29037a12896478b1296ab714e9cb95428c81": "71500000000000000000",
  "cdecf5675433cdb0c2e55a68db5d8bbe78419dd2": "20000000000000000000",
  "c24ccebc2344cce56417fb684cf81613f0f4b9bd": "1550000000000000000000",
  "5a70106f20d63f875265e48e0d35f00e17d02bc9": "20000000000000000000",
  "2606c3b3b4ca1b091498602cb1978bf3b95221c0": "400000000000000000000",
  "1ad4563ea5786be1159935abb0f1d5879c3e7372": "6000000000000000000000",
  "b782bfd1e2de70f467646f9bc09ea5b1fcf450af": "267400000000000000000",
  "649a2b9879cd8fb736e6703b0c7747849796f10f": "7358102000000000000000",
  "1cc1d3c14f0fb8640e36724dc43229d2ea7a1e48": "1700000000000000000000",
  "824b3c3c443e19295d7ef6faa7f374a4798486a8": "20000000000000000000",
  "a7758cecb60e8f614cce96137ef72b4fbd07774a": "500000000000000000000",
  "981f712775c0dad97518ffedcb47b9ad1d6c2762": "6685000000000000000000",
  "26e801b62c827191dd68d31a011990947fd0ebe0": "20000000000000000000",
  "95447046313b2f3a5e19b948fd3b8bedc82c717c": "500000000000000000000",
  "0b701101a4109f9cb360dc57b77442673d5e5983": "2000000000000000000000",
  "5b25cae86dcafa2a60e7723631fc5fa49c1ad87d": "2491200000000000000000",
  "f73ac46c203be1538111b151ec8220c786d84144": "294515000000000000000",
  "e8c3d3b0e17f97d1e756e684f94e1470f99c95a1": "400000000000000000000",
  "8c900a8236b08c2b65405d39d75f20062a7561fd": "1640000000000000000000",
  "43898c49a34d509bfed4f76041ee91caf3aa6aa5": "300000000000000000000",
  "c85325eab2a59b3ed863c86a5f2906a04229ffa9": "465600000000000000000",
  "4a430170152de5172633dd8262d107a0afd96a0f": "3160000000000000000000",
  "6e0ee70612c976287d499ddfa6c0dcc12c06deea": "129980000000000000000",
  "21c07380484f6cbc8724ad32bc864c3b5ad500b7": "1000000000000000000000",
  "ff5162f2354dc492c75fd6e3a107268660eecb47": "1700000000000000000000",
  "8845e9f90e96336bac3c616be9d88402683e004c": "2000000000000000000000",
  "f23c7b0cb8cd59b82bd890644a57daf40c85e278": "50038000000000000000",
  "1784948bf99848c89e445638504dd698271b5924": "6037580000000000000000",
  "b39f4c00b2630cab7db7295ef43d47d501e17fd7": "4000000000000000000000",
  "3fb7d197b3ba4fe045efc23d50a14585f558d9b2": "20000000000000000000",
  "bd043b67c63e60f841ccca15b129cdfe6590c8e3": "200000000000000000000",
  "86ca0145957e6b0dfe36875fbe7a0dec55e17a28": "10000000000000000000000",
  "dae7201eab8c063302930d693929d07f95e71962": "2687370000000000000000",
  "cc034985d3f28c2d39b1a34bced4d3b2b6ca234e": "182000000000000000000",
  "40e0dbf3efef9084ea1cd7e503f40b3b4a8443f6": "4000000000000000000000",
  "b1896a37e5d8825a2d01765ae5de629977de8352": "200000000000000000000",
  "d9f547f2c1de0ed98a53d161df57635dd21a00bd": "98500000000000000000",
  "2fea1b2f834f02fc54333f8a809f0438e5870aa9": "20200000000000000000",
  "68b31836a30a016ada157b638ac15da73f18cfde": "26000000000000000000",
  "bc967fe4418c18b99858966d870678dca2b88879": "8740000000000000000000",
  "16bae5d24eff91778cd98b4d3a1cc3162f44aa77": "401100000000000000000",
  "f476e1267f86247cc908816f2e7ad5388c952db0": "4000000000000000000000",
  "0203ae01d4c41cae1865e04b1f5b53cdfaecae31": "1006054000000000000000",
  "bd4bd5b122d8ef7b7c8f0667450320db2116142e": "600000000000000000000",
  "a394ad4fd9e6530e6f5c53faecbede81cb172da1": "5600000000000000000000",
  "3a9960266df6492063538a99f487c950a3a5ec9e": "24000000000000000000000",
  "d8069f84b521493f4715037f3226b25f33b60586": "1910000000000000000000",
  "136c834bf111326d207395295b2e583ea7f33572": "100000000000000000000",
  "c5c73d61cce7c8fe4c8fce29f39092cd193e0fff": "8000000000000000000000",
  "3cfbf066565970639e130df2a7d16b0e14d6091c": "1700000000000000000000",
  "61b905de663fc17386523b3a28e2f7d037a655cd": "500000000000000000000",
  "fda0ce15330707f10bce3201172d2018b9ddea74": "51900000000000000000",
  "f7fc45abf76f5088e2e5b5a8d132f28a4d4ec1c0": "2000000000000000000000",
  "c3db9fb6f46c480af34465d79753b4e2b74a67ce": "20000000000000000000000",
  "ebe46cc3c34c32f5add6c3195bb486c4713eb918": "1000000000000000000000",
  "91d2a9ee1a6db20f5317cca7fbe2313895db8ef8": "8499600000000000000000",
  "c4cc45a2b63c27c0b4429e58cd42da59be739bd6": "1000000000000000000000",
  "a43b81f99356c0af141a03010d77bd042c71c1ee": "2000000000000000000000",
  "4c45d4c9a725d11112bfcbca00bf31186ccaadb7": "400000000000000000000",
  "bf9f271f7a7e12e36dd2fe9facebf385fe6142bd": "62760000000000000000",
  "e0ce80a461b648a501fd0b824690c8868b0e4de8": "500000000000000000000",
  "a1f7dde1d738d8cd679ea1ee965bee224be7d04d": "1127000000000000000000",
  "7f1c81ee1697fc144b7c0be5493b5615ae7fddca": "500200000000000000000",
  "b508f987b2de34ae4cf193de85bff61389621f88": "6000000000000000000000",
  "5f26cf34599bc36ea67b9e7a9f9b4330c9d542a3": "1000000000000000000000",
  "d02108d2ae3cab10cbcf1657af223e027c8210f6": "2000140000000000000000",
  "952183cfd38e352e579d36decec5b18450f7fba0": "2000000000000000000000",
  "eb90c793b3539761e1c814a29671148692193eb4": "12000000000000000000000",
  "1076212d4f758c8ec7121c1c7d74254926459284": "35000056000000000000000",
  "f05ceeab65410564709951773c8445ad9f4ec797": "299982000000000000000",
  "05361d8eb6941d4e90fb7e1418a95a32d5257732": "20000000000000000000",
  "a5783bf33432ff82ac498985d7d460ae67ec3673": "1820000000000000000000",
  "b1cd4bdfd104489a026ec99d597307a04279f173": "20000000000000000000000",
  "876c3f218b4776df3ca9dbfb270de152d94ed252": "100000000000000000000",
  "8a36869ad478997cbf6d8924d20a3c8018e9855b": "20000000000000000000",
  "fb3fe09bb836861529d7518da27635f538505615": "1399904000000000000000",
  "d093e829819fd2e25b973800bb3d5841dd152d05": "4000000000000000000000",
  "126d91f7ad86debb0557c612ca276eb7f96d00a1": "100000000000000000000",
  "2a81d27cb6d4770ff4f3c4a3ba18e5e57f07517c": "2000000000000000000000",
  "c4f7b13ac6d4eb4db3d4e6a252af8a07bd5957da": "200000000000000000000",
  "305d26c10bdc103f6b9c21272eb7cb2d9108c47e": "500000000000000000000",
  "d0d0a2ad45f59a9dccc695d85f25ca46ed31a5a3": "840000000000000000000",
  "522323aad71dbc96d85af90f084b99c3f09decb7": "6000000000000000000000",
  "f43da3a4e3f5fab104ca9bc1a0f7f3bb4a56f351": "1999944000000000000000",
  "a2dc65ee256b59a5bd7929774f904b358df3ada1": "21319600000000000000000",
  "f382df583155d8548f3f93440cd5f68cb79d6026": "266619800000000000000000",
  "0c967e3061b87a753e84507eb60986782c8f3013": "100000000000000000000",
  "a3a262afd2936819230892fde84f2d5a594ab283": "1880000000000000000000",
  "93868ddb2a794d02ebda2fa4807c76e3609858dc": "2027851000000000000000",
  "cd35ff010ec501a721a1b2f07a9ca5877dfcf95a": "4011000000000000000000",
  "5824a7e22838277134308c5f4b50dab65e43bb31": "6000000000000000000000",
  "7f7a3a21b3f5a65d81e0fcb7d52dd00a1aa36dba": "100000000000000000000",
  "30513fca9f36fd788cfea7a340e86df98294a244": "447000000000000000000",
  "283e6252b4efcf4654391acb75f903c59b78c5fb": "12000000000000000000000",
  "eddbaafbc21be8f25562f1ed6d05d6afb58f02c2": "2000000000000000000000",
  "0dcfe837ea1cf28c65fccec3bef1f84e59d150c0": "200000000000000000000",
  "828ba651cb930ed9787156299a3de44cd08b7212": "1337000000000000000000",
  "cfd47493c9f89fe680bda5754dd7c9cfe7cb5bbe": "54508000000000000000",
  "0e89eddd3fa0d71d8ab0ff8da5580686e3d4f74f": "2000000000000000000000",
  "205f5166f12440d85762c967d3ae86184f8f4d98": "432500000000000000000",
  "25dad495a11a86b9eeece1eeec805e57f157faff": "16000000000000000000000",
  "6c84cba77c6db4f7f90ef13d5ee21e8cfc7f8314": "2000000000000000000000",
  "91a787bc5196f34857fe0c372f4df376aaa76613": "2000000000000000000000",
  "b0d3c9872b85056ea0c0e6d1ecf7a77e3ce6ab85": "4999711000000000000000",
  "6e4d2e39c8836629e5b487b1918a669aebdd9536": "1000000000000000000000",
  "dc703a5f3794c84d6cb3544918cae14a35c3bd4f": "1850000000000000000000",
  "47beb20f759100542aa93d41118b3211d664920e": "2000000000000000000000",
  "5a7735007d70b06844da9901cdfadb11a2582c2f": "6000000000000000000000",
  "aff107960b7ec34ed690b665024d60838c190f70": "500000000000000000000",
  "563a03ab9c56b600f6d25b660c21e16335517a75": "1000000000000000000000",
  "a106465bbd19e1b6bce50d1b1157dc59095a3630": "2000000000000000000000",
  "ca9dec02841adf5cc920576a5187edd2bd434a18": "500000000000000000000",
  "572ac1aba0de23ae41a7cae1dc0842d8abfc103b": "1910000000000000000000",
  "5f74ed0e24ff80d9b2c4a44baa9975428cd6b935": "2980000000000000000000",
  "f2049532fd458a83ca1bff2eebacb6d5ca63f4a4": "3625693000000000000000",
  "cee699c0707a7836252b292f047ce8ad289b2f55": "324700000000000000000",
  "8b3696f3c60de32432a2e4c395ef0303b7e81e75": "30000000000000000000000",
  "13dee03e3799952d0738843d4be8fc0a803fb20e": "2000000000000000000000",
  "c853215b9b9f2d2cd0741e585e987b5fb80c212e": "1550000000000000000000",
  "851c0d62be4635d4777e8035e37e4ba8517c6132": "500000000000000000000",
  "a76b743f981b693072a131b22ba510965c2fefd7": "18200000000000000000",
  "69bd25ade1a3346c59c4e930db2a9d715ef0a27a": "4000000000000000000000",
  "0fec4ee0d7ca180290b6bd20f9992342f60ff68d": "334383000000000000000",
  "ccfd725760a68823ff1e062f4cc97e1360e8d997": "399800000000000000000",
  "9f017706b830fb9c30efb0a09f506b9157457534": "2000000000000000000000",
  "420fb86e7d2b51401fc5e8c72015decb4ef8fc2e": "1000000000000000000000",
  "cb7d2b8089e9312cc9aeaa2773f35308ec6c2a7b": "10000000000000000000000",
  "6c822029218ac8e98a260c1e064029348839875b": "5010000000000000000000",
  "1c68a66138783a63c98cc675a9ec77af4598d35e": "50100000000000000000",
  "f270792576f05d514493ffd1f5e84bec4b2df810": "1000000000000000000000",
  "9191f94698210516cf6321a142070e20597674ed": "17194000000000000000",
  "c0ca3277942e7445874be31ceb902972714f1823": "250000000000000000000",
  "35e096120deaa5c1ecb1645e2ccb8b4edbd9299a": "500000000000000000000",
  "e2bbf84641e3541f6c33e6ed683a635a70bde2ec": "502763000000000000000",
  "d12d77ae01a92d35117bac705aacd982d02e74c1": "1000000000000000000000",
  "dabb0889fc042926b05ef57b2520910abc4b4149": "2000000000000000000000",
  "5a1a336962d6e0c63031cc83c6a5c6a6f4478ecb": "1000000000000000000000",
  "abd154903513b8da4f019f68284b0656a1d0169b": "1000000000000000000000",
  "ad377cd25eb53e83ae091a0a1d2b4516f484afde": "1940000000000000000000",
  "08c2f236ac4adcd3fda9fbc6e4532253f9da3bec": "20000000000000000000",
  "71135d8f05963c905a4a07922909235a896a52ea": "3000000000000000000000",
  "080546508a3d2682c8b9884f13637b8847b44db3": "2000000000000000000000",
  "2d61bfc56873923c2b00095dc3eaa0f590d8ae0f": "20760000000000000000000",
  "cbfa6af6c283b046e2772c6063b0b21553c40106": "2000000000000000000000",
  "ccabc6048a53464424fcf76eeb9e6e1801fa23d4": "49250000000000000000",
  "60cc3d445ebdf76a7d7ae571c6971dff68cc8585": "1000000000000000000000",
  "fff33a3bd36abdbd412707b8e310d6011454a7ae": "8000000000000000000000",
  "d2dbebe89b0357aea98bbe8e496338debb28e805": "4000000000000000000000",
  "5f521282e9b278dc8c034c72af53ee29e5443d78": "6520000000000000000000",
  "c5a48a8500f9b4e22f0eb16c6f4649687674267d": "812721000000000000000",
  "8cb3aa3fcd212854d7578fcc30fdede6742a312a": "300000000000000000000",
  "90d2809ae1d1ffd8f63eda01de49dd552df3d1bc": "3998000000000000000000",
  "96a55f00dff405dc4de5e58c57f6f6f0cac55d2f": "1962711000000000000000",
  "ae842e81858ecfedf6506c686dc204ac15bf8b24": "40000000000000000000",
  "0be6a09e4307fe48d412b8d1a1a8284dce486261": "19180000000000000000000",
  "c9c7ac0bdd9342b5ead4360923f68c72a6ba633a": "500000000000000000000",
  "ea8f30b6e4c5e65290fb9864259bc5990fa8ee8a": "20000000000000000000",
  "74d37a51747bf8b771bfbf43943933d100d21483": "1000000000000000000000",
  "1a04d5389eb006f9ce880c30d15353f8d11c4b31": "17072800000000000000000",
  "726a14c90e3f84144c765cffacba3e0df11b48be": "10000000000000000000000",
  "86b7bd563ceab686f96244f9ddc02ad7b0b14bc2": "10000000000000000000000",
  "2bbe672a1857508f630f2a5edb563d9e9de92815": "2000000000000000000000",
  "a17070c2e9c5a940a4ec0e4954c4d7d643be8f49": "1999965000000000000000",
  "f2d1b7357724ec4c03185b879b63f57e26589153": "6000000000000000000000",
  "d6a7ac4de7b510f0e8de519d973fa4c01ba83400": "1880000000000000000000",
  "593b45a1864ac5c7e8f0caaeba0d873cd5d113b2": "6000000000000000000000",
  "0837539b5f6a522a482cdcd3a9bb7043af39bdd2": "6000000000000000000000",
  "b927abd2d28aaaa24db31778d27419df8e1b04bb": "27531000000000000000",
  "b2e085fddd1468ba07415b274e734e11237fb2a9": "100000000000000000000",
  "970938522afb5e8f994873c9fbdc26e3b37e314c": "1000000000000000000000",
  "f3de5f26ef6aded6f06d3b911346ee70401da4a0": "354718000000000000000",
  "bffb6929241f788693273e7022e60e3eab1fe84f": "2000000000000000000000",
  "b56ad2aec6c8c3f19e1515bbb7dd91285256b639": "1000000000000000000000",
  "47730f5f8ebf89ac72ef80e46c12195038ecdc49": "3160000000000000000000",
  "f39a9d7aa3581df07ee4279ae6c312ef21033658": "4000000000000000000000",
  "36227cdfa0fd3b9d7e6a744685f5be9aa366a7f0": "198479000000000000000",
  "89e3b59a15864737d493c1d23cc53dbf8dcb1362": "4000000000000000000000",
  "bd08e0cddec097db7901ea819a3d1fd9de8951a2": "20000000000000000000",
  "533444584082eba654e1ad30e149735c6f7ba922": "1730000000000000000000",
  "6a8a4317c45faa0554ccdb482548183e295a24b9": "1000000000000000000000",
  "22ce349159eeb144ef06ff2636588aef79f62832": "188000000000000000000",
  "3cd1d9731bd548c1dd6fcea61beb75d91754f7d3": "5130285000000000000000",
  "8b7056f6abf3b118d026e944d5c073433ca451d7": "999999000000000000000",
  "15f1b352110d68901d8f67aac46a6cfafe031477": "200000000000000000000",
  "0f789e30397c53bf256fc364e6ef39f853504114": "3640000000000000000000",
  "750bbb8c06bbbf240843cc75782ee02f08a97453": "835000000000000000000",
  "fff7ac99c8e4feb60c9750054bdc14ce1857f181": "1000000000000000000000",
  "5c6f36af90ab1a656c6ec8c7d521512762bba3e1": "1999800000000000000000",
  "6811b54cd19663b11b94da1de2448285cd9f68d9": "1100000000000000000000",
  "6f50929777824c291a49c46dc854f379a6bea080": "360000000000000000000",
  "e83604e4ff6be7f96f6018d3ec3072ec525dff6b": "182000000000000000000",
  "d731bb6b5f3c37395e09ceaccd14a918a6060789": "3940000000000000000000",
  "372e453a6b629f27678cc8aeb5e57ce85ec0aef9": "200000000000000000000",
  "86924fb211aad23cf5ce600e0aae806396444087": "10000000000000000000000",
  "18c6723a6753299cb914477d04a3bd218df8c775": "1000000000000000000000",
  "e00484788db50fc6a48e379d123e508b0f6e5ab1": "1000000000000000000000",
  "150e3dbcbcfc84ccf89b73427763a565c23e60d0": "40000000000000000000",
  "8ffa062122ac307418821adb9311075a3703bfa3": "1000000000000000000000",
  "21206ce22ea480e85940d31314e0d64f4e4d3a04": "1000000000000000000000",
  "ac024f594f9558f04943618eb0e6b2ee501dc272": "2000000000000000000000",
  "b2b7cdb4ff4b61d5b7ce0b2270bbb5269743ec04": "2000000000000000000000",
  "abc74706964960dfe0dca3dca79e9216056f1cf4": "40000000000000000000000",
  "d7eb903162271c1afa35fe69e37322c8a4d29b11": "10000000000000000000000",
  "d7c6265dea11876c903b718e4cd8ab24fe265bde": "2000000000000000000000",
  "cba288cd3c1eb4d59ddb06a6421c14c345a47b24": "4000000000000000000000",
  "8c22426055b76f11f0a2de1a7f819a619685fe60": "1980000000000000000000",
  "f463a90cb3f13e1f0643423636beab84c123b06d": "40000000000000000000",
  "2b5ced9987c0765f900e49cf9da2d9f9c1138855": "400000000000000000000",
  "9bb760d5c289a3e1db18db095345ca413b9a43c2": "197000000000000000000",
  "d66ab79294074c8b627d842dab41e17dd70c5de5": "1000000000000000000000",
  "0bdd58b96e7c916dd2fb30356f2aebfaaf1d8630": "2000000000000000000000",
  "d612597bc31743c78633f633f239b1e9426bd925": "76000000000000000000000",
  "140518a3194bad1350b8949e650565debe6db315": "2000000000000000000000",
  "daedd4ad107b271e89486cbf80ebd621dd974578": "2000000000000000000000",
  "c36c0b63bfd75c2f8efb060883d868cccd6cbdb4": "3000000000000000000000",
  "e646665872e40b0d7aa2ff82729caaba5bc3e89e": "400000000000000000000",
  "b5fb7ea2ddc1598b667a9d57dd39e85a38f35d56": "500000000000000000000",
  "e51421f8ee2210c71ed870fe618276c8954afbe9": "1337000000000000000000",
  "08a9a44e1f41de3dbba7a363a3ab412c124cd15e": "200000000000000000000",
  "562bced38ab2ab6c080f3b0541b8456e70824b3f": "641760000000000000000",
  "1e484d0621f0f5331b35d5408d9aae4eb1acf21e": "20000000000000000000",
  "3a476bd2c9e664c63ab266aa4c6e4a4825f516c3": "200000000000000000000",
  "8d6df209484d7b94702b03a53e56b9fb0660f6f0": "2000000000000000000000",
  "5970fb1b144dd751e4ce2eca7caa20e363dc4da3": "10000000000000000000000",
  "d1dd79fb158160e5b4e8e23f312e6a907fbc4d4e": "500000000000000000000",
  "7ee5ca805dce23af89c2d444e7e40766c54c7404": "240660000000000000000",
  "93e0f37ecdfb0086e3e862a97034447b1e4dec1a": "30000000000000000000",
  "e10ac19c546fc2547c61c139f5d1f45a6666d5b0": "4775000000000000000000",
  "1c73d00b6e25d8eb9c1ff4ad827b6b9e9cf6d20c": "200000000000000000000",
  "d771d9e0ca8a08a113775731434eb3270599c40d": "20000000000000000000",
  "e69d1c378b771e0feff051db69d966ac6779f4ed": "553000000000000000000",
  "0ef85b49d08a75198692914eddb4b22cf5fa4450": "2004800000000000000000",
  "ed70a37cdd1cbda9746d939658ae2a6181288578": "9600000000000000000000",
  "eee761847e33fd61d99387ee14628694d1bfd525": "2000000000000000000000",
  "271d3d481cb88e7671ad216949b6365e06303de0": "4000000000000000000000",
  "5255dc69155a45b970c604d30047e2f530690e7f": "20000000000000000000",
  "cabab6274ed15089737e287be878b757934864e2": "20000000000000000000000",
  "9defe56a0ff1a1947dba0923f7dd258d8f12fa45": "26880000000000000000000",
  "b7a2c103728b7305b5ae6e961c94ee99c9fe8e2b": "50000000000000000000000",
  "b498bb0f520005b6216a4425b75aa9adc52d622b": "4000000000000000000000",
  "c1132878235c5ddba5d9f3228b5236e47020dc6f": "1000000000000000000000",
  "f81622e55757daea6675975dd93538da7d16991e": "2000000000000000000000",
  "ce2deab51c0a9ae09cd212c4fa4cc52b53cc0dec": "2000000000000000000000",
  "86a1eadeeb30461345d9ef6bd05216fa247c0d0c": "2000000000000000000000",
  "7b1fe1ab4dfd0088cdd7f60163ef59ec2aee06f5": "2000000000000000000000",
  "6bbc3f358a668dd1a11f0380f3f73108426abd4a": "4000000000000000000000",
  "b1e6e810c24ab0488de9e01e574837829f7c77d0": "400000000000000000000",
  "03eb3cb860f6028da554d344a2bb5a500ae8b86f": "2000000000000000000000",
  "e5481a7fed42b901bbed20789bd4ade50d5f83b9": "2000000000000000000000",
  "1f3da68fe87eaf43a829ab6d7ec5a6e009b204fb": "554988000000000000000",
  "30037988702671acbe892c03fe5788aa98af287a": "2800000000000000000000",
  "edb473353979a206879de144c10a3c51d7d7081a": "6000000000000000000000",
  "22bdffc240a88ff7431af3bff50e14da37d5183e": "1000000000000000000000",
  "9374869d4a9911ee1eaf558bc4c2b63ec63acfdd": "1000000000000000000000",
  "b756ad52f3bf74a7d24c67471e0887436936504c": "20000000000000000000000",
  "8bd0b65a50ef5cef84fec420be7b89ed1470ceb9": "11999000000000000000000",
  "af26f7c6bf453e2078f08953e4b28004a2c1e209": "100000000000000000000",
  "7c532db9e0c06c26fd40acc56ac55c1ee92d3c3a": "300000000000000000000000",
  "dde670d01639667576a22dd05d3246d61f06e083": "26740000000000000000",
  "5cf44e10540d65716423b1bcb542d21ff83a94cd": "10000000000000000000000",
  "f96b4c00766f53736a8574f822e6474c2f21da2d": "400000000000000000000",
  "8d89170b92b2be2c08d57c48a7b190a2f146720f": "19700000000000000000000",
  "142b87c5043ffb5a91df18c2e109ced6fe4a71db": "200000000000000000000",
  "42d34940edd2e7005d46e2188e4cfece8311d74d": "158000000000000000000",
  "562105e82b099735de49f62692cc87cd38a8edcd": "6000000000000000000000",
  "457bcef37dd3d60b2dd019e3fe61d46b3f1e7252": "20000000000000000000",
  "cf8882359c0fb23387f5674074d8b17ade512f98": "6000000000000000000000",
  "f0c081da52a9ae36642adf5e08205f05c54168a6": "111000000000000000000",
  "551e7784778ef8e048e495df49f2614f84a4f1dc": "600000000000000000000",
  "3c869c09696523ced824a070414605bb76231ff2": "1000000000000000000000",
  "7e7f18a02eccaa5d61ab8fbf030343c434a25ef7": "66850000000000000000",
  "9328d55ccb3fce531f199382339f0e576ee840a3": "4000000000000000000000",
  "9d0f347e826b7dceaad279060a35c0061ecf334b": "4000000000000000000000",
  "680640838bd07a447b168d6d923b90cf6c43cdca": "1730000000000000000000",
  "c951900c341abbb3bafbf7ee2029377071dbc36a": "327600000000000000000",
  "ddf5810a0eb2fb2e32323bb2c99509ab320f24ac": "17900000000000000000000",
  "2489ac126934d4d6a94df08743da7b7691e9798e": "1000000000000000000000",
  "f42f905231c770f0a406f2b768877fb49eee0f21": "197000000000000000000",
  "756f45e3fa69347a9a973a725e3c98bc4db0b5a0": "200000000000000000000"
}

},{}],114:[function(require,module,exports){
'use strict';var params=require('./params.json');params.genesisState=require('./genesisState.json'),params.bootstrapNodes=require('./bootstrapNodes.json'),module.exports=params;

},{"./bootstrapNodes.json":112,"./genesisState.json":113,"./params.json":115}],115:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments)
},{"dup":105}],116:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},hex=require('convert-hex'),BASE36_ALPHABET='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',bs36=require('base-x')(BASE36_ALPHABET),ICAP={};// For simplicity we redefine it, as the default uses lowercase
ICAP.decodeBBAN=function(a){var b=a.length;if(30===b||31===b){// FIXME: horrible padding code
for(var c=hex.bytesToHex(bs36.decode(a));40>c.length;)c='0'+c;// NOTE: certain tools include an extra leading 0, drop that
return 42===c.length&&'0'===c[0]&&'0'===c[1]&&(c=c.slice(2)),'0x'+c}if(16===b)return{asset:a.slice(0,3),institution:a.slice(3,7),client:a.slice(7,16)};throw new Error('Not a valid Ethereum BBAN')},ICAP.encodeBBAN=function(a){if('object'==('undefined'==typeof a?'undefined':_typeof(a))){if(3!==a.asset.length||4!==a.institution.length||9!==a.client.length)throw new Error('Invalid \'indirect\' Ethereum BBAN');return[a.asset,a.institution,a.client].join('').toUpperCase()}if(42===a.length&&'0'===a[0]&&'x'===a[1])return'0'===a[2]&&'0'===a[3]&&(a='0x'+a.slice(4)),bs36.encode(hex.hexToBytes(a));throw new Error('Not a valid input for Ethereum BBAN')};// ISO13616 reordering and letter translation
// NOTE: we assume input is uppercase only
// based off code from iban.js
function prepare(a){// translate letters to numbers
return a=a.slice(4)+a.slice(0,4),a.split('').map(function(b){var c=b.charCodeAt(0);// 65 == A, 90 == Z in ASCII
return 65<=c&&90>=c?c-65+10:b}).join('')}// Calculate ISO7064 mod 97-10
// NOTE: assumes all numeric input string
function mod9710(a){var b=0;for(var c=0;c<a.length;c++)b*=10,b+=a.charCodeAt(c)-48,b%=97;return b}ICAP.encode=function(a,b){a=ICAP.encodeBBAN(a);var c=98-mod9710(prepare('XE00'+a));// format into 2 digits
c=('0'+c).slice(-2);var d='XE'+c+a;return!0===b&&(d=d.replace(/(.{4})/g,'$1 ')),d},ICAP.decode=function(a,b){// check for validity
if(a=a.replace(/\ /g,''),!b){if('XE'!==a.slice(0,2))throw new Error('Not in ICAP format');if(1!==mod9710(prepare(a)))throw new Error('Invalid checksum in IBAN')}return ICAP.decodeBBAN(a.slice(4,35))},ICAP.fromAddress=function(a,b,c){var d=ICAP.encode(a,b);if(34!==d.replace(' ','').length&&!0!==c)throw new Error('Supplied address will result in invalid an IBAN');return d},ICAP.fromAsset=function(a,b){return ICAP.encode(a,b)},ICAP.toAddress=function(a){var b=ICAP.decode(a);if('string'!=typeof b)throw new Error('Not an address-encoded ICAP');return b},ICAP.toAsset=function(a){var b=ICAP.decode(a);if('object'!=('undefined'==typeof b?'undefined':_typeof(b)))throw new Error('Not an asset-encoded ICAP');return b},ICAP.isICAP=function(a){try{return ICAP.decode(a),!0}catch(b){return!1}},ICAP.isAddress=function(a){try{return ICAP.toAddress(a),!0}catch(b){return!1}},ICAP.isAsset=function(a){try{return ICAP.toAsset(a),!0}catch(b){return!1}},module.exports=ICAP;

},{"base-x":26,"convert-hex":65}],117:[function(require,module,exports){
(function (Buffer){
'use strict';var ethUtil=require('ethereumjs-util'),fees=require('ethereum-common/params'),BN=ethUtil.BN,N_DIV_2=new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',16),Transaction=module.exports=function(a){// Define Properties
var b=[{name:'nonce',length:32,allowLess:!0,default:new Buffer([])},{name:'gasPrice',length:32,allowLess:!0,default:new Buffer([])},{name:'gasLimit',alias:'gas',length:32,allowLess:!0,default:new Buffer([])},{name:'to',allowZero:!0,length:20,default:new Buffer([])},{name:'value',length:32,allowLess:!0,default:new Buffer([])},{name:'data',alias:'input',allowZero:!0,default:new Buffer([])},{name:'v',length:1,default:new Buffer([28])},{name:'r',length:32,allowLess:!0,default:new Buffer([])},{name:'s',length:32,allowLess:!0,default:new Buffer([])}];/**
   * Returns the rlp encoding of the transaction
   * @method serialize
   * @return {Buffer}
   */// attached serialize
ethUtil.defineProperties(this,b,a),Object.defineProperty(this,'from',{enumerable:!0,configurable:!0,get:this.getSenderAddress.bind(this)}),this._homestead=!0};// secp256k1n/2
/**
 * Creates a new transaction object
 * @constructor
 * @class {Buffer|Array} data a transaction can be initiailized with either a buffer containing the RLP serialized transaction or an array of buffers relating to each of the tx Properties, listed in order below in the exmple. Or lastly an Object containing the Properties of the transaction like in the Usage example
 *
 * For Object and Arrays each of the elements can either be a Buffer, a hex-prefixed (0x) String , Number, or an object with a toBuffer method such as Bignum
 * @example
 * var rawTx = {
 *   nonce: '00',
 *   gasPrice: '09184e72a000',
 *   gasLimit: '2710',
 *   to: '0000000000000000000000000000000000000000',
 *   value: '00',
 *   data: '7f7465737432000000000000000000000000000000000000000000000000000000600057',
 *   v: '1c',
 *   r: '5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',
 *   s '5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'
 * };
 * var tx = new Transaction(rawTx);
 * @prop {Buffer} raw The raw rlp decoded transaction
 * @prop {Buffer} nonce
 * @prop {Buffer} to the to address
 * @prop {Buffer} value the amount of ether sent
 * @prop {Buffer} data this will contain the data of the message or the init of a contract
 * @prop {Buffer} v EC signature parameter
 * @prop {Buffer} r EC signature parameter
 * @prop {Buffer} s EC recovery ID
 *//**
 * If the tx's `to` is to the creation address
 * @method toCreationAddress
 * @return {Boolean}
 */Transaction.prototype.toCreationAddress=function(){return''===this.to.toString('hex')},Transaction.prototype.hash=function(a){var b=void 0;// create hash
return'undefined'==typeof a&&(a=!0),b=a?this.raw:this.raw.slice(0,6),ethUtil.rlphash(b)},Transaction.prototype.getSenderAddress=function(){if(this._from)return this._from;var a=this.getSenderPublicKey();return this._from=ethUtil.publicToAddress(a),this._from},Transaction.prototype.getSenderPublicKey=function(){return this._senderPubKey&&this._senderPubKey.length||this.verifySignature(),this._senderPubKey},Transaction.prototype.verifySignature=function(){var a=this.hash(!1);// All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.
if(this._homestead&&1===new BN(this.s).cmp(N_DIV_2))return!1;try{this._senderPubKey=ethUtil.ecrecover(a,this.v,this.r,this.s)}catch(b){return!1}return!!this._senderPubKey},Transaction.prototype.sign=function(a){var b=this.hash(!1),c=ethUtil.ecsign(b,a);Object.assign(this,c)},Transaction.prototype.getDataFee=function(){var a=this.raw[5],b=new BN(0);for(var c=0;c<a.length;c++)0===a[c]?b.iaddn(fees.txDataZeroGas.v):b.iaddn(fees.txDataNonZeroGas.v);return b},Transaction.prototype.getBaseFee=function(){var a=this.getDataFee().iaddn(fees.txGas.v);return this._homestead&&this.toCreationAddress()&&a.iaddn(fees.txCreation.v),a},Transaction.prototype.getUpfrontCost=function(){return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value))},Transaction.prototype.validate=function(a){var b=[];return this.verifySignature()||b.push('Invalid Signature'),0<this.getBaseFee().cmp(new BN(this.gasLimit))&&b.push(['gas limit is to low. Need at least '+this.getBaseFee()]),void 0===a||!1===a?0===b.length:b.join(' ')};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"ethereum-common/params":106,"ethereumjs-util":120}],118:[function(require,module,exports){
'use strict';var BigNumber=require('bignumber.js'),Units={},rawUnits=require('./units.js'),units={};Object.keys(rawUnits).map(function(a){units[a]=new BigNumber(rawUnits[a],10)}),Units.units=rawUnits,Units.convert=function(a,b,c){if(b=b.toLowerCase(),!units[b])throw new Error('Unsupported input unit');if(c=c.toLowerCase(),!units[c])throw new Error('Unsupported output unit');return new BigNumber(a,10).mul(units[b]).div(units[c]).toString(10)},Units.lazyConvert=function(a,b){var c=a.split(' ');if(2!==c.length)throw new Error('Invalid input');return Units.convert(c[0],c[1],b)+' '+b},module.exports=Units;

},{"./units.js":119,"bignumber.js":28}],119:[function(require,module,exports){
'use strict';module.exports={wei:'1',kwei:'1000',Kwei:'1000',babbage:'1000',femtoether:'1000',mwei:'1000000',Mwei:'1000000',lovelace:'1000000',picoether:'1000000',gwei:'1000000000',Gwei:'1000000000',shannon:'1000000000',nanoether:'1000000000',nano:'1000000000',szabo:'1000000000000',microether:'1000000000000',micro:'1000000000000',finney:'1000000000000000',milliether:'1000000000000000',milli:'1000000000000000',ether:'1000000000000000000',eth:'1000000000000000000',kether:'1000000000000000000000',grand:'1000000000000000000000',mether:'1000000000000000000000000',gether:'1000000000000000000000000000',tether:'1000000000000000000000000000000'};

},{}],120:[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},SHA3=require('keccakjs'),secp256k1=require('secp256k1'),assert=require('assert'),rlp=require('rlp'),BN=require('bn.js'),createHash=require('create-hash');/**
 * the max integer that this VM can handle (a ```BN```)
 * @var {BN} MAX_INTEGER
 */exports.MAX_INTEGER=new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',16),exports.TWO_POW256=new BN('10000000000000000000000000000000000000000000000000000000000000000',16),exports.SHA3_NULL_S='c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',exports.SHA3_NULL=new Buffer(exports.SHA3_NULL_S,'hex'),exports.SHA3_RLP_ARRAY_S='1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',exports.SHA3_RLP_ARRAY=new Buffer(exports.SHA3_RLP_ARRAY_S,'hex'),exports.SHA3_RLP_S='56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',exports.SHA3_RLP=new Buffer(exports.SHA3_RLP_S,'hex'),exports.BN=BN,exports.rlp=rlp,exports.secp256k1=secp256k1,exports.zeros=function(b){var c=new Buffer(b);return c.fill(0),c},exports.setLengthLeft=exports.setLength=function(b,c,e){var f=exports.zeros(c);return b=exports.toBuffer(b),e?b.length<c?(b.copy(f),f):b.slice(0,c):b.length<c?(b.copy(f,c-b.length),f):b.slice(-c)},exports.setLengthRight=function(b,c){return exports.setLength(b,c,!0)},exports.unpad=exports.stripZeros=function(b){b=exports.stripHexPrefix(b);for(var c=b[0];0<b.length&&'0'===c.toString();)b=b.slice(1),c=b[0];return b},exports.toBuffer=function(b){if(!Buffer.isBuffer(b))if(Array.isArray(b))b=new Buffer(b);else if('string'==typeof b)b=exports.isHexPrefixed(b)?new Buffer(exports.padToEven(exports.stripHexPrefix(b)),'hex'):new Buffer(b);else if('number'==typeof b)b=exports.intToBuffer(b);else if(null===b||void 0===b)b=new Buffer([]);else if(b.toArray)b=new Buffer(b.toArray());else throw new Error('invalid type');return b},exports.intToHex=function(b){assert(0==b%1,'number is not a integer'),assert(0<=b,'number must be positive');var c=b.toString(16);return c.length%2&&(c='0'+c),'0x'+c},exports.intToBuffer=function(b){var c=exports.intToHex(b);return new Buffer(c.slice(2),'hex')},exports.bufferToInt=function(b){return parseInt(exports.bufferToHex(b),16)},exports.bufferToHex=function(b){return b=exports.toBuffer(b),0===b.length?0:'0x'+b.toString('hex')},exports.fromSigned=function(b){return new BN(b).fromTwos(256)},exports.toUnsigned=function(b){return new Buffer(b.toTwos(256).toArray())},exports.sha3=function(b,c){b=exports.toBuffer(b),c||(c=256);var e=new SHA3(c);return b&&e.update(b),new Buffer(e.digest('hex'),'hex')},exports.sha256=function(b){return b=exports.toBuffer(b),createHash('sha256').update(b).digest()},exports.ripemd160=function(b,c){b=exports.toBuffer(b);var e=createHash('rmd160').update(b).digest();return!0===c?exports.setLength(e,32):e},exports.rlphash=function(b){return exports.sha3(rlp.encode(b))},exports.isValidPrivate=function(b){return secp256k1.privateKeyVerify(b)},exports.isValidPublic=function(b,c){return 64===b.length?secp256k1.publicKeyVerify(Buffer.concat([new Buffer([4]),b])):!!c&&secp256k1.publicKeyVerify(b)},exports.pubToAddress=exports.publicToAddress=function(b,c){// Only take the lower 160bits of the hash
return b=exports.toBuffer(b),c&&64!==b.length&&(b=secp256k1.publicKeyConvert(b,!1).slice(1)),assert(64===b.length),exports.sha3(b).slice(-20)};/**
 * Returns the ethereum public key of a given private key
 * @method privateToPublic
 * @param {Buffer} privateKey A private key must be 256 bits wide
 * @return {Buffer}
 */var privateToPublic=exports.privateToPublic=function(b){// skip the type flag and use the X, Y points
return b=exports.toBuffer(b),secp256k1.publicKeyCreate(b,!1).slice(1)};/**
 * Converts a public key to the Ethereum format.
 * @method importPublic
 * @param {Buffer} publicKey
 * @return {Buffer}
 */exports.importPublic=function(b){return b=exports.toBuffer(b),64!==b.length&&(b=secp256k1.publicKeyConvert(b,!1).slice(1)),b},exports.ecsign=function(b,c){var e=secp256k1.sign(b,c),f={};return f.r=e.signature.slice(0,32),f.s=e.signature.slice(32,64),f.v=e.recovery+27,f},exports.ecrecover=function(b,c,e,f){var g=Buffer.concat([exports.setLength(e,32),exports.setLength(f,32)],64),j=exports.bufferToInt(c)-27;if(0!=j&&1!=j)throw new Error('Invalid signature v value');var k=secp256k1.recover(b,g,j);return secp256k1.publicKeyConvert(k,!1).slice(1)},exports.toRpcSig=function(b,c,e){// geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin
// FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053
return exports.bufferToHex(Buffer.concat([c,e,exports.toBuffer(b-27)]))},exports.fromRpcSig=function(b){b=exports.toBuffer(b);var c=b[64];// support both versions of `eth_sign` responses
return 27>c&&(c+=27),{v:c,r:b.slice(0,32),s:b.slice(32,64)}},exports.privateToAddress=function(b){return exports.publicToAddress(privateToPublic(b))},exports.isValidAddress=function(b){return /^0x[0-9a-fA-F]{40}$/i.test(b)},exports.toChecksumAddress=function(b){b=exports.stripHexPrefix(b).toLowerCase();var c=exports.sha3(b).toString('hex'),e='0x';for(var f=0;f<b.length;f++)e+=8<=parseInt(c[f],16)?b[f].toUpperCase():b[f];return e},exports.isValidChecksumAddress=function(b){return exports.isValidAddress(b)&&exports.toChecksumAddress(b)===b},exports.generateAddress=function(b,c){// Only take the lower 160bits of the hash
return b=exports.toBuffer(b),c=new BN(c),c=c.isZero()?null:new Buffer(c.toArray()),exports.rlphash([b,c]).slice(-20)},exports.isPrecompiled=function(b){var c=exports.unpad(b);return 1===c.length&&0<c[0]&&5>c[0]},exports.isHexPrefixed=function(b){return'0x'===b.slice(0,2)},exports.stripHexPrefix=function(b){return'string'==typeof b?exports.isHexPrefixed(b)?b.slice(2):b:b},exports.addHexPrefix=function(b){return'string'==typeof b?exports.isHexPrefixed(b)?b:'0x'+b:b},exports.padToEven=function(b){return b.length%2&&(b='0'+b),b},exports.baToJSON=function(b){if(Buffer.isBuffer(b))return'0x'+b.toString('hex');if(b instanceof Array){var c=[];for(var e=0;e<b.length;e++)c.push(exports.baToJSON(b[e]));return c}},exports.defineProperties=function(b,c,e){// if the constuctor is passed data
if(b.raw=[],b._fields=[],b.toJSON=function(g){if(g){var j={};return b._fields.forEach(function(k){j[k]='0x'+b[k].toString('hex')}),j}return exports.baToJSON(this.raw)},b.serialize=function(){return rlp.encode(b.raw)},c.forEach(function(g,j){function k(){return b.raw[j]}function l(m){m=exports.toBuffer(m),'00'!==m.toString('hex')||g.allowZero||(m=new Buffer([])),g.allowLess&&g.length?(m=exports.stripZeros(m),assert(g.length>=m.length,'The field '+g.name+' must not have more '+g.length+' bytes')):!(g.allowZero&&0===m.length)&&g.length&&assert(g.length===m.length,'The field '+g.name+' must have byte length of '+g.length),b.raw[j]=m}b._fields.push(g.name),Object.defineProperty(b,g.name,{enumerable:!0,configurable:!0,get:k,set:l}),g.default&&(b[g.name]=g.default),g.alias&&Object.defineProperty(b,g.alias,{enumerable:!1,configurable:!0,set:l,get:k})}),e)if('string'==typeof e&&(e=new Buffer(exports.stripHexPrefix(e),'hex')),Buffer.isBuffer(e)&&(e=rlp.decode(e)),Array.isArray(e)){if(e.length>b._fields.length)throw new Error('wrong number of fields in data');// make sure all the items are buffers
e.forEach(function(g,j){b[b._fields[j]]=exports.toBuffer(g)})}else if('object'==('undefined'==typeof e?'undefined':_typeof(e)))for(var f in e)-1!==b._fields.indexOf(f)&&(b[f]=e[f]);else throw new Error('invalid data')};

}).call(this,require("buffer").Buffer)
},{"assert":21,"bn.js":30,"buffer":62,"create-hash":68,"keccakjs":164,"rlp":234,"secp256k1":237}],121:[function(require,module,exports){
arguments[4][107][0].apply(exports,arguments)
},{"./lib/index.js":126,"dup":107}],122:[function(require,module,exports){
(function (Buffer){
'use strict';var assert=require('assert'),utils=require('ethereumjs-util'),byteSize=256,Bloom=module.exports=function(a){a?(assert(a.length===byteSize,'bitvectors must be 2048 bits long'),this.bitvector=a):this.bitvector=utils.zeros(byteSize)};/**
 * Represents a Bloom
 * @constructor
 * @param {Buffer} bitvector
 *//**
 * adds an element to a bit vector of a 64 byte bloom filter
 * @method add
 * @param {Buffer} element
 */Bloom.prototype.add=function(a){a=utils.sha3(a);// binary 11111111111
for(var b=0;3>b;b++){var c=a.readUInt16BE(2*b),d=2047&c;this.bitvector[byteSize-(d>>3)-1]|=1<<d%8}},Bloom.prototype.check=function(a){a=utils.sha3(a);// binary 111111111
var b=!0;for(var c=0;3>c&&b;c++){var d=a.readUInt16BE(2*c),f=511&d;b=this.bitvector[byteSize-(f>>3)-1]&1<<f%8}return!!b},Bloom.prototype.multiCheck=function(a){var b=this,c=!0;return a.forEach(function(d){Buffer.isBuffer(d)||(d=new Buffer(d,'hex')),c&&b.check(d)}),c},Bloom.prototype.or=function(a){if(a)for(var b=0;b<=byteSize;b++)this.bitvector[b]=this.bitvector[b]|a.bitvector[b]};

}).call(this,require("buffer").Buffer)
},{"assert":21,"buffer":62,"ethereumjs-util":120}],123:[function(require,module,exports){
(function (Buffer){
'use strict';var Tree=require('functional-red-black-tree'),Account=require('ethereumjs-account'),async=require('async'),Cache=module.exports=function(a){this._cache=Tree(),this._checkpoints=[],this._deletes=[],this._trie=a};Cache.prototype.put=function(a,b,c){this._update(a,b,!c,!0)},Cache.prototype.get=function(a){var b=this.lookup(a);return b||(b=new Account,b.exists=!1),b},Cache.prototype.lookup=function(a){a=a.toString('hex');var b=this._cache.find(a);if(b.node){var c=new Account(b.value.val);return c.exists=b.value.exists,c}},Cache.prototype._lookupAccount=function(a,b){var c=this;c._trie.get(a,function(d,e){if(d)return b(d);var f=new Account(e),g=!!e;f.exists=g,b(null,f,g)})},Cache.prototype.getOrLoad=function(a,b){var c=this,d=this.lookup(a);d?b(null,d):c._lookupAccount(a,function(e,f,g){return e?b(e):void(c._update(a,f,!1,g),b(null,f))})},Cache.prototype.warm=function(a,b){var c=this,d=[];// shim till async supports iterators
a.forEach(function(e){e&&d.push(e)}),async.eachSeries(d,function(e,f){var g=new Buffer(e,'hex');c._lookupAccount(g,function(h,i){return h?f(h):void(c._update(g,i,!1,i.exists),f())})},b)},Cache.prototype.flush=function(a){var b=this._cache.begin,c=this,d=!0;async.whilst(function(){return d},function(e){b.value.modified?(b.value.modified=!1,b.value.val=b.value.val.serialize(),c._trie.put(new Buffer(b.key,'hex'),b.value.val,function(){d=b.hasNext,b.next(),e()})):(d=b.hasNext,b.next(),e())},function(){async.eachSeries(c._deletes,function(e,f){c._trie.del(e,f)},function(){c._deletes=[],a()})})},Cache.prototype.checkpoint=function(){this._checkpoints.push(this._cache)},Cache.prototype.revert=function(){this._cache=this._checkpoints.pop(this._cache)},Cache.prototype.commit=function(){this._checkpoints.pop()},Cache.prototype.clear=function(){this._deletes=[],this._cache=Tree()},Cache.prototype.del=function(a){this._deletes.push(a),a=a.toString('hex'),this._cache=this._cache.remove(a)},Cache.prototype._update=function(a,b,c,d){a=a.toString('hex');var e=this._cache.find(a);this._cache=e.node?e.update({val:b,modified:c,exists:!0}):this._cache.insert(a,{val:b,modified:c,exists:d})};

}).call(this,require("buffer").Buffer)
},{"async":25,"buffer":62,"ethereumjs-account":109,"functional-red-black-tree":150}],124:[function(require,module,exports){
'use strict';exports.ERROR={OUT_OF_GAS:'out of gas',STACK_UNDERFLOW:'stack underflow',INVALID_JUMP:'invalid JUMP',INVALID_OPCODE:'invalid opcode'};

},{}],125:[function(require,module,exports){
(function (Buffer){
'use strict';var utils=require('ethereumjs-util');module.exports={getBlock:function getBlock(a,b){var c=utils.sha3(new Buffer(utils.bufferToInt(a).toString()));b(null,{hash:function hash(){return c}})}};

}).call(this,require("buffer").Buffer)
},{"buffer":62,"ethereumjs-util":120}],126:[function(require,module,exports){
(function (Buffer){
'use strict';var util=require('util'),StateManager=require('./stateManager.js'),Account=require('ethereumjs-account'),AsyncEventEmitter=require('async-eventemitter'),num01=require('./precompiled/01-ecrecover.js'),num02=require('./precompiled/02-sha256.js'),num03=require('./precompiled/03-ripemd160.js'),num04=require('./precompiled/04-identity.js');// require the percomiled contracts
module.exports=VM,VM.deps={ethUtil:require('ethereumjs-util'),Account:require('ethereumjs-account'),Trie:require('merkle-patricia-tree'),rlp:require('ethereumjs-util').rlp};/**
 * @constructor
 * @param {Trie} [trie] A merkle-patricia-tree instance for the state tree
 * @param {Blockchain} [blockchain] A blockchain object for storing/retrieving blocks
 * @param {Object} [opts]
 * @param {Boolean} [opts.activatePrecompiles] Create entries in the state tree for the precompiled contracts
 * @param {Boolean} [opts.enableHomestead] Force enable Homestead irrelevant to block number
 */function VM(a,b,c){if(this.stateManager=new StateManager({trie:a,blockchain:b}),this.blockchain=this.stateManager.blockchain,this.trie=this.stateManager.trie,this.opts=c||{},this._precompiled={},this._precompiled['0000000000000000000000000000000000000001']=num01,this._precompiled['0000000000000000000000000000000000000002']=num02,this._precompiled['0000000000000000000000000000000000000003']=num03,this._precompiled['0000000000000000000000000000000000000004']=num04,this.opts.activatePrecompiles)for(var d=1;4>=d;d++)this.trie.put(new Buffer('000000000000000000000000000000000000000'+d,'hex'),new Account().serialize());AsyncEventEmitter.call(this)}util.inherits(VM,AsyncEventEmitter),VM.prototype.runCode=require('./runCode.js'),VM.prototype.runJIT=require('./runJit.js'),VM.prototype.runBlock=require('./runBlock.js'),VM.prototype.runTx=require('./runTx.js'),VM.prototype.runCall=require('./runCall.js'),VM.prototype.runBlockchain=require('./runBlockchain.js'),VM.prototype.copy=function(){var a=this.trie.copy();return new VM(a,this.blockchain)},VM.prototype.loadCompiled=function(a,b,c){this.trie.db.put(a,b,c)},VM.prototype.populateCache=function(a,b){this.stateManager.warmCache(a,b)};

}).call(this,require("buffer").Buffer)
},{"./precompiled/01-ecrecover.js":130,"./precompiled/02-sha256.js":131,"./precompiled/03-ripemd160.js":132,"./precompiled/04-identity.js":133,"./runBlock.js":134,"./runBlockchain.js":135,"./runCall.js":136,"./runCode.js":137,"./runJit.js":138,"./runTx.js":139,"./stateManager.js":140,"async-eventemitter":22,"buffer":62,"ethereumjs-account":109,"ethereumjs-util":120,"merkle-patricia-tree":194,"util":259}],127:[function(require,module,exports){
'use strict';var utils=require('ethereumjs-util'),BN=utils.BN,pow32=new BN('010000000000000000000000000000000000000000000000000000000000000000',16),pow31=new BN('0100000000000000000000000000000000000000000000000000000000000000',16),pow30=new BN('01000000000000000000000000000000000000000000000000000000000000',16),pow29=new BN('010000000000000000000000000000000000000000000000000000000000',16),pow28=new BN('0100000000000000000000000000000000000000000000000000000000',16),pow27=new BN('01000000000000000000000000000000000000000000000000000000',16),pow26=new BN('010000000000000000000000000000000000000000000000000000',16),pow25=new BN('0100000000000000000000000000000000000000000000000000',16),pow24=new BN('01000000000000000000000000000000000000000000000000',16),pow23=new BN('010000000000000000000000000000000000000000000000',16),pow22=new BN('0100000000000000000000000000000000000000000000',16),pow21=new BN('01000000000000000000000000000000000000000000',16),pow20=new BN('010000000000000000000000000000000000000000',16),pow19=new BN('0100000000000000000000000000000000000000',16),pow18=new BN('01000000000000000000000000000000000000',16),pow17=new BN('010000000000000000000000000000000000',16),pow16=new BN('0100000000000000000000000000000000',16),pow15=new BN('01000000000000000000000000000000',16),pow14=new BN('010000000000000000000000000000',16),pow13=new BN('0100000000000000000000000000',16),pow12=new BN('01000000000000000000000000',16),pow11=new BN('010000000000000000000000',16),pow10=new BN('0100000000000000000000',16),pow9=new BN('01000000000000000000',16),pow8=new BN('010000000000000000',16),pow7=new BN('0100000000000000',16),pow6=new BN('01000000000000',16),pow5=new BN('010000000000',16),pow4=new BN('0100000000',16),pow3=new BN('01000000',16),pow2=new BN('010000',16),pow1=new BN('0100',16);module.exports=function(b){if(-1===b.cmp(pow1))return 0;return-1===b.cmp(pow2)?1:-1===b.cmp(pow3)?2:-1===b.cmp(pow4)?3:-1===b.cmp(pow5)?4:-1===b.cmp(pow6)?5:-1===b.cmp(pow7)?6:-1===b.cmp(pow8)?7:-1===b.cmp(pow9)?8:-1===b.cmp(pow10)?9:-1===b.cmp(pow11)?10:-1===b.cmp(pow12)?11:-1===b.cmp(pow13)?12:-1===b.cmp(pow14)?13:-1===b.cmp(pow15)?14:-1===b.cmp(pow16)?15:-1===b.cmp(pow17)?16:-1===b.cmp(pow18)?17:-1===b.cmp(pow19)?18:-1===b.cmp(pow20)?19:-1===b.cmp(pow21)?20:-1===b.cmp(pow22)?21:-1===b.cmp(pow23)?22:-1===b.cmp(pow24)?23:-1===b.cmp(pow25)?24:-1===b.cmp(pow26)?25:-1===b.cmp(pow27)?26:-1===b.cmp(pow28)?27:-1===b.cmp(pow29)?28:-1===b.cmp(pow30)?29:-1===b.cmp(pow31)?30:-1===b.cmp(pow32)?31:32};

},{"ethereumjs-util":120}],128:[function(require,module,exports){
(function (Buffer){
'use strict';var async=require('async'),fees=require('ethereum-common'),utils=require('ethereumjs-util'),BN=utils.BN,constants=require('./constants.js'),logTable=require('./logTable.js'),ERROR=constants.ERROR,MAX_INT=9007199254740991;// the opcode functions
module.exports={STOP:function STOP(d){d.stopped=!0},ADD:function ADD(d,f,g){return new Buffer(new BN(d).add(new BN(f)).mod(utils.TWO_POW256).toArray())},MUL:function MUL(d,f,g){return new Buffer(new BN(d).mul(new BN(f)).mod(utils.TWO_POW256).toArray())},SUB:function SUB(d,f,g){return utils.toUnsigned(new BN(d).sub(new BN(f)))},DIV:function DIV(d,f,g){d=new BN(d),f=new BN(f);var h;return h=f.isZero()?[0]:d.div(f).toArray(),new Buffer(h)},SDIV:function SDIV(d,f,g){d=utils.fromSigned(d),f=utils.fromSigned(f);var h;return h=f.isZero()?new Buffer([0]):utils.toUnsigned(d.div(f)),h},MOD:function MOD(d,f,g){d=new BN(d),f=new BN(f);var h;return h=f.isZero()?[0]:d.mod(f).toArray(),new Buffer(h)},SMOD:function SMOD(d,f,g){d=utils.fromSigned(d),f=utils.fromSigned(f);var h;return f.isZero()?h=new Buffer([0]):(h=d.abs().mod(f.abs()),d.isNeg()&&(h=h.neg()),h=utils.toUnsigned(h)),h},ADDMOD:function ADDMOD(d,f,g,h){d=new BN(d).add(new BN(f)),g=new BN(g);var j;return j=g.isZero()?[0]:d.mod(g).toArray(),new Buffer(j)},MULMOD:function MULMOD(d,f,g,h){d=new BN(d).mul(new BN(f)),g=new BN(g);var j;return j=g.isZero()?[0]:d.mod(g).toArray(),new Buffer(j)},EXP:function EXP(d,f,g){d=new BN(d),f=new BN(f);var j,h=BN.red(utils.TWO_POW256);if(d=d.toRed(h),!f.isZero()){var l=1+logTable(f);subGas(g,new BN(l).muln(fees.expByteGas.v)),j=new Buffer(d.redPow(f).toArray())}else j=new Buffer([1]);return j},SIGNEXTEND:function SIGNEXTEND(d,f){d=new BN(d);var g=!1;if(0>=d.cmpn(31)){d=d.toNumber();var h=new Buffer(utils.setLengthLeft(f.stack.pop(),32));128&h[31-d]&&(g=!0);// 31-k-1 since k-th byte shouldn't be modified
for(var j=30-d;0<=j;j--)h[j]=g?255:0;return h}},// 0x10 range - bit ops
LT:function LT(d,f,g){return new Buffer([-1===new BN(d).cmp(new BN(f))])},GT:function GT(d,f,g){return new Buffer([1===new BN(d).cmp(new BN(f))])},SLT:function SLT(d,f,g){g.stack.push(new Buffer([-1===utils.fromSigned(d).cmp(utils.fromSigned(f))]))},SGT:function SGT(d,f,g){return new Buffer([1===utils.fromSigned(d).cmp(utils.fromSigned(f))])},EQ:function EQ(d,f,g){return d=utils.unpad(d),f=utils.unpad(f),new Buffer([d.toString('hex')===f.toString('hex')])},ISZERO:function ISZERO(d,f){return d=utils.bufferToInt(d),new Buffer([!d])},AND:function AND(d,f,g){return new Buffer(new BN(d).and(new BN(f)).toArray())},OR:function OR(d,f,g){return new Buffer(new BN(d).or(new BN(f)).toArray())},XOR:function XOR(d,f,g){return new Buffer(new BN(d).xor(new BN(f)).toArray())},NOT:function NOT(d,f){return new Buffer(new BN(d).inotn(256).toArray())},BYTE:function BYTE(d,f,g){d=utils.bufferToInt(d),f=utils.setLengthLeft(f,32);var h;return h=32>d?utils.intToBuffer(f[d]):new Buffer([0]),h},// 0x20 range - crypto
SHA3:function SHA3(d,f,g){d=utils.bufferToInt(d),f=utils.bufferToInt(f);var h=memLoad(g,d,f);// copy fee
return subGas(g,new BN(fees.sha3WordGas.v).imuln(Math.ceil(f/32))),utils.sha3(h)},// 0x30 range - closure state
ADDRESS:function ADDRESS(d){return d.address},BALANCE:function BALANCE(d,f,g){var h=f.stateManager;// stack to address
// shortcut if current account
return d=utils.setLengthLeft(d.slice(-20),20),d.toString('hex')===f.address.toString('hex')?void g(null,f.contract.balance):void h.getAccountBalance(d,g);// otherwise load account then return balance
},ORIGIN:function ORIGIN(d){return d.origin},CALLER:function CALLER(d){return d.caller},CALLVALUE:function CALLVALUE(d){return d.callValue},CALLDATALOAD:function CALLDATALOAD(d,f){d=utils.bufferToInt(d);var g=f.callData.slice(d,d+32);return g=g.length?g:new Buffer([0]),utils.setLengthRight(g,32)},CALLDATASIZE:function CALLDATASIZE(d){return 1===d.callData.length&&0===d.callData[0]?new Buffer([0]):utils.intToBuffer(d.callData.length)},CALLDATACOPY:function CALLDATACOPY(d,f,g,h){d=utils.bufferToInt(d),g=utils.bufferToInt(g);var j=utils.bufferToInt(f);memStore(h,d,h.callData,j,g),subGas(h,new BN(+fees.copyGas.v*Math.ceil(g/32)))},CODESIZE:function CODESIZE(d){return utils.intToBuffer(d.code.length)},CODECOPY:function CODECOPY(d,f,g,h){d=utils.bufferToInt(d),f=utils.bufferToInt(f),g=utils.bufferToInt(g),memStore(h,d,h.code,f,g),subGas(h,new BN(fees.copyGas.v*Math.ceil(g/32)))},EXTCODESIZE:function EXTCODESIZE(d,f,g){var h=f.stateManager;d=d.slice(-20),h.getContractCode(d,function(j,l){g(j,utils.intToBuffer(l.length))})},EXTCODECOPY:function EXTCODECOPY(d,f,g,h,j,l){var n=j.stateManager;d=d.slice(-20),f=utils.bufferToInt(f),g=utils.bufferToInt(g),h=utils.bufferToInt(h),subMemUsage(j,f,h),subGas(j,new BN(fees.copyGas.v).imuln(Math.ceil(h/32))),n.getContractCode(d,function(o,p){p=o?new Buffer([0]):p,memStore(j,f,p,g,h,!1),l(o)})},GASPRICE:function GASPRICE(d){d.stack.push(d.gasPrice)},// '0x40' range - block operations
BLOCKHASH:function BLOCKHASH(d,f,g){var h=f.stateManager;d=utils.bufferToInt(d);var j=utils.bufferToInt(f.block.header.number)-utils.bufferToInt(d);// block lookups must be within the past 256 blocks
return 256<j||0>=j?void g(null,new Buffer([0])):void h.getBlockHash(d,function(l,n){l?g(null,new Buffer([0])):g(null,n)})},COINBASE:function COINBASE(d){return d.block.header.coinbase},TIMESTAMP:function TIMESTAMP(d){return d.block.header.timestamp},NUMBER:function NUMBER(d){return d.block.header.number},DIFFICULTY:function DIFFICULTY(d){return d.block.header.difficulty},GASLIMIT:function GASLIMIT(d){return d.block.header.gasLimit},// 0x50 range - 'storage' and execution
POP:function POP(){},MLOAD:function MLOAD(d,f){d=utils.bufferToInt(d);var g=utils.unpad(memLoad(f,d,32));return g},MSTORE:function MSTORE(d,f,g){d=utils.bufferToInt(d),f=utils.setLengthLeft(f,32),memStore(g,d,f,0,32)},MSTORE8:function MSTORE8(d,f,g){d=utils.bufferToInt(d),f=f.slice(f.length-1),memStore(g,d,f,0,1)},SLOAD:function SLOAD(d,f,g){var h=f.stateManager;d=utils.setLengthLeft(d,32),h.getContractStorage(f.address,d,function(j,l){return j?g(j):void(l=l.length?l:new Buffer([0]),g(null,l))})},SSTORE:function SSTORE(d,f,g,h){var j=g.stateManager,l=g.address;d=utils.setLengthLeft(d,32);var n=utils.unpad(f);j.getContractStorage(g.address,d,function(o,p){if(o)return h(o);try{0!==n.length||p.length?0===n.length&&p.length?(subGas(g,new BN(fees.sstoreResetGas.v)),g.gasRefund.iadd(new BN(fees.sstoreRefundGas.v))):0===n.length||p.length?0!==n.length&&p.length&&subGas(g,new BN(fees.sstoreResetGas.v)):subGas(g,new BN(fees.sstoreSetGas.v)):subGas(g,new BN(fees.sstoreResetGas.v))}catch(q){return void h(q.error)}j.putContractStorage(l,d,n,function(q){return q?h(q):void(g.contract=j.cache.get(l),h())})})},JUMP:function JUMP(d,f){d=utils.bufferToInt(d),jumpIsValid(f,d)||trap(ERROR.INVALID_JUMP),f.programCounter=d},JUMPI:function JUMPI(d,f,g){d=utils.bufferToInt(d),f=utils.bufferToInt(f);var h=f?d:g.programCounter;f&&!jumpIsValid(g,h)&&trap(ERROR.INVALID_JUMP),g.programCounter=h},PC:function PC(d){return utils.intToBuffer(d.programCounter-1)},MSIZE:function MSIZE(d){return utils.intToBuffer(32*d.memoryWordCount)},GAS:function GAS(d){return new Buffer(d.gasLeft.toArray())},JUMPDEST:function JUMPDEST(d){},PUSH:function PUSH(d){var f=d.opCode-95,g=utils.unpad(d.code.slice(d.programCounter,d.programCounter+f));return d.programCounter+=f,g},DUP:function DUP(d){var f=d.opCode-127;// dupilcated stack items point to the same Buffer
return f>d.stack.length&&trap(ERROR.STACK_UNDERFLOW),d.stack[d.stack.length-f]},SWAP:function SWAP(d){var f=d.opCode-143,g=d.stack.length-f-1;// check the stack to make sure we have enough items on teh stack
0>g&&trap(ERROR.STACK_UNDERFLOW);// preform the swap
var h=d.stack[g];return d.stack[g]=d.stack.pop(),h},LOG:function LOG(d,f){var g=Array.prototype.slice.call(arguments,0);g.pop();// pop off callback
var h=g.pop(),j=g.slice(2);j=j.map(function(p){return utils.setLengthLeft(p,32)}),d=utils.bufferToInt(d),f=utils.bufferToInt(f);var l=h.opCode-160,n=memLoad(h,d,f);subGas(h,new BN(l*fees.logTopicGas.v+f*fees.logDataGas.v));// add address
var o=[h.address];o.push(j),o.push(n),h.logs.push(o)},// '0xf0' range - closures
CREATE:function CREATE(d,f,g,h,j){d=new BN(d),f=utils.bufferToInt(f),g=utils.bufferToInt(g);// set up config
var l={value:d},n={inOffset:f,inLength:g};checkCallMemCost(h,l,n),makeCall(h,l,n,j)},CALL:function CALL(d,f,g,h,j,l,n,o,p){var q=o.stateManager;d=new BN(d),f=utils.setLengthLeft(f,20),g=new BN(g),h=utils.bufferToInt(h),j=utils.bufferToInt(j),l=utils.bufferToInt(l),n=utils.bufferToInt(n);var s=memLoad(o,h,j),t={gasLimit:d,value:g,to:f,data:s},u={inOffset:h,inLength:j,outOffset:l,outLength:n};// add stipend
g.isZero()||(o.gasLeft.iadd(new BN(fees.callStipend.v)),subGas(o,new BN(fees.callValueTransferGas.v)),t.gasLimit.iadd(new BN(fees.callStipend.v))),checkCallMemCost(o,t,u),q.exists(f,function(v,w){return v?void p(v):void(!w&&o.gasLeft.isub(new BN(fees.callNewAccountGas.v)),makeCall(o,t,u,p))})},CALLCODE:function CALLCODE(d,f,g,h,j,l,n,o,p){var q=o.stateManager;d=new BN(d),f=utils.setLengthLeft(f,20),g=new BN(g),h=utils.bufferToInt(h),j=utils.bufferToInt(j),l=utils.bufferToInt(l),n=utils.bufferToInt(n);var s={gasLimit:d,value:g,to:o.address},t={inOffset:h,inLength:j,outOffset:l,outLength:n};// add stipend
g.isZero()||(o.gasLeft.isub(new BN(fees.callValueTransferGas.v)).iadd(new BN(fees.callStipend.v)),s.gasLimit.iadd(new BN(fees.callStipend.v))),checkCallMemCost(o,s,t),q.getAccount(f,function(u,v){return u?p(u):void(utils.isPrecompiled(f)?(s.compiled=!0,s.code=o._precompiled[f.toString('hex')],makeCall(o,s,t,p)):q.getContractCode(f,function(w,x,y){return w?p(w):void(s.code=x,s.compiled=y,makeCall(o,s,t,p))}))})},DELEGATECALL:function DELEGATECALL(d,f,g,h,j,l,n,o){var p=n.stateManager,q=n.callValue;d=new BN(d),f=utils.setLengthLeft(f,20),g=utils.bufferToInt(g),h=utils.bufferToInt(h),j=utils.bufferToInt(j),l=utils.bufferToInt(l);var s={gasLimit:d,value:q,to:n.address,caller:n.caller},t={inOffset:g,inLength:h,outOffset:j,outLength:l};checkCallMemCost(n,s,t),p.getAccount(f,function(u,v){return u?o(u):void(utils.isPrecompiled(f)?(s.compiled=!0,s.code=n._precompiled[f.toString('hex')],makeCall(n,s,t,o)):p.getContractCode(f,function(w,x,y){return w?o(w):void(s.code=x,s.compiled=y,makeCall(n,s,t,o))}))})},RETURN:function RETURN(d,f,g){d=utils.bufferToInt(d),f=utils.bufferToInt(f),g.returnValue=memLoad(g,d,f)},// '0x70', range - other
SUICIDE:function SUICIDE(d,f,g){var h=f.stateManager,j=f.contract,l=f.address;d=utils.setLengthLeft(d,20),f.suicides[l.toString('hex')]||(f.gasRefund=f.gasRefund.add(new BN(fees.suicideRefundGas.v))),f.suicideTo=d,f.suicides[l.toString('hex')]=d,f.stopped=!0,h.getAccount(d,function(n,o){// update balances
if(n)return void g(n);var p=new Buffer(new BN(j.balance).add(new BN(o.balance)).toArray());async.series([h.putAccountBalance.bind(h,d,p),h.putAccountBalance.bind(h,l,new BN(0))],g)})}},module.exports._DC=module.exports.DELEGATECALL;function subGas(d,f){d.gasLeft.isub(f),-1===d.gasLeft.cmpn(0)&&trap(ERROR.OUT_OF_GAS)}function trap(d){throw new function(g){this.error=g}(d)}/**
 * Subtracts the amount needed for memory usage from `runState.gasLeft`
 * @method subMemUsage
 * @param {Number} offset
 * @param {Number} length
 * @return {String}
 */function subMemUsage(d,f,g){//  abort if no usage
if(g){(f>MAX_INT||g>MAX_INT)&&trap(ERROR.OUT_OF_GAS);var h=Math.ceil((f+g)/32);d.memoryWordCount=Math.max(h,d.memoryWordCount);var j=new BN(h),l=new BN(fees.memoryGas.v),n=new BN(fees.quadCoeffDiv.v),o=j.mul(l).add(j.mul(j).div(n));1===o.cmp(d.highestMemCost)&&(subGas(d,o.sub(d.highestMemCost)),d.highestMemCost=o)}// hacky: if the dataOffset is larger than the largest safeInt then just
// load 0's because if tx.data did have that amount of data then the fee
// would be high than the maxGasLimit in the block
}/**
 * Loads bytes from memory and returns them as a buffer. If an error occurs
 * a string is instead returned. The function also subtracts the amount of
 * gas need for memory expansion.
 * @method memLoad
 * @param {Number} offset where to start reading from
 * @param {Number} length how far to read
 * @return {Buffer|String}
 */function memLoad(d,f,g){subMemUsage(d,f,g);var h=d.memory.slice(f,f+g);// fill the remaining lenth with zeros
for(var j=h.length;j<g;j++)h.push(0);return new Buffer(h)}/**
 * Stores bytes to memory. If an error occurs a string is instead returned.
 * The function also subtracts the amount of gas need for memory expansion.
 * @method memStore
 * @param {Number} offset where to start reading from
 * @param {Number} length how far to read
 * @return {Buffer|String}
 */function memStore(d,f,g,h,j,l){!1!==l&&subMemUsage(d,f,j);for(var n=0;n<j;n++)d.memory[f+n]=g[h+n]}// checks if a jump is valid given a destination
function jumpIsValid(d,f){return-1!==d.validJumps.indexOf(f)}// checks to see if we have enough gas left for the memory reads and writes
// required by the CALLs
function checkCallMemCost(d,f,g){f.data=memLoad(d,g.inOffset,g.inLength),g.outLength&&subMemUsage(d,g.outOffset,g.outLength),f.gasLimit||(f.gasLimit=d.gasLeft),-1===d.gasLeft.cmp(f.gasLimit)&&trap(ERROR.OUT_OF_GAS)}// sets up and calls runCall
function makeCall(d,f,g,h){function j(l,n){if(n.vm.logs&&(d.logs=d.logs.concat(n.vm.logs)),n.vm.gasRefund&&(d.gasRefund=d.gasRefund.add(n.vm.gasRefund)),d.gasLeft.isub(n.gasUsed),!n.vm.exceptionError){// save results to memory
if(n.vm.return)for(var o=0;o<Math.min(g.outLength,n.vm.return.length);o++)d.memory[g.outOffset+o]=n.vm.return[o];// update stateRoot on current contract
d.stateManager.getAccount(d.address,function(p,q){d.contract=q,n.createdAddress?h(p,n.createdAddress):h(p,new Buffer([n.vm.exception]))})}else n.vm.createdAddress&&(d.contract.nonce=new BN(d.contract.nonce).subn(1)),h(l,new Buffer([n.vm.exception]))}f.caller=f.caller||d.address,f.origin=d.origin,f.gasPrice=d.gasPrice,f.block=d.block,f.populateCache=!1,f.suicides=d.suicides,f.depth=d.depth+1,d.depth>=fees.stackLimit.v||-1===new BN(d.contract.balance).cmp(f.value)?(d.stack.push(new Buffer([0])),h()):(!f.to&&(d.contract.nonce=new BN(d.contract.nonce).addn(1)),d.stateManager.cache.put(d.address,d.contract),d._vm.runCall(f,j))}

}).call(this,require("buffer").Buffer)
},{"./constants.js":124,"./logTable.js":127,"async":25,"buffer":62,"ethereum-common":143,"ethereumjs-util":120}],129:[function(require,module,exports){
'use strict';var codes={// 0x0 range - arithmetic ops
// name, baseCost, off stack, on stack, dynamic
0:['STOP',0,0,0,!1],1:['ADD',3,2,1,!1],2:['MUL',5,2,1,!1],3:['SUB',3,2,1,!1],4:['DIV',5,2,1,!1],5:['SDIV',5,2,1,!1],6:['MOD',5,2,1,!1],7:['SMOD',5,2,1,!1],8:['ADDMOD',8,3,1,!1],9:['MULMOD',8,3,1,!1],10:['EXP',10,2,1,!1],11:['SIGNEXTEND',5,1,1,!1],// 0x10 range - bit ops
16:['LT',3,2,1,!1],17:['GT',3,2,1,!1],18:['SLT',3,2,1,!1],19:['SGT',3,2,1,!1],20:['EQ',3,2,1,!1],21:['ISZERO',3,1,1,!1],22:['AND',3,2,1,!1],23:['OR',3,2,1,!1],24:['XOR',3,2,1,!1],25:['NOT',3,1,1,!1],26:['BYTE',3,2,1,!1],// 0x20 range - crypto
32:['SHA3',30,2,1,!1],// 0x30 range - closure state
48:['ADDRESS',2,0,1,!0],49:['BALANCE',20,1,1,!0],50:['ORIGIN',2,0,1,!0],51:['CALLER',2,0,1,!0],52:['CALLVALUE',2,0,1,!0],53:['CALLDATALOAD',3,1,1,!0],54:['CALLDATASIZE',2,0,1,!0],55:['CALLDATACOPY',3,3,0,!0],56:['CODESIZE',2,0,1,!1],57:['CODECOPY',3,3,0,!1],58:['GASPRICE',2,0,1,!1],59:['EXTCODESIZE',20,1,1,!0],60:['EXTCODECOPY',20,4,0,!0],// '0x40' range - block operations
64:['BLOCKHASH',20,1,1,!0],65:['COINBASE',2,0,1,!0],66:['TIMESTAMP',2,0,1,!0],67:['NUMBER',2,0,1,!0],68:['DIFFICULTY',2,0,1,!0],69:['GASLIMIT',2,0,1,!0],// 0x50 range - 'storage' and execution
80:['POP',2,1,0,!1],81:['MLOAD',3,1,1,!1],82:['MSTORE',3,2,0,!1],83:['MSTORE8',3,2,0,!1],84:['SLOAD',50,1,1,!0],85:['SSTORE',0,2,0,!0],86:['JUMP',8,1,0,!1],87:['JUMPI',10,2,0,!1],88:['PC',2,0,1,!1],89:['MSIZE',2,0,1,!1],90:['GAS',2,0,1,!1],91:['JUMPDEST',1,0,0,!1],// 0x60, range
96:['PUSH',3,0,1,!1],97:['PUSH',3,0,1,!1],98:['PUSH',3,0,1,!1],99:['PUSH',3,0,1,!1],100:['PUSH',3,0,1,!1],101:['PUSH',3,0,1,!1],102:['PUSH',3,0,1,!1],103:['PUSH',3,0,1,!1],104:['PUSH',3,0,1,!1],105:['PUSH',3,0,1,!1],106:['PUSH',3,0,1,!1],107:['PUSH',3,0,1,!1],108:['PUSH',3,0,1,!1],109:['PUSH',3,0,1,!1],110:['PUSH',3,0,1,!1],111:['PUSH',3,0,1,!1],112:['PUSH',3,0,1,!1],113:['PUSH',3,0,1,!1],114:['PUSH',3,0,1,!1],115:['PUSH',3,0,1,!1],116:['PUSH',3,0,1,!1],117:['PUSH',3,0,1,!1],118:['PUSH',3,0,1,!1],119:['PUSH',3,0,1,!1],120:['PUSH',3,0,1,!1],121:['PUSH',3,0,1,!1],122:['PUSH',3,0,1,!1],123:['PUSH',3,0,1,!1],124:['PUSH',3,0,1,!1],125:['PUSH',3,0,1,!1],126:['PUSH',3,0,1,!1],127:['PUSH',3,0,1,!1],128:['DUP',3,0,1,!1],129:['DUP',3,0,1,!1],130:['DUP',3,0,1,!1],131:['DUP',3,0,1,!1],132:['DUP',3,0,1,!1],133:['DUP',3,0,1,!1],134:['DUP',3,0,1,!1],135:['DUP',3,0,1,!1],136:['DUP',3,0,1,!1],137:['DUP',3,0,1,!1],138:['DUP',3,0,1,!1],139:['DUP',3,0,1,!1],140:['DUP',3,0,1,!1],141:['DUP',3,0,1,!1],142:['DUP',3,0,1,!1],143:['DUP',3,0,1,!1],144:['SWAP',3,0,0,!1],145:['SWAP',3,0,0,!1],146:['SWAP',3,0,0,!1],147:['SWAP',3,0,0,!1],148:['SWAP',3,0,0,!1],149:['SWAP',3,0,0,!1],150:['SWAP',3,0,0,!1],151:['SWAP',3,0,0,!1],152:['SWAP',3,0,0,!1],153:['SWAP',3,0,0,!1],154:['SWAP',3,0,0,!1],155:['SWAP',3,0,0,!1],156:['SWAP',3,0,0,!1],157:['SWAP',3,0,0,!1],158:['SWAP',3,0,0,!1],159:['SWAP',3,0,0,!1],160:['LOG',375,2,0,!1],161:['LOG',375,3,0,!1],162:['LOG',375,4,0,!1],163:['LOG',375,5,0,!1],164:['LOG',375,6,0,!1],// '0xf0' range - closures
240:['CREATE',32000,3,1,!0],241:['CALL',40,7,1,!0],242:['CALLCODE',40,7,1,!0],243:['RETURN',0,2,0,!1],244:['DELEGATECALL',40,6,1,!0],// '0x70', range - other
255:['SUICIDE',0,1,0,!1]};module.exports=function(a,b){var c=codes[a]?codes[a]:['INVALID',0],d=c[0];return b&&('LOG'===d&&(d+=a-160),'PUSH'===d&&(d+=a-95),'DUP'===d&&(d+=a-127),'SWAP'===d&&(d+=a-143)),{name:d,fee:c[1],in:c[2],out:c[3],dynamic:c[4]}};

},{}],130:[function(require,module,exports){
'use strict';var utils=require('ethereumjs-util'),BN=utils.BN,error=require('../constants.js').ERROR,fees=require('ethereum-common');module.exports=function(a){var b={};if(b.gasUsed=new BN(fees.ecrecoverGas.v),-1===a.gasLimit.cmp(b.gasUsed))return b.gasUsed=a.gasLimit,b.exception=0,b.exceptionError=error.OUT_OF_GAS,b;var i,c=utils.setLengthRight(a.data,128),d=c.slice(0,32),f=c.slice(32,64),g=c.slice(64,96),h=c.slice(96,128);try{i=utils.ecrecover(d,f,g,h)}catch(j){return b}return b.return=utils.setLengthLeft(utils.publicToAddress(i),32),b.exception=1,b};

},{"../constants.js":124,"ethereum-common":143,"ethereumjs-util":120}],131:[function(require,module,exports){
'use strict';var utils=require('ethereumjs-util'),BN=utils.BN,error=require('../constants.js').ERROR,fees=require('ethereum-common');module.exports=function(a){var b={},c=a.data;return(b.gasUsed=new BN(fees.sha256Gas.v),b.gasUsed.iadd(new BN(fees.sha256WordGas.v).imuln(Math.ceil(c.length/32))),-1===a.gasLimit.cmp(b.gasUsed))?(b.gasUsed=a.gasLimit,b.exceptionError=error.OUT_OF_GAS,b.exception=0,b):(b.return=utils.sha256(c),b.exception=1,b)};

},{"../constants.js":124,"ethereum-common":143,"ethereumjs-util":120}],132:[function(require,module,exports){
'use strict';var utils=require('ethereumjs-util'),BN=utils.BN,error=require('../constants.js').ERROR,fees=require('ethereum-common');module.exports=function(a){var b={},c=a.data;return(b.gasUsed=new BN(fees.ripemd160Gas.v),b.gasUsed.iadd(new BN(fees.ripemd160WordGas.v).imuln(Math.ceil(c.length/32))),-1===a.gasLimit.cmp(b.gasUsed))?(b.gasUsed=a.gasLimit,b.exceptionError=error.OUT_OF_GAS,b.exception=0,b):(b.return=utils.ripemd160(c,!0),b.exception=1,b)};

},{"../constants.js":124,"ethereum-common":143,"ethereumjs-util":120}],133:[function(require,module,exports){
'use strict';var utils=require('ethereumjs-util'),BN=utils.BN,fees=require('ethereum-common'),error=require('../constants.js').ERROR;module.exports=function(a){var b={},c=a.data;return(b.gasUsed=new BN(fees.identityGas.v),b.gasUsed.iadd(new BN(fees.identityWordGas.v).imuln(Math.ceil(c.length/32))),-1===a.gasLimit.cmp(b.gasUsed))?(b.gasUsed=a.gasLimit,b.exceptionError=error.OUT_OF_GAS,b.exception=0,b):(b.return=c,b.exception=1,b)};

},{"../constants.js":124,"ethereum-common":143,"ethereumjs-util":120}],134:[function(require,module,exports){
(function (Buffer){
'use strict';var async=require('async'),ethUtil=require('ethereumjs-util'),Bloom=require('./bloom.js'),common=require('ethereum-common'),rlp=ethUtil.rlp,Trie=require('merkle-patricia-tree'),BN=ethUtil.BN,minerReward=new BN(common.minerReward.v),niblingReward=new BN(common.niblingReward.v),ommerReward=new BN(common.ommerReward.v);/**
 * process the transaction in a block and pays the miners
 * @param opts
 * @param opts.block {Block} the block we are processing
 * @param opts.generate {Boolean} [gen=false] whether to generate the stateRoot
 * @param cb {Function} the callback which is given an error string
 */module.exports=function(a,b){function c(p){f.emit('afterBlock',o,p)}// populates the cache with accounts that we know we will need
/**
   * Processes all of the transaction in the block
   * @method processTransaction
   * @param {Function} cb the callback is given error if there are any
   */// handle results or error from block run
// credit all block rewards
function d(){var p=g.uncleHeaders;// pay each ommer
p.forEach(e);// calculate nibling reward
var q=niblingReward.mul(new BN(p.length));l=f.stateManager.cache.get(g.header.coinbase),l.balance=new BN(l.balance).add(minerReward).add(q),f.stateManager.cache.put(g.header.coinbase,l)}// credit ommer
function e(p){// calculate reward
var q=new BN(g.header.number).sub(new BN(p.number)),r=minerReward.sub(ommerReward.mul(q)),s=f.stateManager.cache.get(p.coinbase);// credit miners account
s.balance=r.add(new BN(s.balance)),f.stateManager.cache.put(p.coinbase,s)}var f=this,g=a.block,h=!!a.generate,i=new Bloom,j=new Trie,k=new BN(0),l=void 0,m=[],n=[],o=void 0;// parse options
// the total amount of gas used processing this block
// miner account
a.root&&(f.stateManager.trie.root=a.root),this.trie.checkpoint(),async.series([function(q){f.emit('beforeBlock',a.block,q)},function(q){var r=new Set;r.add(g.header.coinbase.toString('hex')),g.transactions.forEach(function(s){r.add(s.getSenderAddress().toString('hex')),r.add(s.to.toString('hex'))}),g.uncleHeaders.forEach(function(s){r.add(s.coinbase.toString('hex'))}),f.populateCache(r,q)},function(q){var r=0;async.eachSeries(g.transactions,function(t,u){var v=-1===new BN(g.header.gasLimit).cmp(new BN(t.gasLimit).add(k));return v?void u('tx has a higher gas limit than the block'):void f.runTx({tx:t,block:g,populateCache:!1},function(x,y){// abort if error
if(n.push(y),x)return m.push(null),void u(x);k=k.add(y.gasUsed),i.or(y.bloom),h&&(g.header.bloom=i.bitvector);var z=y.vm.logs||[],A=[f.trie.root,new Buffer(k.toArray()),y.bloom.bitvector,z],B={stateRoot:A[0],gasUsed:A[1],bitvector:A[2],logs:A[3]};m.push(B),j.put(rlp.encode(r),rlp.encode(A)),r++,u()});// run the tx through the VM
},q)}],function(q){return q?(f.trie.revert(),void b(q)):void(d(),h&&(g.header.stateRoot=f.trie.root),f.trie.commit(function(r){f.stateManager.cache.flush(function(){h||(j.root&&j.root.toString('hex')!==g.header.receiptTrie.toString('hex')&&(r=(r||'')+'invalid receiptTrie '),i.bitvector.toString('hex')!==g.header.bloom.toString('hex')&&(r=(r||'')+'invalid bloom '),ethUtil.bufferToInt(g.header.gasUsed)!==+k&&(r=(r||'')+'invalid gasUsed '),f.trie.root.toString('hex')!==g.header.stateRoot.toString('hex')&&(r=(r||'')+'invalid block stateRoot ')),f.stateManager.cache.clear(),o={receipts:m,results:n,error:r},c(b.bind(this,r,o))})}));// credit all block rewards
})};

}).call(this,require("buffer").Buffer)
},{"./bloom.js":122,"async":25,"buffer":62,"ethereum-common":143,"ethereumjs-util":120,"merkle-patricia-tree":194}],135:[function(require,module,exports){
'use strict';var async=require('async');/**
 * processes blocks and adds them to the blockchain
 * @method onBlock
 * @param blockchain
 */module.exports=function(a,b){var c=this,d,e;// parse arguments
'function'==typeof a?b=a:a&&(c.blockchain=a),this.stateManager.blockchain.iterator('vm',function(g,h,i){async.series([// determine starting state for block run
function(k){!d||h?c.stateManager.blockchain.getBlock(g.header.parentHash,function(l,m){// generate genesis state if we are at the genesis block
// we don't have the genesis state
return e=m.header.stateRoot,d?void k(l):c.stateManager.generateCanonicalGenesis(k)}):(e=d.header.stateRoot,k())}// run block, update head if valid
,function(k){c.runBlock({block:g,root:e},function(l,m){l?c.stateManager.blockchain.delBlock(g.header.hash(),k):(d=g,k())})}],i)},b)};

},{"async":25}],136:[function(require,module,exports){
(function (Buffer){
'use strict';var async=require('async'),ethUtil=require('ethereumjs-util'),BN=ethUtil.BN,fees=require('ethereum-common'),constants=require('./constants.js'),ERROR=constants.ERROR;/**
 * runs a CALL operation
 * @method runCall
 * @param opts
 * @param opts.block {Block}
 * @param opts.caller {Buffer}
 * @param opts.code {Buffer} this is for CALLCODE where the code to load is different than the code from the to account.
 * @param opts.data {Buffer}
 * @param opts.gasLimit {Buffer | BN.js }
 * @param opts.gasPrice {Buffer}
 * @param opts.origin {Buffer} []
 * @param opts.to {Buffer}
 * @param opts.value {Buffer}
 */module.exports=function(a,b){function d(){h.balance=new BN(h.balance).add(k),f.cache.put(i,h)}var e=this,f=e.stateManager,g={},h,i=a.to,j,k=a.value||new Buffer(0),l=a.caller,m=f.cache.get(l),n=a.block,o=a.code,p=a.data,q=a.gasLimit||new BN(16777215);q=new BN(a.gasLimit);// make sure is a BN
var r=a.gasPrice,s=new BN(0),t=a.origin,u=a.compiled,v=a.depth,w=a.suicides,x=this.opts.enableHomestead===void 0?n.isHomestead():this.opts.enableHomestead;k=new BN(k),f.checkpoint(),function(){m.balance=new BN(m.balance).sub(k),f.cache.put(l,m)}(),async.series([function(z){// get receiver's account
// toAccount = stateManager.cache.get(toAddress)
if(!i){o=p,p=void 0;var A=new BN(m.nonce).subn(1);j=i=ethUtil.generateAddress(l,A.toArray()),f.getAccount(j,function(B,C){h=C,z(B)})}else h=f.cache.get(i),z()},function(z){// loads the contract's code if the account is a contract
return d(),o||!(h.isContract()||ethUtil.isPrecompiled(i))?void z():ethUtil.isPrecompiled(i)?(u=!0,o=e._precompiled[i.toString('hex')],void z()):void f.getContractCode(i,function(A,B,C){return A?z(A):void(u=C,o=B,z())})},function(z){if(!o)return g.exception=1,void f.commit(z);var A={code:o,data:p,gasLimit:q,gasPrice:r,address:i,origin:t,caller:l,value:new Buffer(k.toArray()),block:n,depth:v,suicides:w,populateCache:!1},B=u?e.runJIT:e.runCode;// run Code through vm
B.call(e,A,function(D,E){if(h=e.stateManager.cache.get(i),g=E,j){// fee for size of the return value
var F=E.return.length*fees.createDataGas.v,G=E.gasUsed.addn(F);0>=G.cmp(q)?E.gasUsed=G:(E.return=new Buffer([]),x&&(E.exception=0,D=E.exceptionError=ERROR.OUT_OF_GAS,E.gasUsed=q))}s=E.gasUsed,D?(E.logs=[],f.revert(z)):f.commit(z)})},function(z){j&&''!==g.return.toString()?f.putContractCode(j,g.return,z):z()}],function(z){if(z)return b(z);var A={gasUsed:s,createdAddress:j,vm:g};b(null,A)})};

}).call(this,require("buffer").Buffer)
},{"./constants.js":124,"async":25,"buffer":62,"ethereum-common":143,"ethereumjs-util":120}],137:[function(require,module,exports){
(function (Buffer){
'use strict';/*

This is the core of the Ethereum Virtual Machine (EVM or just VM).

NOTES:

stack items are lazly dupilicated.
So you must never directly change a buffer from the stack,
instead you should `copy` it first

not all stack items are 32 bytes, so if the operation realies on the stack
item length then you must use utils.pad(<item>, 32) first.
*/var async=require('async'),utils=require('ethereumjs-util'),Block=require('ethereumjs-block'),lookupOpInfo=require('./opcodes.js'),opFns=require('./opFns.js'),constants=require('./constants.js'),setImmediate=require('timers').setImmediate,BN=utils.BN,ERROR=constants.ERROR;/**
 * Runs EVM code
 * @param opts
 * @param opts.account {Account} the account that the exucuting code belongs to
 * @param opts.address {Buffer}  the address of the account that is exucuting this code
 * @param opts.block {Block} the block that the transaction is part of
 * @param opts.caller {Buffer} the address that ran this code
 * @param opts.code {Buffer} the code to be run
 * @param opts.data {Buffer}  the input data
 * @param opts.gasLimit {Buffer}
 * @param opts.origin {Buffer} the address where the call originated from
 * @param opts.value {Buffer} the amount the being transfered
 * @param cb {Function}
 */module.exports=function(a,b){function c(){var l=k.programCounter<k.code.length;return!k.stopped&&l&&!k.vmError&&!k.returnValue}function d(l){if(1024<k.stack.length)return l(ERROR.INVALID_OPCODE);var m=k.code[k.programCounter],n=lookupOpInfo(m),o=n.name,p=opFns[o];// check for invalid opcode
return k.opName=o,k.opCode=m,'INVALID'===o?l(ERROR.INVALID_OPCODE):k.stack.length<n.in?l(ERROR.STACK_UNDERFLOW):void async.series([function(r){var s={pc:k.programCounter,gasLeft:k.gasLeft,opcode:lookupOpInfo(m,!0),stack:k.stack,depth:k.depth,address:k.address,account:k.contract,cache:k.stateManager.cache,memory:k.memory};g.emit('step',s,r)},function(r){// calculate gas
var s=new BN(n.fee);// TODO: move to a shared funtion; subGas in opFuns
if(k.gasLeft=k.gasLeft.sub(s),-1===k.gasLeft.cmpn(0))return k.vmError=ERROR.OUT_OF_GAS,void r();// advance program counter
k.programCounter++;var t=n.in,u=t?k.stack.splice(-n.in):[];// pop the stack
u.reverse(),u.push(k),u.push(function(w,x){x&&k.stack.push(x),r(w)});try{// run the opcode
var v=p.apply(null,u)}catch(w){return k.vmError=w.error,void r()}// save result to the stack
v&&k.stack.push(v),2!=p.length-t&&r()}],function(q){setImmediate(l.bind(null,q))});// check for stack underflows
}function f(l){l=k.vmError||l,l&&(k.logs=[],h.revertContracts());var m={runState:k,suicides:k.suicides,suicideTo:k.suicideTo,gasRefund:k.gasRefund,exception:l?0:1,exceptionError:l,logs:k.logs,gas:k.gasLeft,'return':k.returnValue?k.returnValue:new Buffer([])};m.exceptionError&&delete m.gasRefund,m.gasUsed=l?k.gasLimit:k.gasLimit.sub(k.gasLeft),k.populateCache?g.stateManager.cache.flush(function(){g.stateManager.cache.clear(),b(l,m)}):b(l,m)}var g=this,h=g.stateManager,j=a.block||new Block,k={stateManager:h,returnValue:!1,stopped:!1,vmError:!1,suicideTo:void 0,programCounter:0,opCode:void 0,opName:void 0,gasLeft:new BN(a.gasLimit),gasLimit:new BN(a.gasLimit),gasPrice:a.gasPrice,memory:[],memoryWordCount:0,stack:[],logs:[],validJumps:[],gasRefund:new BN(0),highestMemCost:new BN(0),depth:a.depth||0,suicides:a.suicides||{},block:j,callValue:a.value||new BN(0),address:a.address||utils.zeros(32),caller:a.caller||utils.zeros(32),origin:a.origin||a.caller||utils.zeros(32),callData:a.data||new Buffer([0]),code:a.code,populateCache:!(a.populateCache!==void 0)||a.populateCache,enableHomestead:this.opts.enableHomestead===void 0?j.isHomestead():this.opts.enableHomestead// this == vm
};// VM internal state
// temporary - to be factored out
k._precompiled=g._precompiled,k._vm=g,k.enableHomestead?opFns.DELEGATECALL=opFns._DC:delete opFns.DELEGATECALL,preprocessValidJumps(k),// ensure contract is loaded; only used if runCode is called directly
function(m){h.getAccount(k.address,function(n,o){return n?m(n):void(k.contract=o,m())})}(// iterate through the given ops until something breaks or we hit STOP
function(){async.whilst(c,d,f)})};// find all the valid jumps and puts them in the `validJumps` array
function preprocessValidJumps(a){for(var b=0;b<a.code.length;b++){var c=lookupOpInfo(a.code[b]).name;// no destinations into the middle of PUSH
'PUSH'===c&&(b+=a.code[b]-95),'JUMPDEST'===c&&a.validJumps.push(b)}}

}).call(this,require("buffer").Buffer)
},{"./constants.js":124,"./opFns.js":128,"./opcodes.js":129,"async":25,"buffer":62,"ethereumjs-block":111,"ethereumjs-util":120,"timers":254}],138:[function(require,module,exports){
'use strict';module.exports=function(a,b){// for precompiled
var c;if('function'==typeof a.code)c=a.code(a),c.account=a.account,void 0===c.exception&&(c.exception=1),b(c.exceptionError,c);else{var d=new Function('require','opts',a.code.toString());// eslint-disable-line
c=d(require,a),c.account=a.account,b(c.exceptionError,c)}};

},{}],139:[function(require,module,exports){
(function (Buffer){
'use strict';var async=require('async'),utils=require('ethereumjs-util'),BN=utils.BN,Bloom=require('./bloom.js'),Block=require('ethereumjs-block');/**
 * Process a transaction. Run the vm. Transfers eth. checks balaces
 * @method processTx
 * @param opts
 * @param opts.tx {Transaction} - a transaction
 * @param opts.skipNonce - skips the nonce check
 * @param opts.skipBalance - skips the balance check
 * @param opts.block {Block} needed to process the transaction, if no block is given a default one is created
 * @param cb {Function} - the callback
 */module.exports=function(a,b){var f,g,h,c=this,d=a.block,e=a.tx;// create a reasonable default if no block is given
return d||(d=new Block),this.opts.enableHomestead&&(e._homestead=!0),-1===new BN(d.header.gasLimit).cmp(new BN(e.gasLimit))?void b(new Error('tx has a higher gas limit than the block')):void(void 0===a.populateCache&&(a.populateCache=!0),async.series([/**
   * populates the cache with the two and from of the tx
   */function(k){var l=new Set;return l.add(e.from.toString('hex')),l.add(e.to.toString('hex')),l.add(d.header.coinbase.toString('hex')),!1===a.populateCache?k():void c.stateManager.warmCache(l,k)}// sets up the envorment and runs a `call`
,// run the transaction hook
function(k){c.emit('beforeTx',e,k)}// run the transaction hook
,function(k){// check to the sender's account to make sure it has enought wei and the
// correct nonce
var m,l=c.stateManager.cache.get(e.from);if(!a.skipBalance&&-1===new BN(l.balance).cmp(e.getUpfrontCost()))return m='sender doesn\'t have enough funds to send tx. The upfront cost is: '+e.getUpfrontCost().toString()+' and the senders account only has: '+new BN(l.balance).toString(),void k(new Error(m));// increment the nonce
if(!a.skipNonce&&0!==new BN(l.nonce).cmp(new BN(e.nonce)))return m='the tx doesn\'t have the correct nonce. account has nonce of: '+new BN(l.nonce).toString()+' tx has nonce of: '+new BN(e.nonce).toString(),void k(new Error(m));l.nonce=new BN(l.nonce).addn(1),h=e.getBaseFee(),f=new BN(e.gasLimit).sub(h),l.balance=new BN(l.balance).sub(new BN(e.gasLimit).mul(new BN(e.gasPrice))),c.stateManager.cache.put(e.from,l);var n={caller:e.from,gasLimit:f,gasPrice:e.gasPrice,to:e.to,value:e.value,data:e.data,block:d,populateCache:!1};''===e.to.toString('hex')&&delete n.to,c.runCall(n,function(p,r){if(p)return k(p);g=r,g.bloom=txLogsBloom(g.vm.logs),l=c.stateManager.cache.get(e.from),g.gasUsed=g.gasUsed.add(h);// refund the accoun.stateManagert
var t=g.vm.gasRefund;t&&(-1===t.cmp(g.gasUsed.divn(2))?g.gasUsed.isub(t):g.gasUsed.isub(g.gasUsed.divn(2))),g.amountSpent=g.gasUsed.mul(new BN(e.gasPrice)),l.balance=new BN(e.gasLimit).sub(g.gasUsed).mul(new BN(e.gasPrice)).add(new BN(l.balance)),c.stateManager.cache.put(e.from,l);var u=c.stateManager.cache.get(d.header.coinbase);// add the amount spent on gas to the miner's account
u.balance=new BN(u.balance).add(g.amountSpent),c.stateManager.cache.put(d.header.coinbase,u),g.vm.suicides||(g.vm.suicides={});var v=Object.keys(g.vm.suicides);v.forEach(function(w){c.stateManager.cache.del(new Buffer(w,'hex'))}),k()})},function(k){c.stateManager.commitContracts(k)},function(k){c.emit('afterTx',g,k)},function(j){c.stateManager.cache.flush(function(){a.populateCache&&c.stateManager.cache.clear(),j()})}],function(j){b(j,g)}))};/**
 * @method txLogsBloom
 */function txLogsBloom(a){var b=new Bloom;if(a)for(var c=0;c<a.length;c++){var d=a[c];// add the address
b.add(d[0]);// add the topics
var e=d[1];for(var f=0;f<e.length;f++)b.add(e[f])}return b}

}).call(this,require("buffer").Buffer)
},{"./bloom.js":122,"async":25,"buffer":62,"ethereumjs-block":111,"ethereumjs-util":120}],140:[function(require,module,exports){
(function (Buffer){
'use strict';var Trie=require('merkle-patricia-tree/secure.js'),common=require('ethereum-common'),async=require('async'),Account=require('ethereumjs-account'),fakeBlockchain=require('./fakeBlockChain.js'),Cache=require('./cache.js'),utils=require('ethereumjs-util'),BN=utils.BN,rlp=utils.rlp;module.exports=StateManager;function StateManager(a){var b=this,c=a.trie;c||(c=new Trie(c));var d=a.blockchain;d||(d=fakeBlockchain),b.blockchain=d,b.trie=c,b._storageTries={},b.cache=new Cache(c)}var proto=StateManager.prototype;// gets the account from the cache, or triggers a lookup and stores
// the result in the cache
proto.getAccount=function(a,b){this.cache.getOrLoad(a,b)},proto.exists=function(a,b){this.cache.getOrLoad(a,function(c,d){b(c,d.exists)})},proto._putAccount=function(a,b,c){var d=this,e=new Buffer(a,'hex');// TODO: dont save newly created accounts that have no balance
// if (toAccount.balance.toString('hex') === '00') {
// if they have money or a non-zero nonce or code, then write to tree
d.cache.put(e,b),c()},proto.getAccountBalance=function(a,b){var c=this;c.getAccount(a,function(d,e){return d?b(d):void b(null,e.balance)})},proto.putAccountBalance=function(a,b,c){var d=this;d.getAccount(a,function(e,f){return e?c(e):void(f.balance=b,d._putAccount(a,f,c))})},proto.putContractCode=function(a,b,c){var d=this;d.getAccount(a,function(e,f){return e?c(e):void f.setCode(d.trie,b,function(g){return g?c(g):void d._putAccount(a,f,c)});// TODO: setCode use trie.setRaw which creates a storage leak
})},proto.getContractCode=function(a,b){var c=this;c.getAccount(a,function(d,e){return d?b(d):void e.getCode(c.trie,b)})},proto._lookupStorageTrie=function(a,b){var c=this;// from state trie
c.getAccount(a,function(d,e){if(d)return b(d);var f=c.trie.copy();f.root=e.stateRoot,f._checkpoints=[],b(null,f)})},proto._getStorageTrie=function(a,b){var c=this,d=c._storageTries[a.toString('hex')];// from storage cache
return d?b(null,d):void c._lookupStorageTrie(a,b);// lookup from state
},proto.getContractStorage=function(a,b,c){var d=this;d._getStorageTrie(a,function(e,f){return e?c(e):void f.get(b,function(g,h){if(g)return c(g);var i=rlp.decode(h);c(null,i)})})},proto.putContractStorage=function(a,b,c,d){var e=this;e._getStorageTrie(a,function(f,g){function h(j){if(j)return d(j);// update storage cache
e._storageTries[a.toString('hex')]=g;// update contract stateRoot
var k=e.cache.get(a);k.stateRoot=g.root,e._putAccount(a,k,d)}if(f)return d(f);if(c&&c.length){// format input
var i=rlp.encode(c);g.put(b,i,h)}else g.del(b,h)})},proto.commitContracts=function(a){var b=this;async.each(Object.keys(b._storageTries),function(c,d){var e=b._storageTries[c];delete b._storageTries[c],e.isCheckpoint?e.commit(d):d()},a)},proto.revertContracts=function(){var a=this;a._storageTries={}},proto.getBlockHash=function(a,b){var c=this;c.blockchain.getBlock(a,function(d,e){if(d)return b(d);var f=e.hash();b(null,f)})},proto.checkpoint=function(){var a=this;a.trie.checkpoint(),a.cache.checkpoint()},proto.commit=function(a){var b=this;// setup trie checkpointing
b.trie.commit(function(){b.cache.commit(),a()})},proto.revert=function(a){var b=this;// setup trie checkpointing
b.trie.revert(),b.cache.revert(),a()},proto.getStateRoot=function(a){var b=this;b.cacheFlush(function(c){if(c)return a(c);var d=b.trie.root;a(null,d)})},proto.warmCache=function(a,b){this.cache.warm(a,b)},proto.dumpStorage=function(a,b){var c=this;c._getStorageTrie(a,function(d,e){if(d)return b(d);var f={},g=e.createReadStream();g.on('data',function(h){f[h.key.toString('hex')]=h.value.toString('hex')}),g.on('end',function(){b(f)})})},proto.hasGenesisState=function(a){var b=common.genesisStateRoot.v;this.trie.checkRoot(b,a)},proto.generateCanonicalGenesis=function(a){var b=this;this.hasGenesisState(function(c,d){!d&!c?b.generateGenesis(common.genesisState,a):a(c)})},proto.generateGenesis=function(a,b){var c=this,d=Object.keys(a);async.eachSeries(d,function(e,f){var g=new Account;g.balance=new Buffer(new BN(a[e]).toArray()),e=new Buffer(e,'hex'),c.trie.put(e,g.serialize(),f)},b)};

}).call(this,require("buffer").Buffer)
},{"./cache.js":123,"./fakeBlockChain.js":125,"async":25,"buffer":62,"ethereum-common":143,"ethereumjs-account":109,"ethereumjs-util":120,"merkle-patricia-tree/secure.js":197}],141:[function(require,module,exports){
arguments[4][112][0].apply(exports,arguments)
},{"dup":112}],142:[function(require,module,exports){
arguments[4][113][0].apply(exports,arguments)
},{"dup":113}],143:[function(require,module,exports){
arguments[4][114][0].apply(exports,arguments)
},{"./bootstrapNodes.json":141,"./genesisState.json":142,"./params.json":144,"dup":114}],144:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments)
},{"dup":105}],145:[function(require,module,exports){
'use strict';var HDKey=require('hdkey'),Wallet=require('./index.js');function EthereumHDKey(){}/*
 * Horrible wrapping.
 */function fromHDKey(a){var b=new EthereumHDKey;return b._hdkey=a,b}EthereumHDKey.fromMasterSeed=function(a){return fromHDKey(HDKey.fromMasterSeed(a))},EthereumHDKey.fromExtendedKey=function(a){return fromHDKey(HDKey.fromExtendedKey(a))},EthereumHDKey.prototype.privateExtendedKey=function(){// FIXME: change this according to the outcome of https://github.com/cryptocoinjs/hdkey/issues/7
if(!this._hdkey._privateKey)throw new Error('Private key is not available');return this._hdkey.privateExtendedKey},EthereumHDKey.prototype.publicExtendedKey=function(){return this._hdkey.publicExtendedKey},EthereumHDKey.prototype.derivePath=function(a){return fromHDKey(this._hdkey.derive(a))},EthereumHDKey.prototype.deriveChild=function(a){return fromHDKey(this._hdkey.deriveChild(a))},EthereumHDKey.prototype.getWallet=function(){return this._hdkey._privateKey?Wallet.fromPrivateKey(this._hdkey._privateKey):Wallet.fromPublicKey(this._hdkey._publicKey,!0)},module.exports=EthereumHDKey;

},{"./index.js":146,"hdkey":157}],146:[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},ethUtil=require('ethereumjs-util'),crypto=require('crypto'),scryptsy=require('scrypt.js'),uuid=require('uuid'),bs58check=require('bs58check');function assert(a,b){if(!a)throw new Error(b||'Assertion failed')}function decipherBuffer(a,b){return Buffer.concat([a.update(b),a.final()])}var Wallet=function Wallet(a,b){if(a&&b)throw new Error('Cannot supply both a private and a public key to the constructor');if(a&&!ethUtil.isValidPrivate(a))throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');if(b&&!ethUtil.isValidPublic(b))throw new Error('Invalid public key');this._privKey=a,this._pubKey=b};Object.defineProperty(Wallet.prototype,'privKey',{get:function get(){return assert(this._privKey,'This is a public key only wallet'),this._privKey}}),Object.defineProperty(Wallet.prototype,'pubKey',{get:function get(){return this._pubKey||(this._pubKey=ethUtil.privateToPublic(this.privKey)),this._pubKey}}),Wallet.generate=function(a){if(a)for(;!0;){var b=crypto.randomBytes(32);if(0===ethUtil.privateToAddress(b)[0])return new Wallet(b)}else return new Wallet(crypto.randomBytes(32))},Wallet.prototype.getPrivateKey=function(){return this.privKey},Wallet.prototype.getPrivateKeyString=function(){return ethUtil.bufferToHex(this.getPrivateKey())},Wallet.prototype.getPublicKey=function(){return this.pubKey},Wallet.prototype.getPublicKeyString=function(){return ethUtil.bufferToHex(this.getPublicKey())},Wallet.prototype.getAddress=function(){return ethUtil.publicToAddress(this.pubKey)},Wallet.prototype.getAddressString=function(){return ethUtil.bufferToHex(this.getAddress())},Wallet.prototype.getChecksumAddressString=function(){return ethUtil.toChecksumAddress(this.getAddressString())},Wallet.prototype.toV3=function(a,b){assert(this._privKey,'This is a public key only wallet'),b=b||{};var c=b.salt||crypto.randomBytes(32),d=b.iv||crypto.randomBytes(16),e,f=b.kdf||'scrypt',g={dklen:b.dklen||32,salt:c.toString('hex')};if('pbkdf2'===f)g.c=b.c||262144,g.prf='hmac-sha256',e=crypto.pbkdf2Sync(new Buffer(a),c,g.c,g.dklen,'sha256');else if('scrypt'===f)g.n=b.n||262144,g.r=b.r||8,g.p=b.p||1,e=scryptsy(new Buffer(a),c,g.n,g.r,g.p,g.dklen);else throw new Error('Unsupported kdf');var h=crypto.createCipheriv(b.cipher||'aes-128-ctr',e.slice(0,16),d);if(!h)throw new Error('Unsupported cipher');var i=Buffer.concat([h.update(this.privKey),h.final()]),j=ethUtil.sha3(Buffer.concat([e.slice(16,32),new Buffer(i,'hex')]));return{version:3,id:uuid.v4({random:b.uuid||crypto.randomBytes(16)}),address:this.getAddress().toString('hex'),crypto:{ciphertext:i.toString('hex'),cipherparams:{iv:d.toString('hex')},cipher:b.cipher||'aes-128-ctr',kdf:f,kdfparams:g,mac:j.toString('hex')}}},Wallet.prototype.getV3Filename=function(a){/*
   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting
   * is a pain in Javascript, everbody knows that. We could use moment.js,
   * but decide to do it manually in order to save space.
   *
   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,
   * but does it really matter?
   *
   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819
   *
   */var b=a?new Date(a):new Date;return['UTC--',b.toJSON().replace(/:/g,'-'),'--',this.getAddress().toString('hex')].join('')},Wallet.prototype.toV3String=function(a,b){return JSON.stringify(this.toV3(a,b))},Wallet.fromPublicKey=function(a,b){return b&&(a=ethUtil.importPublic(a)),new Wallet(null,a)},Wallet.fromExtendedPublicKey=function(a){// Convert to an Ethereum public key
return assert('xpub'===a.slice(0,4),'Not an extended public key'),a=bs58check.decode(a).slice(45),Wallet.fromPublicKey(a,!0)},Wallet.fromPrivateKey=function(a){return new Wallet(a)},Wallet.fromExtendedPrivateKey=function(a){assert('xprv'===a.slice(0,4),'Not an extended private key');var b=bs58check.decode(a);return assert(0===b[45],'Invalid extended private key'),Wallet.fromPrivateKey(b.slice(46))},Wallet.fromV1=function(a,b){assert('string'==typeof b);var c='object'==('undefined'==typeof a?'undefined':_typeof(a))?a:JSON.parse(a);if('1'!==c.Version)throw new Error('Not a V1 wallet');if('scrypt'!==c.Crypto.KeyHeader.Kdf)throw new Error('Unsupported key derivation scheme');var d=c.Crypto.KeyHeader.KdfParams,e=scryptsy(new Buffer(b),new Buffer(c.Crypto.Salt,'hex'),d.N,d.R,d.P,d.DkLen),f=new Buffer(c.Crypto.CipherText,'hex'),g=ethUtil.sha3(Buffer.concat([e.slice(16,32),f]));if(g.toString('hex')!==c.Crypto.MAC)throw new Error('Key derivation failed - possibly wrong passphrase');var h=crypto.createDecipheriv('aes-128-cbc',ethUtil.sha3(e.slice(0,16)).slice(0,16),new Buffer(c.Crypto.IV,'hex')),i=decipherBuffer(h,f);return new Wallet(i)},Wallet.fromV3=function(a,b,c){assert('string'==typeof b);var d='object'==('undefined'==typeof a?'undefined':_typeof(a))?a:JSON.parse(c?a.toLowerCase():a);if(3!==d.version)throw new Error('Not a V3 wallet');var e,f;if('scrypt'===d.crypto.kdf)f=d.crypto.kdfparams,e=scryptsy(new Buffer(b),new Buffer(f.salt,'hex'),f.n,f.r,f.p,f.dklen);else if('pbkdf2'===d.crypto.kdf){if(f=d.crypto.kdfparams,'hmac-sha256'!==f.prf)throw new Error('Unsupported parameters to PBKDF2');e=crypto.pbkdf2Sync(new Buffer(b),new Buffer(f.salt,'hex'),f.c,f.dklen,'sha256')}else throw new Error('Unsupported key derivation scheme');var g=new Buffer(d.crypto.ciphertext,'hex'),h=ethUtil.sha3(Buffer.concat([e.slice(16,32),g]));if(h.toString('hex')!==d.crypto.mac)throw new Error('Key derivation failed - possibly wrong passphrase');var i=crypto.createDecipheriv(d.crypto.cipher,e.slice(0,16),new Buffer(d.crypto.cipherparams.iv,'hex')),j=decipherBuffer(i,g,'hex');return new Wallet(j)},Wallet.fromEthSale=function(a,b){assert('string'==typeof b);var c='object'==('undefined'==typeof a?'undefined':_typeof(a))?a:JSON.parse(a),d=new Buffer(c.encseed,'hex'),e=crypto.pbkdf2Sync(b,b,2000,32,'sha256').slice(0,16),f=crypto.createDecipheriv('aes-128-cbc',e,d.slice(0,16)),g=decipherBuffer(f,d.slice(16)),h=new Wallet(ethUtil.sha3(g));// key derivation
// seed decoding (IV is first 16 bytes)
// NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally
//       see also http://stackoverflow.com/a/31614770/4964819
if(h.getAddress().toString('hex')!==c.ethaddr)throw new Error('Decoded key mismatch - possibly wrong passphrase');return h},module.exports=Wallet;

}).call(this,require("buffer").Buffer)
},{"bs58check":59,"buffer":62,"crypto":72,"ethereumjs-util":120,"scrypt.js":235,"uuid":261}],147:[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},Wallet=require('./index.js'),ethUtil=require('ethereumjs-util'),crypto=require('crypto'),scryptsy=require('scrypt.js'),utf8=require('utf8'),aesjs=require('aes-js');function assert(a,b){if(!a)throw new Error(b||'Assertion failed')}function decipherBuffer(a,b){return Buffer.concat([a.update(b),a.final()])}var Thirdparty={};/*
 * opts:
 * - digest - digest algorithm, defaults to md5
 * - count - hash iterations
 * - keysize - desired key size
 * - ivsize - desired IV size
 *
 * Algorithm form https://www.openssl.org/docs/manmaster/crypto/EVP_BytesToKey.html
 *
 * FIXME: not optimised at all
 */function evp_kdf(a,b,c){// A single EVP iteration, returns `D_i`, where block equlas to `D_(i-1)`
function d(k){var l=crypto.createHash(c.digest||'md5');l.update(k),l.update(a),l.update(b),k=l.digest();for(var m=1;m<(c.count||1);m++)l=crypto.createHash(c.digest||'md5'),l.update(k),k=l.digest();return k}for(var e=c.keysize||16,f=c.ivsize||16,g=[],h=0;Buffer.concat(g).length<e+f;)g[h]=d(0==h?new Buffer(0):g[h-1]),h++;var j=Buffer.concat(g);return{key:j.slice(0,e),iv:j.slice(e,e+f)}}// http://stackoverflow.com/questions/25288311/cryptojs-aes-pattern-always-ends-with
function decodeCryptojsSalt(a){var b=new Buffer(a,'base64');return'Salted__'===b.slice(0,8).toString()?{salt:b.slice(8,16),ciphertext:b.slice(16)}:{ciphertext:b}}/*
 * This wallet format is created by https://github.com/SilentCicero/ethereumjs-accounts
 * and used on https://www.myetherwallet.com/
 */Thirdparty.fromEtherWallet=function(a,b){var c='object'==('undefined'==typeof a?'undefined':_typeof(a))?a:JSON.parse(a),d;if(!c.locked){if(64!==c.private.length)throw new Error('Invalid private key length');d=new Buffer(c.private,'hex')}else{if('string'!=typeof b)throw new Error('Password required');if(7>b.length)throw new Error('Password must be at least 7 characters');// the "encrypted" version has the low 4 bytes
// of the hash of the address appended
var e=c.encrypted?c.private.slice(0,128):c.private;// decode openssl ciphertext + salt encoding
if(e=decodeCryptojsSalt(e),!e.salt)throw new Error('Unsupported EtherWallet key format');// derive key/iv using OpenSSL EVP as implemented in CryptoJS
var f=evp_kdf(new Buffer(b),e.salt,{keysize:32,ivsize:16}),g=crypto.createDecipheriv('aes-256-cbc',f.key,f.iv);d=decipherBuffer(g,new Buffer(e.ciphertext)),d=new Buffer(utf8.decode(d.toString()),'hex')}var h=new Wallet(d);if(h.getAddressString()!==c.address)throw new Error('Invalid private key or address');return h},Thirdparty.fromEtherCamp=function(a){return new Wallet(ethUtil.sha3(new Buffer(a)))},Thirdparty.fromKryptoKit=function(a,b){function c(l){// js-scrypt calls `new Buffer(String(salt), 'utf8')` on the seed even though it is a buffer
//
// The `buffer`` implementation used does the below transformation (doesn't matches the current version):
// https://github.com/feross/buffer/blob/67c61181b938b17d10dbfc0a545f713b8bd59de8/index.js
function m(q){try{return decodeURIComponent(q)}catch(r){return String.fromCharCode(65533);// UTF 8 invalid char
}}var n='',o='';for(var p=0;p<l.length;p++)127>=l[p]?(n+=m(o)+String.fromCharCode(l[p]),o=''):o+='%'+l[p].toString(16);return new Buffer(n+m(o))}'#'===a[0]&&(a=a.slice(1));var d=a[0];a=a.slice(1);var e;if('d'===d)e=ethUtil.sha256(a);else if('q'===d){if('string'!=typeof b)throw new Error('Password required');var f=ethUtil.sha256(new Buffer(a.slice(0,30))),g=a.slice(30,46),h=c(f),j=scryptsy(new Buffer(b,'utf8'),h,16384,8,1,32),k=new aesjs.ModeOfOperation.ecb(j);/* FIXME: try to use `crypto` instead of `aesjs`

    // NOTE: ECB doesn't use the IV, so it can be anything
    var decipher = crypto.createDecipheriv("aes-256-ecb", aesKey, new Buffer(0))

    // FIXME: this is a clear abuse, but seems to match how ECB in aesjs works
    privKey = Buffer.concat([
      decipher.update(encryptedSeed).slice(0, 16),
      decipher.update(encryptedSeed).slice(0, 16),
    ])
    *//* eslint-disable new-cap *//* eslint-enable new-cap */if(e=Buffer.concat([k.decrypt(f.slice(0,16)),k.decrypt(f.slice(16,32))]),0<g.length&&g!==ethUtil.sha256(ethUtil.sha256(e)).slice(0,8).toString('hex'))throw new Error('Failed to decrypt input - possibly invalid passphrase')}else throw new Error('Unsupported or invalid entropy type');return new Wallet(e)},Thirdparty.fromQuorumWallet=function(a,b){assert(10<=a.length),assert(10<=b.length);var c=a+b;return c=crypto.pbkdf2Sync(c,c,2000,32,'sha256'),new Wallet(c)},module.exports=Thirdparty;

}).call(this,require("buffer").Buffer)
},{"./index.js":146,"aes-js":6,"buffer":62,"crypto":72,"ethereumjs-util":120,"scrypt.js":235,"utf8":255}],148:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(a){if(!isNumber(a)||0>a||isNaN(a))throw TypeError('n must be a positive number');return this._maxListeners=a,this},EventEmitter.prototype.emit=function(a){var b,c,d,e,f,h;// If there is no 'error' event listener then throw.
if(this._events||(this._events={}),'error'===a&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length))if(b=arguments[1],b instanceof Error)throw b;// Unhandled 'error' event
else{// At least give some kind of context to the user
var j=new Error('Uncaught, unspecified "error" event. ('+b+')');throw j.context=b,j}if(c=this._events[a],isUndefined(c))return!1;if(isFunction(c))switch(arguments.length){// fast cases
case 1:c.call(this);break;case 2:c.call(this,arguments[1]);break;case 3:c.call(this,arguments[1],arguments[2]);break;// slower
default:e=Array.prototype.slice.call(arguments,1),c.apply(this,e);}else if(isObject(c))for(e=Array.prototype.slice.call(arguments,1),h=c.slice(),d=h.length,f=0;f<d;f++)h[f].apply(this,e);return!0},EventEmitter.prototype.addListener=function(a,b){var c;if(!isFunction(b))throw TypeError('listener must be a function');return this._events||(this._events={}),this._events.newListener&&this.emit('newListener',a,isFunction(b.listener)?b.listener:b),this._events[a]?isObject(this._events[a])?this._events[a].push(b):this._events[a]=[this._events[a],b]:this._events[a]=b,isObject(this._events[a])&&!this._events[a].warned&&(c=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners,c&&0<c&&this._events[a].length>c&&(this._events[a].warned=!0,console.error('(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.',this._events[a].length),'function'==typeof console.trace&&console.trace())),this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(a,b){function c(){this.removeListener(a,c),d||(d=!0,b.apply(this,arguments))}if(!isFunction(b))throw TypeError('listener must be a function');var d=!1;return c.listener=b,this.on(a,c),this},EventEmitter.prototype.removeListener=function(a,b){var c,d,e,f;if(!isFunction(b))throw TypeError('listener must be a function');if(!this._events||!this._events[a])return this;if(c=this._events[a],e=c.length,d=-1,c===b||isFunction(c.listener)&&c.listener===b)delete this._events[a],this._events.removeListener&&this.emit('removeListener',a,b);else if(isObject(c)){for(f=e;0<f--;)if(c[f]===b||c[f].listener&&c[f].listener===b){d=f;break}if(0>d)return this;1===c.length?(c.length=0,delete this._events[a]):c.splice(d,1),this._events.removeListener&&this.emit('removeListener',a,b)}return this},EventEmitter.prototype.removeAllListeners=function(a){var b,c;if(!this._events)return this;// not listening for removeListener, no need to emit
if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[a]&&delete this._events[a],this;// emit removeListener for all listeners on all events
if(0===arguments.length){for(b in this._events)'removeListener'===b||this.removeAllListeners(b);return this.removeAllListeners('removeListener'),this._events={},this}if(c=this._events[a],isFunction(c))this.removeListener(a,c);else if(c)// LIFO order
for(;c.length;)this.removeListener(a,c[c.length-1]);return delete this._events[a],this},EventEmitter.prototype.listeners=function(a){var b;return b=this._events&&this._events[a]?isFunction(this._events[a])?[this._events[a]]:this._events[a].slice():[],b},EventEmitter.prototype.listenerCount=function(a){if(this._events){var b=this._events[a];if(isFunction(b))return 1;if(b)return b.length}return 0},EventEmitter.listenerCount=function(a,b){return a.listenerCount(b)};function isFunction(a){return'function'==typeof a}function isNumber(a){return'number'==typeof a}function isObject(a){return'object'==('undefined'==typeof a?'undefined':_typeof(a))&&null!==a}function isUndefined(a){return void 0===a}

},{}],149:[function(require,module,exports){
(function (Buffer){
'use strict';var md5=require('create-hash/md5');module.exports=EVP_BytesToKey;function EVP_BytesToKey(a,b,c,d){Buffer.isBuffer(a)||(a=new Buffer(a,'binary')),b&&!Buffer.isBuffer(b)&&(b=new Buffer(b,'binary')),c=c/8,d=d||0;for(var k,l,e=0,f=0,g=new Buffer(c),h=new Buffer(d),j=0,m=[];!0;){if(0<j++&&m.push(k),m.push(a),b&&m.push(b),k=md5(Buffer.concat(m)),m=[],l=0,0<c)for(;!0&&0!==c&&l!==k.length;)g[e++]=k[l],c--,l++;if(0<d&&l!==k.length)for(;!0&&0!==d&&l!==k.length;)h[f++]=k[l],d--,l++;if(0===c&&0===d)break}for(l=0;l<k.length;l++)k[l]=0;return{key:g,iv:h}}

}).call(this,require("buffer").Buffer)
},{"buffer":62,"create-hash/md5":70}],150:[function(require,module,exports){
"use strict";module.exports=createRBTree;var RED=0,BLACK=1;function RBNode(c,e,f,g,j,m){this._color=c,this.key=e,this.value=f,this.left=g,this.right=j,this._count=m}function cloneNode(c){return new RBNode(c._color,c.key,c.value,c.left,c.right,c._count)}function repaint(c,e){return new RBNode(c,e.key,e.value,e.left,e.right,e._count)}function recount(c){c._count=1+(c.left?c.left._count:0)+(c.right?c.right._count:0)}function RedBlackTree(c,e){this._compare=c,this.root=e}var proto=RedBlackTree.prototype;Object.defineProperty(proto,"keys",{get:function get(){var c=[];return this.forEach(function(e,f){c.push(e)}),c}}),Object.defineProperty(proto,"values",{get:function get(){var c=[];return this.forEach(function(e,f){c.push(f)}),c}}),Object.defineProperty(proto,"length",{get:function get(){return this.root?this.root._count:0}}),proto.insert=function(c,e){//Find point to insert new node at
for(var f=this._compare,g=this.root,j=[],m=[];g;){var o=f(c,g.key);j.push(g),m.push(o),g=0>=o?g.left:g.right}//Rebuild path to leaf node
j.push(new RBNode(RED,c,e,null,null,1));for(var q=j.length-2;0<=q;--q){var g=j[q];j[q]=0>=m[q]?new RBNode(g._color,g.key,g.value,j[q+1],g.right,g._count+1):new RBNode(g._color,g.key,g.value,g.left,j[q+1],g._count+1)}//Rebalance tree using rotations
//console.log("start insert", key, d_stack)
for(var q=j.length-1;1<q;--q){var t=j[q-1],g=j[q];if(t._color===BLACK||g._color===BLACK)break;var u=j[q-2];if(u.left===t){if(t.left===g){var w=u.right;if(w&&w._color===RED)t._color=BLACK,u.right=repaint(BLACK,w),u._color=RED,q-=1;else{if(u._color=RED,u.left=t.right,t._color=BLACK,t.right=u,j[q-2]=t,j[q-1]=g,recount(u),recount(t),3<=q){var x=j[q-3];x.left===u?x.left=t:x.right=t}break}}else{var w=u.right;if(w&&w._color===RED)t._color=BLACK,u.right=repaint(BLACK,w),u._color=RED,q-=1;else{if(t.right=g.left,u._color=RED,u.left=g.right,g._color=BLACK,g.left=t,g.right=u,j[q-2]=g,j[q-1]=t,recount(u),recount(t),recount(g),3<=q){var x=j[q-3];x.left===u?x.left=g:x.right=g}break}}}else if(t.right===g){var w=u.left;if(w&&w._color===RED)t._color=BLACK,u.left=repaint(BLACK,w),u._color=RED,q-=1;else{if(u._color=RED,u.right=t.left,t._color=BLACK,t.left=u,j[q-2]=t,j[q-1]=g,recount(u),recount(t),3<=q){var x=j[q-3];x.right===u?x.right=t:x.left=t}break}}else{var w=u.left;if(w&&w._color===RED)t._color=BLACK,u.left=repaint(BLACK,w),u._color=RED,q-=1;else{if(t.left=g.right,u._color=RED,u.right=g.left,g._color=BLACK,g.right=t,g.left=u,j[q-2]=g,j[q-1]=t,recount(u),recount(t),recount(g),3<=q){var x=j[q-3];x.right===u?x.right=g:x.left=g}break}}}//Return new tree
return j[0]._color=BLACK,new RedBlackTree(f,j[0])};//Visit all nodes inorder
function doVisitFull(c,e){if(e.left){var f=doVisitFull(c,e.left);if(f)return f}var f=c(e.key,e.value);return f?f:e.right?doVisitFull(c,e.right):void 0}//Visit half nodes in order
function doVisitHalf(c,e,f,g){var j=e(c,g.key);if(0>=j){if(g.left){var m=doVisitHalf(c,e,f,g.left);if(m)return m}var m=f(g.key,g.value);if(m)return m}return g.right?doVisitHalf(c,e,f,g.right):void 0}//Visit all nodes within a range
function doVisit(c,e,f,g,j){var m=f(c,j.key),o=f(e,j.key),q;if(0>=m){if(j.left&&(q=doVisit(c,e,f,g,j.left),q))return q;if(0<o&&(q=g(j.key,j.value),q))return q}return 0<o&&j.right?doVisit(c,e,f,g,j.right):void 0}proto.forEach=function(e,f,g){if(this.root)switch(arguments.length){case 1:return doVisitFull(e,this.root);break;case 2:return doVisitHalf(f,this._compare,e,this.root);break;case 3:return 0<=this._compare(f,g)?void 0:doVisit(f,g,this._compare,e,this.root);}},Object.defineProperty(proto,"begin",{get:function get(){for(var c=[],e=this.root;e;)c.push(e),e=e.left;return new RedBlackTreeIterator(this,c)}}),Object.defineProperty(proto,"end",{get:function get(){for(var c=[],e=this.root;e;)c.push(e),e=e.right;return new RedBlackTreeIterator(this,c)}}),proto.at=function(c){if(0>c)return new RedBlackTreeIterator(this,[]);for(var e=this.root,f=[];!0;){if(f.push(e),e.left){if(c<e.left._count){e=e.left;continue}c-=e.left._count}if(!c)return new RedBlackTreeIterator(this,f);if(c-=1,e.right){if(c>=e.right._count)break;e=e.right}else break}return new RedBlackTreeIterator(this,[])},proto.ge=function(c){for(var e=this._compare,f=this.root,g=[],j=0;f;){var m=e(c,f.key);g.push(f),0>=m&&(j=g.length),f=0>=m?f.left:f.right}return g.length=j,new RedBlackTreeIterator(this,g)},proto.gt=function(c){for(var e=this._compare,f=this.root,g=[],j=0;f;){var m=e(c,f.key);g.push(f),0>m&&(j=g.length),f=0>m?f.left:f.right}return g.length=j,new RedBlackTreeIterator(this,g)},proto.lt=function(c){for(var e=this._compare,f=this.root,g=[],j=0;f;){var m=e(c,f.key);g.push(f),0<m&&(j=g.length),f=0>=m?f.left:f.right}return g.length=j,new RedBlackTreeIterator(this,g)},proto.le=function(c){for(var e=this._compare,f=this.root,g=[],j=0;f;){var m=e(c,f.key);g.push(f),0<=m&&(j=g.length),f=0>m?f.left:f.right}return g.length=j,new RedBlackTreeIterator(this,g)},proto.find=function(c){for(var e=this._compare,f=this.root,g=[];f;){var j=e(c,f.key);if(g.push(f),0===j)return new RedBlackTreeIterator(this,g);f=0>=j?f.left:f.right}return new RedBlackTreeIterator(this,[])},proto.remove=function(c){var e=this.find(c);return e?e.remove():this},proto.get=function(c){for(var e=this._compare,f=this.root;f;){var g=e(c,f.key);if(0===g)return f.value;f=0>=g?f.left:f.right}};//Iterator for red black tree
function RedBlackTreeIterator(c,e){this.tree=c,this._stack=e}var iproto=RedBlackTreeIterator.prototype;//Test if iterator is valid
Object.defineProperty(iproto,"valid",{get:function get(){return 0<this._stack.length}}),Object.defineProperty(iproto,"node",{get:function get(){return 0<this._stack.length?this._stack[this._stack.length-1]:null},enumerable:!0}),iproto.clone=function(){return new RedBlackTreeIterator(this.tree,this._stack.slice())};//Swaps two nodes
function swapNode(c,e){c.key=e.key,c.value=e.value,c.left=e.left,c.right=e.right,c._color=e._color,c._count=e._count}//Fix up a double black node in a tree
function fixDoubleBlack(c){var e,f,g,j;for(var m=c.length-1;0<=m;--m){if(e=c[m],0===m)return void(e._color=BLACK);//console.log("visit node:", n.key, i, stack[i].key, stack[i-1].key)
if(f=c[m-1],f.left===e){if(g=f.right,g.right&&g.right._color===RED){if(g=f.right=cloneNode(g),j=g.right=cloneNode(g.right),f.right=g.left,g.left=f,g.right=j,g._color=f._color,e._color=BLACK,f._color=BLACK,j._color=BLACK,recount(f),recount(g),1<m){var o=c[m-2];o.left===f?o.left=g:o.right=g}return void(c[m-1]=g)}if(g.left&&g.left._color===RED){if(g=f.right=cloneNode(g),j=g.left=cloneNode(g.left),f.right=j.left,g.left=j.right,j.left=f,j.right=g,j._color=f._color,f._color=BLACK,g._color=BLACK,e._color=BLACK,recount(f),recount(g),recount(j),1<m){var o=c[m-2];o.left===f?o.left=j:o.right=j}return void(c[m-1]=j)}if(g._color!==BLACK){if(g=cloneNode(g),f.right=g.left,g.left=f,g._color=f._color,f._color=RED,recount(f),recount(g),1<m){var o=c[m-2];o.left===f?o.left=g:o.right=g}c[m-1]=g,c[m]=f,m+1<c.length?c[m+1]=e:c.push(e),m=m+2}else if(f._color===RED)f._color=BLACK,f.right=repaint(RED,g);else{f.right=repaint(RED,g);continue}}else{if(g=f.left,g.left&&g.left._color===RED){if(g=f.left=cloneNode(g),j=g.left=cloneNode(g.left),f.left=g.right,g.right=f,g.left=j,g._color=f._color,e._color=BLACK,f._color=BLACK,j._color=BLACK,recount(f),recount(g),1<m){var o=c[m-2];o.right===f?o.right=g:o.left=g}return void(c[m-1]=g)}if(g.right&&g.right._color===RED){if(g=f.left=cloneNode(g),j=g.right=cloneNode(g.right),f.left=j.right,g.right=j.left,j.right=f,j.left=g,j._color=f._color,f._color=BLACK,g._color=BLACK,e._color=BLACK,recount(f),recount(g),recount(j),1<m){var o=c[m-2];o.right===f?o.right=j:o.left=j}return void(c[m-1]=j)}if(g._color!==BLACK){if(g=cloneNode(g),f.left=g.right,g.right=f,g._color=f._color,f._color=RED,recount(f),recount(g),1<m){var o=c[m-2];o.right===f?o.right=g:o.left=g}c[m-1]=g,c[m]=f,m+1<c.length?c[m+1]=e:c.push(e),m=m+2}else if(f._color===RED)f._color=BLACK,f.left=repaint(RED,g);else{f.left=repaint(RED,g);continue}}}}//Removes item at iterator from tree
iproto.remove=function(){var c=this._stack;if(0===c.length)return this.tree;//First copy path to node
var e=Array(c.length),f=c[c.length-1];e[e.length-1]=new RBNode(f._color,f.key,f.value,f.left,f.right,f._count);for(var g=c.length-2;0<=g;--g){var f=c[g];e[g]=f.left===c[g+1]?new RBNode(f._color,f.key,f.value,e[g+1],f.right,f._count):new RBNode(f._color,f.key,f.value,f.left,e[g+1],f._count)}//Get node
//console.log("start remove: ", n.value)
//If not leaf, then swap with previous node
if(f=e[e.length-1],f.left&&f.right){//console.log("moving to leaf")
//First walk to previous leaf
var j=e.length;for(f=f.left;f.right;)e.push(f),f=f.right;//Copy path to leaf
var m=e[j-1];e.push(new RBNode(f._color,m.key,m.value,f.left,f.right,f._count)),e[j-1].key=f.key,e[j-1].value=f.value;//Fix up stack
for(var g=e.length-2;g>=j;--g)f=e[g],e[g]=new RBNode(f._color,f.key,f.value,f.left,e[g+1],f._count);e[j-1].left=e[j]}//console.log("stack=", cstack.map(function(v) { return v.value }))
//Remove leaf node
if(f=e[e.length-1],f._color===RED){//Easy case: removing red leaf
//console.log("RED leaf")
var o=e[e.length-2];o.left===f?o.left=null:o.right===f&&(o.right=null),e.pop();for(var g=0;g<e.length;++g)e[g]._count--;return new RedBlackTree(this.tree._compare,e[0])}if(f.left||f.right){f.left?swapNode(f,f.left):f.right&&swapNode(f,f.right),f._color=BLACK;for(var g=0;g<e.length-1;++g)e[g]._count--;return new RedBlackTree(this.tree._compare,e[0])}if(1===e.length)//Third easy case: root
//console.log("ROOT")
return new RedBlackTree(this.tree._compare,null);//Hard case: Repaint n, and then do some nasty stuff
//console.log("BLACK leaf no children")
for(var g=0;g<e.length;++g)e[g]._count--;var q=e[e.length-2];return fixDoubleBlack(e),q.left===f?q.left=null:q.right=null,new RedBlackTree(this.tree._compare,e[0])},Object.defineProperty(iproto,"key",{get:function get(){if(0<this._stack.length)return this._stack[this._stack.length-1].key},enumerable:!0}),Object.defineProperty(iproto,"value",{get:function get(){if(0<this._stack.length)return this._stack[this._stack.length-1].value},enumerable:!0}),Object.defineProperty(iproto,"index",{get:function get(){var c=0,e=this._stack;if(0===e.length){var f=this.tree.root;return f?f._count:0}e[e.length-1].left&&(c=e[e.length-1].left._count);for(var g=e.length-2;0<=g;--g)e[g+1]===e[g].right&&(++c,e[g].left&&(c+=e[g].left._count));return c},enumerable:!0}),iproto.next=function(){var c=this._stack;if(0!==c.length){var e=c[c.length-1];if(e.right)for(e=e.right;e;)c.push(e),e=e.left;else for(c.pop();0<c.length&&c[c.length-1].right===e;)e=c[c.length-1],c.pop()}},Object.defineProperty(iproto,"hasNext",{get:function get(){var c=this._stack;if(0===c.length)return!1;if(c[c.length-1].right)return!0;for(var e=c.length-1;0<e;--e)if(c[e-1].left===c[e])return!0;return!1}}),iproto.update=function(c){var e=this._stack;if(0===e.length)throw new Error("Can't update empty node!");var f=Array(e.length),g=e[e.length-1];f[f.length-1]=new RBNode(g._color,g.key,c,g.left,g.right,g._count);for(var j=e.length-2;0<=j;--j)g=e[j],f[j]=g.left===e[j+1]?new RBNode(g._color,g.key,g.value,f[j+1],g.right,g._count):new RBNode(g._color,g.key,g.value,g.left,f[j+1],g._count);return new RedBlackTree(this.tree._compare,f[0])},iproto.prev=function(){var c=this._stack;if(0!==c.length){var e=c[c.length-1];if(e.left)for(e=e.left;e;)c.push(e),e=e.right;else for(c.pop();0<c.length&&c[c.length-1].left===e;)e=c[c.length-1],c.pop()}},Object.defineProperty(iproto,"hasPrev",{get:function get(){var c=this._stack;if(0===c.length)return!1;if(c[c.length-1].left)return!0;for(var e=c.length-1;0<e;--e)if(c[e-1].right===c[e])return!0;return!1}});//Default comparison function
function defaultCompare(c,e){return c<e?-1:c>e?1:0}//Build a tree
function createRBTree(c){return new RedBlackTree(c||defaultCompare,null)}

},{}],151:[function(require,module,exports){
'use strict';var hash=exports;hash.utils=require('./hash/utils'),hash.common=require('./hash/common'),hash.sha=require('./hash/sha'),hash.ripemd=require('./hash/ripemd'),hash.hmac=require('./hash/hmac'),hash.sha1=hash.sha.sha1,hash.sha256=hash.sha.sha256,hash.sha224=hash.sha.sha224,hash.sha384=hash.sha.sha384,hash.sha512=hash.sha.sha512,hash.ripemd160=hash.ripemd.ripemd160;

},{"./hash/common":152,"./hash/hmac":153,"./hash/ripemd":154,"./hash/sha":155,"./hash/utils":156}],152:[function(require,module,exports){
'use strict';var hash=require('../hash'),utils=hash.utils,assert=utils.assert;function BlockHash(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian='big',this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}exports.BlockHash=BlockHash,BlockHash.prototype.update=function(b,c){// Enough data, try updating
if(b=utils.toArray(b,c),this.pending=this.pending?this.pending.concat(b):b,this.pendingTotal+=b.length,this.pending.length>=this._delta8){b=this.pending;// Process pending data in blocks
var d=b.length%this._delta8;this.pending=b.slice(b.length-d,b.length),0===this.pending.length&&(this.pending=null),b=utils.join32(b,0,b.length-d,this.endian);for(var e=0;e<b.length;e+=this._delta32)this._update(b,e,e+this._delta32)}return this},BlockHash.prototype.digest=function(b){return this.update(this._pad()),assert(null===this.pending),this._digest(b)},BlockHash.prototype._pad=function(){var b=this.pendingTotal,c=this._delta8,d=c-(b+this.padLength)%c,e=Array(d+this.padLength);e[0]=128;for(var f=1;f<d;f++)e[f]=0;// Append length
if(b<<=3,'big'===this.endian){for(var g=8;g<this.padLength;g++)e[f++]=0;e[f++]=0,e[f++]=0,e[f++]=0,e[f++]=0,e[f++]=255&b>>>24,e[f++]=255&b>>>16,e[f++]=255&b>>>8,e[f++]=255&b}else{e[f++]=255&b,e[f++]=255&b>>>8,e[f++]=255&b>>>16,e[f++]=255&b>>>24,e[f++]=0,e[f++]=0,e[f++]=0,e[f++]=0;for(var g=8;g<this.padLength;g++)e[f++]=0}return e};

},{"../hash":151}],153:[function(require,module,exports){
'use strict';var hmac=exports,hash=require('../hash'),utils=hash.utils,assert=utils.assert;function Hmac(a,b,c){return this instanceof Hmac?void(this.Hash=a,this.blockSize=a.blockSize/8,this.outSize=a.outSize/8,this.inner=null,this.outer=null,this._init(utils.toArray(b,c))):new Hmac(a,b,c)}module.exports=Hmac,Hmac.prototype._init=function(b){b.length>this.blockSize&&(b=new this.Hash().update(b).digest()),assert(b.length<=this.blockSize);// Add padding to key
for(var c=b.length;c<this.blockSize;c++)b.push(0);for(var c=0;c<b.length;c++)b[c]^=54;this.inner=new this.Hash().update(b);// 0x36 ^ 0x5c = 0x6a
for(var c=0;c<b.length;c++)b[c]^=106;this.outer=new this.Hash().update(b)},Hmac.prototype.update=function(b,c){return this.inner.update(b,c),this},Hmac.prototype.digest=function(b){return this.outer.update(this.inner.digest()),this.outer.digest(b)};

},{"../hash":151}],154:[function(require,module,exports){
'use strict';var hash=require('../hash'),utils=hash.utils,rotl32=utils.rotl32,sum32=utils.sum32,sum32_3=utils.sum32_3,sum32_4=utils.sum32_4,BlockHash=hash.common.BlockHash;function RIPEMD160(){return this instanceof RIPEMD160?void(BlockHash.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian='little'):new RIPEMD160}utils.inherits(RIPEMD160,BlockHash),exports.ripemd160=RIPEMD160,RIPEMD160.blockSize=512,RIPEMD160.outSize=160,RIPEMD160.hmacStrength=192,RIPEMD160.padLength=64,RIPEMD160.prototype._update=function(b,c){var d=this.h[0],e=this.h[1],g=this.h[2],h=this.h[3],i=this.h[4],k=d,l=e,m=g,n=h,o=i;for(var p=0;80>p;p++){var q=sum32(rotl32(sum32_4(d,f(p,e,g,h),b[r[p]+c],K(p)),s[p]),i);d=i,i=h,h=rotl32(g,10),g=e,e=q,q=sum32(rotl32(sum32_4(k,f(79-p,l,m,n),b[rh[p]+c],Kh(p)),sh[p]),o),k=o,o=n,n=rotl32(m,10),m=l,l=q}q=sum32_3(this.h[1],g,n),this.h[1]=sum32_3(this.h[2],h,o),this.h[2]=sum32_3(this.h[3],i,k),this.h[3]=sum32_3(this.h[4],d,l),this.h[4]=sum32_3(this.h[0],e,m),this.h[0]=q},RIPEMD160.prototype._digest=function(b){return'hex'===b?utils.toHex32(this.h,'little'):utils.split32(this.h,'little')};function f(a,b,c,d){if(15>=a)return b^c^d;return 31>=a?b&c|~b&d:47>=a?(b|~c)^d:63>=a?b&d|c&~d:b^(c|~d)}function K(a){if(15>=a)return 0;return 31>=a?1518500249:47>=a?1859775393:63>=a?2400959708:2840853838}function Kh(a){if(15>=a)return 1352829926;return 31>=a?1548603684:47>=a?1836072691:63>=a?2053994217:0}var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],rh=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],sh=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];

},{"../hash":151}],155:[function(require,module,exports){
'use strict';var hash=require('../hash'),utils=hash.utils,assert=utils.assert,rotr32=utils.rotr32,rotl32=utils.rotl32,sum32=utils.sum32,sum32_4=utils.sum32_4,sum32_5=utils.sum32_5,rotr64_hi=utils.rotr64_hi,rotr64_lo=utils.rotr64_lo,shr64_hi=utils.shr64_hi,shr64_lo=utils.shr64_lo,sum64=utils.sum64,sum64_hi=utils.sum64_hi,sum64_lo=utils.sum64_lo,sum64_4_hi=utils.sum64_4_hi,sum64_4_lo=utils.sum64_4_lo,sum64_5_hi=utils.sum64_5_hi,sum64_5_lo=utils.sum64_5_lo,BlockHash=hash.common.BlockHash,sha256_K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],sha512_K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],sha1_K=[1518500249,1859775393,2400959708,3395469782];function SHA256(){return this instanceof SHA256?void(BlockHash.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=sha256_K,this.W=Array(64)):new SHA256}utils.inherits(SHA256,BlockHash),exports.sha256=SHA256,SHA256.blockSize=512,SHA256.outSize=256,SHA256.hmacStrength=192,SHA256.padLength=64,SHA256.prototype._update=function(k,l){var m=this.W;for(var n=0;16>n;n++)m[n]=k[l+n];for(;n<m.length;n++)m[n]=sum32_4(g1_256(m[n-2]),m[n-7],g0_256(m[n-15]),m[n-16]);var o=this.h[0],p=this.h[1],q=this.h[2],u=this.h[3],v=this.h[4],w=this.h[5],A=this.h[6],B=this.h[7];assert(this.k.length===m.length);for(var n=0;n<m.length;n++){var C=sum32_5(B,s1_256(v),ch32(v,w,A),this.k[n],m[n]),D=sum32(s0_256(o),maj32(o,p,q));B=A,A=w,w=v,v=sum32(u,C),u=q,q=p,p=o,o=sum32(C,D)}this.h[0]=sum32(this.h[0],o),this.h[1]=sum32(this.h[1],p),this.h[2]=sum32(this.h[2],q),this.h[3]=sum32(this.h[3],u),this.h[4]=sum32(this.h[4],v),this.h[5]=sum32(this.h[5],w),this.h[6]=sum32(this.h[6],A),this.h[7]=sum32(this.h[7],B)},SHA256.prototype._digest=function(k){return'hex'===k?utils.toHex32(this.h,'big'):utils.split32(this.h,'big')};function SHA224(){return this instanceof SHA224?void(SHA256.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]):new SHA224}utils.inherits(SHA224,SHA256),exports.sha224=SHA224,SHA224.blockSize=512,SHA224.outSize=224,SHA224.hmacStrength=192,SHA224.padLength=64,SHA224.prototype._digest=function(k){// Just truncate output
return'hex'===k?utils.toHex32(this.h.slice(0,7),'big'):utils.split32(this.h.slice(0,7),'big')};function SHA512(){return this instanceof SHA512?void(BlockHash.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=sha512_K,this.W=Array(160)):new SHA512}utils.inherits(SHA512,BlockHash),exports.sha512=SHA512,SHA512.blockSize=1024,SHA512.outSize=512,SHA512.hmacStrength=192,SHA512.padLength=128,SHA512.prototype._prepareBlock=function(k,l){var m=this.W;// 32 x 32bit words
for(var n=0;32>n;n++)m[n]=k[l+n];for(;n<m.length;n+=2){var o=g1_512_hi(m[n-4],m[n-3]),p=g1_512_lo(m[n-4],m[n-3]),q=m[n-14],u=m[n-13],v=g0_512_hi(m[n-30],m[n-29]),w=g0_512_lo(m[n-30],m[n-29]),A=m[n-32],B=m[n-31];// i - 2
// i - 7
// i - 15
// i - 16
m[n]=sum64_4_hi(o,p,q,u,v,w,A,B),m[n+1]=sum64_4_lo(o,p,q,u,v,w,A,B)}},SHA512.prototype._update=function(k,l){this._prepareBlock(k,l);var m=this.W,n=this.h[0],o=this.h[1],p=this.h[2],q=this.h[3],u=this.h[4],v=this.h[5],w=this.h[6],A=this.h[7],B=this.h[8],C=this.h[9],D=this.h[10],E=this.h[11],F=this.h[12],G=this.h[13],H=this.h[14],I=this.h[15];assert(this.k.length===m.length);for(var J=0;J<m.length;J+=2){var K=H,L=I,M=s1_512_hi(B,C),N=s1_512_lo(B,C),O=ch64_hi(B,C,D,E,F,G),P=ch64_lo(B,C,D,E,F,G),Q=this.k[J],R=this.k[J+1],S=m[J],T=m[J+1],U=sum64_5_hi(K,L,M,N,O,P,Q,R,S,T),V=sum64_5_lo(K,L,M,N,O,P,Q,R,S,T),K=s0_512_hi(n,o),L=s0_512_lo(n,o),M=maj64_hi(n,o,p,q,u,v),N=maj64_lo(n,o,p,q,u,v),X=sum64_hi(K,L,M,N),Y=sum64_lo(K,L,M,N);H=F,I=G,F=D,G=E,D=B,E=C,B=sum64_hi(w,A,U,V),C=sum64_lo(A,A,U,V),w=u,A=v,u=p,v=q,p=n,q=o,n=sum64_hi(U,V,X,Y),o=sum64_lo(U,V,X,Y)}sum64(this.h,0,n,o),sum64(this.h,2,p,q),sum64(this.h,4,u,v),sum64(this.h,6,w,A),sum64(this.h,8,B,C),sum64(this.h,10,D,E),sum64(this.h,12,F,G),sum64(this.h,14,H,I)},SHA512.prototype._digest=function(k){return'hex'===k?utils.toHex32(this.h,'big'):utils.split32(this.h,'big')};function SHA384(){return this instanceof SHA384?void(SHA512.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]):new SHA384}utils.inherits(SHA384,SHA512),exports.sha384=SHA384,SHA384.blockSize=1024,SHA384.outSize=384,SHA384.hmacStrength=192,SHA384.padLength=128,SHA384.prototype._digest=function(k){return'hex'===k?utils.toHex32(this.h.slice(0,12),'big'):utils.split32(this.h.slice(0,12),'big')};function SHA1(){return this instanceof SHA1?void(BlockHash.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=Array(80)):new SHA1}utils.inherits(SHA1,BlockHash),exports.sha1=SHA1,SHA1.blockSize=512,SHA1.outSize=160,SHA1.hmacStrength=80,SHA1.padLength=64,SHA1.prototype._update=function(k,l){var m=this.W;for(var n=0;16>n;n++)m[n]=k[l+n];for(;n<m.length;n++)m[n]=rotl32(m[n-3]^m[n-8]^m[n-14]^m[n-16],1);var o=this.h[0],p=this.h[1],q=this.h[2],u=this.h[3],v=this.h[4];for(var n=0;n<m.length;n++){var w=~~(n/20),A=sum32_5(rotl32(o,5),ft_1(w,p,q,u),v,m[n],sha1_K[w]);v=u,u=q,q=rotl32(p,30),p=o,o=A}this.h[0]=sum32(this.h[0],o),this.h[1]=sum32(this.h[1],p),this.h[2]=sum32(this.h[2],q),this.h[3]=sum32(this.h[3],u),this.h[4]=sum32(this.h[4],v)},SHA1.prototype._digest=function(k){return'hex'===k?utils.toHex32(this.h,'big'):utils.split32(this.h,'big')};function ch32(j,k,l){return j&k^~j&l}function maj32(j,k,l){return j&k^j&l^k&l}function p32(j,k,l){return j^k^l}function s0_256(j){return rotr32(j,2)^rotr32(j,13)^rotr32(j,22)}function s1_256(j){return rotr32(j,6)^rotr32(j,11)^rotr32(j,25)}function g0_256(j){return rotr32(j,7)^rotr32(j,18)^j>>>3}function g1_256(j){return rotr32(j,17)^rotr32(j,19)^j>>>10}function ft_1(j,k,l,m){return 0===j?ch32(k,l,m):1===j||3===j?p32(k,l,m):2===j?maj32(k,l,m):void 0}function ch64_hi(j,k,l,m,n,o){var p=j&l^~j&n;return 0>p&&(p+=4294967296),p}function ch64_lo(j,k,l,m,n,o){var p=k&m^~k&o;return 0>p&&(p+=4294967296),p}function maj64_hi(j,k,l,m,n,o){var p=j&l^j&n^l&n;return 0>p&&(p+=4294967296),p}function maj64_lo(j,k,l,m,n,o){var p=k&m^k&o^m&o;return 0>p&&(p+=4294967296),p}function s0_512_hi(j,k){var l=rotr64_hi(j,k,28),m=rotr64_hi(k,j,2),n=rotr64_hi(k,j,7),o=l^m^n;// 34
// 39
return 0>o&&(o+=4294967296),o}function s0_512_lo(j,k){var l=rotr64_lo(j,k,28),m=rotr64_lo(k,j,2),n=rotr64_lo(k,j,7),o=l^m^n;// 34
// 39
return 0>o&&(o+=4294967296),o}function s1_512_hi(j,k){var l=rotr64_hi(j,k,14),m=rotr64_hi(j,k,18),n=rotr64_hi(k,j,9),o=l^m^n;// 41
return 0>o&&(o+=4294967296),o}function s1_512_lo(j,k){var l=rotr64_lo(j,k,14),m=rotr64_lo(j,k,18),n=rotr64_lo(k,j,9),o=l^m^n;// 41
return 0>o&&(o+=4294967296),o}function g0_512_hi(j,k){var l=rotr64_hi(j,k,1),m=rotr64_hi(j,k,8),n=shr64_hi(j,k,7),o=l^m^n;return 0>o&&(o+=4294967296),o}function g0_512_lo(j,k){var l=rotr64_lo(j,k,1),m=rotr64_lo(j,k,8),n=shr64_lo(j,k,7),o=l^m^n;return 0>o&&(o+=4294967296),o}function g1_512_hi(j,k){var l=rotr64_hi(j,k,19),m=rotr64_hi(k,j,29),n=shr64_hi(j,k,6),o=l^m^n;// 61
return 0>o&&(o+=4294967296),o}function g1_512_lo(j,k){var l=rotr64_lo(j,k,19),m=rotr64_lo(k,j,29),n=shr64_lo(j,k,6),o=l^m^n;// 61
return 0>o&&(o+=4294967296),o}

},{"../hash":151}],156:[function(require,module,exports){
'use strict';var utils=exports,inherits=require('inherits');function toArray(f,g){if(Array.isArray(f))return f.slice();if(!f)return[];var h=[];if(!('string'==typeof f))for(var j=0;j<f.length;j++)h[j]=0|f[j];else if(!g)for(var j=0;j<f.length;j++){var l=f.charCodeAt(j),n=l>>8,o=255&l;n?h.push(n,o):h.push(o)}else if('hex'===g){f=f.replace(/[^a-z0-9]+/ig,''),0!=f.length%2&&(f='0'+f);for(var j=0;j<f.length;j+=2)h.push(parseInt(f[j]+f[j+1],16))}return h}utils.toArray=toArray;function toHex(f){var g='';for(var h=0;h<f.length;h++)g+=zero2(f[h].toString(16));return g}utils.toHex=toHex;function htonl(f){return(f>>>24|65280&f>>>8|16711680&f<<8|(255&f)<<24)>>>0}utils.htonl=htonl;function toHex32(f,g){var h='';for(var j=0;j<f.length;j++){var l=f[j];'little'===g&&(l=htonl(l)),h+=zero8(l.toString(16))}return h}utils.toHex32=toHex32;function zero2(f){return 1===f.length?'0'+f:f}utils.zero2=zero2;function zero8(f){if(7===f.length)return'0'+f;return 6===f.length?'00'+f:5===f.length?'000'+f:4===f.length?'0000'+f:3===f.length?'00000'+f:2===f.length?'000000'+f:1===f.length?'0000000'+f:f}utils.zero8=zero8;function join32(f,g,h,j){var l=h-g;assert(0==l%4);var n=Array(l/4);for(var o=0,p=g;o<n.length;o++,p+=4){var q;q='big'===j?f[p]<<24|f[p+1]<<16|f[p+2]<<8|f[p+3]:f[p+3]<<24|f[p+2]<<16|f[p+1]<<8|f[p],n[o]=q>>>0}return n}utils.join32=join32;function split32(f,g){var h=Array(4*f.length);for(var j=0,l=0;j<f.length;j++,l+=4){var n=f[j];'big'===g?(h[l]=n>>>24,h[l+1]=255&n>>>16,h[l+2]=255&n>>>8,h[l+3]=255&n):(h[l+3]=n>>>24,h[l+2]=255&n>>>16,h[l+1]=255&n>>>8,h[l]=255&n)}return h}utils.split32=split32;function rotr32(f,g){return f>>>g|f<<32-g}utils.rotr32=rotr32;function rotl32(f,g){return f<<g|f>>>32-g}utils.rotl32=rotl32;function sum32(f,g){return f+g>>>0}utils.sum32=sum32;function sum32_3(f,g,h){return f+g+h>>>0}utils.sum32_3=sum32_3;function sum32_4(f,g,h,j){return f+g+h+j>>>0}utils.sum32_4=sum32_4;function sum32_5(f,g,h,j,l){return f+g+h+j+l>>>0}utils.sum32_5=sum32_5;function assert(f,g){if(!f)throw new Error(g||'Assertion failed')}utils.assert=assert,utils.inherits=inherits;function sum64(f,g,h,j){var l=f[g],n=f[g+1],o=j+n>>>0,p=(o<j?1:0)+h+l;f[g]=p>>>0,f[g+1]=o}exports.sum64=sum64;function sum64_hi(f,g,h,j){var l=(g+j>>>0<g?1:0)+f+h;return l>>>0};exports.sum64_hi=sum64_hi;function sum64_lo(f,g,h,j){return g+j>>>0};exports.sum64_lo=sum64_lo;function sum64_4_hi(f,g,h,j,l,n,o,p){var q=0,s=g;s=s+j>>>0,q+=s<g?1:0,s=s+n>>>0,q+=s<n?1:0,s=s+p>>>0,q+=s<p?1:0;var t=f+h+l+o+q;return t>>>0};exports.sum64_4_hi=sum64_4_hi;function sum64_4_lo(f,g,h,j,l,n,o,p){return g+j+n+p>>>0};exports.sum64_4_lo=sum64_4_lo;function sum64_5_hi(f,g,h,j,l,n,o,p,q,s){var t=0,u=g;u=u+j>>>0,t+=u<g?1:0,u=u+n>>>0,t+=u<n?1:0,u=u+p>>>0,t+=u<p?1:0,u=u+s>>>0,t+=u<s?1:0;var v=f+h+l+o+q+t;return v>>>0};exports.sum64_5_hi=sum64_5_hi;function sum64_5_lo(f,g,h,j,l,n,o,p,q,s){return g+j+n+p+s>>>0};exports.sum64_5_lo=sum64_5_lo;function rotr64_hi(f,g,h){return(g<<32-h|f>>>h)>>>0};exports.rotr64_hi=rotr64_hi;function rotr64_lo(f,g,h){return(f<<32-h|g>>>h)>>>0};exports.rotr64_lo=rotr64_lo;function shr64_hi(f,g,h){return f>>>h};exports.shr64_hi=shr64_hi;function shr64_lo(f,g,h){return(f<<32-h|g>>>h)>>>0};exports.shr64_lo=shr64_lo;

},{"inherits":160}],157:[function(require,module,exports){
(function (Buffer){
'use strict';var assert=require('assert'),crypto=require('crypto'),cs=require('coinstring'),secp256k1=require('secp256k1'),MASTER_SECRET=new Buffer('Bitcoin seed'),HARDENED_OFFSET=2147483648,LEN=78,BITCOIN_VERSIONS={private:76066276,public:76067358};// Bitcoin hardcoded by default, can use package `coininfo` for others
function HDKey(a){this.versions=a||BITCOIN_VERSIONS,this.depth=0,this.index=0,this._privateKey=null,this._publicKey=null,this.chainCode=null,this._fingerprint=0,this.parentFingerprint=0}Object.defineProperty(HDKey.prototype,'fingerprint',{get:function get(){return this._fingerprint}}),Object.defineProperty(HDKey.prototype,'identifier',{get:function get(){return this._identifier}}),Object.defineProperty(HDKey.prototype,'pubKeyHash',{get:function get(){return this.identifier}}),Object.defineProperty(HDKey.prototype,'privateKey',{get:function get(){return this._privateKey},set:function set(a){assert.equal(a.length,32,'Private key must be 32 bytes.'),assert(!0===secp256k1.privateKeyVerify(a),'Invalid private key'),this._privateKey=a,this._publicKey=secp256k1.publicKeyCreate(a,!0),this._identifier=hash160(this.publicKey),this._fingerprint=this._identifier.slice(0,4).readUInt32BE(0)}}),Object.defineProperty(HDKey.prototype,'publicKey',{get:function get(){return this._publicKey},set:function set(a){assert(33===a.length||65===a.length,'Public key must be 33 or 65 bytes.'),assert(!0===secp256k1.publicKeyVerify(a),'Invalid public key'),this._publicKey=secp256k1.publicKeyConvert(a,!0),this._identifier=hash160(this.publicKey),this._fingerprint=this._identifier.slice(0,4).readUInt32BE(0),this._privateKey=null}}),Object.defineProperty(HDKey.prototype,'privateExtendedKey',{get:function get(){return this._privateKey?cs.encode(serialize(this,this.versions.private,Buffer.concat([new Buffer([0]),this.privateKey]))):null}}),Object.defineProperty(HDKey.prototype,'publicExtendedKey',{get:function get(){return cs.encode(serialize(this,this.versions.public,this.publicKey))}}),HDKey.prototype.derive=function(a){if('m'===a||'M'===a||'m\''===a||'M\''===a)return this;var b=a.split('/'),d=this;return b.forEach(function(e,f){if(0===f)return void assert(e,'m','Invalid path');var g=1<e.length&&'\''===e[e.length-1],h=parseInt(e,10);assert(h<HARDENED_OFFSET,'Invalid index'),g&&(h+=HARDENED_OFFSET),d=d.deriveChild(h)}),d},HDKey.prototype.deriveChild=function(a){var b=a>=HARDENED_OFFSET,d=new Buffer(4);d.writeUInt32BE(a,0);var e;if(b){assert(this.privateKey,'Could not derive hardened child key');var f=this.privateKey,g=new Buffer([0]);f=Buffer.concat([g,f]),e=Buffer.concat([f,d])}else e=Buffer.concat([this.publicKey,d]);var h=crypto.createHmac('sha512',this.chainCode).update(e).digest(),j=h.slice(0,32),k=h.slice(32),l=new HDKey(this.versions);// Private parent key -> private child key
if(this.privateKey)// ki = parse256(IL) + kpar (mod n)
try{l.privateKey=secp256k1.privateKeyTweakAdd(this.privateKey,j)}catch(m){// In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i
return this.derive(a+1)}// Public parent key -> public child key
else// Ki = point(parse256(IL)) + Kpar
//    = G*IL + Kpar
try{l.publicKey=secp256k1.publicKeyTweakAdd(this.publicKey,j,!0)}catch(m){// In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i
return this.derive(a+1,b)}return l.chainCode=k,l.depth=this.depth+1,l.parentFingerprint=this.fingerprint,l.index=a,l},HDKey.prototype.toJSON=function(){return{xpriv:this.privateExtendedKey,xpub:this.publicExtendedKey}},HDKey.fromMasterSeed=function(a,b){var d=crypto.createHmac('sha512',MASTER_SECRET).update(a).digest(),e=d.slice(0,32),f=d.slice(32),g=new HDKey(b);return g.chainCode=f,g.privateKey=e,g},HDKey.fromExtendedKey=function(a,b){b=b||BITCOIN_VERSIONS;var d=new HDKey(b),e=cs.decode(a),f=e.readUInt32BE(0);assert(f===b.private||f===b.public,'Version mismatch: does not match private or public'),d.depth=e.readUInt8(4),d.parentFingerprint=e.readUInt32BE(5),d.index=e.readUInt32BE(9),d.chainCode=e.slice(13,45);var g=e.slice(45);return 0===g.readUInt8(0)?(assert(f===b.private,'Version mismatch: version does not match private'),d.privateKey=g.slice(1)):(assert(f===b.public,'Version mismatch: version does not match public'),d.publicKey=g),d},HDKey.fromJSON=function(a){return HDKey.fromExtendedKey(a.xpriv)};function serialize(a,b,d){// => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)
var e=new Buffer(LEN);e.writeUInt32BE(b,0),e.writeUInt8(a.depth,4);var f=a.depth?a.parentFingerprint:0;return e.writeUInt32BE(f,5),e.writeUInt32BE(a.index,9),a.chainCode.copy(e,13),d.copy(e,45),e}function hash160(a){var b=crypto.createHash('sha256').update(a).digest();return crypto.createHash('rmd160').update(b).digest()}HDKey.HARDENED_OFFSET=HARDENED_OFFSET,module.exports=HDKey;

}).call(this,require("buffer").Buffer)
},{"assert":21,"buffer":62,"coinstring":64,"crypto":72,"secp256k1":237}],158:[function(require,module,exports){
"use strict";exports.read=function(a,b,f,g,h){var j,k,l=8*h-g-1,n=(1<<l)-1,o=n>>1,p=-7,q=f?h-1:0,r=f?-1:1,t=a[b+q];for(q+=r,j=t&(1<<-p)-1,t>>=-p,p+=l;0<p;j=256*j+a[b+q],q+=r,p-=8);for(k=j&(1<<-p)-1,j>>=-p,p+=g;0<p;k=256*k+a[b+q],q+=r,p-=8);if(0===j)j=1-o;else{if(j===n)return k?NaN:(t?-1:1)*(1/0);k=k+Math.pow(2,g),j=j-o}return(t?-1:1)*k*Math.pow(2,j-g)},exports.write=function(a,b,f,g,h,j){var k,l,n,o=8*j-h-1,p=(1<<o)-1,q=p>>1,r=23===h?Math.pow(2,-24)-Math.pow(2,-77):0,t=g?0:j-1,u=g?1:-1,v=0>b||0===b&&0>1/b?1:0;for(b=Math.abs(b),isNaN(b)||b===1/0?(l=isNaN(b)?1:0,k=p):(k=Math.floor(Math.log(b)/Math.LN2),1>b*(n=Math.pow(2,-k))&&(k--,n*=2),b+=1<=k+q?r/n:r*Math.pow(2,1-q),2<=b*n&&(k++,n/=2),k+q>=p?(l=0,k=p):1<=k+q?(l=(b*n-1)*Math.pow(2,h),k=k+q):(l=b*Math.pow(2,q-1)*Math.pow(2,h),k=0));8<=h;a[f+t]=255&l,t+=u,l/=256,h-=8);for(k=k<<h|l,o+=h;0<o;a[f+t]=255&k,t+=u,k/=256,o-=8);a[f+t-u]|=128*v};

},{}],159:[function(require,module,exports){
"use strict";var indexOf=[].indexOf;module.exports=function(a,b){if(indexOf)return a.indexOf(b);for(var c=0;c<a.length;++c)if(a[c]===b)return c;return-1};

},{}],160:[function(require,module,exports){
'use strict';module.exports='function'==typeof Object.create?function(b,c){b.super_=c,b.prototype=Object.create(c.prototype,{constructor:{value:b,enumerable:!1,writable:!0,configurable:!0}})}:function(b,c){b.super_=c;var d=function d(){};d.prototype=c.prototype,b.prototype=new d,b.prototype.constructor=b};

},{}],161:[function(require,module,exports){
'use strict';module.exports=function(a){return null!=a&&(isBuffer(a)||isSlowBuffer(a)||!!a._isBuffer)};function isBuffer(a){return!!a.constructor&&'function'==typeof a.constructor.isBuffer&&a.constructor.isBuffer(a)}// For Node v0.10 support. Remove this eventually.
function isSlowBuffer(a){return'function'==typeof a.readFloatLE&&'function'==typeof a.slice&&isBuffer(a.slice(0,0))}

},{}],162:[function(require,module,exports){
'use strict';var toString={}.toString;module.exports=Array.isArray||function(a){return'[object Array]'==toString.call(a)};

},{}],163:[function(require,module,exports){
(function (global){
'use strict';/*
 * js-sha3 v0.3.1
 * https://github.com/emn178/js-sha3
 *
 * Copyright 2015, emn178@gmail.com
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */;(function(a,b){'use strict';var c='undefined'!=typeof module;c&&(a=global,a.JS_SHA3_TEST&&(a.navigator={userAgent:'Chrome'}));var d=(a.JS_SHA3_TEST||!c)&&-1!=navigator.userAgent.indexOf('Chrome'),e='0123456789abcdef'.split(''),f=[1,256,65536,16777216],g=[6,1536,393216,100663296],j=[0,8,16,24],k=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],m=[],o=[],p=function p(y){return x(y,224,f)},q=function q(y){return x(y,256,f)},r=function r(y){return x(y,384,f)},t=function t(y){return x(y,224,g)},u=function u(y){return x(y,256,g)},v=function v(y){return x(y,384,g)},w=function w(y){return x(y,512,g)},x=function x(y,z,A){var B='string'!=typeof y;B&&y.constructor==a.ArrayBuffer&&(y=new Uint8Array(y)),z===b&&(z=512,A=f);var C,D,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa,Ba,Ca,Da,Ea,Fa,Ga,Ha,Ia,Ja,Ka,La,Ma,Na,Oa,Pa,Qa,Ra,E=!1,F=0,G=0,H=y.length,Sa=(1600-2*z)/32,Ta=4*Sa;for(J=0;50>J;++J)o[J]=0;C=0;do{for(m[0]=C,J=1;J<Sa+1;++J)m[J]=0;if(B)for(J=G;F<H&&J<Ta;++F)m[J>>2]|=y[F]<<j[3&J++];else for(J=G;F<H&&J<Ta;++F)D=y.charCodeAt(F),128>D?m[J>>2]|=D<<j[3&J++]:2048>D?(m[J>>2]|=(192|D>>6)<<j[3&J++],m[J>>2]|=(128|63&D)<<j[3&J++]):55296>D||57344<=D?(m[J>>2]|=(224|D>>12)<<j[3&J++],m[J>>2]|=(128|63&D>>6)<<j[3&J++],m[J>>2]|=(128|63&D)<<j[3&J++]):(D=65536+((1023&D)<<10|1023&y.charCodeAt(++F)),m[J>>2]|=(240|D>>18)<<j[3&J++],m[J>>2]|=(128|63&D>>12)<<j[3&J++],m[J>>2]|=(128|63&D>>6)<<j[3&J++],m[J>>2]|=(128|63&D)<<j[3&J++]);for(G=J-Ta,F==H&&(m[J>>2]|=A[3&J],++F),C=m[Sa],F>H&&J<Ta&&(m[Sa-1]|=2147483648,E=!0),J=0;J<Sa;++J)o[J]^=m[J];for(I=0;48>I;I+=2)M=o[0]^o[10]^o[20]^o[30]^o[40],N=o[1]^o[11]^o[21]^o[31]^o[41],O=o[2]^o[12]^o[22]^o[32]^o[42],P=o[3]^o[13]^o[23]^o[33]^o[43],Q=o[4]^o[14]^o[24]^o[34]^o[44],R=o[5]^o[15]^o[25]^o[35]^o[45],S=o[6]^o[16]^o[26]^o[36]^o[46],T=o[7]^o[17]^o[27]^o[37]^o[47],U=o[8]^o[18]^o[28]^o[38]^o[48],V=o[9]^o[19]^o[29]^o[39]^o[49],K=U^(O<<1|P>>>31),L=V^(P<<1|O>>>31),o[0]^=K,o[1]^=L,o[10]^=K,o[11]^=L,o[20]^=K,o[21]^=L,o[30]^=K,o[31]^=L,o[40]^=K,o[41]^=L,K=M^(Q<<1|R>>>31),L=N^(R<<1|Q>>>31),o[2]^=K,o[3]^=L,o[12]^=K,o[13]^=L,o[22]^=K,o[23]^=L,o[32]^=K,o[33]^=L,o[42]^=K,o[43]^=L,K=O^(S<<1|T>>>31),L=P^(T<<1|S>>>31),o[4]^=K,o[5]^=L,o[14]^=K,o[15]^=L,o[24]^=K,o[25]^=L,o[34]^=K,o[35]^=L,o[44]^=K,o[45]^=L,K=Q^(U<<1|V>>>31),L=R^(V<<1|U>>>31),o[6]^=K,o[7]^=L,o[16]^=K,o[17]^=L,o[26]^=K,o[27]^=L,o[36]^=K,o[37]^=L,o[46]^=K,o[47]^=L,K=S^(M<<1|N>>>31),L=T^(N<<1|M>>>31),o[8]^=K,o[9]^=L,o[18]^=K,o[19]^=L,o[28]^=K,o[29]^=L,o[38]^=K,o[39]^=L,o[48]^=K,o[49]^=L,W=o[0],X=o[1],Aa=o[11]<<4|o[10]>>>28,Ba=o[10]<<4|o[11]>>>28,ia=o[20]<<3|o[21]>>>29,ja=o[21]<<3|o[20]>>>29,Oa=o[31]<<9|o[30]>>>23,Pa=o[30]<<9|o[31]>>>23,wa=o[40]<<18|o[41]>>>14,xa=o[41]<<18|o[40]>>>14,oa=o[2]<<1|o[3]>>>31,pa=o[3]<<1|o[2]>>>31,Y=o[13]<<12|o[12]>>>20,Z=o[12]<<12|o[13]>>>20,Ca=o[22]<<10|o[23]>>>22,Da=o[23]<<10|o[22]>>>22,ka=o[33]<<13|o[32]>>>19,la=o[32]<<13|o[33]>>>19,Qa=o[42]<<2|o[43]>>>30,Ra=o[43]<<2|o[42]>>>30,Ia=o[5]<<30|o[4]>>>2,Ja=o[4]<<30|o[5]>>>2,qa=o[14]<<6|o[15]>>>26,ra=o[15]<<6|o[14]>>>26,$=o[25]<<11|o[24]>>>21,_=o[24]<<11|o[25]>>>21,Ea=o[34]<<15|o[35]>>>17,Fa=o[35]<<15|o[34]>>>17,ma=o[45]<<29|o[44]>>>3,na=o[44]<<29|o[45]>>>3,ea=o[6]<<28|o[7]>>>4,fa=o[7]<<28|o[6]>>>4,Ka=o[17]<<23|o[16]>>>9,La=o[16]<<23|o[17]>>>9,sa=o[26]<<25|o[27]>>>7,ta=o[27]<<25|o[26]>>>7,aa=o[36]<<21|o[37]>>>11,ba=o[37]<<21|o[36]>>>11,Ga=o[47]<<24|o[46]>>>8,Ha=o[46]<<24|o[47]>>>8,ya=o[8]<<27|o[9]>>>5,za=o[9]<<27|o[8]>>>5,ga=o[18]<<20|o[19]>>>12,ha=o[19]<<20|o[18]>>>12,Ma=o[29]<<7|o[28]>>>25,Na=o[28]<<7|o[29]>>>25,ua=o[38]<<8|o[39]>>>24,va=o[39]<<8|o[38]>>>24,ca=o[48]<<14|o[49]>>>18,da=o[49]<<14|o[48]>>>18,o[0]=W^~Y&$,o[1]=X^~Z&_,o[10]=ea^~ga&ia,o[11]=fa^~ha&ja,o[20]=oa^~qa&sa,o[21]=pa^~ra&ta,o[30]=ya^~Aa&Ca,o[31]=za^~Ba&Da,o[40]=Ia^~Ka&Ma,o[41]=Ja^~La&Na,o[2]=Y^~$&aa,o[3]=Z^~_&ba,o[12]=ga^~ia&ka,o[13]=ha^~ja&la,o[22]=qa^~sa&ua,o[23]=ra^~ta&va,o[32]=Aa^~Ca&Ea,o[33]=Ba^~Da&Fa,o[42]=Ka^~Ma&Oa,o[43]=La^~Na&Pa,o[4]=$^~aa&ca,o[5]=_^~ba&da,o[14]=ia^~ka&ma,o[15]=ja^~la&na,o[24]=sa^~ua&wa,o[25]=ta^~va&xa,o[34]=Ca^~Ea&Ga,o[35]=Da^~Fa&Ha,o[44]=Ma^~Oa&Qa,o[45]=Na^~Pa&Ra,o[6]=aa^~ca&W,o[7]=ba^~da&X,o[16]=ka^~ma&ea,o[17]=la^~na&fa,o[26]=ua^~wa&oa,o[27]=va^~xa&pa,o[36]=Ea^~Ga&ya,o[37]=Fa^~Ha&za,o[46]=Oa^~Qa&Ia,o[47]=Pa^~Ra&Ja,o[8]=ca^~W&Y,o[9]=da^~X&Z,o[18]=ma^~ea&ga,o[19]=na^~fa&ha,o[28]=wa^~oa&qa,o[29]=xa^~pa&ra,o[38]=Ga^~ya&Aa,o[39]=Ha^~za&Ba,o[48]=Qa^~Ia&Ka,o[49]=Ra^~Ja&La,o[0]^=k[I],o[1]^=k[I+1]}while(!E);var Ua='';if(d)W=o[0],X=o[1],Y=o[2],Z=o[3],$=o[4],_=o[5],aa=o[6],ba=o[7],ca=o[8],da=o[9],ea=o[10],fa=o[11],ga=o[12],ha=o[13],ia=o[14],ja=o[15],Ua+=e[15&W>>4]+e[15&W]+e[15&W>>12]+e[15&W>>8]+e[15&W>>20]+e[15&W>>16]+e[15&W>>28]+e[15&W>>24]+e[15&X>>4]+e[15&X]+e[15&X>>12]+e[15&X>>8]+e[15&X>>20]+e[15&X>>16]+e[15&X>>28]+e[15&X>>24]+e[15&Y>>4]+e[15&Y]+e[15&Y>>12]+e[15&Y>>8]+e[15&Y>>20]+e[15&Y>>16]+e[15&Y>>28]+e[15&Y>>24]+e[15&Z>>4]+e[15&Z]+e[15&Z>>12]+e[15&Z>>8]+e[15&Z>>20]+e[15&Z>>16]+e[15&Z>>28]+e[15&Z>>24]+e[15&$>>4]+e[15&$]+e[15&$>>12]+e[15&$>>8]+e[15&$>>20]+e[15&$>>16]+e[15&$>>28]+e[15&$>>24]+e[15&_>>4]+e[15&_]+e[15&_>>12]+e[15&_>>8]+e[15&_>>20]+e[15&_>>16]+e[15&_>>28]+e[15&_>>24]+e[15&aa>>4]+e[15&aa]+e[15&aa>>12]+e[15&aa>>8]+e[15&aa>>20]+e[15&aa>>16]+e[15&aa>>28]+e[15&aa>>24],256<=z&&(Ua+=e[15&ba>>4]+e[15&ba]+e[15&ba>>12]+e[15&ba>>8]+e[15&ba>>20]+e[15&ba>>16]+e[15&ba>>28]+e[15&ba>>24]),384<=z&&(Ua+=e[15&ca>>4]+e[15&ca]+e[15&ca>>12]+e[15&ca>>8]+e[15&ca>>20]+e[15&ca>>16]+e[15&ca>>28]+e[15&ca>>24]+e[15&da>>4]+e[15&da]+e[15&da>>12]+e[15&da>>8]+e[15&da>>20]+e[15&da>>16]+e[15&da>>28]+e[15&da>>24]+e[15&ea>>4]+e[15&ea]+e[15&ea>>12]+e[15&ea>>8]+e[15&ea>>20]+e[15&ea>>16]+e[15&ea>>28]+e[15&ea>>24]+e[15&fa>>4]+e[15&fa]+e[15&fa>>12]+e[15&fa>>8]+e[15&fa>>20]+e[15&fa>>16]+e[15&fa>>28]+e[15&fa>>24]),512==z&&(Ua+=e[15&ga>>4]+e[15&ga]+e[15&ga>>12]+e[15&ga>>8]+e[15&ga>>20]+e[15&ga>>16]+e[15&ga>>28]+e[15&ga>>24]+e[15&ha>>4]+e[15&ha]+e[15&ha>>12]+e[15&ha>>8]+e[15&ha>>20]+e[15&ha>>16]+e[15&ha>>28]+e[15&ha>>24]+e[15&ia>>4]+e[15&ia]+e[15&ia>>12]+e[15&ia>>8]+e[15&ia>>20]+e[15&ia>>16]+e[15&ia>>28]+e[15&ia>>24]+e[15&ja>>4]+e[15&ja]+e[15&ja>>12]+e[15&ja>>8]+e[15&ja>>20]+e[15&ja>>16]+e[15&ja>>28]+e[15&ja>>24]);else for(J=0,I=z/32;J<I;++J)K=o[J],Ua+=e[15&K>>4]+e[15&K]+e[15&K>>12]+e[15&K>>8]+e[15&K>>20]+e[15&K>>16]+e[15&K>>28]+e[15&K>>24];return Ua};!a.JS_SHA3_TEST&&c?module.exports={sha3_512:w,sha3_384:v,sha3_256:u,sha3_224:t,keccak_512:x,keccak_384:r,keccak_256:q,keccak_224:p}:a&&(a.sha3_512=w,a.sha3_384=v,a.sha3_256=u,a.sha3_224=t,a.keccak_512=x,a.keccak_384=r,a.keccak_256=q,a.keccak_224=p)})(void 0);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],164:[function(require,module,exports){
'use strict';module.exports=require('browserify-sha3').SHA3Hash;

},{"browserify-sha3":52}],165:[function(require,module,exports){
'use strict';var encodings=require('./lib/encodings');module.exports=Codec;function Codec(a){this.opts=a||{},this.encodings=encodings}Codec.prototype._encoding=function(a){return'string'==typeof a&&(a=encodings[a]),a||(a=encodings.id),a},Codec.prototype._keyEncoding=function(a,b){return this._encoding(b&&b.keyEncoding||a&&a.keyEncoding||this.opts.keyEncoding)},Codec.prototype._valueEncoding=function(a,b){return this._encoding(b&&(b.valueEncoding||b.encoding)||a&&(a.valueEncoding||a.encoding)||this.opts.valueEncoding||this.opts.encoding)},Codec.prototype.encodeKey=function(a,b,c){return this._keyEncoding(b,c).encode(a)},Codec.prototype.encodeValue=function(a,b,c){return this._valueEncoding(b,c).encode(a)},Codec.prototype.decodeKey=function(a,b){return this._keyEncoding(b).decode(a)},Codec.prototype.decodeValue=function(a,b){return this._valueEncoding(b).decode(a)},Codec.prototype.encodeBatch=function(a,b){var c=this;return a.map(function(d){var e={type:d.type,key:c.encodeKey(d.key,b,d)};return c.keyAsBuffer(b,d)&&(e.keyEncoding='binary'),d.prefix&&(e.prefix=d.prefix),'value'in d&&(e.value=c.encodeValue(d.value,b,d),c.valueAsBuffer(b,d)&&(e.valueEncoding='binary')),e})};var ltgtKeys=['lt','gt','lte','gte','start','end'];Codec.prototype.encodeLtgt=function(a){var b=this,c={};return Object.keys(a).forEach(function(d){c[d]=-1<ltgtKeys.indexOf(d)?b.encodeKey(a[d],a):a[d]}),c},Codec.prototype.createStreamDecoder=function(a){var b=this;if(a.keys&&a.values)return function(c,d){return{key:b.decodeKey(c,a),value:b.decodeValue(d,a)}};return a.keys?function(c){return b.decodeKey(c,a)}:a.values?function(c,d){return b.decodeValue(d,a)}:function(){}},Codec.prototype.keyAsBuffer=function(a){return this._keyEncoding(a).buffer},Codec.prototype.valueAsBuffer=function(a){return this._valueEncoding(a).buffer};

},{"./lib/encodings":166}],166:[function(require,module,exports){
(function (Buffer){
'use strict';exports.utf8=exports['utf-8']={encode:function encode(a){return isBinary(a)?a:a+''},decode:identity,buffer:!1,type:'utf8'},exports.json={encode:JSON.stringify,decode:JSON.parse,buffer:!1,type:'json'},exports.binary={encode:function encode(a){return isBinary(a)?a:new Buffer(a)},decode:identity,buffer:!0,type:'binary'},exports.id={encode:function encode(a){return a},decode:function decode(a){return a},buffer:!1,type:'id'};var bufferEncodings=['hex','ascii','base64','ucs2','ucs-2','utf16le','utf-16le'];bufferEncodings.forEach(function(a){exports[a]={encode:function encode(b){return isBinary(b)?b:new Buffer(b,a)},decode:function decode(b){return b.toString(a)},buffer:!0,type:a}});function identity(a){return a}function isBinary(a){return a===void 0||null===a||Buffer.isBuffer(a)}

}).call(this,require("buffer").Buffer)
},{"buffer":62}],167:[function(require,module,exports){
'use strict';/* Copyright (c) 2012-2015 LevelUP contributors
 * See list at <https://github.com/rvagg/node-levelup#contributing>
 * MIT License
 * <https://github.com/rvagg/node-levelup/blob/master/LICENSE.md>
 */var createError=require('errno').create,LevelUPError=createError('LevelUPError'),NotFoundError=createError('NotFoundError',LevelUPError);NotFoundError.prototype.notFound=!0,NotFoundError.prototype.status=404,module.exports={LevelUPError:LevelUPError,InitializationError:createError('InitializationError',LevelUPError),OpenError:createError('OpenError',LevelUPError),ReadError:createError('ReadError',LevelUPError),WriteError:createError('WriteError',LevelUPError),NotFoundError:NotFoundError,EncodingError:createError('EncodingError',LevelUPError)};

},{"errno":103}],168:[function(require,module,exports){
'use strict';var inherits=require('inherits'),Readable=require('readable-stream').Readable,extend=require('xtend'),EncodingError=require('level-errors').EncodingError;module.exports=ReadStream,inherits(ReadStream,Readable);function ReadStream(a,b){return this instanceof ReadStream?void(Readable.call(this,extend(b,{objectMode:!0})),this._iterator=a,this._destroyed=!1,this._decoder=null,b&&b.decoder&&(this._decoder=b.decoder),this.on('end',this._cleanup.bind(this))):new ReadStream(a,b)}ReadStream.prototype._read=function(){var a=this;this._destroyed||this._iterator.next(function(b,c,d){if(!a._destroyed){if(b)return a.emit('error',b);if(void 0===c&&void 0===d)a.push(null);else{if(!a._decoder)return a.push({key:c,value:d});try{var d=a._decoder(c,d)}catch(e){return a.emit('error',new EncodingError(e)),void a.push(null)}a.push(d)}}})},ReadStream.prototype.destroy=ReadStream.prototype._cleanup=function(){var a=this;this._destroyed||(this._destroyed=!0,this._iterator.end(function(b){return b?a.emit('error',b):void a.emit('close')}))};

},{"inherits":160,"level-errors":167,"readable-stream":175,"xtend":263}],169:[function(require,module,exports){
'use strict';module.exports=Array.isArray||function(a){return'[object Array]'==Object.prototype.toString.call(a)};

},{}],170:[function(require,module,exports){
(function (process){
'use strict';module.exports=Duplex;/*<replacement>*/var objectKeys=Object.keys||function(a){var b=[];for(var c in a)b.push(c);return b},util=require('core-util-is');/*</replacement>*//*<replacement>*/util.inherits=require('inherits');/*</replacement>*/var Readable=require('./_stream_readable'),Writable=require('./_stream_writable');util.inherits(Duplex,Readable),forEach(objectKeys(Writable.prototype),function(a){Duplex.prototype[a]||(Duplex.prototype[a]=Writable.prototype[a])});function Duplex(a){return this instanceof Duplex?void(Readable.call(this,a),Writable.call(this,a),a&&!1===a.readable&&(this.readable=!1),a&&!1===a.writable&&(this.writable=!1),this.allowHalfOpen=!0,a&&!1===a.allowHalfOpen&&(this.allowHalfOpen=!1),this.once('end',onend)):new Duplex(a)}// the no-half-open enforcer
function onend(){this.allowHalfOpen||this._writableState.ended||process.nextTick(this.end.bind(this))}function forEach(a,b){for(var c=0,d=a.length;c<d;c++)b(a[c],c)}

}).call(this,require('_process'))
},{"./_stream_readable":172,"./_stream_writable":174,"_process":213,"core-util-is":66,"inherits":160}],171:[function(require,module,exports){
'use strict';module.exports=PassThrough;var Transform=require('./_stream_transform'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits'),util.inherits(PassThrough,Transform);function PassThrough(a){return this instanceof PassThrough?void Transform.call(this,a):new PassThrough(a)}PassThrough.prototype._transform=function(a,b,c){c(null,a)};

},{"./_stream_transform":173,"core-util-is":66,"inherits":160}],172:[function(require,module,exports){
(function (process){
'use strict';module.exports=Readable;/*<replacement>*/var isArray=require('isarray'),Buffer=require('buffer').Buffer;/*</replacement>*//*<replacement>*//*</replacement>*/Readable.ReadableState=ReadableState;var EE=require('events').EventEmitter;/*<replacement>*/EE.listenerCount||(EE.listenerCount=function(a,b){return a.listeners(b).length});/*</replacement>*/var Stream=require('stream'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits');/*</replacement>*/var StringDecoder,debug=require('util');/*<replacement>*/debug=debug&&debug.debuglog?debug.debuglog('stream'):function debug(){},util.inherits(Readable,Stream);function ReadableState(a,b){var d=require('./_stream_duplex');a=a||{};// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
var g=a.highWaterMark,h=a.objectMode?16:16384;this.highWaterMark=g||0===g?g:h,this.highWaterMark=~~this.highWaterMark,this.buffer=[],this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.objectMode=!!a.objectMode,b instanceof d&&(this.objectMode=this.objectMode||!!a.readableObjectMode),this.defaultEncoding=a.defaultEncoding||'utf8',this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,a.encoding&&(!StringDecoder&&(StringDecoder=require('string_decoder/').StringDecoder),this.decoder=new StringDecoder(a.encoding),this.encoding=a.encoding)}function Readable(a){return require('./_stream_duplex'),this instanceof Readable?void(this._readableState=new ReadableState(a,this),this.readable=!0,Stream.call(this)):new Readable(a)}// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push=function(a,b){var d=this._readableState;return util.isString(a)&&!d.objectMode&&(b=b||d.defaultEncoding,b!==d.encoding&&(a=new Buffer(a,b),b='')),readableAddChunk(this,d,a,b,!1)},Readable.prototype.unshift=function(a){var b=this._readableState;return readableAddChunk(this,b,a,'',!0)};function readableAddChunk(a,b,d,g,h){var j=chunkInvalid(b,d);if(j)a.emit('error',j);else if(util.isNullOrUndefined(d))b.reading=!1,b.ended||onEofChunk(a,b);else if(!(b.objectMode||d&&0<d.length))h||(b.reading=!1);else if(b.ended&&!h){var k=new Error('stream.push() after EOF');a.emit('error',k)}else if(b.endEmitted&&h){var k=new Error('stream.unshift() after end event');a.emit('error',k)}else!b.decoder||h||g||(d=b.decoder.write(d)),h||(b.reading=!1),b.flowing&&0===b.length&&!b.sync?(a.emit('data',d),a.read(0)):(b.length+=b.objectMode?1:d.length,h?b.buffer.unshift(d):b.buffer.push(d),b.needReadable&&emitReadable(a)),maybeReadMore(a,b);return needMoreData(b)}// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(a){return!a.ended&&(a.needReadable||a.length<a.highWaterMark||0===a.length)}// backwards compatibility.
Readable.prototype.setEncoding=function(a){return StringDecoder||(StringDecoder=require('string_decoder/').StringDecoder),this._readableState.decoder=new StringDecoder(a),this._readableState.encoding=a,this};// Don't raise the hwm > 128MB
var MAX_HWM=8388608;function roundUpToNextPowerOf2(a){if(a>=MAX_HWM)a=MAX_HWM;else{a--;for(var b=1;32>b;b<<=1)a|=a>>b;a++}return a}function howMuchToRead(a,b){// If we're asking for more than the target buffer level,
// then raise the water mark.  Bump up to the next highest
// power of 2, to prevent increasing it excessively in tiny
// amounts.
// don't have that much.  return null, unless we've ended.
return 0===b.length&&b.ended?0:b.objectMode?0===a?0:1:isNaN(a)||util.isNull(a)?b.flowing&&b.buffer.length?b.buffer[0].length:b.length:0>=a?0:(a>b.highWaterMark&&(b.highWaterMark=roundUpToNextPowerOf2(a)),a>b.length?b.ended?b.length:(b.needReadable=!0,0):a)}// you can override either this method, or the async _read(n) below.
Readable.prototype.read=function(a){debug('read',a);var b=this._readableState,d=a;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if((!util.isNumber(a)||0<a)&&(b.emittedReadable=!1),0===a&&b.needReadable&&(b.length>=b.highWaterMark||b.ended))return debug('read: emitReadable',b.length,b.ended),0===b.length&&b.ended?endReadable(this):emitReadable(this),null;// if we've ended, and we're now clear, then finish it up.
if(a=howMuchToRead(a,b),0===a&&b.ended)return 0===b.length&&endReadable(this),null;// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var g=b.needReadable;debug('need readable',g),(0===b.length||b.length-a<b.highWaterMark)&&(g=!0,debug('length less than watermark',g)),(b.ended||b.reading)&&(g=!1,debug('reading or ended',g)),g&&(debug('do read'),b.reading=!0,b.sync=!0,0===b.length&&(b.needReadable=!0),this._read(b.highWaterMark),b.sync=!1),g&&!b.reading&&(a=howMuchToRead(d,b));var h;return h=0<a?fromList(a,b):null,util.isNull(h)&&(b.needReadable=!0,a=0),b.length-=a,0!==b.length||b.ended||(b.needReadable=!0),d!==a&&b.ended&&0===b.length&&endReadable(this),util.isNull(h)||this.emit('data',h),h};function chunkInvalid(a,b){var d=null;return util.isBuffer(b)||util.isString(b)||util.isNullOrUndefined(b)||a.objectMode||(d=new TypeError('Invalid non-string/buffer chunk')),d}function onEofChunk(a,b){if(b.decoder&&!b.ended){var d=b.decoder.end();d&&d.length&&(b.buffer.push(d),b.length+=b.objectMode?1:d.length)}b.ended=!0,emitReadable(a)}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(a){var b=a._readableState;b.needReadable=!1,b.emittedReadable||(debug('emitReadable',b.flowing),b.emittedReadable=!0,b.sync?process.nextTick(function(){emitReadable_(a)}):emitReadable_(a))}function emitReadable_(a){debug('emit readable'),a.emit('readable'),flow(a)}// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(a,b){b.readingMore||(b.readingMore=!0,process.nextTick(function(){maybeReadMore_(a,b)}))}function maybeReadMore_(a,b){for(var d=b.length;!b.reading&&!b.flowing&&!b.ended&&b.length<b.highWaterMark&&(debug('maybeReadMore read 0'),a.read(0),d!==b.length);)d=b.length;b.readingMore=!1}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read=function(a){this.emit('error',new Error('not implemented'))},Readable.prototype.pipe=function(a,b){function d(w){debug('onunpipe'),w===r&&h()}function g(){debug('onend'),a.end()}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
function h(){debug('cleanup'),a.removeListener('close',m),a.removeListener('finish',o),a.removeListener('drain',v),a.removeListener('error',k),a.removeListener('unpipe',d),r.removeListener('end',g),r.removeListener('end',h),r.removeListener('data',j),s.awaitDrain&&(!a._writableState||a._writableState.needDrain)&&v()}function j(w){debug('ondata');var y=a.write(w);!1===y&&(debug('false write response, pause',r._readableState.awaitDrain),r._readableState.awaitDrain++,r.pause())}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function k(w){debug('onerror',w),q(),a.removeListener('error',k),0===EE.listenerCount(a,'error')&&a.emit('error',w)}// This is a brutally ugly hack to make sure that our error handler
// is attached before any userland ones.  NEVER DO THIS.
// Both close and finish should trigger unpipe, but only once.
function m(){a.removeListener('finish',o),q()}function o(){debug('onfinish'),a.removeListener('close',m),q()}function q(){debug('unpipe'),r.unpipe(a)}// tell the dest that it's being piped to
var r=this,s=this._readableState;switch(s.pipesCount){case 0:s.pipes=a;break;case 1:s.pipes=[s.pipes,a];break;default:s.pipes.push(a);}s.pipesCount+=1,debug('pipe count=%d opts=%j',s.pipesCount,b);var t=(!b||!1!==b.end)&&a!==process.stdout&&a!==process.stderr,u=t?g:h;s.endEmitted?process.nextTick(u):r.once('end',u),a.on('unpipe',d);var v=pipeOnDrain(r);return a.on('drain',v),r.on('data',j),a._events&&a._events.error?isArray(a._events.error)?a._events.error.unshift(k):a._events.error=[k,a._events.error]:a.on('error',k),a.once('close',m),a.once('finish',o),a.emit('pipe',r),s.flowing||(debug('pipe resume'),r.resume()),a};function pipeOnDrain(a){return function(){var b=a._readableState;debug('pipeOnDrain',b.awaitDrain),b.awaitDrain&&b.awaitDrain--,0===b.awaitDrain&&EE.listenerCount(a,'data')&&(b.flowing=!0,flow(a))}}Readable.prototype.unpipe=function(a){var b=this._readableState;// if we're not piping anywhere, then do nothing.
if(0===b.pipesCount)return this;// just one destination.  most common case.
if(1===b.pipesCount)// passed in one, but it's not the right one.
return a&&a!==b.pipes?this:(a||(a=b.pipes),b.pipes=null,b.pipesCount=0,b.flowing=!1,a&&a.emit('unpipe',this),this);// slow case. multiple pipe destinations.
if(!a){// remove all.
var d=b.pipes,g=b.pipesCount;b.pipes=null,b.pipesCount=0,b.flowing=!1;for(var h=0;h<g;h++)d[h].emit('unpipe',this);return this}// try to find the right one.
var h=indexOf(b.pipes,a);return-1===h?this:(b.pipes.splice(h,1),b.pipesCount-=1,1===b.pipesCount&&(b.pipes=b.pipes[0]),a.emit('unpipe',this),this)},Readable.prototype.on=function(a,b){var d=Stream.prototype.on.call(this,a,b);// If listening to data, and it has not explicitly been paused,
// then call resume to start the flow of data on the next tick.
if('data'===a&&!1!==this._readableState.flowing&&this.resume(),'readable'===a&&this.readable){var g=this._readableState;if(!g.readableListening)if(g.readableListening=!0,g.emittedReadable=!1,g.needReadable=!0,!g.reading){var h=this;process.nextTick(function(){debug('readable nexttick read 0'),h.read(0)})}else g.length&&emitReadable(this,g)}return d},Readable.prototype.addListener=Readable.prototype.on,Readable.prototype.resume=function(){var a=this._readableState;return a.flowing||(debug('resume'),a.flowing=!0,!a.reading&&(debug('resume read 0'),this.read(0)),resume(this,a)),this};function resume(a,b){b.resumeScheduled||(b.resumeScheduled=!0,process.nextTick(function(){resume_(a,b)}))}function resume_(a,b){b.resumeScheduled=!1,a.emit('resume'),flow(a),b.flowing&&!b.reading&&a.read(0)}Readable.prototype.pause=function(){return debug('call pause flowing=%j',this._readableState.flowing),!1!==this._readableState.flowing&&(debug('pause'),this._readableState.flowing=!1,this.emit('pause')),this};function flow(a){var b=a._readableState;if(debug('flow',b.flowing),b.flowing)do var d=a.read();while(null!==d&&b.flowing)}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap=function(a){var b=this._readableState,d=!1,g=this;// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var h in a.on('end',function(){if(debug('wrapped end'),b.decoder&&!b.ended){var j=b.decoder.end();j&&j.length&&g.push(j)}g.push(null)}),a.on('data',function(j){if(debug('wrapped data'),b.decoder&&(j=b.decoder.write(j)),j&&(b.objectMode||j.length)){var k=g.push(j);k||(d=!0,a.pause())}}),a)util.isFunction(a[h])&&util.isUndefined(this[h])&&(this[h]=function(j){return function(){return a[j].apply(a,arguments)}}(h));// proxy certain important events.
return forEach(['error','close','destroy','pause','resume'],function(j){a.on(j,g.emit.bind(g,j))}),g._read=function(j){debug('wrapped _read',j),d&&(d=!1,a.resume())},g},Readable._fromList=fromList;// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(a,b){var d=b.buffer,g=b.length,h=!!b.decoder,j=!!b.objectMode,k;// nothing in the list, definitely empty.
if(0===d.length)return null;if(0===g)k=null;else if(j)k=d.shift();else if(!a||a>=g)k=h?d.join(''):Buffer.concat(d,g),d.length=0;else// read just some of it.
if(a<d[0].length){// just take a part of the first list item.
// slice is the same for buffers and strings.
var m=d[0];k=m.slice(0,a),d[0]=m.slice(a)}else if(a===d[0].length)k=d.shift();else{k=h?'':new Buffer(a);var o=0;for(var q=0,r=d.length;q<r&&o<a;q++){var m=d[0],s=Math.min(a-o,m.length);h?k+=m.slice(0,s):m.copy(k,o,0,s),s<m.length?d[0]=m.slice(s):d.shift(),o+=s}}return k}function endReadable(a){var b=a._readableState;// If we get here before consuming all the bytes, then that is a
// bug in node.  Should never happen.
if(0<b.length)throw new Error('endReadable called on non-empty stream');b.endEmitted||(b.ended=!0,process.nextTick(function(){b.endEmitted||0!==b.length||(b.endEmitted=!0,a.readable=!1,a.emit('end'))}))}function forEach(a,b){for(var d=0,g=a.length;d<g;d++)b(a[d],d)}function indexOf(a,b){for(var d=0,g=a.length;d<g;d++)if(a[d]===b)return d;return-1}

}).call(this,require('_process'))
},{"./_stream_duplex":170,"_process":213,"buffer":62,"core-util-is":66,"events":148,"inherits":160,"isarray":169,"stream":252,"string_decoder/":253,"util":32}],173:[function(require,module,exports){
'use strict';module.exports=Transform;var Duplex=require('./_stream_duplex'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits'),util.inherits(Transform,Duplex);function TransformState(a,b){this.afterTransform=function(c,d){return afterTransform(b,c,d)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null}function afterTransform(a,b,c){var d=a._transformState;d.transforming=!1;var e=d.writecb;if(!e)return a.emit('error',new Error('no writecb in Transform class'));d.writechunk=null,d.writecb=null,util.isNullOrUndefined(c)||a.push(c),e&&e(b);var f=a._readableState;f.reading=!1,(f.needReadable||f.length<f.highWaterMark)&&a._read(f.highWaterMark)}function Transform(a){if(!(this instanceof Transform))return new Transform(a);Duplex.call(this,a),this._transformState=new TransformState(a,this);// when the writable side finishes, then flush out anything remaining.
var b=this;// start out asking for a readable event once data is transformed.
this._readableState.needReadable=!0,this._readableState.sync=!1,this.once('prefinish',function(){util.isFunction(this._flush)?this._flush(function(c){done(b,c)}):done(b)})}Transform.prototype.push=function(a,b){return this._transformState.needTransform=!1,Duplex.prototype.push.call(this,a,b)},Transform.prototype._transform=function(a,b,c){throw new Error('not implemented')},Transform.prototype._write=function(a,b,c){var d=this._transformState;if(d.writecb=c,d.writechunk=a,d.writeencoding=b,!d.transforming){var e=this._readableState;(d.needTransform||e.needReadable||e.length<e.highWaterMark)&&this._read(e.highWaterMark)}},Transform.prototype._read=function(a){var b=this._transformState;util.isNull(b.writechunk)||!b.writecb||b.transforming?b.needTransform=!0:(b.transforming=!0,this._transform(b.writechunk,b.writeencoding,b.afterTransform))};function done(a,b){if(b)return a.emit('error',b);// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
var c=a._writableState,d=a._transformState;if(c.length)throw new Error('calling transform done when ws.length != 0');if(d.transforming)throw new Error('calling transform done when still transforming');return a.push(null)}

},{"./_stream_duplex":170,"core-util-is":66,"inherits":160}],174:[function(require,module,exports){
(function (process){
'use strict';module.exports=Writable;/*<replacement>*/var Buffer=require('buffer').Buffer;/*</replacement>*/Writable.WritableState=WritableState;/*<replacement>*/var util=require('core-util-is');util.inherits=require('inherits');/*</replacement>*/var Stream=require('stream');util.inherits(Writable,Stream);function WriteReq(a,b,d){this.chunk=a,this.encoding=b,this.callback=d}function WritableState(a,b){var d=require('./_stream_duplex');a=a||{};// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
var e=a.highWaterMark,f=a.objectMode?16:16384;this.highWaterMark=e||0===e?e:f,this.objectMode=!!a.objectMode,b instanceof d&&(this.objectMode=this.objectMode||!!a.writableObjectMode),this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var g=!1===a.decodeStrings;this.decodeStrings=!g,this.defaultEncoding=a.defaultEncoding||'utf8',this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(h){onwrite(b,h)},this.writecb=null,this.writelen=0,this.buffer=[],this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1}function Writable(a){var b=require('./_stream_duplex');// Writable ctor is applied to Duplexes, though they're not
// instanceof Writable, they're instanceof Readable.
return this instanceof Writable||this instanceof b?void(this._writableState=new WritableState(a,this),this.writable=!0,Stream.call(this)):new Writable(a)}// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe=function(){this.emit('error',new Error('Cannot pipe. Not readable.'))};function writeAfterEnd(a,b,d){var e=new Error('write after end');// TODO: defer error events consistently everywhere, not just the cb
a.emit('error',e),process.nextTick(function(){d(e)})}// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(a,b,d,e){var f=!0;if(!util.isBuffer(d)&&!util.isString(d)&&!util.isNullOrUndefined(d)&&!b.objectMode){var g=new TypeError('Invalid non-string/buffer chunk');a.emit('error',g),process.nextTick(function(){e(g)}),f=!1}return f}Writable.prototype.write=function(a,b,d){var e=this._writableState,f=!1;return util.isFunction(b)&&(d=b,b=null),util.isBuffer(a)?b='buffer':!b&&(b=e.defaultEncoding),util.isFunction(d)||(d=function d(){}),e.ended?writeAfterEnd(this,e,d):validChunk(this,e,a,d)&&(e.pendingcb++,f=writeOrBuffer(this,e,a,b,d)),f},Writable.prototype.cork=function(){var a=this._writableState;a.corked++},Writable.prototype.uncork=function(){var a=this._writableState;a.corked&&(a.corked--,!a.writing&&!a.corked&&!a.finished&&!a.bufferProcessing&&a.buffer.length&&clearBuffer(this,a))};function decodeChunk(a,b,d){return!a.objectMode&&!1!==a.decodeStrings&&util.isString(b)&&(b=new Buffer(b,d)),b}// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(a,b,d,e,f){d=decodeChunk(b,d,e),util.isBuffer(d)&&(e='buffer');var g=b.objectMode?1:d.length;b.length+=g;var h=b.length<b.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
return h||(b.needDrain=!0),b.writing||b.corked?b.buffer.push(new WriteReq(d,e,f)):doWrite(a,b,!1,g,d,e,f),h}function doWrite(a,b,d,e,f,g,h){b.writelen=e,b.writecb=h,b.writing=!0,b.sync=!0,d?a._writev(f,b.onwrite):a._write(f,g,b.onwrite),b.sync=!1}function onwriteError(a,b,d,e,f){d?process.nextTick(function(){b.pendingcb--,f(e)}):(b.pendingcb--,f(e)),a._writableState.errorEmitted=!0,a.emit('error',e)}function onwriteStateUpdate(a){a.writing=!1,a.writecb=null,a.length-=a.writelen,a.writelen=0}function onwrite(a,b){var d=a._writableState,e=d.sync,f=d.writecb;if(onwriteStateUpdate(d),b)onwriteError(a,d,e,b,f);else{// Check if we're actually ready to finish, but don't emit yet
var g=needFinish(a,d);g||d.corked||d.bufferProcessing||!d.buffer.length||clearBuffer(a,d),e?process.nextTick(function(){afterWrite(a,d,g,f)}):afterWrite(a,d,g,f)}}function afterWrite(a,b,d,e){d||onwriteDrain(a,b),b.pendingcb--,e(),finishMaybe(a,b)}// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(a,b){0===b.length&&b.needDrain&&(b.needDrain=!1,a.emit('drain'))}// if there's something in the buffer waiting, then process it
function clearBuffer(a,b){if(b.bufferProcessing=!0,a._writev&&1<b.buffer.length){// Fast case, write everything using _writev()
var d=[];for(var e=0;e<b.buffer.length;e++)d.push(b.buffer[e].callback);// count the one we are adding, as well.
// TODO(isaacs) clean this up
b.pendingcb++,doWrite(a,b,!0,b.length,b.buffer,'',function(l){for(var m=0;m<d.length;m++)b.pendingcb--,d[m](l)}),b.buffer=[]}else{// Slow case, write chunks one-by-one
for(var e=0;e<b.buffer.length;e++){var f=b.buffer[e],g=f.chunk,h=f.encoding,j=f.callback,k=b.objectMode?1:g.length;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(doWrite(a,b,!1,k,g,h,j),b.writing){e++;break}}e<b.buffer.length?b.buffer=b.buffer.slice(e):b.buffer.length=0}b.bufferProcessing=!1}Writable.prototype._write=function(a,b,d){d(new Error('not implemented'))},Writable.prototype._writev=null,Writable.prototype.end=function(a,b,d){var e=this._writableState;util.isFunction(a)?(d=a,a=null,b=null):util.isFunction(b)&&(d=b,b=null),util.isNullOrUndefined(a)||this.write(a,b),e.corked&&(e.corked=1,this.uncork()),e.ending||e.finished||endWritable(this,e,d)};function needFinish(a,b){return b.ending&&0===b.length&&!b.finished&&!b.writing}function prefinish(a,b){b.prefinished||(b.prefinished=!0,a.emit('prefinish'))}function finishMaybe(a,b){var d=needFinish(a,b);return d&&(0===b.pendingcb?(prefinish(a,b),b.finished=!0,a.emit('finish')):prefinish(a,b)),d}function endWritable(a,b,d){b.ending=!0,finishMaybe(a,b),d&&(b.finished?process.nextTick(d):a.once('finish',d)),b.ended=!0}

}).call(this,require('_process'))
},{"./_stream_duplex":170,"_process":213,"buffer":62,"core-util-is":66,"inherits":160,"stream":252}],175:[function(require,module,exports){
(function (process){
'use strict';exports=module.exports=require('./lib/_stream_readable.js'),exports.Stream=require('stream'),exports.Readable=exports,exports.Writable=require('./lib/_stream_writable.js'),exports.Duplex=require('./lib/_stream_duplex.js'),exports.Transform=require('./lib/_stream_transform.js'),exports.PassThrough=require('./lib/_stream_passthrough.js'),process.browser||'disable'!==process.env.READABLE_STREAM||(module.exports=require('stream'));

}).call(this,require('_process'))
},{"./lib/_stream_duplex.js":170,"./lib/_stream_passthrough.js":171,"./lib/_stream_readable.js":172,"./lib/_stream_transform.js":173,"./lib/_stream_writable.js":174,"_process":213,"stream":252}],176:[function(require,module,exports){
(function (process){
'use strict';/* Copyright (c) 2013 LevelUP contributors
 * See list at <https://github.com/rvagg/node-levelup#contributing>
 * MIT +no-false-attribs License
 * <https://github.com/Level/level-ws/master/LICENSE>
 */var Writable=require('stream').Writable||require('readable-stream').Writable,inherits=require('util').inherits,extend=require('xtend'),defaultOptions={type:'put',keyEncoding:'utf8',valueEncoding:'utf8'}// copied from LevelUP
,encodingNames=['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le']// copied from LevelUP
,encodingOpts=function(){var a={};return encodingNames.forEach(function(b){a[b]={valueEncoding:b}}),a}();// copied from LevelUP
function getOptions(a,b){var c='string'==typeof b;// just an encoding
return!c&&b&&b.encoding&&!b.valueEncoding&&(b.valueEncoding=b.encoding),extend(a&&a.options||{},c?encodingOpts[b]||encodingOpts[defaultOptions.valueEncoding]:b)}function WriteStream(a,b){if(!(this instanceof WriteStream))return new WriteStream(a,b);Writable.call(this,{objectMode:!0}),this._options=extend(defaultOptions,getOptions(b,a)),this._db=b,this._buffer=[],this.writable=!0,this.readable=!1;var c=this;this.on('finish',function g(){return c._buffer&&c._buffer.length?c._flush(g):void(c.writable=!1,c.emit('close'))})}inherits(WriteStream,Writable),WriteStream.prototype._write=function a(b,c,g){var h=this;if(!h._destroyed){if(!h._db.isOpen())return h._db.once('ready',function(){a.call(h,b,c,g)});h._options.maxBufferLength&&h._buffer.length>h._options.maxBufferLength?h.once('_flush',g):(0===h._buffer.length&&process.nextTick(function(){h._flush()}),h._buffer.push(b),g())}},WriteStream.prototype._flush=function(a){var b=this,c=b._buffer;if(!b._destroyed&&c){if(!b._db.isOpen())return b._db.on('ready',function(){b._flush(a)});b._buffer=[],b._db.batch(c.map(function(g){return{type:g.type||b._options.type,key:g.key,value:g.value,keyEncoding:g.keyEncoding||b._options.keyEncoding,valueEncoding:g.valueEncoding||g.encoding||b._options.valueEncoding}}),function(h){h?(b.writable=!1,b.emit('error',h)):(a&&a(),b.emit('_flush'))})}},WriteStream.prototype.toString=function(){return'LevelUP.WriteStream'},WriteStream.prototype.destroy=function(){this._destroyed||(this._buffer=null,this._destroyed=!0,this.writable=!1,this.emit('close'))},WriteStream.prototype.destroySoon=function(){this.end()},module.exports=function(a){return a.writeStream=a.createWriteStream=function(b){return new WriteStream(b,a)},a},module.exports.WriteStream=WriteStream;

}).call(this,require('_process'))
},{"_process":213,"readable-stream":183,"stream":252,"util":259,"xtend":185}],177:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"dup":169}],178:[function(require,module,exports){
arguments[4][170][0].apply(exports,arguments)
},{"./_stream_readable":180,"./_stream_writable":182,"_process":213,"core-util-is":66,"dup":170,"inherits":160}],179:[function(require,module,exports){
arguments[4][171][0].apply(exports,arguments)
},{"./_stream_transform":181,"core-util-is":66,"dup":171,"inherits":160}],180:[function(require,module,exports){
(function (process){
'use strict';module.exports=Readable;/*<replacement>*/var isArray=require('isarray'),Buffer=require('buffer').Buffer;/*</replacement>*//*<replacement>*//*</replacement>*/Readable.ReadableState=ReadableState;var EE=require('events').EventEmitter;/*<replacement>*/EE.listenerCount||(EE.listenerCount=function(a,b){return a.listeners(b).length});/*</replacement>*/var Stream=require('stream'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits');/*</replacement>*/var StringDecoder;util.inherits(Readable,Stream);function ReadableState(a,b){a=a||{};// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
var d=a.highWaterMark;this.highWaterMark=d||0===d?d:16384,this.highWaterMark=~~this.highWaterMark,this.buffer=[],this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=!1,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.calledRead=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.objectMode=!!a.objectMode,this.defaultEncoding=a.defaultEncoding||'utf8',this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,a.encoding&&(!StringDecoder&&(StringDecoder=require('string_decoder/').StringDecoder),this.decoder=new StringDecoder(a.encoding),this.encoding=a.encoding)}function Readable(a){return this instanceof Readable?void(this._readableState=new ReadableState(a,this),this.readable=!0,Stream.call(this)):new Readable(a)}// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push=function(a,b){var d=this._readableState;return'string'!=typeof a||d.objectMode||(b=b||d.defaultEncoding,b!==d.encoding&&(a=new Buffer(a,b),b='')),readableAddChunk(this,d,a,b,!1)},Readable.prototype.unshift=function(a){var b=this._readableState;return readableAddChunk(this,b,a,'',!0)};function readableAddChunk(a,b,d,g,h){var j=chunkInvalid(b,d);if(j)a.emit('error',j);else if(null===d||d===void 0)b.reading=!1,b.ended||onEofChunk(a,b);else if(!(b.objectMode||d&&0<d.length))h||(b.reading=!1);else if(b.ended&&!h){var k=new Error('stream.push() after EOF');a.emit('error',k)}else if(b.endEmitted&&h){var k=new Error('stream.unshift() after end event');a.emit('error',k)}else!b.decoder||h||g||(d=b.decoder.write(d)),b.length+=b.objectMode?1:d.length,h?b.buffer.unshift(d):(b.reading=!1,b.buffer.push(d)),b.needReadable&&emitReadable(a),maybeReadMore(a,b);return needMoreData(b)}// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(a){return!a.ended&&(a.needReadable||a.length<a.highWaterMark||0===a.length)}// backwards compatibility.
Readable.prototype.setEncoding=function(a){StringDecoder||(StringDecoder=require('string_decoder/').StringDecoder),this._readableState.decoder=new StringDecoder(a),this._readableState.encoding=a};// Don't raise the hwm > 128MB
var MAX_HWM=8388608;function roundUpToNextPowerOf2(a){if(a>=MAX_HWM)a=MAX_HWM;else{a--;for(var b=1;32>b;b<<=1)a|=a>>b;a++}return a}function howMuchToRead(a,b){// If we're asking for more than the target buffer level,
// then raise the water mark.  Bump up to the next highest
// power of 2, to prevent increasing it excessively in tiny
// amounts.
// don't have that much.  return null, unless we've ended.
return 0===b.length&&b.ended?0:b.objectMode?0===a?0:1:null===a||isNaN(a)?b.flowing&&b.buffer.length?b.buffer[0].length:b.length:0>=a?0:(a>b.highWaterMark&&(b.highWaterMark=roundUpToNextPowerOf2(a)),a>b.length?b.ended?b.length:(b.needReadable=!0,0):a)}// you can override either this method, or the async _read(n) below.
Readable.prototype.read=function(a){var b=this._readableState;b.calledRead=!0;var g,d=a;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(('number'!=typeof a||0<a)&&(b.emittedReadable=!1),0===a&&b.needReadable&&(b.length>=b.highWaterMark||b.ended))return emitReadable(this),null;// if we've ended, and we're now clear, then finish it up.
if(a=howMuchToRead(a,b),0===a&&b.ended)return g=null,0<b.length&&b.decoder&&(g=fromList(a,b),b.length-=g.length),0===b.length&&endReadable(this),g;// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var h=b.needReadable;// if we currently have less than the highWaterMark, then also read some
return b.length-a<=b.highWaterMark&&(h=!0),(b.ended||b.reading)&&(h=!1),h&&(b.reading=!0,b.sync=!0,0===b.length&&(b.needReadable=!0),this._read(b.highWaterMark),b.sync=!1),h&&!b.reading&&(a=howMuchToRead(d,b)),g=0<a?fromList(a,b):null,null===g&&(b.needReadable=!0,a=0),b.length-=a,0!==b.length||b.ended||(b.needReadable=!0),b.ended&&!b.endEmitted&&0===b.length&&endReadable(this),g};function chunkInvalid(a,b){var d=null;return Buffer.isBuffer(b)||'string'==typeof b||null===b||void 0===b||a.objectMode||(d=new TypeError('Invalid non-string/buffer chunk')),d}function onEofChunk(a,b){if(b.decoder&&!b.ended){var d=b.decoder.end();d&&d.length&&(b.buffer.push(d),b.length+=b.objectMode?1:d.length)}b.ended=!0,0<b.length?emitReadable(a):endReadable(a)}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(a){var b=a._readableState;b.needReadable=!1,b.emittedReadable||(b.emittedReadable=!0,b.sync?process.nextTick(function(){emitReadable_(a)}):emitReadable_(a))}function emitReadable_(a){a.emit('readable')}// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(a,b){b.readingMore||(b.readingMore=!0,process.nextTick(function(){maybeReadMore_(a,b)}))}function maybeReadMore_(a,b){for(var d=b.length;!b.reading&&!b.flowing&&!b.ended&&b.length<b.highWaterMark&&(a.read(0),d!==b.length);)d=b.length;b.readingMore=!1}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read=function(a){this.emit('error',new Error('not implemented'))},Readable.prototype.pipe=function(a,b){function d(v){v===q&&h()}function g(){a.end()}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
function h(){a.removeListener('close',k),a.removeListener('finish',m),a.removeListener('drain',u),a.removeListener('error',j),a.removeListener('unpipe',d),q.removeListener('end',g),q.removeListener('end',h),(!a._writableState||a._writableState.needDrain)&&u()}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function j(v){o(),a.removeListener('error',j),0===EE.listenerCount(a,'error')&&a.emit('error',v)}// This is a brutally ugly hack to make sure that our error handler
// is attached before any userland ones.  NEVER DO THIS.
// Both close and finish should trigger unpipe, but only once.
function k(){a.removeListener('finish',m),o()}function m(){a.removeListener('close',k),o()}function o(){q.unpipe(a)}// tell the dest that it's being piped to
var q=this,r=this._readableState;switch(r.pipesCount){case 0:r.pipes=a;break;case 1:r.pipes=[r.pipes,a];break;default:r.pipes.push(a);}r.pipesCount+=1;var s=(!b||!1!==b.end)&&a!==process.stdout&&a!==process.stderr,t=s?g:h;r.endEmitted?process.nextTick(t):q.once('end',t),a.on('unpipe',d);var u=pipeOnDrain(q);return a.on('drain',u),a._events&&a._events.error?isArray(a._events.error)?a._events.error.unshift(j):a._events.error=[j,a._events.error]:a.on('error',j),a.once('close',k),a.once('finish',m),a.emit('pipe',q),r.flowing||(this.on('readable',pipeOnReadable),r.flowing=!0,process.nextTick(function(){flow(q)})),a};function pipeOnDrain(a){return function(){this;var b=a._readableState;b.awaitDrain--,0===b.awaitDrain&&flow(a)}}function flow(a){function b(h,j,k){var m=h.write(g);!1===m&&d.awaitDrain++}var d=a._readableState,g;for(d.awaitDrain=0;d.pipesCount&&null!==(g=a.read());)// if anyone needs a drain, then we have to wait for that.
if(1===d.pipesCount?b(d.pipes,0,null):forEach(d.pipes,b),a.emit('data',g),0<d.awaitDrain)return;// if every destination was unpiped, either before entering this
// function, or in the while loop, then stop flowing.
//
// NB: This is a pretty rare edge case.
return 0===d.pipesCount?(d.flowing=!1,void(0<EE.listenerCount(a,'data')&&emitDataEvents(a))):void(d.ranOut=!0);// at this point, no one needed a drain, so we just ran out of data
// on the next readable event, start it over again.
}function pipeOnReadable(){this._readableState.ranOut&&(this._readableState.ranOut=!1,flow(this))}Readable.prototype.unpipe=function(a){var b=this._readableState;// if we're not piping anywhere, then do nothing.
if(0===b.pipesCount)return this;// just one destination.  most common case.
if(1===b.pipesCount)// passed in one, but it's not the right one.
return a&&a!==b.pipes?this:(a||(a=b.pipes),b.pipes=null,b.pipesCount=0,this.removeListener('readable',pipeOnReadable),b.flowing=!1,a&&a.emit('unpipe',this),this);// slow case. multiple pipe destinations.
if(!a){// remove all.
var d=b.pipes,g=b.pipesCount;b.pipes=null,b.pipesCount=0,this.removeListener('readable',pipeOnReadable),b.flowing=!1;for(var h=0;h<g;h++)d[h].emit('unpipe',this);return this}// try to find the right one.
var h=indexOf(b.pipes,a);return-1===h?this:(b.pipes.splice(h,1),b.pipesCount-=1,1===b.pipesCount&&(b.pipes=b.pipes[0]),a.emit('unpipe',this),this)},Readable.prototype.on=function(a,b){var d=Stream.prototype.on.call(this,a,b);if('data'!==a||this._readableState.flowing||emitDataEvents(this),'readable'===a&&this.readable){var g=this._readableState;g.readableListening||(g.readableListening=!0,g.emittedReadable=!1,g.needReadable=!0,g.reading?g.length&&emitReadable(this,g):this.read(0))}return d},Readable.prototype.addListener=Readable.prototype.on,Readable.prototype.resume=function(){emitDataEvents(this),this.read(0),this.emit('resume')},Readable.prototype.pause=function(){emitDataEvents(this,!0),this.emit('pause')};function emitDataEvents(a,b){var d=a._readableState;if(d.flowing)// https://github.com/isaacs/readable-stream/issues/16
throw new Error('Cannot switch to old mode now.');var g=b||!1,h=!1;// convert to an old-style stream.
a.readable=!0,a.pipe=Stream.prototype.pipe,a.on=a.addListener=Stream.prototype.on,a.on('readable',function(){h=!0;for(var j;!g&&null!==(j=a.read());)a.emit('data',j);null===j&&(h=!1,a._readableState.needReadable=!0)}),a.pause=function(){g=!0,this.emit('pause')},a.resume=function(){g=!1,h?process.nextTick(function(){a.emit('readable')}):this.read(0),this.emit('resume')},a.emit('readable')}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap=function(a){var b=this._readableState,d=!1,g=this;// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var h in a.on('end',function(){if(b.decoder&&!b.ended){var j=b.decoder.end();j&&j.length&&g.push(j)}g.push(null)}),a.on('data',function(j){// don't skip over falsy values in objectMode
//if (state.objectMode && util.isNullOrUndefined(chunk))
if((b.decoder&&(j=b.decoder.write(j)),!(b.objectMode&&(null===j||void 0===j)))&&(b.objectMode||j&&j.length)){var k=g.push(j);k||(d=!0,a.pause())}}),a)'function'==typeof a[h]&&'undefined'==typeof this[h]&&(this[h]=function(j){return function(){return a[j].apply(a,arguments)}}(h));// proxy certain important events.
return forEach(['error','close','destroy','pause','resume'],function(j){a.on(j,g.emit.bind(g,j))}),g._read=function(j){d&&(d=!1,a.resume())},g},Readable._fromList=fromList;// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(a,b){var d=b.buffer,g=b.length,h=!!b.decoder,j=!!b.objectMode,k;// nothing in the list, definitely empty.
if(0===d.length)return null;if(0===g)k=null;else if(j)k=d.shift();else if(!a||a>=g)k=h?d.join(''):Buffer.concat(d,g),d.length=0;else// read just some of it.
if(a<d[0].length){// just take a part of the first list item.
// slice is the same for buffers and strings.
var m=d[0];k=m.slice(0,a),d[0]=m.slice(a)}else if(a===d[0].length)k=d.shift();else{k=h?'':new Buffer(a);var o=0;for(var q=0,r=d.length;q<r&&o<a;q++){var m=d[0],s=Math.min(a-o,m.length);h?k+=m.slice(0,s):m.copy(k,o,0,s),s<m.length?d[0]=m.slice(s):d.shift(),o+=s}}return k}function endReadable(a){var b=a._readableState;// If we get here before consuming all the bytes, then that is a
// bug in node.  Should never happen.
if(0<b.length)throw new Error('endReadable called on non-empty stream');!b.endEmitted&&b.calledRead&&(b.ended=!0,process.nextTick(function(){b.endEmitted||0!==b.length||(b.endEmitted=!0,a.readable=!1,a.emit('end'))}))}function forEach(a,b){for(var d=0,g=a.length;d<g;d++)b(a[d],d)}function indexOf(a,b){for(var d=0,g=a.length;d<g;d++)if(a[d]===b)return d;return-1}

}).call(this,require('_process'))
},{"_process":213,"buffer":62,"core-util-is":66,"events":148,"inherits":160,"isarray":177,"stream":252,"string_decoder/":253}],181:[function(require,module,exports){
'use strict';module.exports=Transform;var Duplex=require('./_stream_duplex'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits'),util.inherits(Transform,Duplex);function TransformState(a,b){this.afterTransform=function(c,d){return afterTransform(b,c,d)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null}function afterTransform(a,b,c){var d=a._transformState;d.transforming=!1;var e=d.writecb;if(!e)return a.emit('error',new Error('no writecb in Transform class'));d.writechunk=null,d.writecb=null,null!==c&&c!==void 0&&a.push(c),e&&e(b);var f=a._readableState;f.reading=!1,(f.needReadable||f.length<f.highWaterMark)&&a._read(f.highWaterMark)}function Transform(a){if(!(this instanceof Transform))return new Transform(a);Duplex.call(this,a),this._transformState=new TransformState(a,this);// when the writable side finishes, then flush out anything remaining.
var b=this;// start out asking for a readable event once data is transformed.
this._readableState.needReadable=!0,this._readableState.sync=!1,this.once('finish',function(){'function'==typeof this._flush?this._flush(function(c){done(b,c)}):done(b)})}Transform.prototype.push=function(a,b){return this._transformState.needTransform=!1,Duplex.prototype.push.call(this,a,b)},Transform.prototype._transform=function(a,b,c){throw new Error('not implemented')},Transform.prototype._write=function(a,b,c){var d=this._transformState;if(d.writecb=c,d.writechunk=a,d.writeencoding=b,!d.transforming){var e=this._readableState;(d.needTransform||e.needReadable||e.length<e.highWaterMark)&&this._read(e.highWaterMark)}},Transform.prototype._read=function(a){var b=this._transformState;null!==b.writechunk&&b.writecb&&!b.transforming?(b.transforming=!0,this._transform(b.writechunk,b.writeencoding,b.afterTransform)):b.needTransform=!0};function done(a,b){if(b)return a.emit('error',b);// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
var c=a._writableState;a._readableState;var d=a._transformState;if(c.length)throw new Error('calling transform done when ws.length != 0');if(d.transforming)throw new Error('calling transform done when still transforming');return a.push(null)}

},{"./_stream_duplex":178,"core-util-is":66,"inherits":160}],182:[function(require,module,exports){
(function (process){
'use strict';module.exports=Writable;/*<replacement>*/var Buffer=require('buffer').Buffer;/*</replacement>*/Writable.WritableState=WritableState;/*<replacement>*/var util=require('core-util-is');util.inherits=require('inherits');/*</replacement>*/var Stream=require('stream');util.inherits(Writable,Stream);function WriteReq(a,b,d){this.chunk=a,this.encoding=b,this.callback=d}function WritableState(a,b){a=a||{};// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
var d=a.highWaterMark;this.highWaterMark=d||0===d?d:16384,this.objectMode=!!a.objectMode,this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var e=!1===a.decodeStrings;this.decodeStrings=!e,this.defaultEncoding=a.defaultEncoding||'utf8',this.length=0,this.writing=!1,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(f){onwrite(b,f)},this.writecb=null,this.writelen=0,this.buffer=[],this.errorEmitted=!1}function Writable(a){var b=require('./_stream_duplex');// Writable ctor is applied to Duplexes, though they're not
// instanceof Writable, they're instanceof Readable.
return this instanceof Writable||this instanceof b?void(this._writableState=new WritableState(a,this),this.writable=!0,Stream.call(this)):new Writable(a)}// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe=function(){this.emit('error',new Error('Cannot pipe. Not readable.'))};function writeAfterEnd(a,b,d){var e=new Error('write after end');// TODO: defer error events consistently everywhere, not just the cb
a.emit('error',e),process.nextTick(function(){d(e)})}// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(a,b,d,e){var f=!0;if(!Buffer.isBuffer(d)&&'string'!=typeof d&&null!==d&&d!==void 0&&!b.objectMode){var g=new TypeError('Invalid non-string/buffer chunk');a.emit('error',g),process.nextTick(function(){e(g)}),f=!1}return f}Writable.prototype.write=function(a,b,d){var e=this._writableState,f=!1;return'function'==typeof b&&(d=b,b=null),Buffer.isBuffer(a)?b='buffer':!b&&(b=e.defaultEncoding),'function'!=typeof d&&(d=function d(){}),e.ended?writeAfterEnd(this,e,d):validChunk(this,e,a,d)&&(f=writeOrBuffer(this,e,a,b,d)),f};function decodeChunk(a,b,d){return a.objectMode||!1===a.decodeStrings||'string'!=typeof b||(b=new Buffer(b,d)),b}// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(a,b,d,e,f){d=decodeChunk(b,d,e),Buffer.isBuffer(d)&&(e='buffer');var g=b.objectMode?1:d.length;b.length+=g;var h=b.length<b.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
return h||(b.needDrain=!0),b.writing?b.buffer.push(new WriteReq(d,e,f)):doWrite(a,b,g,d,e,f),h}function doWrite(a,b,d,e,f,g){b.writelen=d,b.writecb=g,b.writing=!0,b.sync=!0,a._write(e,f,b.onwrite),b.sync=!1}function onwriteError(a,b,d,e,f){d?process.nextTick(function(){f(e)}):f(e),a._writableState.errorEmitted=!0,a.emit('error',e)}function onwriteStateUpdate(a){a.writing=!1,a.writecb=null,a.length-=a.writelen,a.writelen=0}function onwrite(a,b){var d=a._writableState,e=d.sync,f=d.writecb;if(onwriteStateUpdate(d),b)onwriteError(a,d,e,b,f);else{// Check if we're actually ready to finish, but don't emit yet
var g=needFinish(a,d);g||d.bufferProcessing||!d.buffer.length||clearBuffer(a,d),e?process.nextTick(function(){afterWrite(a,d,g,f)}):afterWrite(a,d,g,f)}}function afterWrite(a,b,d,e){d||onwriteDrain(a,b),e(),d&&finishMaybe(a,b)}// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(a,b){0===b.length&&b.needDrain&&(b.needDrain=!1,a.emit('drain'))}// if there's something in the buffer waiting, then process it
function clearBuffer(a,b){b.bufferProcessing=!0;for(var d=0;d<b.buffer.length;d++){var e=b.buffer[d],f=e.chunk,g=e.encoding,h=e.callback,i=b.objectMode?1:f.length;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(doWrite(a,b,i,f,g,h),b.writing){d++;break}}b.bufferProcessing=!1,d<b.buffer.length?b.buffer=b.buffer.slice(d):b.buffer.length=0}Writable.prototype._write=function(a,b,d){d(new Error('not implemented'))},Writable.prototype.end=function(a,b,d){var e=this._writableState;'function'==typeof a?(d=a,a=null,b=null):'function'==typeof b&&(d=b,b=null),'undefined'!=typeof a&&null!==a&&this.write(a,b),e.ending||e.finished||endWritable(this,e,d)};function needFinish(a,b){return b.ending&&0===b.length&&!b.finished&&!b.writing}function finishMaybe(a,b){var d=needFinish(a,b);return d&&(b.finished=!0,a.emit('finish')),d}function endWritable(a,b,d){b.ending=!0,finishMaybe(a,b),d&&(b.finished?process.nextTick(d):a.once('finish',d)),b.ended=!0}

}).call(this,require('_process'))
},{"./_stream_duplex":178,"_process":213,"buffer":62,"core-util-is":66,"inherits":160,"stream":252}],183:[function(require,module,exports){
(function (process){
'use strict';var Stream=require('stream');// hack to fix a circular dependency issue when used with browserify
exports=module.exports=require('./lib/_stream_readable.js'),exports.Stream=Stream,exports.Readable=exports,exports.Writable=require('./lib/_stream_writable.js'),exports.Duplex=require('./lib/_stream_duplex.js'),exports.Transform=require('./lib/_stream_transform.js'),exports.PassThrough=require('./lib/_stream_passthrough.js'),process.browser||'disable'!==process.env.READABLE_STREAM||(module.exports=require('stream'));

}).call(this,require('_process'))
},{"./lib/_stream_duplex.js":178,"./lib/_stream_passthrough.js":179,"./lib/_stream_readable.js":180,"./lib/_stream_transform.js":181,"./lib/_stream_writable.js":182,"_process":213,"stream":252}],184:[function(require,module,exports){
"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj};module.exports=hasKeys;function hasKeys(a){return null!==a&&("object"==("undefined"==typeof a?"undefined":_typeof(a))||"function"==typeof a)}

},{}],185:[function(require,module,exports){
"use strict";var Keys=require("object-keys"),hasKeys=require("./has-keys");module.exports=extend;function extend(){var a={};for(var b=0;b<arguments.length;b++){var c=arguments[b];if(hasKeys(c)){var d=Keys(c);for(var e=0;e<d.length;e++){var f=d[e];a[f]=c[f]}}}return a}

},{"./has-keys":184,"object-keys":203}],186:[function(require,module,exports){
'use strict';/* Copyright (c) 2012-2016 LevelUP contributors
 * See list at <https://github.com/level/levelup#contributing>
 * MIT License
 * <https://github.com/level/levelup/blob/master/LICENSE.md>
 */var util=require('./util'),WriteError=require('level-errors').WriteError,getOptions=util.getOptions,dispatchError=util.dispatchError;function Batch(a,b){this._levelup=a,this._codec=b,this.batch=a.db.batch(),this.ops=[],this.length=0}Batch.prototype.put=function(a,b,c){c=getOptions(c);var d=this._codec.encodeKey(a,c),f=this._codec.encodeValue(b,c);try{this.batch.put(d,f)}catch(g){throw new WriteError(g)}return this.ops.push({type:'put',key:d,value:f}),this.length++,this},Batch.prototype.del=function(a,b){b=getOptions(b);var c=this._codec.encodeKey(a,b);try{this.batch.del(c)}catch(d){throw new WriteError(d)}return this.ops.push({type:'del',key:c}),this.length++,this},Batch.prototype.clear=function(){try{this.batch.clear()}catch(a){throw new WriteError(a)}return this.ops=[],this.length=0,this},Batch.prototype.write=function(a){var b=this._levelup,c=this.ops;try{this.batch.write(function(d){return d?dispatchError(b,new WriteError(d),a):void(b.emit('batch',c),a&&a())})}catch(d){throw new WriteError(d)}},module.exports=Batch;

},{"./util":188,"level-errors":167}],187:[function(require,module,exports){
(function (process){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},EventEmitter=require('events').EventEmitter,inherits=require('util').inherits,deprecate=require('util').deprecate,extend=require('xtend'),prr=require('prr'),DeferredLevelDOWN=require('deferred-leveldown'),IteratorStream=require('level-iterator-stream'),errors=require('level-errors'),WriteError=errors.WriteError,ReadError=errors.ReadError,NotFoundError=errors.NotFoundError,OpenError=errors.OpenError,EncodingError=errors.EncodingError,InitializationError=errors.InitializationError,util=require('./util'),Batch=require('./batch'),Codec=require('level-codec'),getOptions=util.getOptions,defaultOptions=util.defaultOptions,getLevelDOWN=util.getLevelDOWN,dispatchError=util.dispatchError,isDefined=util.isDefined;/* Copyright (c) 2012-2016 LevelUP contributors
 * See list at <https://github.com/level/levelup#contributing>
 * MIT License
 * <https://github.com/level/levelup/blob/master/LICENSE.md>
 */function getCallback(a,b){return'function'==typeof a?a:b}// Possible LevelUP#_status values:
//  - 'new'     - newly created, not opened or closed
//  - 'opening' - waiting for the database to be opened, post open()
//  - 'open'    - successfully opened the database, available for use
//  - 'closing' - waiting for the database to be closed, post close()
//  - 'closed'  - database has been successfully closed, should not be
//                 used except for another open() operation
function LevelUP(a,b,c){if(!(this instanceof LevelUP))return new LevelUP(a,b,c);var d;if(EventEmitter.call(this),this.setMaxListeners(1/0),'function'==typeof a?(b='object'==('undefined'==typeof b?'undefined':_typeof(b))?b:{},b.db=a,a=null):'object'==('undefined'==typeof a?'undefined':_typeof(a))&&'function'==typeof a.db&&(b=a,a=null),'function'==typeof b&&(c=b,b={}),(!b||'function'!=typeof b.db)&&'string'!=typeof a){if(d=new InitializationError('Must provide a location for the database'),c)return process.nextTick(function(){c(d)});throw d}b=getOptions(b),this.options=extend(defaultOptions,b),this._codec=new Codec(this.options),this._status='new',prr(this,'location',a,'e'),this.open(c)}inherits(LevelUP,EventEmitter),LevelUP.prototype.open=function(a){var c,d,b=this;return this.isOpen()?(a&&process.nextTick(function(){a(null,b)}),this):this._isOpening()?a&&this.once('open',function(){a(null,b)}):void(this.emit('opening'),this._status='opening',this.db=new DeferredLevelDOWN(this.location),c=this.options.db||getLevelDOWN(),d=c(this.location),d.open(this.options,function(f){return f?dispatchError(b,new OpenError(f),a):void(b.db.setDb(d),b.db=d,b._status='open',a&&a(null,b),b.emit('open'),b.emit('ready'))}))},LevelUP.prototype.close=function(a){var b=this;if(this.isOpen())this._status='closing',this.db.close(function(){b._status='closed',b.emit('closed'),a&&a.apply(null,arguments)}),this.emit('closing'),this.db=new DeferredLevelDOWN(this.location);else{if('closed'==this._status&&a)return process.nextTick(a);'closing'==this._status&&a?this.once('closed',a):this._isOpening()&&this.once('open',function(){b.close(a)})}},LevelUP.prototype.isOpen=function(){return'open'==this._status},LevelUP.prototype._isOpening=function(){return'opening'==this._status},LevelUP.prototype.isClosed=function(){return /^clos/.test(this._status)};function maybeError(a,b,c){if(!a._isOpening()&&!a.isOpen())return dispatchError(a,new ReadError('Database is not open'),c),!0}function writeError(a,b,c){dispatchError(a,new WriteError(b),c)}function readError(a,b,c){dispatchError(a,new ReadError(b),c)}LevelUP.prototype.get=function(a,b,c){var f,d=this;if(c=getCallback(b,c),!maybeError(this,b,c)){if(null===a||void 0===a||'function'!=typeof c)return readError(this,'get() requires key and callback arguments',c);b=util.getOptions(b),f=this._codec.encodeKey(a,b),b.asBuffer=this._codec.valueAsBuffer(b),this.db.get(f,b,function(g,h){if(g)return g=/notfound/i.test(g)||g.notFound?new NotFoundError('Key not found in database ['+a+']',g):new ReadError(g),dispatchError(d,g,c);if(c){try{h=d._codec.decodeValue(h,b)}catch(i){return c(new EncodingError(i))}c(null,h)}})}},LevelUP.prototype.put=function(a,b,c,d){var g,h,f=this;return d=getCallback(c,d),null===a||void 0===a?writeError(this,'put() requires a key argument',d):void(!maybeError(this,c,d)&&(c=getOptions(c),g=this._codec.encodeKey(a,c),h=this._codec.encodeValue(b,c),this.db.put(g,h,c,function(i){return i?dispatchError(f,new WriteError(i),d):void(f.emit('put',a,b),d&&d())})))},LevelUP.prototype.del=function(a,b,c){var f,d=this;return c=getCallback(b,c),null===a||void 0===a?writeError(this,'del() requires a key argument',c):void(!maybeError(this,b,c)&&(b=getOptions(b),f=this._codec.encodeKey(a,b),this.db.del(f,b,function(g){return g?dispatchError(d,new WriteError(g),c):void(d.emit('del',a),c&&c())})))},LevelUP.prototype.batch=function(a,b,c){var f,d=this;return arguments.length?(c=getCallback(b,c),Array.isArray(a)?void(!maybeError(this,b,c)&&(b=getOptions(b),f=d._codec.encodeBatch(a,b),f=f.map(function(g){return g.type||void 0===g.key||void 0===g.value||(g.type='put'),g}),this.db.batch(f,b,function(g){return g?dispatchError(d,new WriteError(g),c):void(d.emit('batch',a),c&&c())}))):writeError(this,'batch() requires an array argument',c)):new Batch(this,this._codec)},LevelUP.prototype.approximateSize=deprecate(function(a,b,c,d){var g,h,f=this;return d=getCallback(c,d),c=getOptions(c),null===a||void 0===a||null===b||void 0===b||'function'!=typeof d?readError(this,'approximateSize() requires start, end and callback arguments',d):void(g=this._codec.encodeKey(a,c),h=this._codec.encodeKey(b,c),this.db.approximateSize(g,h,function(i,j){return i?dispatchError(f,new OpenError(i),d):void(d&&d(null,j))}))},'db.approximateSize() is deprecated. Use db.db.approximateSize() instead'),LevelUP.prototype.readStream=LevelUP.prototype.createReadStream=function(a){return a=extend({keys:!0,values:!0},this.options,a),a.keyEncoding=a.keyEncoding,a.valueEncoding=a.valueEncoding,a=this._codec.encodeLtgt(a),a.keyAsBuffer=this._codec.keyAsBuffer(a),a.valueAsBuffer=this._codec.valueAsBuffer(a),'number'!=typeof a.limit&&(a.limit=-1),new IteratorStream(this.db.iterator(a),extend(a,{decoder:this._codec.createStreamDecoder(a)}))},LevelUP.prototype.keyStream=LevelUP.prototype.createKeyStream=function(a){return this.createReadStream(extend(a,{keys:!0,values:!1}))},LevelUP.prototype.valueStream=LevelUP.prototype.createValueStream=function(a){return this.createReadStream(extend(a,{keys:!1,values:!0}))},LevelUP.prototype.toString=function(){return'LevelUP'};function utilStatic(a){return function(b,c){getLevelDOWN()[a](b,c||function(){})}}module.exports=LevelUP,module.exports.errors=require('level-errors'),module.exports.destroy=deprecate(utilStatic('destroy'),'levelup.destroy() is deprecated. Use leveldown.destroy() instead'),module.exports.repair=deprecate(utilStatic('repair'),'levelup.repair() is deprecated. Use leveldown.repair() instead');

}).call(this,require('_process'))
},{"./batch":186,"./util":188,"_process":213,"deferred-leveldown":74,"events":148,"level-codec":165,"level-errors":167,"level-iterator-stream":168,"prr":214,"util":259,"xtend":263}],188:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},leveldown,extend=require('xtend'),LevelUPError=require('level-errors').LevelUPError,format=require('util').format,defaultOptions={createIfMissing:!0,errorIfExists:!1,keyEncoding:'utf8',valueEncoding:'utf8',compression:!0};/* Copyright (c) 2012-2016 LevelUP contributors
 * See list at <https://github.com/level/levelup#contributing>
 * MIT License
 * <https://github.com/level/levelup/blob/master/LICENSE.md>
 */function getOptions(a){return'string'==typeof a&&(a={valueEncoding:a}),'object'!=('undefined'==typeof a?'undefined':_typeof(a))&&(a={}),a}function getLevelDOWN(){if(leveldown)return leveldown;var b,a=require('../package.json').devDependencies.leveldown;try{b=require('leveldown/package').version}catch(c){throw requireError(c)}if(!require('semver').satisfies(b,a))throw new LevelUPError('Installed version of LevelDOWN ('+b+') does not match required version ('+a+')');try{return leveldown=require('leveldown')}catch(c){throw requireError(c)}}function requireError(a){return new LevelUPError(format('Failed to require LevelDOWN (%s). Try `npm install leveldown` if it\'s missing',a.message))}function dispatchError(a,b,c){'function'==typeof c?c(b):a.emit('error',b)}function isDefined(a){return'undefined'!=typeof a}module.exports={defaultOptions:defaultOptions,getOptions:getOptions,getLevelDOWN:getLevelDOWN,dispatchError:dispatchError,isDefined:isDefined};

},{"../package.json":189,"level-errors":167,"leveldown":32,"leveldown/package":32,"semver":32,"util":259,"xtend":263}],189:[function(require,module,exports){
module.exports={
  "_args": [
    [
      {
        "raw": "levelup@^1.2.1",
        "scope": null,
        "escapedName": "levelup",
        "name": "levelup",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "/Users/pelleb/code/browser-builds/node_modules/merkle-patricia-tree"
    ]
  ],
  "_from": "levelup@>=1.2.1 <2.0.0",
  "_id": "levelup@1.3.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/levelup",
  "_nodeVersion": "6.1.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/levelup-1.3.2.tgz_1463496525467_0.4644940535072237"
  },
  "_npmUser": {
    "name": "ralphtheninja",
    "email": "ralphtheninja@riseup.net"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "levelup@^1.2.1",
    "scope": null,
    "escapedName": "levelup",
    "name": "levelup",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/merkle-patricia-tree"
  ],
  "_resolved": "https://registry.npmjs.org/levelup/-/levelup-1.3.2.tgz",
  "_shasum": "b321d3071f0e75c2dfaf2f0fe8864e5b9a387bc9",
  "_shrinkwrap": null,
  "_spec": "levelup@^1.2.1",
  "_where": "/Users/pelleb/code/browser-builds/node_modules/merkle-patricia-tree",
  "browser": {
    "leveldown": false,
    "leveldown/package": false,
    "semver": false
  },
  "bugs": {
    "url": "https://github.com/level/levelup/issues"
  },
  "contributors": [
    {
      "name": "Rod Vagg",
      "email": "r@va.gg",
      "url": "https://github.com/rvagg"
    },
    {
      "name": "John Chesley",
      "email": "john@chesl.es",
      "url": "https://github.com/chesles/"
    },
    {
      "name": "Jake Verbaten",
      "email": "raynos2@gmail.com",
      "url": "https://github.com/raynos"
    },
    {
      "name": "Dominic Tarr",
      "email": "dominic.tarr@gmail.com",
      "url": "https://github.com/dominictarr"
    },
    {
      "name": "Max Ogden",
      "email": "max@maxogden.com",
      "url": "https://github.com/maxogden"
    },
    {
      "name": "Lars-Magnus Skog",
      "email": "ralphtheninja@riseup.net",
      "url": "https://github.com/ralphtheninja"
    },
    {
      "name": "David Björklund",
      "email": "david.bjorklund@gmail.com",
      "url": "https://github.com/kesla"
    },
    {
      "name": "Julian Gruber",
      "email": "julian@juliangruber.com",
      "url": "https://github.com/juliangruber"
    },
    {
      "name": "Paolo Fragomeni",
      "email": "paolo@async.ly",
      "url": "https://github.com/0x00a"
    },
    {
      "name": "Anton Whalley",
      "email": "anton.whalley@nearform.com",
      "url": "https://github.com/No9"
    },
    {
      "name": "Matteo Collina",
      "email": "matteo.collina@gmail.com",
      "url": "https://github.com/mcollina"
    },
    {
      "name": "Pedro Teixeira",
      "email": "pedro.teixeira@gmail.com",
      "url": "https://github.com/pgte"
    },
    {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "https://github.com/substack"
    },
    {
      "name": "Jarrett Cruger",
      "email": "jcrugzz@gmail.com",
      "url": "https://github.com/jcrugzz"
    }
  ],
  "dependencies": {
    "deferred-leveldown": "~1.2.1",
    "level-codec": "~6.1.0",
    "level-errors": "~1.0.3",
    "level-iterator-stream": "~1.3.0",
    "prr": "~1.0.1",
    "semver": "~5.1.0",
    "xtend": "~4.0.0"
  },
  "description": "Fast & simple storage - a Node.js-style LevelDB wrapper",
  "devDependencies": {
    "async": "~1.5.0",
    "bustermove": "~1.0.0",
    "delayed": "~1.0.1",
    "faucet": "~0.0.1",
    "leveldown": "^1.1.0",
    "memdown": "~1.1.0",
    "msgpack-js": "~0.3.0",
    "referee": "~1.2.0",
    "rimraf": "~2.4.3",
    "slow-stream": "0.0.4",
    "tap": "~2.3.1",
    "tape": "~4.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b321d3071f0e75c2dfaf2f0fe8864e5b9a387bc9",
    "tarball": "https://registry.npmjs.org/levelup/-/levelup-1.3.2.tgz"
  },
  "gitHead": "bcc242cfc4ec035f9228a5cd54903cb126659a00",
  "homepage": "https://github.com/level/levelup",
  "keywords": [
    "leveldb",
    "stream",
    "database",
    "db",
    "store",
    "storage",
    "json"
  ],
  "license": "MIT",
  "main": "lib/levelup.js",
  "maintainers": [
    {
      "name": "rvagg",
      "email": "rod@vagg.org"
    },
    {
      "name": "ralphtheninja",
      "email": "ralphtheninja@riseup.net"
    },
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    }
  ],
  "name": "levelup",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/level/levelup.git"
  },
  "scripts": {
    "test": "tape test/*-test.js | faucet"
  },
  "version": "1.3.2"
}

},{}],190:[function(require,module,exports){
(function (Buffer){
'use strict';exports.compare=function(c,d){if(Buffer.isBuffer(c)){var e=Math.min(c.length,d.length);for(var f=0;f<e;f++){var g=c[f]-d[f];if(g)return g}return c.length-d.length}return c<d?-1:c>d?1:0};function has(c,d){return Object.hasOwnProperty.call(c,d)}// to be compatible with the current abstract-leveldown tests
// nullish or empty strings.
// I could use !!val but I want to permit numbers and booleans,
// if possible.
function isDef(c){return null!=c&&''!==c}var lowerBound=exports.lowerBound=function(c){return isDef(c.gt)?c.gt:isDef(c.gte)?c.gte:isDef(c.min)?c.min:isDef(c.start)&&!c.reverse?c.start:isDef(c.end)&&c.reverse?c.end:void 0};exports.lowerBoundInclusive=function(c){return!isDef(c.gt)},exports.upperBoundInclusive=function(c){return!isDef(c.lt)};var lowerBoundExclusive=exports.lowerBoundExclusive=function(c){return!!isDef(c.gt)},upperBoundExclusive=exports.upperBoundExclusive=function(c){return!!isDef(c.lt)},upperBound=exports.upperBound=function(c){return isDef(c.lt)?c.lt:isDef(c.lte)?c.lte:isDef(c.max)?c.max:isDef(c.start)&&c.reverse?c.start:isDef(c.end)&&!c.reverse?c.end:void 0};exports.contains=function(c,d,e){e=e||exports.compare;var f=lowerBound(c);if(isDef(f)){var g=e(d,f);if(0>g||0===g&&lowerBoundExclusive(c))return!1}var h=upperBound(c);if(isDef(h)){var g=e(d,h);if(0<g||0===g&&upperBoundExclusive(c))return!1}return!0},exports.filter=function(c,d){return function(e){return exports.contains(c,e,d)}};

}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":161}],191:[function(require,module,exports){
(function (process,global,Buffer){
'use strict';var inherits=require('inherits'),AbstractLevelDOWN=require('abstract-leveldown').AbstractLevelDOWN,AbstractIterator=require('abstract-leveldown').AbstractIterator,ltgt=require('ltgt'),createRBT=require('functional-red-black-tree'),globalStore={},setImmediate=global.setImmediate||process.nextTick;/* istanbul ignore next */function gt(a){return 0<ltgt.compare(a,this._end)}function gte(a){return 0<=ltgt.compare(a,this._end)}function lt(a){return 0>ltgt.compare(a,this._end)}function lte(a){return 0>=ltgt.compare(a,this._end)}function MemIterator(a,b){AbstractIterator.call(this,a),this._limit=b.limit,-1===this._limit&&(this._limit=1/0);var c=a._store[a._location];this.keyAsBuffer=!1!==b.keyAsBuffer,this.valueAsBuffer=!1!==b.valueAsBuffer,this._reverse=b.reverse,this._options=b,this._done=0,this._reverse?(this._incr='prev',this._start=ltgt.upperBound(b),this._end=ltgt.lowerBound(b),this._tree='undefined'==typeof this._start?c.end:ltgt.upperBoundInclusive(b)?c.le(this._start):c.lt(this._start),this._end&&(ltgt.lowerBoundInclusive(b)?this._test=gte:this._test=gt)):(this._incr='next',this._start=ltgt.lowerBound(b),this._end=ltgt.upperBound(b),this._tree='undefined'==typeof this._start?c.begin:ltgt.lowerBoundInclusive(b)?c.ge(this._start):c.gt(this._start),this._end&&(ltgt.upperBoundInclusive(b)?this._test=lte:this._test=lt))}inherits(MemIterator,AbstractIterator),MemIterator.prototype._next=function(a){var b,c;return this._done++>=this._limit?setImmediate(a):this._tree.valid?(b=this._tree.key,c=this._tree.value,this._test(b)?void(this.keyAsBuffer&&(b=new Buffer(b)),this.valueAsBuffer&&(c=new Buffer(c)),this._tree[this._incr](),setImmediate(function(){a(null,b,c)})):setImmediate(a)):setImmediate(a)},MemIterator.prototype._test=function(){return!0};function MemDOWN(a){return this instanceof MemDOWN?void(AbstractLevelDOWN.call(this,'string'==typeof a?a:''),this._location=this.location?'$'+this.location:'_tree',this._store=this.location?globalStore:this,this._store[this._location]=this._store[this._location]||createRBT(ltgt.compare)):new MemDOWN(a)}MemDOWN.clearGlobalStore=function(a){a?Object.keys(globalStore).forEach(function(b){delete globalStore[b]}):globalStore={}},inherits(MemDOWN,AbstractLevelDOWN),MemDOWN.prototype._open=function(a,b){var c=this;setImmediate(function(){b(null,c)})},MemDOWN.prototype._put=function(a,b,c,d){('undefined'==typeof b||null===b)&&(b='');var e=this._store[this._location].find(a);this._store[this._location]=e.valid?e.update(b):this._store[this._location].insert(a,b),setImmediate(d)},MemDOWN.prototype._get=function(a,b,c){var d=this._store[this._location].get(a);return'undefined'==typeof d?setImmediate(function(){c(new Error('NotFound'))}):void(!1!==b.asBuffer&&!this._isBuffer(d)&&(d=new Buffer(d+'')),setImmediate(function(){c(null,d)}))},MemDOWN.prototype._del=function(a,b,c){this._store[this._location]=this._store[this._location].remove(a),setImmediate(c)},MemDOWN.prototype._batch=function(a,b,c){for(var e,f,g,d=-1,h=a.length,j=this._store[this._location];++d<h;)a[d]&&(e=this._isBuffer(a[d].key)?a[d].key:a[d].key+'',g=j.find(e),'put'===a[d].type?(f=this._isBuffer(a[d].value)?a[d].value:a[d].value+'',j=g.valid?g.update(f):j.insert(e,f)):j=g.remove());this._store[this._location]=j,setImmediate(c)},MemDOWN.prototype._iterator=function(a){return new MemIterator(this,a)},MemDOWN.prototype._isBuffer=function(a){return Buffer.isBuffer(a)},MemDOWN.destroy=function(a,b){var c='$'+a;c in globalStore&&delete globalStore[c],setImmediate(b)},module.exports=MemDOWN;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"_process":213,"abstract-leveldown":4,"buffer":62,"functional-red-black-tree":150,"inherits":160,"ltgt":190}],192:[function(require,module,exports){
'use strict';var assert=require('assert'),levelup=require('levelup'),memdown=require('memdown'),async=require('async'),rlp=require('rlp'),ethUtil=require('ethereumjs-util'),semaphore=require('semaphore'),TrieNode=require('./trieNode'),ReadStream=require('./readStream'),matchingNibbleLength=require('./util').matchingNibbleLength,doKeysMatch=require('./util').doKeysMatch,callTogether=require('./util').callTogether,asyncFirstSeries=require('./util').asyncFirstSeries;module.exports=Trie;/**
 * Use `require('merkel-patricia-tree')` for the base interface. In Ethereum applications stick with the Secure Trie Overlay `require('merkel-patricia-tree/secure')`. The API for the raw and the secure interface are about the same
 * @class Trie
 * @param {Object} [db] An instance of [levelup](https://github.com/rvagg/node-levelup/) or a compatible API. If the db is `null` or left undefined, then the trie will be stored in memory via [memdown](https://github.com/rvagg/memdown)
 * @param {Buffer|String} [root]` A hex `String` or `Buffer` for the root of a previously stored trie
 * @prop {Buffer} root The current root of the `trie`
 * @prop {Boolean} isCheckpoint  determines if you are saving to a checkpoint or directly to the db
 * @prop {Buffer} EMPTY_TRIE_ROOT the Root for an empty trie
 */function Trie(a,b){var c=this;this.EMPTY_TRIE_ROOT=ethUtil.SHA3_RLP,this.sem=semaphore(1),this.db=a||levelup('',{db:memdown}),this._getDBs=[this.db],this._putDBs=[this.db],Object.defineProperty(this,'root',{set:function set(d){d?(d=ethUtil.toBuffer(d),assert(32===d.length,'Invalid root length. Roots are 32 bytes')):d=c.EMPTY_TRIE_ROOT,this._root=d},get:function get(){return this._root}}),this.root=b}/**
 * Gets a value given a `key`
 * @method get
 * @param {Buffer|String} key - the key to search for
 * @param {Function} cb A callback `Function` which is given the arguments `err` - for errors that may have occured and `value` - the found value in a `Buffer` or if no value was found `null`
 */Trie.prototype.get=function(a,b){var c=this;a=ethUtil.toBuffer(a),c._findPath(a,function(d,e,f,g){var h=null;e&&0===f.length&&(h=e.value),b(d,h)})},Trie.prototype.put=function(a,b,c){var d=this;a=ethUtil.toBuffer(a),b=ethUtil.toBuffer(b),b&&''!==b.toString()?(c=callTogether(c,d.sem.leave),d.sem.take(function(){d.root.toString('hex')===ethUtil.SHA3_RLP.toString('hex')?d._createInitialNode(a,b,c):d._findPath(a,function(e,f,g,h){return e?c(e):void d._updateNode(a,b,g,h,c);// then update
})})):d.del(a,c)},Trie.prototype.del=function(a,b){var c=this;a=ethUtil.toBuffer(a),b=callTogether(b,c.sem.leave),c.sem.take(function(){c._findPath(a,function(d,e,f,g){return d?b(d):void(e?c._deleteNode(a,g,b):b())})})},Trie.prototype.getRaw=function(a,b){a=ethUtil.toBuffer(a),asyncFirstSeries(this._getDBs,function(d,e){d.get(a,{keyEncoding:'binary',valueEncoding:'binary'},function(f,g){f||!g?e(null,null):e(null,g)})},b)},Trie.prototype._lookupNode=function(a,b){TrieNode.isRawNode(a)?b(new TrieNode(a)):this.getRaw(a,function(c,d){if(c)throw c;d&&(d=new TrieNode(rlp.decode(d))),b(d)})},Trie.prototype._putRaw=function(a,b,c){async.each(this._putDBs,function(e,f){e.put(a,b,{keyEncoding:'binary',valueEncoding:'binary'},f)},c)},Trie.prototype.putRaw=Trie.prototype._putRaw,Trie.prototype.delRaw=function(a,b){async.each(this._putDBs,function(d,e){d.del(a,{keyEncoding:'binary'},e)},b)},Trie.prototype._putNode=function(a,b){var c=a.hash(),d=a.serialize();this._putRaw(c,d,b)},Trie.prototype._batchNodes=function(a,b){async.each(this._putDBs,function(d,e){d.batch(a,{keyEncoding:'binary',valueEncoding:'binary'},e)},b)},Trie.prototype._findPath=function(a,b){var c=this,d=c.root,e=[];a=TrieNode.stringToNibbles(a),this._walkTrie(d,function(g,h,j,k){var l=h.key||[],m=a.slice(matchingNibbleLength(j,a)),n=matchingNibbleLength(m,l);if(e.push(h),'branch'!==h.type)'leaf'===h.type?doKeysMatch(m,l)?k.return(null,h,[],e):k.return(null,null,m,e):'extention'===h.type&&(n===l.length?k.next():k.return(null,null,m,e));else if(0===m.length)k.return(null,h,[],e);else{var o=m[0],p=h.getValue(o);p?k.only(o):k.return(null,null,m,e)}},b)},Trie.prototype._findNode=function(a,b,c,d){this._findPath(a,function(){d.apply(null,arguments)})},Trie.prototype._findValueNodes=function(a,b){this._walkTrie(this.root,function(c,d,e,f){var g=e;d.key&&(g=e.concat(d.key)),'leaf'===d.type?a(c,d,g,f.next):'branch'===d.type&&d.value?a(c,d,g,f.next):f.next()},b)},Trie.prototype._findDbNodes=function(a,b){this._walkTrie(this.root,function(c,d,e,f){TrieNode.isRawNode(c)?f.next():a(c,d,e,f.next)},b)},Trie.prototype._updateNode=function(a,b,c,d,e){var f=[],g=d.pop();// add the new nodes
if(a=TrieNode.stringToNibbles(a),'branch'===g.type){if(d.push(g),0!==c){c.shift();// create a new leaf
var h=new TrieNode('leaf',c,b);d.push(h)}else g.value=b;}else if('leaf'===g.type&&0===c.length)g.value=b,d.push(g);else{// create a branch node
var j=g.key,k=matchingNibbleLength(j,c),l=new TrieNode('branch');// create a new extention node
if(0!==k){var m=g.key.slice(0,k),n=new TrieNode('extention',m,b);d.push(n),j.splice(0,k),c.splice(0,k)}if(d.push(l),0!==j.length){var o=j.shift();if(0!==j.length||'leaf'===g.type){g.key=j;var p=this._formatNode(g,!1,f);l.setValue(o,p)}else this._formatNode(g,!1,!0,f),l.setValue(o,g.value)}else l.value=g.value;if(0!==c.length){c.shift();// add a leaf node to the new branch node
var q=new TrieNode('leaf',c,b);d.push(q)}else l.value=b}this._saveStack(a,d,f,e)},Trie.prototype._walkTrie=function(a,b,c){function d(h,j,k,l){if(!j)return l();if(f)return l();var m=!1;k=k||[],b(h,j,k,{stop:function stop(){m=!0,l()},// end all traversal and return values to the onDone cb
return:function _return(){f=!0,g=arguments,l()},next:function next(){if(f)return l();if(m)return l();var n=j.getChildren();async.forEachOf(n,function(o,p,q){var r=o[0],s=o[1],t=k.concat(r);e._lookupNode(s,function(u){d(s,u,t,q)})},l)},only:function only(n){var o=j.getValue(n);e._lookupNode(o,function(p){var q=k.slice();q.push(n),d(o,p,q,l)})}})}var e=this;a=a||e.root,c=c||function(){};var f=!1,g=[];return a.toString('hex')===ethUtil.SHA3_RLP.toString('hex')?c():void e._lookupNode(a,function(h){d(a,h,null,function(j){return j?c(j):void c.apply(null,g)})})},Trie.prototype._saveStack=function(a,b,c,d){// update nodes
for(var e;b.length;){var f=b.pop();if('leaf'===f.type)a.splice(a.length-f.key.length);else if('extention'===f.type)a.splice(a.length-f.key.length),e&&(f.value=e);else if('branch'===f.type&&e){var g=a.pop();f.setValue(g,e)}e=this._formatNode(f,0===b.length,c)}e&&(this.root=e),this._batchNodes(c,d)},Trie.prototype._deleteNode=function(a,b,c){function d(n,o,p,q,r){// branchNode is the node ON the branch node not THE branch node
var s=p.key;if(!q||'branch'===q.type){if(q&&r.push(q),'branch'===p.type){// create an extention node
// branch->extention->branch
var t=new TrieNode('extention',[o],null);r.push(t),n.push(o)}else s.unshift(o),p.key=s,s.unshift(0),s.unshift(n.length),n.splice.apply(n,s);r.push(p)}else{// parent is a extention
var u=q.key;'branch'===p.type?(u.push(o),n.push(o),q.key=u,r.push(q)):(s.unshift(o),n=n.concat(s),u=u.concat(s),p.key=u),r.push(p)}return n}var e=b.pop(),f=b.pop(),g=[],h=this;if(Array.isArray(a)||(a=TrieNode.stringToNibbles(a)),!f)this.root=this.EMPTY_TRIE_ROOT,c();else{if('branch'===e.type)e.value=null;else{// the lastNode has to be a leaf if its not a branch. And a leaf's parent
// if it has one must be a branch.
var j=e.key;a.splice(a.length-j.length),this._formatNode(e,!1,!0,g),f.setValue(a.pop(),null),e=f,f=b.pop()}// nodes on the branch
var k=[];// count the number of nodes on the branch
// if there is only one branch node left, collapse the branch node
if(e.raw.forEach(function(n,o){var p=e.getValue(o);p&&k.push([o,p])}),1===k.length){// add the one remaing branch node to node above it
var l=k[0][1],m=k[0][0];this._lookupNode(l,function(n){a=d(a,m,n,f,b,g),h._saveStack(a,b,g,c)})}else f&&b.push(f),b.push(e),h._saveStack(a,b,g,c)}},Trie.prototype._createInitialNode=function(a,b,c){var d=new TrieNode('leaf',a,b);this.root=d.hash(),this._putNode(d,c)},Trie.prototype._formatNode=function(a,b,c,d){3===arguments.length&&(d=c,c=!1);var e=a.serialize();if(32<=e.length||b){var f=a.hash();return c&&this.isCheckpoint?d.push({type:'del',key:f}):d.push({type:'put',key:f,value:e}),f}return a.raw},Trie.prototype.createReadStream=function(){return new ReadStream(this)},Trie.prototype.copy=function(){return new Trie(this.db,this.root)},Trie.prototype.batch=function(a,b){var c=this;async.eachSeries(a,function(d,e){'put'===d.type?c.put(d.key,d.value,e):'del'===d.type?c.del(d.key,e):e()},b)},Trie.prototype.checkRoot=function(a,b){a=ethUtil.toBuffer(a),this._lookupNode(a,function(c){b(null,!!c)})};

},{"./readStream":195,"./trieNode":198,"./util":199,"assert":21,"async":25,"ethereumjs-util":120,"levelup":187,"memdown":191,"rlp":234,"semaphore":243}],193:[function(require,module,exports){
'use strict';var levelup=require('levelup'),memdown=require('memdown'),async=require('async'),inherits=require('util').inherits,Readable=require('readable-stream').Readable,levelws=require('level-ws'),callTogether=require('./util').callTogether;module.exports=checkpointInterface;function checkpointInterface(a){this._scratch=null,a._checkpoints=[],Object.defineProperty(a,'isCheckpoint',{get:function get(){return!!a._checkpoints.length}}),a.checkpoint=checkpoint,a.commit=commit,a.revert=revert,a._enterCpMode=_enterCpMode,a._exitCpMode=_exitCpMode,a.createScratchReadStream=createScratchReadStream,a.copy=copy.bind(a,a.copy.bind(a))}/**
 * Creates a checkpoint that can later be reverted to or committed. After this is called, no changes to the trie will be permanently saved until `commit` is called
 * @method checkpoint
 */function checkpoint(){var a=this,b=a.isCheckpoint;a._checkpoints.push(a.root),!b&&a.isCheckpoint&&a._enterCpMode()}/**
 * commits a checkpoint to disk
 * @method commit
 * @param {Function} cb the callback
 */function commit(a){var b=this;a=callTogether(a,b.sem.leave),b.sem.take(function(){if(b.isCheckpoint)b._checkpoints.pop(),b.isCheckpoint?a():b._exitCpMode(!0,a);else throw new Error('trying to commit when not checkpointed')})}/**
 * Reverts the trie to the state it was at when `checkpoint` was first called.
 * @method revert
 * @param {Function} cb the callback
 */function revert(a){var b=this;a=callTogether(a,b.sem.leave),b.sem.take(function(){return b.isCheckpoint&&(b.root=b._checkpoints.pop(),!b.isCheckpoint)?void b._exitCpMode(!1,a):void a()})}// enter into checkpoint mode
function _enterCpMode(){this._scratch=levelup('',{db:memdown}),this._getDBs.unshift(this._scratch),this.__putDBs=this._putDBs,this._putDBs=[this._scratch],this._putRaw=this.putRaw,this.putRaw=putRaw}// exit from checkpoint mode
function _exitCpMode(a,b){function c(f,g){f.createWriteStream||(f=levelws(f)),d.createScratchReadStream(e).pipe(f.createWriteStream()).on('close',g)}var d=this,e=this._scratch;this._scratch=null,this._getDBs.shift(),this._putDBs=this.__putDBs,this.putRaw=this._putRaw,a?async.map(this._putDBs,c,b):b()}// adds the interface when copying the trie
function copy(a){var b=a();// trie._checkpoints = this._checkpoints.slice()
return checkpointInterface(b),b._scratch=this._scratch,b}function putRaw(a,b,c){async.each(this.__putDBs,function(e,f){e.put(a,b,{keyEncoding:'binary',valueEncoding:'binary'},f)},c)}function createScratchReadStream(a){var b=this.copy();return a=a||this._scratch,b._getDBs=[a],b._scratch=a,new ScratchReadStream(b)}// ScratchReadStream
// this is used to minimally dump the scratch into the db
inherits(ScratchReadStream,Readable);function ScratchReadStream(a){this.trie=a,this.next=null,Readable.call(this,{objectMode:!0})}ScratchReadStream.prototype._read=function(){var a=this;a._started||(a._started=!0,a.trie._findDbNodes(function(b,c,d,e){a.push({key:b,value:c.serialize()}),e()},function(){a.push(null)}))};

},{"./util":199,"async":25,"level-ws":176,"levelup":187,"memdown":191,"readable-stream":230,"util":259}],194:[function(require,module,exports){
'use strict';var BaseTrie=require('./baseTrie'),checkpointInterface=require('./checkpoint-interface'),inherits=require('util').inherits;module.exports=CheckpointTrie,inherits(CheckpointTrie,BaseTrie);function CheckpointTrie(){BaseTrie.apply(this,arguments),checkpointInterface(this)}

},{"./baseTrie":192,"./checkpoint-interface":193,"util":259}],195:[function(require,module,exports){
'use strict';var Readable=require('readable-stream').Readable,TrieNode=require('./trieNode'),util=require('util');module.exports=TrieReadStream;function TrieReadStream(a){this.trie=a,this.next=null,Readable.call(this,{objectMode:!0})}util.inherits(TrieReadStream,Readable),TrieReadStream.prototype._read=function(){var a=this;a._started||(a._started=!0,a.trie._findValueNodes(function(b,c,d,e){a.push({key:TrieNode.nibblesToBuffer(d),value:c.value}),e()},function(){a.push(null)}))};

},{"./trieNode":198,"readable-stream":230,"util":259}],196:[function(require,module,exports){
'use strict';var ethUtil=require('ethereumjs-util');module.exports=secureInterface;function secureInterface(a){a.copy=copy.bind(a,a.copy.bind(a)),a.get=get.bind(a,a.get.bind(a)),a.put=put.bind(a,a.put.bind(a)),a.del=del.bind(a,a.del.bind(a))}// adds the interface when copying the trie
function copy(a){var b=a();return secureInterface(b),b}function get(a,b,c){var d=ethUtil.sha3(b);a(d,c)}// for a falsey value, use the original key
// to avoid double hashing the key
function put(a,b,c,d){if(!c)this.del(b,d);else{var e=ethUtil.sha3(b);a(e,c,d)}}function del(a,b,c){var d=ethUtil.sha3(b);a(d,c)}

},{"ethereumjs-util":120}],197:[function(require,module,exports){
'use strict';var CheckpointTrie=require('./index'),secureInterface=require('./secure-interface'),inherits=require('util').inherits;module.exports=SecureTrie,inherits(SecureTrie,CheckpointTrie);/**
 * You can create a secure Trie where the keys are automatically hashed using **SHA3** by using `require('merkle-patricia-tree/secure')`. It has the same methods and constuctor as `Trie`
 * @class SecureTrie
 * @extends Trie
 */function SecureTrie(){CheckpointTrie.apply(this,arguments),secureInterface(this)}

},{"./index":194,"./secure-interface":196,"util":259}],198:[function(require,module,exports){
(function (Buffer){
'use strict';var rlp=require('rlp'),ethUtil=require('ethereumjs-util');module.exports=TrieNode;function TrieNode(a,b,c){if(Array.isArray(a))this.parseNode(a);else if(this.type=a,'branch'===a){var d=b;this.raw=Array.apply(null,Array(17)),d&&d.forEach(function(e){this.set.apply(this,e)})}else this.raw=[,,],this.setValue(c),this.setKey(b)}TrieNode.isRawNode=isRawNode,TrieNode.addHexPrefix=addHexPrefix,TrieNode.removeHexPrefix=removeHexPrefix,TrieNode.isTerminator=isTerminator,TrieNode.stringToNibbles=stringToNibbles,TrieNode.nibblesToBuffer=nibblesToBuffer,TrieNode.getNodeType=getNodeType,Object.defineProperty(TrieNode.prototype,'value',{get:function get(){return this.getValue()},set:function set(a){this.setValue(a)}}),Object.defineProperty(TrieNode.prototype,'key',{get:function get(){return this.getKey()},set:function set(a){this.setKey(a)}}),TrieNode.prototype.parseNode=function(a){this.raw=a,this.type=getNodeType(a)},TrieNode.prototype.setValue=function(a,b){'branch'===this.type?(1===arguments.length&&(b=a,a=16),this.raw[a]=b):this.raw[1]=a},TrieNode.prototype.getValue=function(a){if('branch'===this.type){0===arguments.length&&(a=16);var b=this.raw[a];if(null!==b&&b!==void 0&&0!==b.length)return b}else return this.raw[1]},TrieNode.prototype.setKey=function(a){'branch'!==this.type&&(a=Buffer.isBuffer(a)?stringToNibbles(a):a.slice(0),a=addHexPrefix(a,'leaf'===this.type),this.raw[0]=nibblesToBuffer(a))},TrieNode.prototype.getKey=function(){if('branch'!==this.type){var a=this.raw[0];return a=removeHexPrefix(stringToNibbles(a)),a}},TrieNode.prototype.serialize=function(){return rlp.encode(this.raw)},TrieNode.prototype.hash=function(){return ethUtil.sha3(this.serialize())},TrieNode.prototype.toString=function(){var a=this.type;return a+=': [',this.raw.forEach(function(b){a+=Buffer.isBuffer(b)?b.toString('hex')+', ':b?'object, ':'empty, '}),a=a.slice(0,-2),a+=']',a},TrieNode.prototype.getChildren=function(){var a=[];switch(this.type){case'leaf':// no children
break;case'extention':a.push([this.key,this.getValue()]);break;case'branch':for(var b=0;16>b;b++){var c=this.getValue(b);c&&a.push([[b],c])}}return a};/**
 * @param {Array} dataArr
 * @returns {Buffer} - returns buffer of encoded data
 * hexPrefix
 **/function addHexPrefix(a,b){return a.length%2?a.unshift(1):(a.unshift(0),a.unshift(0)),b&&(a[0]+=2),a}function removeHexPrefix(a){return a=a[0]%2?a.slice(1):a.slice(2),a}/*
 * Detrimines if a key has Arnold Schwarzenegger in it.
 * @method isTerminator
 * @param {Array} key - an hexprefixed array of nibbles
 */function isTerminator(a){return 1<a[0]}/*
 * Converts a string OR a buffer to a nibble array
 * @method stringToNibbles
 * @param {Buffer| String} key
 */function stringToNibbles(a){var b=new Buffer(a),c=[];for(var d=0;d<b.length;d++){var e=2*d;c[e]=b[d]>>4,++e,c[e]=b[d]%16}return c}/*
 * Converts a  nibble array into a buffer
 * @method nibblesToBuffer
 * @param arr
 */function nibblesToBuffer(a){var b=new Buffer(a.length/2);for(var c=0;c<b.length;c++){var d=2*c;b[c]=(a[d]<<4)+a[++d]}return b}/*
 * Determines the node type
 * Returns the following
 * - leaf - if teh node is a leaf
 * - branch - if the node is a branch
 * - extention - if the node is an extention
 * - unknown - if somehting fucked up
 */function getNodeType(a){if(17===a.length)return'branch';if(2===a.length){var b=stringToNibbles(a[0]);return isTerminator(b)?'leaf':'extention'}}function isRawNode(a){return Array.isArray(a)&&!Buffer.isBuffer(a)}

}).call(this,require("buffer").Buffer)
},{"buffer":62,"ethereumjs-util":120,"rlp":234}],199:[function(require,module,exports){
(function (process){
'use strict';var async=require('async');module.exports={matchingNibbleLength:matchingNibbleLength,callTogether:callTogether,asyncFirstSeries:asyncFirstSeries,doKeysMatch:doKeysMatch};/**
 * Returns the number of in order matching nibbles of two give nibble arrayes
 * @method matchingNibbleLength
 * @param {Array} nib1
 * @param {Array} nib2
 */function matchingNibbleLength(a,b){for(var c=0;a[c]===b[c]&&a.length>c;)c++;return c}/**
 * Compare two 'nibble array' keys
 */function doKeysMatch(a,b){var c=matchingNibbleLength(a,b);return c===a.length&&c===b.length}/**
 * Take two or more functions and returns a function  that will execute all of
 * the given functions
 */function callTogether(){var a=arguments,b=a.length,c=b;return b?function(){for(b=c;b--;){var d=a[b];if('function'==typeof d)var e=a[b].apply(this,arguments)}return e}:function(){}}/**
 * Take a collection of async fns, call the cb on the first to return a truthy value.
 * If all run without a truthy result, return undefined
 */function asyncFirstSeries(a,b,c){var d=!1;async.eachSeries(a,function(e,f){return d?f:void b(e,function(g,h){h&&(d=!0,process.nextTick(c.bind(null,null,h))),f(g)})},function(){d||c()})}

}).call(this,require('_process'))
},{"_process":213,"async":25}],200:[function(require,module,exports){
'use strict';var bn=require('bn.js'),brorand=require('brorand');function MillerRabin(b){this.rand=b||new brorand.Rand}module.exports=MillerRabin,MillerRabin.create=function(c){return new MillerRabin(c)},MillerRabin.prototype._rand=function(c){var e=c.bitLength(),f=this.rand.generate(Math.ceil(e/8));f[0]|=3;// Mask high bits
var h=7&e;return 0!=h&&(f[f.length-1]>>=7-h),new bn(f)},MillerRabin.prototype.test=function(c,e,f){var h=c.bitLength(),j=bn.mont(c),l=new bn(1).toRed(j);e||(e=Math.max(1,0|h/48));// Find d and s, (n - 1) = (2 ^ s) * d;
var m=c.subn(1),o=m.subn(1);for(var p=0;!m.testn(p);p++);for(var q=c.shrn(p),r=m.toRed(j);0<e;e--){var t=this._rand(o);f&&f(t);var u=t.toRed(j).redPow(q);if(0!==u.cmp(l)&&0!==u.cmp(r)){for(var v=1;v<p;v++){if(u=u.redSqr(),0===u.cmp(l))return!1;if(0===u.cmp(r))break}if(v===p)return!1}}return!0},MillerRabin.prototype.getDivisor=function(c,e){var f=c.bitLength(),h=bn.mont(c),j=new bn(1).toRed(h);e||(e=Math.max(1,0|f/48));// Find d and s, (n - 1) = (2 ^ s) * d;
var l=c.subn(1),m=l.subn(1);for(var o=0;!l.testn(o);o++);for(var p=c.shrn(o),q=l.toRed(h);0<e;e--){var r=this._rand(m),t=c.gcd(r);if(0!==t.cmpn(1))return t;var u=r.toRed(h).redPow(p);if(0!==u.cmp(j)&&0!==u.cmp(q)){for(var v=1;v<o;v++){if(u=u.redSqr(),0===u.cmp(j))return u.fromRed().subn(1).gcd(c);if(0===u.cmp(q))break}if(v===o)return u=u.redSqr(),u.fromRed().subn(1).gcd(c)}}return!1};

},{"bn.js":30,"brorand":31}],201:[function(require,module,exports){
'use strict';module.exports=assert;function assert(a,b){if(!a)throw new Error(b||'Assertion failed')}assert.equal=function(b,c,d){if(b!=c)throw new Error(d||'Assertion failed: '+b+' != '+c)};

},{}],202:[function(require,module,exports){
'use strict';var hasOwn=Object.prototype.hasOwnProperty,toString=Object.prototype.toString,isFunction=function isFunction(a){var b='function'==typeof a&&!(a instanceof RegExp)||'[object Function]'===toString.call(a);return b||'undefined'==typeof window||(b=a===window.setTimeout||a===window.alert||a===window.confirm||a===window.prompt),b};module.exports=function(b,c){if(!isFunction(c))throw new TypeError('iterator must be a function');var d,e,f='string'==typeof b,g=b.length,h=2<arguments.length?arguments[2]:null;if(g===+g)for(d=0;d<g;d++)null===h?c(f?b.charAt(d):b[d],d,b):c.call(h,f?b.charAt(d):b[d],d,b);else for(e in b)hasOwn.call(b,e)&&(null===h?c(b[e],e,b):c.call(h,b[e],e,b))};

},{}],203:[function(require,module,exports){
'use strict';module.exports=Object.keys||require('./shim');

},{"./shim":205}],204:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},toString=Object.prototype.toString;module.exports=function(b){var c=toString.call(b),a='[object Arguments]'===c;return a||(a='[object Array]'!==c&&null!==b&&'object'==('undefined'==typeof b?'undefined':_typeof(b))&&'number'==typeof b.length&&0<=b.length&&'[object Function]'===toString.call(b.callee)),a};

},{}],205:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};(function(){'use strict';// modified from https://github.com/kriskowal/es5-shim
var h,a=Object.prototype.hasOwnProperty,b=Object.prototype.toString,c=require('./foreach'),d=require('./isArguments'),e=!{toString:null}.propertyIsEnumerable('toString'),f=function(){}.propertyIsEnumerable('prototype'),g=['toString','toLocaleString','valueOf','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','constructor'];h=function h(j){var k='[object Function]'===b.call(j),l=d(j),m=[];if((null===j||'object'!=('undefined'==typeof j?'undefined':_typeof(j)))&&!k&&!l)throw new TypeError('Object.keys called on a non-object');if(l)c(j,function(q){m.push(q)});else for(var n in j)!(f&&k&&'prototype'===n)&&a.call(j,n)&&m.push(n);if(e){var o=j.constructor,p=o&&o.prototype===j;c(g,function(q){!(p&&'constructor'===q)&&a.call(j,q)&&m.push(q)})}return m},module.exports=h})();

},{"./foreach":202,"./isArguments":204}],206:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],207:[function(require,module,exports){
'use strict';// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
var asn1=require('asn1.js'),RSAPrivateKey=asn1.define('RSAPrivateKey',function(){this.seq().obj(this.key('version').int(),this.key('modulus').int(),this.key('publicExponent').int(),this.key('privateExponent').int(),this.key('prime1').int(),this.key('prime2').int(),this.key('exponent1').int(),this.key('exponent2').int(),this.key('coefficient').int())});exports.RSAPrivateKey=RSAPrivateKey;var RSAPublicKey=asn1.define('RSAPublicKey',function(){this.seq().obj(this.key('modulus').int(),this.key('publicExponent').int())});exports.RSAPublicKey=RSAPublicKey;var PublicKey=asn1.define('SubjectPublicKeyInfo',function(){this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier),this.key('subjectPublicKey').bitstr())});exports.PublicKey=PublicKey;var AlgorithmIdentifier=asn1.define('AlgorithmIdentifier',function(){this.seq().obj(this.key('algorithm').objid(),this.key('none').null_().optional(),this.key('curve').objid().optional(),this.key('params').seq().obj(this.key('p').int(),this.key('q').int(),this.key('g').int()).optional())}),PrivateKeyInfo=asn1.define('PrivateKeyInfo',function(){this.seq().obj(this.key('version').int(),this.key('algorithm').use(AlgorithmIdentifier),this.key('subjectPrivateKey').octstr())});exports.PrivateKey=PrivateKeyInfo;var EncryptedPrivateKeyInfo=asn1.define('EncryptedPrivateKeyInfo',function(){this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(),this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(),this.key('kdeparams').seq().obj(this.key('salt').octstr(),this.key('iters').int())),this.key('cipher').seq().obj(this.key('algo').objid(),this.key('iv').octstr()))),this.key('subjectPrivateKey').octstr())});exports.EncryptedPrivateKey=EncryptedPrivateKeyInfo;var DSAPrivateKey=asn1.define('DSAPrivateKey',function(){this.seq().obj(this.key('version').int(),this.key('p').int(),this.key('q').int(),this.key('g').int(),this.key('pub_key').int(),this.key('priv_key').int())});exports.DSAPrivateKey=DSAPrivateKey,exports.DSAparam=asn1.define('DSAparam',function(){this.int()});var ECPrivateKey=asn1.define('ECPrivateKey',function(){this.seq().obj(this.key('version').int(),this.key('privateKey').octstr(),this.key('parameters').optional().explicit(0).use(ECParameters),this.key('publicKey').optional().explicit(1).bitstr())});exports.ECPrivateKey=ECPrivateKey;var ECParameters=asn1.define('ECParameters',function(){this.choice({namedCurve:this.objid()})});exports.signature=asn1.define('signature',function(){this.seq().obj(this.key('r').int(),this.key('s').int())});

},{"asn1.js":7}],208:[function(require,module,exports){
(function (Buffer){
'use strict';// adapted from https://github.com/apatil/pemstrip
var findProc=/Proc-Type: 4,ENCRYPTED\r?\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\r?\n\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n/m,startRegex=/^-----BEGIN (.*) KEY-----\r?\n/m,fullRegex=/^-----BEGIN (.*) KEY-----\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n-----END \1 KEY-----$/m,evp=require('evp_bytestokey'),ciphers=require('browserify-aes');module.exports=function(a,b){var c=a.toString(),d=c.match(findProc),e;if(!d){var f=c.match(fullRegex);e=new Buffer(f[2].replace(/\r?\n/g,''),'base64')}else{var g='aes'+d[1],h=new Buffer(d[2],'hex'),i=new Buffer(d[3].replace(/\r?\n/g,''),'base64'),j=evp(b,h.slice(0,8),parseInt(d[1],10)).key,k=[],l=ciphers.createDecipheriv(g,j,h);k.push(l.update(i)),k.push(l.final()),e=Buffer.concat(k)}var m=c.match(startRegex)[1]+' KEY';return{tag:m,data:e}};

}).call(this,require("buffer").Buffer)
},{"browserify-aes":35,"buffer":62,"evp_bytestokey":149}],209:[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},asn1=require('./asn1'),aesid=require('./aesid.json'),fixProc=require('./fixProc'),ciphers=require('browserify-aes'),compat=require('pbkdf2');module.exports=parseKeys;function parseKeys(a){var b;'object'!=('undefined'==typeof a?'undefined':_typeof(a))||Buffer.isBuffer(a)||(b=a.passphrase,a=a.key),'string'==typeof a&&(a=new Buffer(a));var c=fixProc(a,b),d=c.tag,e=c.data,f,g;switch(d){case'PUBLIC KEY':switch(g=asn1.PublicKey.decode(e,'der'),f=g.algorithm.algorithm.join('.'),f){case'1.2.840.113549.1.1.1':return asn1.RSAPublicKey.decode(g.subjectPublicKey.data,'der');case'1.2.840.10045.2.1':return g.subjectPrivateKey=g.subjectPublicKey,{type:'ec',data:g};case'1.2.840.10040.4.1':return g.algorithm.params.pub_key=asn1.DSAparam.decode(g.subjectPublicKey.data,'der'),{type:'dsa',data:g.algorithm.params};default:throw new Error('unknown key id '+f);}throw new Error('unknown key type '+d);case'ENCRYPTED PRIVATE KEY':e=asn1.EncryptedPrivateKey.decode(e,'der'),e=decrypt(e,b);// falls through
case'PRIVATE KEY':switch(g=asn1.PrivateKey.decode(e,'der'),f=g.algorithm.algorithm.join('.'),f){case'1.2.840.113549.1.1.1':return asn1.RSAPrivateKey.decode(g.subjectPrivateKey,'der');case'1.2.840.10045.2.1':return{curve:g.algorithm.curve,privateKey:asn1.ECPrivateKey.decode(g.subjectPrivateKey,'der').privateKey};case'1.2.840.10040.4.1':return g.algorithm.params.priv_key=asn1.DSAparam.decode(g.subjectPrivateKey,'der'),{type:'dsa',params:g.algorithm.params};default:throw new Error('unknown key id '+f);}throw new Error('unknown key type '+d);case'RSA PUBLIC KEY':return asn1.RSAPublicKey.decode(e,'der');case'RSA PRIVATE KEY':return asn1.RSAPrivateKey.decode(e,'der');case'DSA PRIVATE KEY':return{type:'dsa',params:asn1.DSAPrivateKey.decode(e,'der')};case'EC PRIVATE KEY':return e=asn1.ECPrivateKey.decode(e,'der'),{curve:e.parameters.value,privateKey:e.privateKey};default:throw new Error('unknown key type '+d);}}parseKeys.signature=asn1.signature;function decrypt(a,b){var c=a.algorithm.decrypt.kde.kdeparams.salt,d=parseInt(a.algorithm.decrypt.kde.kdeparams.iters.toString(),10),e=aesid[a.algorithm.decrypt.cipher.algo.join('.')],f=a.algorithm.decrypt.cipher.iv,g=a.subjectPrivateKey,h=parseInt(e.split('-')[1],10)/8,i=compat.pbkdf2Sync(b,c,d,h),j=ciphers.createDecipheriv(e,i,f),k=[];return k.push(j.update(g)),k.push(j.final()),Buffer.concat(k)}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":206,"./asn1":207,"./fixProc":208,"browserify-aes":35,"buffer":62,"pbkdf2":210}],210:[function(require,module,exports){
(function (process,Buffer){
'use strict';var createHmac=require('create-hmac'),checkParameters=require('./precondition');exports.pbkdf2=function(a,b,c,d,e,f){if('function'==typeof e&&(f=e,e=void 0),checkParameters(c,d),'function'!=typeof f)throw new Error('No callback provided to pbkdf2');setTimeout(function(){f(null,exports.pbkdf2Sync(a,b,c,d,e))})};var defaultEncoding;if(process.browser)defaultEncoding='utf-8';else{var pVersionMajor=parseInt(process.version.split('.')[0].slice(1),10);defaultEncoding=6<=pVersionMajor?'utf-8':'binary'}exports.pbkdf2Sync=function(a,b,c,d,e){Buffer.isBuffer(a)||(a=new Buffer(a,defaultEncoding)),Buffer.isBuffer(b)||(b=new Buffer(b,defaultEncoding)),checkParameters(c,d),e=e||'sha1';var f,g=1,h=new Buffer(d),m=new Buffer(b.length+4);b.copy(m,0,0,b.length);var n,o;for(var p=1;p<=g;p++){m.writeUInt32BE(p,b.length);var q=createHmac(e,a).update(m).digest();f||(f=q.length,o=new Buffer(f),g=Math.ceil(d/f),n=d-(g-1)*f),q.copy(o,0,0,f);for(var s=1;s<c;s++){q=createHmac(e,a).update(q).digest();for(var t=0;t<f;t++)o[t]^=q[t]}var u=(p-1)*f,v=p===g?n:f;o.copy(h,u,0,v)}return h};

}).call(this,require('_process'),require("buffer").Buffer)
},{"./precondition":211,"_process":213,"buffer":62,"create-hmac":71}],211:[function(require,module,exports){
'use strict';var MAX_ALLOC=Math.pow(2,30)-1;// default in iojs
module.exports=function(a,b){if('number'!=typeof a)throw new TypeError('Iterations not a number');if(0>a)throw new TypeError('Bad iterations');if('number'!=typeof b)throw new TypeError('Key length not a number');if(0>b||b>MAX_ALLOC||b!==b)/* eslint no-self-compare: 0 */throw new TypeError('Bad key length')};

},{}],212:[function(require,module,exports){
(function (process){
'use strict';module.exports=process.version&&0!==process.version.indexOf('v0.')&&(0!==process.version.indexOf('v1.')||0===process.version.indexOf('v1.8.'))?process.nextTick:nextTick;function nextTick(a,b,c,d){if('function'!=typeof a)throw new TypeError('"callback" argument must be a function');var e=arguments.length,f,g;switch(e){case 0:case 1:return process.nextTick(a);case 2:return process.nextTick(function(){a.call(null,b)});case 3:return process.nextTick(function(){a.call(null,b,c)});case 4:return process.nextTick(function(){a.call(null,b,c,d)});default:for(f=Array(e-1),g=0;g<f.length;)f[g++]=arguments[g];return process.nextTick(function(){a.apply(null,f)});}}

}).call(this,require('_process'))
},{"_process":213}],213:[function(require,module,exports){
'use strict';// shim for using process in browser
var process=module.exports={},cachedSetTimeout,cachedClearTimeout;// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
function defaultSetTimout(){throw new Error('setTimeout has not been defined')}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined')}(function(){try{cachedSetTimeout='function'==typeof setTimeout?setTimeout:defaultSetTimout}catch(a){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout='function'==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(a){cachedClearTimeout=defaultClearTimeout}})();function runTimeout(a){if(cachedSetTimeout===setTimeout)//normal enviroments in sane situations
return setTimeout(a,0);// if setTimeout wasn't available but was latter defined
if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(a,0);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedSetTimeout(a,0)}catch(b){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return cachedSetTimeout.call(null,a,0)}catch(c){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return cachedSetTimeout.call(this,a,0)}}}function runClearTimeout(a){if(cachedClearTimeout===clearTimeout)//normal enviroments in sane situations
return clearTimeout(a);// if clearTimeout wasn't available but was latter defined
if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(a);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedClearTimeout(a)}catch(b){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return cachedClearTimeout.call(null,a)}catch(c){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return cachedClearTimeout.call(this,a)}}}var queue=[],draining=!1,currentQueue,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var a=runTimeout(cleanUpNextTick);draining=!0;for(var b=queue.length;b;){for(currentQueue=queue,queue=[];++queueIndex<b;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,b=queue.length}currentQueue=null,draining=!1,runClearTimeout(a)}}process.nextTick=function(a){var b=Array(arguments.length-1);if(1<arguments.length)for(var c=1;c<arguments.length;c++)b[c-1]=arguments[c];queue.push(new Item(a,b)),1!==queue.length||draining||runTimeout(drainQueue)};// v8 likes predictible objects
function Item(a,b){this.fun=a,this.array=b}Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title='browser',process.browser=!0,process.env={},process.argv=[],process.version='',process.versions={};function noop(){}process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(a){throw new Error('process.binding is not supported')},process.cwd=function(){return'/'},process.chdir=function(a){throw new Error('process.chdir is not supported')},process.umask=function(){return 0};

},{}],214:[function(require,module,exports){
arguments[4][104][0].apply(exports,arguments)
},{"dup":104}],215:[function(require,module,exports){
'use strict';exports.publicEncrypt=require('./publicEncrypt'),exports.privateDecrypt=require('./privateDecrypt'),exports.privateEncrypt=function(b,c){return exports.publicEncrypt(b,c,!0)},exports.publicDecrypt=function(b,c){return exports.privateDecrypt(b,c,!0)};

},{"./privateDecrypt":217,"./publicEncrypt":218}],216:[function(require,module,exports){
(function (Buffer){
'use strict';var createHash=require('create-hash');module.exports=function(a,b){for(var f,d=new Buffer(''),e=0;d.length<b;)f=i2ops(e++),d=Buffer.concat([d,createHash('sha1').update(a).update(f).digest()]);return d.slice(0,b)};function i2ops(a){var b=new Buffer(4);return b.writeUInt32BE(a,0),b}

}).call(this,require("buffer").Buffer)
},{"buffer":62,"create-hash":68}],217:[function(require,module,exports){
(function (Buffer){
'use strict';var parseKeys=require('parse-asn1'),mgf=require('./mgf'),xor=require('./xor'),bn=require('bn.js'),crt=require('browserify-rsa'),createHash=require('create-hash'),withPublic=require('./withPublic');module.exports=function(d,e,f){var g;g=d.padding?d.padding:f?1:4;var h=parseKeys(d),j=h.modulus.byteLength();if(e.length>j||0<=new bn(e).cmp(h.modulus))throw new Error('decryption error');var l;l=f?withPublic(new bn(e),h):crt(e,h);var m=new Buffer(j-l.length);if(m.fill(0),l=Buffer.concat([m,l],j),4===g)return oaep(h,l);if(1===g)return pkcs1(h,l,f);if(3===g)return l;throw new Error('unknown padding')};function oaep(c,d){c.modulus;var e=c.modulus.byteLength();d.length;var f=createHash('sha1').update(new Buffer('')).digest(),g=f.length;if(0!==d[0])throw new Error('decryption error');var h=d.slice(1,g+1),j=d.slice(g+1),l=xor(h,mgf(j,g)),m=xor(j,mgf(l,e-g-1));if(compare(f,m.slice(0,g)))throw new Error('decryption error');for(var o=g;0===m[o];)o++;if(1!==m[o++])throw new Error('decryption error');return m.slice(o)}function pkcs1(c,d,e){for(var f=d.slice(0,2),g=2,h=0;0!==d[g++];)if(g>=d.length){h++;break}var j=d.slice(2,g-1);if(d.slice(g-1,g),('0002'!==f.toString('hex')&&!e||'0001'!==f.toString('hex')&&e)&&h++,8>j.length&&h++,h)throw new Error('decryption error');return d.slice(g)}function compare(c,d){c=new Buffer(c),d=new Buffer(d);var e=0,f=c.length;c.length!==d.length&&(e++,f=Math.min(c.length,d.length));for(var g=-1;++g<f;)e+=c[g]^d[g];return e}

}).call(this,require("buffer").Buffer)
},{"./mgf":216,"./withPublic":219,"./xor":220,"bn.js":30,"browserify-rsa":51,"buffer":62,"create-hash":68,"parse-asn1":209}],218:[function(require,module,exports){
(function (Buffer){
'use strict';var parseKeys=require('parse-asn1'),randomBytes=require('randombytes'),createHash=require('create-hash'),mgf=require('./mgf'),xor=require('./xor'),bn=require('bn.js'),withPublic=require('./withPublic'),crt=require('browserify-rsa'),constants={RSA_PKCS1_OAEP_PADDING:4,RSA_PKCS1_PADDIN:1,RSA_NO_PADDING:3};module.exports=function(b,c,d){var e;e=b.padding?b.padding:d?1:4;var f=parseKeys(b),g;if(4===e)g=oaep(f,c);else if(1===e)g=pkcs1(f,c,d);else if(3!==e)throw new Error('unknown padding');else if(g=new bn(c),0<=g.cmp(f.modulus))throw new Error('data too long for modulus');return d?crt(g,f):withPublic(g,f)};function oaep(a,b){var c=a.modulus.byteLength(),d=b.length,e=createHash('sha1').update(new Buffer('')).digest(),f=e.length,g=2*f;if(d>c-g-2)throw new Error('message too long');var h=new Buffer(c-d-g-2);h.fill(0);var j=c-f-1,l=randomBytes(f),m=xor(Buffer.concat([e,h,new Buffer([1]),b],j),mgf(l,j)),n=xor(l,mgf(m,f));return new bn(Buffer.concat([new Buffer([0]),n,m],c))}function pkcs1(a,b,c){var d=b.length,e=a.modulus.byteLength();if(d>e-11)throw new Error('message too long');var f;return c?(f=new Buffer(e-d-3),f.fill(255)):f=nonZero(e-d-3),new bn(Buffer.concat([new Buffer([0,c?1:2]),f,new Buffer([0]),b],e))}function nonZero(a,b){for(var g,c=new Buffer(a),d=0,e=randomBytes(2*a),f=0;d<a;)f===e.length&&(e=randomBytes(2*a),f=0),g=e[f++],g&&(c[d++]=g);return c}

}).call(this,require("buffer").Buffer)
},{"./mgf":216,"./withPublic":219,"./xor":220,"bn.js":30,"browserify-rsa":51,"buffer":62,"create-hash":68,"parse-asn1":209,"randombytes":221}],219:[function(require,module,exports){
(function (Buffer){
'use strict';var bn=require('bn.js');function withPublic(a,b){return new Buffer(a.toRed(bn.mont(b.modulus)).redPow(new bn(b.publicExponent)).fromRed().toArray())}module.exports=withPublic;

}).call(this,require("buffer").Buffer)
},{"bn.js":30,"buffer":62}],220:[function(require,module,exports){
"use strict";module.exports=function(d,e){for(var f=d.length,g=-1;++g<f;)d[g]^=e[g];return d};

},{}],221:[function(require,module,exports){
(function (process,global,Buffer){
'use strict';function oldBrowser(){throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')}var crypto=global.crypto||global.msCrypto;module.exports=crypto&&crypto.getRandomValues?randomBytes:oldBrowser;function randomBytes(a,b){// phantomjs needs to throw
if(65536<a)throw new Error('requested too many random bytes');// in case browserify  isn't using the Uint8Array version
var c=new global.Uint8Array(a);// This will not work in older browsers.
// See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
0<a&&crypto.getRandomValues(c);// phantomjs doesn't like a buffer being passed here
var d=new Buffer(c.buffer);return'function'==typeof b?process.nextTick(function(){b(null,d)}):d}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"_process":213,"buffer":62}],222:[function(require,module,exports){
"use strict";module.exports=require("./lib/_stream_duplex.js");

},{"./lib/_stream_duplex.js":223}],223:[function(require,module,exports){
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';/*<replacement>*/var objectKeys=Object.keys||function(a){var b=[];for(var c in a)b.push(c);return b};/*</replacement>*/module.exports=Duplex;/*<replacement>*/var processNextTick=require('process-nextick-args'),util=require('core-util-is');/*</replacement>*//*<replacement>*/util.inherits=require('inherits');/*</replacement>*/var Readable=require('./_stream_readable'),Writable=require('./_stream_writable');util.inherits(Duplex,Readable);var keys=objectKeys(Writable.prototype);for(var v=0;v<keys.length;v++){var method=keys[v];Duplex.prototype[method]||(Duplex.prototype[method]=Writable.prototype[method])}function Duplex(a){return this instanceof Duplex?void(Readable.call(this,a),Writable.call(this,a),a&&!1===a.readable&&(this.readable=!1),a&&!1===a.writable&&(this.writable=!1),this.allowHalfOpen=!0,a&&!1===a.allowHalfOpen&&(this.allowHalfOpen=!1),this.once('end',onend)):new Duplex(a)}// the no-half-open enforcer
function onend(){this.allowHalfOpen||this._writableState.ended||processNextTick(onEndNT,this)}function onEndNT(a){a.end()}function forEach(a,b){for(var c=0,d=a.length;c<d;c++)b(a[c],c)}

},{"./_stream_readable":225,"./_stream_writable":227,"core-util-is":66,"inherits":160,"process-nextick-args":212}],224:[function(require,module,exports){
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';module.exports=PassThrough;var Transform=require('./_stream_transform'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits'),util.inherits(PassThrough,Transform);function PassThrough(a){return this instanceof PassThrough?void Transform.call(this,a):new PassThrough(a)}PassThrough.prototype._transform=function(a,b,c){c(null,a)};

},{"./_stream_transform":226,"core-util-is":66,"inherits":160}],225:[function(require,module,exports){
(function (process){
'use strict';module.exports=Readable;/*<replacement>*/var processNextTick=require('process-nextick-args'),isArray=require('isarray');/*</replacement>*//*<replacement>*//*</replacement>*/Readable.ReadableState=ReadableState;/*<replacement>*/var EE=require('events').EventEmitter,EElistenerCount=function EElistenerCount(a,b){return a.listeners(b).length},Stream;/*</replacement>*//*<replacement>*/(function(){try{Stream=require('stream')}catch(a){}finally{Stream||(Stream=require('events').EventEmitter)}})();/*</replacement>*/var Buffer=require('buffer').Buffer,bufferShim=require('buffer-shims'),util=require('core-util-is');/*<replacement>*//*</replacement>*//*<replacement>*/util.inherits=require('inherits');/*</replacement>*//*<replacement>*/var debugUtil=require('util'),debug=void 0;debug=debugUtil&&debugUtil.debuglog?debugUtil.debuglog('stream'):function debug(){};/*</replacement>*/var BufferList=require('./internal/streams/BufferList'),StringDecoder;util.inherits(Readable,Stream);function prependListener(a,b,d){return'function'==typeof a.prependListener?a.prependListener(b,d):void(a._events&&a._events[b]?isArray(a._events[b])?a._events[b].unshift(d):a._events[b]=[d,a._events[b]]:a.on(b,d))}var Duplex;function ReadableState(a,b){Duplex=Duplex||require('./_stream_duplex'),a=a||{},this.objectMode=!!a.objectMode,b instanceof Duplex&&(this.objectMode=this.objectMode||!!a.readableObjectMode);// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
var d=a.highWaterMark,g=this.objectMode?16:16384;this.highWaterMark=d||0===d?d:g,this.highWaterMark=~~this.highWaterMark,this.buffer=new BufferList,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.defaultEncoding=a.defaultEncoding||'utf8',this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,a.encoding&&(!StringDecoder&&(StringDecoder=require('string_decoder/').StringDecoder),this.decoder=new StringDecoder(a.encoding),this.encoding=a.encoding)}var Duplex;function Readable(a){return Duplex=Duplex||require('./_stream_duplex'),this instanceof Readable?void(this._readableState=new ReadableState(a,this),this.readable=!0,a&&'function'==typeof a.read&&(this._read=a.read),Stream.call(this)):new Readable(a)}// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push=function(a,b){var d=this._readableState;return d.objectMode||'string'!=typeof a||(b=b||d.defaultEncoding,b!==d.encoding&&(a=bufferShim.from(a,b),b='')),readableAddChunk(this,d,a,b,!1)},Readable.prototype.unshift=function(a){var b=this._readableState;return readableAddChunk(this,b,a,'',!0)},Readable.prototype.isPaused=function(){return!1===this._readableState.flowing};function readableAddChunk(a,b,d,g,h){var j=chunkInvalid(b,d);if(j)a.emit('error',j);else if(null===d)b.reading=!1,onEofChunk(a,b);else if(!(b.objectMode||d&&0<d.length))h||(b.reading=!1);else if(b.ended&&!h){var k=new Error('stream.push() after EOF');a.emit('error',k)}else if(b.endEmitted&&h){var m=new Error('stream.unshift() after end event');a.emit('error',m)}else{var o;!b.decoder||h||g||(d=b.decoder.write(d),o=!b.objectMode&&0===d.length),h||(b.reading=!1),o||(b.flowing&&0===b.length&&!b.sync?(a.emit('data',d),a.read(0)):(b.length+=b.objectMode?1:d.length,h?b.buffer.unshift(d):b.buffer.push(d),b.needReadable&&emitReadable(a))),maybeReadMore(a,b)}return needMoreData(b)}// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(a){return!a.ended&&(a.needReadable||a.length<a.highWaterMark||0===a.length)}// backwards compatibility.
Readable.prototype.setEncoding=function(a){return StringDecoder||(StringDecoder=require('string_decoder/').StringDecoder),this._readableState.decoder=new StringDecoder(a),this._readableState.encoding=a,this};// Don't raise the hwm > 8MB
var MAX_HWM=8388608;function computeNewHighWaterMark(a){return a>=MAX_HWM?a=MAX_HWM:(a--,a|=a>>>1,a|=a>>>2,a|=a>>>4,a|=a>>>8,a|=a>>>16,a++),a}// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(a,b){// Don't have enough
return 0>=a||0===b.length&&b.ended?0:b.objectMode?1:a===a?(a>b.highWaterMark&&(b.highWaterMark=computeNewHighWaterMark(a)),a<=b.length?a:b.ended?b.length:(b.needReadable=!0,0)):b.flowing&&b.length?b.buffer.head.data.length:b.length;// If we're asking for more than the current hwm, then raise the hwm.
}// you can override either this method, or the async _read(n) below.
Readable.prototype.read=function(a){debug('read',a),a=parseInt(a,10);var b=this._readableState,d=a;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(0!==a&&(b.emittedReadable=!1),0===a&&b.needReadable&&(b.length>=b.highWaterMark||b.ended))return debug('read: emitReadable',b.length,b.ended),0===b.length&&b.ended?endReadable(this):emitReadable(this),null;// if we've ended, and we're now clear, then finish it up.
if(a=howMuchToRead(a,b),0===a&&b.ended)return 0===b.length&&endReadable(this),null;// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var g=b.needReadable;debug('need readable',g),(0===b.length||b.length-a<b.highWaterMark)&&(g=!0,debug('length less than watermark',g)),b.ended||b.reading?(g=!1,debug('reading or ended',g)):g&&(debug('do read'),b.reading=!0,b.sync=!0,0===b.length&&(b.needReadable=!0),this._read(b.highWaterMark),b.sync=!1,!b.reading&&(a=howMuchToRead(d,b)));var h;return h=0<a?fromList(a,b):null,null===h?(b.needReadable=!0,a=0):b.length-=a,0===b.length&&(!b.ended&&(b.needReadable=!0),d!==a&&b.ended&&endReadable(this)),null!==h&&this.emit('data',h),h};function chunkInvalid(a,b){var d=null;return Buffer.isBuffer(b)||'string'==typeof b||null===b||void 0===b||a.objectMode||(d=new TypeError('Invalid non-string/buffer chunk')),d}function onEofChunk(a,b){if(!b.ended){if(b.decoder){var d=b.decoder.end();d&&d.length&&(b.buffer.push(d),b.length+=b.objectMode?1:d.length)}b.ended=!0,emitReadable(a)}// emit 'readable' now to make sure it gets picked up.
}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(a){var b=a._readableState;b.needReadable=!1,b.emittedReadable||(debug('emitReadable',b.flowing),b.emittedReadable=!0,b.sync?processNextTick(emitReadable_,a):emitReadable_(a))}function emitReadable_(a){debug('emit readable'),a.emit('readable'),flow(a)}// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(a,b){b.readingMore||(b.readingMore=!0,processNextTick(maybeReadMore_,a,b))}function maybeReadMore_(a,b){for(var d=b.length;!b.reading&&!b.flowing&&!b.ended&&b.length<b.highWaterMark&&(debug('maybeReadMore read 0'),a.read(0),d!==b.length);)d=b.length;b.readingMore=!1}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read=function(a){this.emit('error',new Error('not implemented'))},Readable.prototype.pipe=function(a,b){function d(z){debug('onunpipe'),z===r&&h()}function g(){debug('onend'),a.end()}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
function h(){debug('cleanup'),a.removeListener('close',m),a.removeListener('finish',o),a.removeListener('drain',v),a.removeListener('error',k),a.removeListener('unpipe',d),r.removeListener('end',g),r.removeListener('end',h),r.removeListener('data',j),w=!0,s.awaitDrain&&(!a._writableState||a._writableState.needDrain)&&v()}// If the user pushes more data while we're writing to dest then we'll end up
// in ondata again. However, we only want to increase awaitDrain once because
// dest will only emit one 'drain' event for the multiple writes.
// => Introduce a guard on increasing awaitDrain.
function j(z){debug('ondata'),y=!1;var A=a.write(z);!1!==A||y||((1===s.pipesCount&&s.pipes===a||1<s.pipesCount&&-1!==indexOf(s.pipes,a))&&!w&&(debug('false write response, pause',r._readableState.awaitDrain),r._readableState.awaitDrain++,y=!0),r.pause())}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function k(z){debug('onerror',z),q(),a.removeListener('error',k),0===EElistenerCount(a,'error')&&a.emit('error',z)}// Make sure our error handler is attached before userland ones.
// Both close and finish should trigger unpipe, but only once.
function m(){a.removeListener('finish',o),q()}function o(){debug('onfinish'),a.removeListener('close',m),q()}function q(){debug('unpipe'),r.unpipe(a)}// tell the dest that it's being piped to
var r=this,s=this._readableState;switch(s.pipesCount){case 0:s.pipes=a;break;case 1:s.pipes=[s.pipes,a];break;default:s.pipes.push(a);}s.pipesCount+=1,debug('pipe count=%d opts=%j',s.pipesCount,b);var t=(!b||!1!==b.end)&&a!==process.stdout&&a!==process.stderr,u=t?g:h;s.endEmitted?processNextTick(u):r.once('end',u),a.on('unpipe',d);var v=pipeOnDrain(r);a.on('drain',v);var w=!1,y=!1;return r.on('data',j),prependListener(a,'error',k),a.once('close',m),a.once('finish',o),a.emit('pipe',r),s.flowing||(debug('pipe resume'),r.resume()),a};function pipeOnDrain(a){return function(){var b=a._readableState;debug('pipeOnDrain',b.awaitDrain),b.awaitDrain&&b.awaitDrain--,0===b.awaitDrain&&EElistenerCount(a,'data')&&(b.flowing=!0,flow(a))}}Readable.prototype.unpipe=function(a){var b=this._readableState;// if we're not piping anywhere, then do nothing.
if(0===b.pipesCount)return this;// just one destination.  most common case.
if(1===b.pipesCount)// passed in one, but it's not the right one.
return a&&a!==b.pipes?this:(a||(a=b.pipes),b.pipes=null,b.pipesCount=0,b.flowing=!1,a&&a.emit('unpipe',this),this);// slow case. multiple pipe destinations.
if(!a){// remove all.
var d=b.pipes,g=b.pipesCount;b.pipes=null,b.pipesCount=0,b.flowing=!1;for(var h=0;h<g;h++)d[h].emit('unpipe',this);return this}// try to find the right one.
var j=indexOf(b.pipes,a);return-1===j?this:(b.pipes.splice(j,1),b.pipesCount-=1,1===b.pipesCount&&(b.pipes=b.pipes[0]),a.emit('unpipe',this),this)},Readable.prototype.on=function(a,b){var d=Stream.prototype.on.call(this,a,b);if('data'===a)!1!==this._readableState.flowing&&this.resume();else if('readable'===a){var g=this._readableState;g.endEmitted||g.readableListening||(g.readableListening=g.needReadable=!0,g.emittedReadable=!1,g.reading?g.length&&emitReadable(this,g):processNextTick(nReadingNextTick,this))}return d},Readable.prototype.addListener=Readable.prototype.on;function nReadingNextTick(a){debug('readable nexttick read 0'),a.read(0)}// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume=function(){var a=this._readableState;return a.flowing||(debug('resume'),a.flowing=!0,resume(this,a)),this};function resume(a,b){b.resumeScheduled||(b.resumeScheduled=!0,processNextTick(resume_,a,b))}function resume_(a,b){b.reading||(debug('resume read 0'),a.read(0)),b.resumeScheduled=!1,b.awaitDrain=0,a.emit('resume'),flow(a),b.flowing&&!b.reading&&a.read(0)}Readable.prototype.pause=function(){return debug('call pause flowing=%j',this._readableState.flowing),!1!==this._readableState.flowing&&(debug('pause'),this._readableState.flowing=!1,this.emit('pause')),this};function flow(a){var b=a._readableState;for(debug('flow',b.flowing);b.flowing&&null!==a.read(););}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap=function(a){var b=this._readableState,d=!1,g=this;// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var h in a.on('end',function(){if(debug('wrapped end'),b.decoder&&!b.ended){var j=b.decoder.end();j&&j.length&&g.push(j)}g.push(null)}),a.on('data',function(j){// don't skip over falsy values in objectMode
if((debug('wrapped data'),b.decoder&&(j=b.decoder.write(j)),!(b.objectMode&&(null===j||void 0===j)))&&(b.objectMode||j&&j.length)){var k=g.push(j);k||(d=!0,a.pause())}}),a)void 0===this[h]&&'function'==typeof a[h]&&(this[h]=function(j){return function(){return a[j].apply(a,arguments)}}(h));// proxy certain important events.
return forEach(['error','close','destroy','pause','resume'],function(j){a.on(j,g.emit.bind(g,j))}),g._read=function(j){debug('wrapped _read',j),d&&(d=!1,a.resume())},g},Readable._fromList=fromList;// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(a,b){// nothing buffered
if(0===b.length)return null;var d;return b.objectMode?d=b.buffer.shift():!a||a>=b.length?(d=b.decoder?b.buffer.join(''):1===b.buffer.length?b.buffer.head.data:b.buffer.concat(b.length),b.buffer.clear()):d=fromListPartial(a,b.buffer,b.decoder),d}// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(a,b,d){var g;return a<b.head.data.length?(g=b.head.data.slice(0,a),b.head.data=b.head.data.slice(a)):a===b.head.data.length?g=b.shift():g=d?copyFromBufferString(a,b):copyFromBuffer(a,b),g}// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(a,b){var d=b.head,g=1,h=d.data;for(a-=h.length;d=d.next;){var j=d.data,k=a>j.length?j.length:a;if(h+=k===j.length?j:j.slice(0,a),a-=k,0===a){k===j.length?(++g,b.head=d.next?d.next:b.tail=null):(b.head=d,d.data=j.slice(k));break}++g}return b.length-=g,h}// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(a,b){var d=bufferShim.allocUnsafe(a),g=b.head,h=1;for(g.data.copy(d),a-=g.data.length;g=g.next;){var j=g.data,k=a>j.length?j.length:a;if(j.copy(d,d.length-a,0,k),a-=k,0===a){k===j.length?(++h,b.head=g.next?g.next:b.tail=null):(b.head=g,g.data=j.slice(k));break}++h}return b.length-=h,d}function endReadable(a){var b=a._readableState;// If we get here before consuming all the bytes, then that is a
// bug in node.  Should never happen.
if(0<b.length)throw new Error('"endReadable()" called on non-empty stream');b.endEmitted||(b.ended=!0,processNextTick(endReadableNT,b,a))}function endReadableNT(a,b){a.endEmitted||0!==a.length||(a.endEmitted=!0,b.readable=!1,b.emit('end'))}function forEach(a,b){for(var d=0,g=a.length;d<g;d++)b(a[d],d)}function indexOf(a,b){for(var d=0,g=a.length;d<g;d++)if(a[d]===b)return d;return-1}

}).call(this,require('_process'))
},{"./_stream_duplex":223,"./internal/streams/BufferList":228,"_process":213,"buffer":62,"buffer-shims":60,"core-util-is":66,"events":148,"inherits":160,"isarray":162,"process-nextick-args":212,"stream":252,"string_decoder/":253,"util":32}],226:[function(require,module,exports){
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';module.exports=Transform;var Duplex=require('./_stream_duplex'),util=require('core-util-is');/*<replacement>*/util.inherits=require('inherits'),util.inherits(Transform,Duplex);function TransformState(a){this.afterTransform=function(b,c){return afterTransform(a,b,c)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null,this.writeencoding=null}function afterTransform(a,b,c){var d=a._transformState;d.transforming=!1;var e=d.writecb;if(!e)return a.emit('error',new Error('no writecb in Transform class'));d.writechunk=null,d.writecb=null,null!==c&&c!==void 0&&a.push(c),e(b);var f=a._readableState;f.reading=!1,(f.needReadable||f.length<f.highWaterMark)&&a._read(f.highWaterMark)}function Transform(a){if(!(this instanceof Transform))return new Transform(a);Duplex.call(this,a),this._transformState=new TransformState(this);// when the writable side finishes, then flush out anything remaining.
var b=this;// start out asking for a readable event once data is transformed.
this._readableState.needReadable=!0,this._readableState.sync=!1,a&&('function'==typeof a.transform&&(this._transform=a.transform),'function'==typeof a.flush&&(this._flush=a.flush)),this.once('prefinish',function(){'function'==typeof this._flush?this._flush(function(c){done(b,c)}):done(b)})}Transform.prototype.push=function(a,b){return this._transformState.needTransform=!1,Duplex.prototype.push.call(this,a,b)},Transform.prototype._transform=function(a,b,c){throw new Error('Not implemented')},Transform.prototype._write=function(a,b,c){var d=this._transformState;if(d.writecb=c,d.writechunk=a,d.writeencoding=b,!d.transforming){var e=this._readableState;(d.needTransform||e.needReadable||e.length<e.highWaterMark)&&this._read(e.highWaterMark)}},Transform.prototype._read=function(a){var b=this._transformState;null!==b.writechunk&&b.writecb&&!b.transforming?(b.transforming=!0,this._transform(b.writechunk,b.writeencoding,b.afterTransform)):b.needTransform=!0};function done(a,b){if(b)return a.emit('error',b);// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
var c=a._writableState,d=a._transformState;if(c.length)throw new Error('Calling transform done when ws.length != 0');if(d.transforming)throw new Error('Calling transform done when still transforming');return a.push(null)}

},{"./_stream_duplex":223,"core-util-is":66,"inherits":160}],227:[function(require,module,exports){
(function (process){
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';module.exports=Writable;/*<replacement>*/var processNextTick=require('process-nextick-args'),asyncWrite=!process.browser&&-1<['v0.10','v0.9.'].indexOf(process.version.slice(0,5))?setImmediate:processNextTick;/*</replacement>*//*<replacement>*//*</replacement>*/Writable.WritableState=WritableState;/*<replacement>*/var util=require('core-util-is');util.inherits=require('inherits');/*</replacement>*//*<replacement>*/var internalUtil={deprecate:require('util-deprecate')},Stream;/*</replacement>*//*<replacement>*/(function(){try{Stream=require('stream')}catch(a){}finally{Stream||(Stream=require('events').EventEmitter)}})();/*</replacement>*/var Buffer=require('buffer').Buffer,bufferShim=require('buffer-shims');/*<replacement>*//*</replacement>*/util.inherits(Writable,Stream);function nop(){}function WriteReq(a,b,c){this.chunk=a,this.encoding=b,this.callback=c,this.next=null}var Duplex;function WritableState(a,b){Duplex=Duplex||require('./_stream_duplex'),a=a||{},this.objectMode=!!a.objectMode,b instanceof Duplex&&(this.objectMode=this.objectMode||!!a.writableObjectMode);// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
var c=a.highWaterMark,d=this.objectMode?16:16384;this.highWaterMark=c||0===c?c:d,this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var e=!1===a.decodeStrings;this.decodeStrings=!e,this.defaultEncoding=a.defaultEncoding||'utf8',this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(f){onwrite(b,f)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function(){for(var b=this.bufferedRequest,c=[];b;)c.push(b),b=b.next;return c},function(){try{Object.defineProperty(WritableState.prototype,'buffer',{get:internalUtil.deprecate(function(){return this.getBuffer()},'_writableState.buffer is deprecated. Use _writableState.getBuffer instead.')})}catch(a){}}();var Duplex;function Writable(a){// Writable ctor is applied to Duplexes, though they're not
// instanceof Writable, they're instanceof Readable.
return Duplex=Duplex||require('./_stream_duplex'),this instanceof Writable||this instanceof Duplex?void(this._writableState=new WritableState(a,this),this.writable=!0,a&&('function'==typeof a.write&&(this._write=a.write),'function'==typeof a.writev&&(this._writev=a.writev)),Stream.call(this)):new Writable(a)}// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe=function(){this.emit('error',new Error('Cannot pipe, not readable'))};function writeAfterEnd(a,b){var c=new Error('write after end');// TODO: defer error events consistently everywhere, not just the cb
a.emit('error',c),processNextTick(b,c)}// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(a,b,c,d){var e=!0,f=!1;// Always throw error if a null is written
// if we are not in object mode then throw
// if it is not a buffer, string, or undefined.
return null===c?f=new TypeError('May not write null values to stream'):!Buffer.isBuffer(c)&&'string'!=typeof c&&void 0!==c&&!b.objectMode&&(f=new TypeError('Invalid non-string/buffer chunk')),f&&(a.emit('error',f),processNextTick(d,f),e=!1),e}Writable.prototype.write=function(a,b,c){var d=this._writableState,e=!1;return'function'==typeof b&&(c=b,b=null),Buffer.isBuffer(a)?b='buffer':!b&&(b=d.defaultEncoding),'function'!=typeof c&&(c=nop),d.ended?writeAfterEnd(this,c):validChunk(this,d,a,c)&&(d.pendingcb++,e=writeOrBuffer(this,d,a,b,c)),e},Writable.prototype.cork=function(){var a=this._writableState;a.corked++},Writable.prototype.uncork=function(){var a=this._writableState;a.corked&&(a.corked--,!a.writing&&!a.corked&&!a.finished&&!a.bufferProcessing&&a.bufferedRequest&&clearBuffer(this,a))},Writable.prototype.setDefaultEncoding=function(b){if('string'==typeof b&&(b=b.toLowerCase()),!(-1<['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((b+'').toLowerCase())))throw new TypeError('Unknown encoding: '+b);return this._writableState.defaultEncoding=b,this};function decodeChunk(a,b,c){return a.objectMode||!1===a.decodeStrings||'string'!=typeof b||(b=bufferShim.from(b,c)),b}// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(a,b,c,d,e){c=decodeChunk(b,c,d),Buffer.isBuffer(c)&&(d='buffer');var f=b.objectMode?1:c.length;b.length+=f;var g=b.length<b.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
if(g||(b.needDrain=!0),b.writing||b.corked){var h=b.lastBufferedRequest;b.lastBufferedRequest=new WriteReq(c,d,e),h?h.next=b.lastBufferedRequest:b.bufferedRequest=b.lastBufferedRequest,b.bufferedRequestCount+=1}else doWrite(a,b,!1,f,c,d,e);return g}function doWrite(a,b,c,d,e,f,g){b.writelen=d,b.writecb=g,b.writing=!0,b.sync=!0,c?a._writev(e,b.onwrite):a._write(e,f,b.onwrite),b.sync=!1}function onwriteError(a,b,c,d,e){--b.pendingcb,c?processNextTick(e,d):e(d),a._writableState.errorEmitted=!0,a.emit('error',d)}function onwriteStateUpdate(a){a.writing=!1,a.writecb=null,a.length-=a.writelen,a.writelen=0}function onwrite(a,b){var c=a._writableState,d=c.sync,e=c.writecb;if(onwriteStateUpdate(c),b)onwriteError(a,c,d,b,e);else{// Check if we're actually ready to finish, but don't emit yet
var f=needFinish(c);f||c.corked||c.bufferProcessing||!c.bufferedRequest||clearBuffer(a,c),d?asyncWrite(afterWrite,a,c,f,e):afterWrite(a,c,f,e)}}function afterWrite(a,b,c,d){c||onwriteDrain(a,b),b.pendingcb--,d(),finishMaybe(a,b)}// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(a,b){0===b.length&&b.needDrain&&(b.needDrain=!1,a.emit('drain'))}// if there's something in the buffer waiting, then process it
function clearBuffer(a,b){b.bufferProcessing=!0;var c=b.bufferedRequest;if(a._writev&&c&&c.next){// Fast case, write everything using _writev()
var d=b.bufferedRequestCount,e=Array(d),f=b.corkedRequestsFree;f.entry=c;for(var g=0;c;)e[g]=c,c=c.next,g+=1;doWrite(a,b,!0,b.length,e,'',f.finish),b.pendingcb++,b.lastBufferedRequest=null,f.next?(b.corkedRequestsFree=f.next,f.next=null):b.corkedRequestsFree=new CorkedRequest(b)}else{// Slow case, write chunks one-by-one
for(;c;){var h=c.chunk,i=c.encoding,j=c.callback,k=b.objectMode?1:h.length;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(doWrite(a,b,!1,k,h,i,j),c=c.next,b.writing)break}null===c&&(b.lastBufferedRequest=null)}b.bufferedRequestCount=0,b.bufferedRequest=c,b.bufferProcessing=!1}Writable.prototype._write=function(a,b,c){c(new Error('not implemented'))},Writable.prototype._writev=null,Writable.prototype.end=function(a,b,c){var d=this._writableState;'function'==typeof a?(c=a,a=null,b=null):'function'==typeof b&&(c=b,b=null),null!==a&&a!==void 0&&this.write(a,b),d.corked&&(d.corked=1,this.uncork()),d.ending||d.finished||endWritable(this,d,c)};function needFinish(a){return a.ending&&0===a.length&&null===a.bufferedRequest&&!a.finished&&!a.writing}function prefinish(a,b){b.prefinished||(b.prefinished=!0,a.emit('prefinish'))}function finishMaybe(a,b){var c=needFinish(b);return c&&(0===b.pendingcb?(prefinish(a,b),b.finished=!0,a.emit('finish')):prefinish(a,b)),c}function endWritable(a,b,c){b.ending=!0,finishMaybe(a,b),c&&(b.finished?processNextTick(c):a.once('finish',c)),b.ended=!0,a.writable=!1}// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(a){var b=this;this.next=null,this.entry=null,this.finish=function(c){var d=b.entry;for(b.entry=null;d;){var e=d.callback;a.pendingcb--,e(c),d=d.next}a.corkedRequestsFree?a.corkedRequestsFree.next=b:a.corkedRequestsFree=b}}

}).call(this,require('_process'))
},{"./_stream_duplex":223,"_process":213,"buffer":62,"buffer-shims":60,"core-util-is":66,"events":148,"inherits":160,"process-nextick-args":212,"stream":252,"util-deprecate":256}],228:[function(require,module,exports){
'use strict';var Buffer=require('buffer').Buffer,bufferShim=require('buffer-shims');/*<replacement>*//*</replacement>*/module.exports=BufferList;function BufferList(){this.head=null,this.tail=null,this.length=0}BufferList.prototype.push=function(a){var b={data:a,next:null};0<this.length?this.tail.next=b:this.head=b,this.tail=b,++this.length},BufferList.prototype.unshift=function(a){var b={data:a,next:this.head};0===this.length&&(this.tail=b),this.head=b,++this.length},BufferList.prototype.shift=function(){if(0!==this.length){var a=this.head.data;return this.head=1===this.length?this.tail=null:this.head.next,--this.length,a}},BufferList.prototype.clear=function(){this.head=this.tail=null,this.length=0},BufferList.prototype.join=function(a){if(0===this.length)return'';for(var b=this.head,c=''+b.data;b=b.next;)c+=a+b.data;return c},BufferList.prototype.concat=function(a){if(0===this.length)return bufferShim.alloc(0);if(1===this.length)return this.head.data;for(var b=bufferShim.allocUnsafe(a>>>0),c=this.head,d=0;c;)c.data.copy(b,d),d+=c.data.length,c=c.next;return b};

},{"buffer":62,"buffer-shims":60}],229:[function(require,module,exports){
"use strict";module.exports=require("./lib/_stream_passthrough.js");

},{"./lib/_stream_passthrough.js":224}],230:[function(require,module,exports){
(function (process){
'use strict';var Stream=function(){try{return require('stream');// hack to fix a circular dependency issue when used with browserify
}catch(a){}}();exports=module.exports=require('./lib/_stream_readable.js'),exports.Stream=Stream||exports,exports.Readable=exports,exports.Writable=require('./lib/_stream_writable.js'),exports.Duplex=require('./lib/_stream_duplex.js'),exports.Transform=require('./lib/_stream_transform.js'),exports.PassThrough=require('./lib/_stream_passthrough.js'),!process.browser&&'disable'===process.env.READABLE_STREAM&&Stream&&(module.exports=Stream);

}).call(this,require('_process'))
},{"./lib/_stream_duplex.js":223,"./lib/_stream_passthrough.js":224,"./lib/_stream_readable.js":225,"./lib/_stream_transform.js":226,"./lib/_stream_writable.js":227,"_process":213,"stream":252}],231:[function(require,module,exports){
"use strict";module.exports=require("./lib/_stream_transform.js");

},{"./lib/_stream_transform.js":226}],232:[function(require,module,exports){
"use strict";module.exports=require("./lib/_stream_writable.js");

},{"./lib/_stream_writable.js":227}],233:[function(require,module,exports){
(function (Buffer){
'use strict';/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*//** @preserve
(c) 2012 by Cédric Mesnil. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/// constants table
var zl=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],zr=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],sl=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],sr=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],hl=[0,1518500249,1859775393,2400959708,2840853838],hr=[1352829926,1548603684,1836072691,2053994217,0];function bytesToWords(a){var c=[];for(var d=0,e=0;d<a.length;d++,e+=8)c[e>>>5]|=a[d]<<24-e%32;return c}function wordsToBytes(a){var c=[];for(var d=0;d<32*a.length;d+=8)c.push(255&a[d>>>5]>>>24-d%32);return c}function processBlock(a,c,d){// swap endian
for(var e=0;16>e;e++){var f=d+e,g=c[f];// Swap
c[f]=16711935&(g<<8|g>>>24)|4278255360&(g<<24|g>>>8)}// Working variables
var h,j,k,l,o,p,q,r,s,u;p=h=a[0],q=j=a[1],r=k=a[2],s=l=a[3],u=o=a[4];// computation
var v;for(e=0;80>e;e+=1)v=0|h+c[d+zl[e]],v+=16>e?f1(j,k,l)+hl[0]:32>e?f2(j,k,l)+hl[1]:48>e?f3(j,k,l)+hl[2]:64>e?f4(j,k,l)+hl[3]:f5(j,k,l)+hl[4],v=0|v,v=rotl(v,sl[e]),v=0|v+o,h=o,o=l,l=rotl(k,10),k=j,j=v,v=0|p+c[d+zr[e]],v+=16>e?f5(q,r,s)+hr[0]:32>e?f4(q,r,s)+hr[1]:48>e?f3(q,r,s)+hr[2]:64>e?f2(q,r,s)+hr[3]:f1(q,r,s)+hr[4],v=0|v,v=rotl(v,sr[e]),v=0|v+u,p=u,u=s,s=rotl(r,10),r=q,q=v;// intermediate hash value
v=0|a[1]+k+s,a[1]=0|a[2]+l+u,a[2]=0|a[3]+o+p,a[3]=0|a[4]+h+q,a[4]=0|a[0]+j+r,a[0]=v}function f1(a,c,d){return a^c^d}function f2(a,c,d){return a&c|~a&d}function f3(a,c,d){return(a|~c)^d}function f4(a,c,d){return a&d|c&~d}function f5(a,c,d){return a^(c|~d)}function rotl(a,c){return a<<c|a>>>32-c}function ripemd160(a){var c=[1732584193,4023233417,2562383102,271733878,3285377520];'string'==typeof a&&(a=new Buffer(a,'utf8'));var d=bytesToWords(a),e=8*a.length,f=8*a.length;// Add padding
d[e>>>5]|=128<<24-e%32,d[(e+64>>>9<<4)+14]=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8);for(var g=0;g<d.length;g+=16)processBlock(c,d,g);// swap endian
for(g=0;5>g;g++){// shortcut
var h=c[g];// Swap
c[g]=16711935&(h<<8|h>>>24)|4278255360&(h<<24|h>>>8)}var j=wordsToBytes(c);return new Buffer(j)}module.exports=ripemd160;

}).call(this,require("buffer").Buffer)
},{"buffer":62}],234:[function(require,module,exports){
(function (Buffer){
'use strict';var assert=require('assert');/**
 * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP
 * This function takes in a data, convert it to buffer if not, and a length for recursion
 *
 * @param {Buffer,String,Integer,Array} data - will be converted to buffer
 * @returns {Buffer} - returns buffer of encoded data
 **/exports.encode=function(b){if(b instanceof Array){var c=[];for(var e=0;e<b.length;e++)c.push(exports.encode(b[e]));var f=Buffer.concat(c);return Buffer.concat([encodeLength(f.length,192),f])}return(b=toBuffer(b),1===b.length&&128>b[0])?b:Buffer.concat([encodeLength(b.length,128),b])};function safeParseInt(b,c){if('00'===b.slice(0,2))throw new Error('invalid RLP: extra zeros');return parseInt(b,c)}function encodeLength(b,c){if(56>b)return new Buffer([b+c]);var e=intToHex(b),f=e.length/2,g=intToHex(c+55+f);return new Buffer(g+e,'hex')}/**
 * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP|RLP}
 * @param {Buffer,String,Integer,Array} data - will be converted to buffer
 * @returns {Array} - returns decode Array of Buffers containg the original message
 **/exports.decode=function(b,c){if(!b||0===b.length)return new Buffer([]);b=toBuffer(b);var e=_decode(b);return c?e:(assert.equal(e.remainder.length,0,'invalid remainder'),e.data)},exports.getLength=function(b){if(!b||0===b.length)return new Buffer([]);b=toBuffer(b);var c=b[0];if(127>=c)return b.length;if(183>=c)return c-127;if(191>=c)return c-182;if(247>=c)// a list between  0-55 bytes long
return c-191;// a list  over 55 bytes long
var e=c-246,f=safeParseInt(b.slice(1,e).toString('hex'),16);return e+f};function _decode(b){var c,e,f,g,h,j=[],k=b[0];if(127>=k)// a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.
return{data:b.slice(0,1),remainder:b.slice(1)};if(183>=k){if(c=k-127,f=128===k?new Buffer([]):b.slice(1,c),2===c&&128>f[0])throw new Error('invalid rlp encoding: byte must be less 0x80');return{data:f,remainder:b.slice(c)}}if(191>=k){if(e=k-182,c=safeParseInt(b.slice(1,e).toString('hex'),16),f=b.slice(e,c+e),f.length<c)throw new Error('invalid RLP');return{data:f,remainder:b.slice(c+e)}}if(247>=k){for(c=k-191,g=b.slice(1,c);g.length;)h=_decode(g),j.push(h.data),g=h.remainder;return{data:j,remainder:b.slice(c)}}e=k-246,c=safeParseInt(b.slice(1,e).toString('hex'),16);var l=e+c;if(l>b.length)throw new Error('invalid rlp: total length is larger than the data');if(g=b.slice(e,l),0===g.length)throw new Error('invalid rlp, List has a invalid length');for(;g.length;)h=_decode(g),j.push(h.data),g=h.remainder;return{data:j,remainder:b.slice(l)}}function isHexPrefixed(b){return'0x'===b.slice(0,2)}// Removes 0x from a given String
function stripHexPrefix(b){return'string'==typeof b?isHexPrefixed(b)?b.slice(2):b:b}function intToHex(b){var c=b.toString(16);return c.length%2&&(c='0'+c),c}function padToEven(b){return b.length%2&&(b='0'+b),b}function intToBuffer(b){var c=intToHex(b);return new Buffer(c,'hex')}function toBuffer(b){if(!Buffer.isBuffer(b))if('string'==typeof b)b=isHexPrefixed(b)?new Buffer(padToEven(stripHexPrefix(b)),'hex'):new Buffer(b);else if('number'==typeof b)b=b?intToBuffer(b):new Buffer([]);else if(null===b||void 0===b)b=new Buffer([]);else if(b.toArray)b=new Buffer(b.toArray());else throw new Error('invalid type');return b}

}).call(this,require("buffer").Buffer)
},{"assert":21,"buffer":62}],235:[function(require,module,exports){
'use strict';module.exports=require('scryptsy');

},{"scryptsy":236}],236:[function(require,module,exports){
(function (Buffer){
'use strict';var pbkdf2Sync=require('pbkdf2').pbkdf2Sync,MAX_VALUE=2147483647;// N = Cpu cost, r = Memory cost, p = parallelization cost
function scrypt(c,d,e,f,g,h,k){// all of these functions are actually moved to the top
// due to function hoisting
function l(F,G,H,I,J,K){var L=0,M=128*H,O;for(F.copy(K,L,G,G+M),O=0;O<I;O++)K.copy(J,O*M,L,L+M),m(K,L,M,H),z&&z();for(O=0;O<I;O++){var P=K.readUInt32LE(L+64*(2*H-1))&I-1;q(J,P*M,K,L,M),m(K,L,M,H),z&&z()}K.copy(F,G,L,L+M)}function m(F,G,H,I){var J;for(arraycopy(F,G+64*(2*I-1),w,0,64),J=0;J<2*I;J++)q(F,64*J,w,0,64),o(w),arraycopy(w,0,F,H+64*J,64);for(J=0;J<I;J++)arraycopy(F,H+64*(2*J),F,G+64*J,64);for(J=0;J<I;J++)arraycopy(F,H+64*(2*J+1),F,G+64*(J+I),64)}function n(F,G){return F<<G|F>>>32-G}function o(F){var G;for(G=0;16>G;G++)u[G]=(255&F[4*G+0])<<0,u[G]|=(255&F[4*G+1])<<8,u[G]|=(255&F[4*G+2])<<16,u[G]|=(255&F[4*G+3])<<24;for(arraycopy(u,0,v,0,16),G=8;0<G;G-=2)v[4]^=n(v[0]+v[12],7),v[8]^=n(v[4]+v[0],9),v[12]^=n(v[8]+v[4],13),v[0]^=n(v[12]+v[8],18),v[9]^=n(v[5]+v[1],7),v[13]^=n(v[9]+v[5],9),v[1]^=n(v[13]+v[9],13),v[5]^=n(v[1]+v[13],18),v[14]^=n(v[10]+v[6],7),v[2]^=n(v[14]+v[10],9),v[6]^=n(v[2]+v[14],13),v[10]^=n(v[6]+v[2],18),v[3]^=n(v[15]+v[11],7),v[7]^=n(v[3]+v[15],9),v[11]^=n(v[7]+v[3],13),v[15]^=n(v[11]+v[7],18),v[1]^=n(v[0]+v[3],7),v[2]^=n(v[1]+v[0],9),v[3]^=n(v[2]+v[1],13),v[0]^=n(v[3]+v[2],18),v[6]^=n(v[5]+v[4],7),v[7]^=n(v[6]+v[5],9),v[4]^=n(v[7]+v[6],13),v[5]^=n(v[4]+v[7],18),v[11]^=n(v[10]+v[9],7),v[8]^=n(v[11]+v[10],9),v[9]^=n(v[8]+v[11],13),v[10]^=n(v[9]+v[8],18),v[12]^=n(v[15]+v[14],7),v[13]^=n(v[12]+v[15],9),v[14]^=n(v[13]+v[12],13),v[15]^=n(v[14]+v[13],18);for(G=0;16>G;++G)u[G]=v[G]+u[G];for(G=0;16>G;G++){var H=4*G;F[H+0]=255&u[G]>>0,F[H+1]=255&u[G]>>8,F[H+2]=255&u[G]>>16,F[H+3]=255&u[G]>>24}}// naive approach... going back to loop unrolling may yield additional performance
function q(F,G,H,I,J){for(var K=0;K<J;K++)H[I+K]^=F[G+K]}if(0===e||0!=(e&e-1))throw Error('N must be > 0 and a power of 2');if(e>MAX_VALUE/128/f)throw Error('Parameter N is too large');if(f>MAX_VALUE/128/g)throw Error('Parameter r is too large');var s=new Buffer(256*f),t=new Buffer(128*f*e),u=new Int32Array(16),v=new Int32Array(16),w=new Buffer(64),y=pbkdf2Sync(c,d,1,128*g*f,'sha256'),z;// pseudo global
// salsa20_8
// salsa20_8
// blockmix_salsa8
// pseudo global
if(k){var A=2*(g*e),C=0;z=function z(){++C,0==C%1000&&k({current:C,total:A,percent:100*(C/A)})}}for(var E=0;E<g;E++)l(y,128*E*f,f,e,t,s);return pbkdf2Sync(c,y,1,h,'sha256')}function arraycopy(c,d,e,f,g){if(Buffer.isBuffer(c)&&Buffer.isBuffer(e))c.copy(e,f,d,d+g);else for(;g--;)e[f++]=c[d++]}module.exports=scrypt;

}).call(this,require("buffer").Buffer)
},{"buffer":62,"pbkdf2":210}],237:[function(require,module,exports){
'use strict';module.exports=require('./lib')(require('./lib/elliptic'));

},{"./lib":241,"./lib/elliptic":240}],238:[function(require,module,exports){
(function (Buffer){
'use strict';var toString=Object.prototype.toString;// TypeError
exports.isArray=function(a,b){if(!Array.isArray(a))throw TypeError(b)},exports.isBoolean=function(a,b){if('[object Boolean]'!==toString.call(a))throw TypeError(b)},exports.isBuffer=function(a,b){if(!Buffer.isBuffer(a))throw TypeError(b)},exports.isFunction=function(a,b){if('[object Function]'!==toString.call(a))throw TypeError(b)},exports.isNumber=function(a,b){if('[object Number]'!==toString.call(a))throw TypeError(b)},exports.isObject=function(a,b){if('[object Object]'!==toString.call(a))throw TypeError(b)},exports.isBufferLength=function(a,b,c){if(a.length!==b)throw RangeError(c)},exports.isBufferLength2=function(a,b,c,d){if(a.length!==b&&a.length!==c)throw RangeError(d)},exports.isLengthGTZero=function(a,b){if(0===a.length)throw RangeError(b)},exports.isNumberInInterval=function(a,b,c,d){if(a<=b||a>=c)throw RangeError(d)};

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":161}],239:[function(require,module,exports){
(function (Buffer){
'use strict';var bip66=require('bip66'),EC_PRIVKEY_EXPORT_DER_COMPRESSED=new Buffer([48,129,211,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,133,48,129,130,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,33,2,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,36,3,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED=new Buffer([48,130,1,19,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,165,48,129,162,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,65,4,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,72,58,218,119,38,163,196,101,93,164,251,252,14,17,8,168,253,23,180,72,166,133,84,25,156,71,208,143,251,16,212,184,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,68,3,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ZERO_BUFFER_32=new Buffer([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);exports.privateKeyExport=function(a,b,c){var d=new Buffer(c?EC_PRIVKEY_EXPORT_DER_COMPRESSED:EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);return a.copy(d,c?8:9),b.copy(d,c?181:214),d},exports.privateKeyImport=function(a){var b=a.length,c=0;// sequence header
// sequence length
if(!(b<c+1||48!==a[c])&&(c+=1,!(b<c+1)&&128&a[c])){var d=127&a[c];if(c+=1,!(1>d||2<d)&&!(b<c+d)){var e=a[c+d-1]|(1<d?a[c+d-2]<<8:0);if(c+=d,!(b<c+e))// sequence element 0: version number (=1)
return b<c+3||2!==a[c]||1!==a[c+1]||1!==a[c+2]?void 0:(c+=3,b<c+2||4!==a[c]||32<a[c+1]||b<c+2+a[c+1]?void 0:a.slice(c+2,c+2+a[c+1]));// sequence element 1: octet string, up to 32 bytes
}}// sequence length constructor
},exports.signatureExport=function(a){var b=Buffer.concat([new Buffer([0]),a.r]);for(var c=33,d=0;1<c&&0===b[d]&&!(128&b[d+1]);--c,++d);var e=Buffer.concat([new Buffer([0]),a.s]);for(var f=33,g=0;1<f&&0===e[g]&&!(128&e[g+1]);--f,++g);return bip66.encode(b.slice(d),e.slice(g))},exports.signatureImport=function(a){var b=new Buffer(ZERO_BUFFER_32),c=new Buffer(ZERO_BUFFER_32);try{var d=bip66.decode(a);if(33===d.r.length&&0===d.r[0]&&(d.r=d.r.slice(1)),32<d.r.length)throw new Error('R length is too long');if(33===d.s.length&&0===d.s[0]&&(d.s=d.s.slice(1)),32<d.s.length)throw new Error('S length is too long')}catch(e){return}return d.r.copy(b,32-d.r.length),d.s.copy(c,32-d.s.length),{r:b,s:c}},exports.signatureImportLax=function(a){var b=new Buffer(ZERO_BUFFER_32),c=new Buffer(ZERO_BUFFER_32),d=a.length,e=0;// sequence tag byte
// length for r
// length for s
// ignore leading zeros in s
// copy s value
if(48===a[e++]){// sequence length byte
var f=a[e++];if(128&f&&(e+=f-128,e>d))return;// sequence tag byte for r
// sequence tag byte for s
// ignore leading zeros in r
// copy r value
if(2===a[e++]){var g=a[e++];if(128&g){if(f=g-128,e+f>d)return;for(;0<f&&0===a[e];e+=1,f-=1);for(g=0;0<f;e+=1,f-=1)g=(g<<8)+a[e]}if(!(g>d-e)){var h=e;if(e+=g,2===a[e++]){var i=a[e++];if(128&i){if(f=i-128,e+f>d)return;for(;0<f&&0===a[e];e+=1,f-=1);for(i=0;0<f;e+=1,f-=1)i=(i<<8)+a[e]}if(!(i>d-e)){var j=e;for(e+=i;0<g&&0===a[h];g-=1,h+=1);if(!(32<g)){var k=a.slice(h,h+g);for(k.copy(b,32-k.length);0<i&&0===a[j];i-=1,j+=1);if(!(32<i)){var l=a.slice(j,j+i);return l.copy(c,32-l.length),{r:b,s:c}}}}}}}}};

}).call(this,require("buffer").Buffer)
},{"bip66":29,"buffer":62}],240:[function(require,module,exports){
(function (Buffer){
'use strict';var createHash=require('create-hash'),BN=require('bn.js'),EC=require('elliptic').ec,messages=require('../messages.json'),ec=new EC('secp256k1'),ecparams=ec.curve;function loadCompressedPublicKey(a,b){var c=new BN(b);// overflow
if(0<=c.cmp(ecparams.p))return null;c=c.toRed(ecparams.red);// compute corresponding Y
var e=c.redSqr().redIMul(c).redIAdd(ecparams.b).redSqrt();return 3===a!==e.isOdd()&&(e=e.redNeg()),ec.keyPair({pub:{x:c,y:e}})}function loadUncompressedPublicKey(a,b,c){var e=new BN(b),f=new BN(c);// overflow
if(0<=e.cmp(ecparams.p)||0<=f.cmp(ecparams.p))return null;// is odd flag
if(e=e.toRed(ecparams.red),f=f.toRed(ecparams.red),(6===a||7===a)&&f.isOdd()!==(7===a))return null;// x*x*x + b = y*y
var g=e.redSqr().redIMul(e);return f.redSqr().redISub(g.redIAdd(ecparams.b)).isZero()?ec.keyPair({pub:{x:e,y:f}}):null}function loadPublicKey(a){var b=a[0];return 2===b||3===b?33===a.length?loadCompressedPublicKey(b,a.slice(1,33)):null:4===b||6===b||7===b?65===a.length?loadUncompressedPublicKey(b,a.slice(1,33),a.slice(33,65)):null:null}exports.privateKeyVerify=function(a){var b=new BN(a);return 0>b.cmp(ecparams.n)&&!b.isZero()},exports.privateKeyExport=function(a,b){var c=new BN(a);if(0<=c.cmp(ecparams.n)||c.isZero())throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL);return new Buffer(ec.keyFromPrivate(a).getPublic(b,!0))},exports.privateKeyTweakAdd=function(a,b){var c=new BN(b);if(0<=c.cmp(ecparams.n))throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);if(c.iadd(new BN(a)),0<=c.cmp(ecparams.n)&&c.isub(ecparams.n),c.isZero())throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);return c.toArrayLike(Buffer,'be',32)},exports.privateKeyTweakMul=function(a,b){var c=new BN(b);if(0<=c.cmp(ecparams.n)||c.isZero())throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);return c.imul(new BN(a)),c.cmp(ecparams.n)&&(c=c.umod(ecparams.n)),c.toArrayLike(Buffer,'be',32)},exports.publicKeyCreate=function(a,b){var c=new BN(a);if(0<=c.cmp(ecparams.n)||c.isZero())throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL);return new Buffer(ec.keyFromPrivate(a).getPublic(b,!0))},exports.publicKeyConvert=function(a,b){var c=loadPublicKey(a);if(null===c)throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);return new Buffer(c.getPublic(b,!0))},exports.publicKeyVerify=function(a){return null!==loadPublicKey(a)},exports.publicKeyTweakAdd=function(a,b,c){var e=loadPublicKey(a);if(null===e)throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);if(b=new BN(b),0<=b.cmp(ecparams.n))throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);return new Buffer(ecparams.g.mul(b).add(e.pub).encode(!0,c))},exports.publicKeyTweakMul=function(a,b,c){var e=loadPublicKey(a);if(null===e)throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);if(b=new BN(b),0<=b.cmp(ecparams.n)||b.isZero())throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);return new Buffer(e.pub.mul(b).encode(!0,c))},exports.publicKeyCombine=function(a,b){var c=Array(a.length);for(var e=0;e<a.length;++e)if(c[e]=loadPublicKey(a[e]),null===c[e])throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);var f=c[0].pub;for(var g=1;g<c.length;++g)f=f.add(c[g].pub);if(f.isInfinity())throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL);return new Buffer(f.encode(!0,b))},exports.signatureNormalize=function(a){var b=new BN(a.slice(0,32)),c=new BN(a.slice(32,64));if(0<=b.cmp(ecparams.n)||0<=c.cmp(ecparams.n))throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);var e=new Buffer(a);return 1===c.cmp(ec.nh)&&ecparams.n.sub(c).toArrayLike(Buffer,'be',32).copy(e,32),e},exports.signatureExport=function(a){var b=a.slice(0,32),c=a.slice(32,64);if(0<=new BN(b).cmp(ecparams.n)||0<=new BN(c).cmp(ecparams.n))throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);return{r:b,s:c}},exports.signatureImport=function(a){var b=new BN(a.r);0<=b.cmp(ecparams.n)&&(b=new BN(0));var c=new BN(a.s);return 0<=c.cmp(ecparams.n)&&(c=new BN(0)),Buffer.concat([b.toArrayLike(Buffer,'be',32),c.toArrayLike(Buffer,'be',32)])},exports.sign=function(a,b,c,e){if('function'==typeof c){var f=c;c=function c(k){var l=f(a,b,null,e,k);if(!Buffer.isBuffer(l)||32!==l.length)throw new Error(messages.ECDSA_SIGN_FAIL);return new BN(l)}}var g=new BN(b);if(0<=g.cmp(ecparams.n)||g.isZero())throw new Error(messages.ECDSA_SIGN_FAIL);var h=ec.sign(a,b,{canonical:!0,k:c,pers:e});return{signature:Buffer.concat([h.r.toArrayLike(Buffer,'be',32),h.s.toArrayLike(Buffer,'be',32)]),recovery:h.recoveryParam}},exports.verify=function(a,b,c){var e={r:b.slice(0,32),s:b.slice(32,64)},f=new BN(e.r),g=new BN(e.s);if(0<=f.cmp(ecparams.n)||0<=g.cmp(ecparams.n))throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);if(1===g.cmp(ec.nh)||f.isZero()||g.isZero())return!1;var h=loadPublicKey(c);if(null===h)throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);return ec.verify(a,e,{x:h.pub.x,y:h.pub.y})},exports.recover=function(a,b,c,e){var f={r:b.slice(0,32),s:b.slice(32,64)},g=new BN(f.r),h=new BN(f.s);if(0<=g.cmp(ecparams.n)||0<=h.cmp(ecparams.n))throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);try{if(g.isZero()||h.isZero())throw new Error;var k=ec.recoverPubKey(a,f,c);return new Buffer(k.encode(!0,e))}catch(l){throw new Error(messages.ECDSA_RECOVER_FAIL)}},exports.ecdh=function(a,b){var c=exports.ecdhUnsafe(a,b,!0);return createHash('sha256').update(c).digest()},exports.ecdhUnsafe=function(a,b,c){var e=loadPublicKey(a);if(null===e)throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);var f=new BN(b);if(0<=f.cmp(ecparams.n)||f.isZero())throw new Error(messages.ECDH_FAIL);return new Buffer(e.pub.mul(f).encode(!0,c))};

}).call(this,require("buffer").Buffer)
},{"../messages.json":242,"bn.js":30,"buffer":62,"create-hash":68,"elliptic":85}],241:[function(require,module,exports){
'use strict';var assert=require('./assert'),der=require('./der'),messages=require('./messages.json');function initCompressedValue(a,b){return void 0===a?b:(assert.isBoolean(a,messages.COMPRESSED_TYPE_INVALID),a)}module.exports=function(a){return{privateKeyVerify:function privateKeyVerify(b){return assert.isBuffer(b,messages.EC_PRIVATE_KEY_TYPE_INVALID),32===b.length&&a.privateKeyVerify(b)},privateKeyExport:function privateKeyExport(b,c){assert.isBuffer(b,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(b,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID),c=initCompressedValue(c,!0);var d=a.privateKeyExport(b,c);return der.privateKeyExport(b,d,c)},privateKeyImport:function privateKeyImport(b){if(assert.isBuffer(b,messages.EC_PRIVATE_KEY_TYPE_INVALID),b=der.privateKeyImport(b),b&&32===b.length&&a.privateKeyVerify(b))return b;throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)},privateKeyTweakAdd:function privateKeyTweakAdd(b,c){return assert.isBuffer(b,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(b,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID),assert.isBuffer(c,messages.TWEAK_TYPE_INVALID),assert.isBufferLength(c,32,messages.TWEAK_LENGTH_INVALID),a.privateKeyTweakAdd(b,c)},privateKeyTweakMul:function privateKeyTweakMul(b,c){return assert.isBuffer(b,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(b,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID),assert.isBuffer(c,messages.TWEAK_TYPE_INVALID),assert.isBufferLength(c,32,messages.TWEAK_LENGTH_INVALID),a.privateKeyTweakMul(b,c)},publicKeyCreate:function publicKeyCreate(b,c){return assert.isBuffer(b,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(b,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID),c=initCompressedValue(c,!0),a.publicKeyCreate(b,c)},publicKeyConvert:function publicKeyConvert(b,c){return assert.isBuffer(b,messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(b,33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID),c=initCompressedValue(c,!0),a.publicKeyConvert(b,c)},publicKeyVerify:function publicKeyVerify(b){return assert.isBuffer(b,messages.EC_PUBLIC_KEY_TYPE_INVALID),a.publicKeyVerify(b)},publicKeyTweakAdd:function publicKeyTweakAdd(b,c,d){return assert.isBuffer(b,messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(b,33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID),assert.isBuffer(c,messages.TWEAK_TYPE_INVALID),assert.isBufferLength(c,32,messages.TWEAK_LENGTH_INVALID),d=initCompressedValue(d,!0),a.publicKeyTweakAdd(b,c,d)},publicKeyTweakMul:function publicKeyTweakMul(b,c,d){return assert.isBuffer(b,messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(b,33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID),assert.isBuffer(c,messages.TWEAK_TYPE_INVALID),assert.isBufferLength(c,32,messages.TWEAK_LENGTH_INVALID),d=initCompressedValue(d,!0),a.publicKeyTweakMul(b,c,d)},publicKeyCombine:function publicKeyCombine(b,c){assert.isArray(b,messages.EC_PUBLIC_KEYS_TYPE_INVALID),assert.isLengthGTZero(b,messages.EC_PUBLIC_KEYS_LENGTH_INVALID);for(var d=0;d<b.length;++d)assert.isBuffer(b[d],messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(b[d],33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID);return c=initCompressedValue(c,!0),a.publicKeyCombine(b,c)},signatureNormalize:function signatureNormalize(b){return assert.isBuffer(b,messages.ECDSA_SIGNATURE_TYPE_INVALID),assert.isBufferLength(b,64,messages.ECDSA_SIGNATURE_LENGTH_INVALID),a.signatureNormalize(b)},signatureExport:function signatureExport(b){assert.isBuffer(b,messages.ECDSA_SIGNATURE_TYPE_INVALID),assert.isBufferLength(b,64,messages.ECDSA_SIGNATURE_LENGTH_INVALID);var c=a.signatureExport(b);return der.signatureExport(c)},signatureImport:function signatureImport(b){assert.isBuffer(b,messages.ECDSA_SIGNATURE_TYPE_INVALID),assert.isLengthGTZero(b,messages.ECDSA_SIGNATURE_LENGTH_INVALID);var c=der.signatureImport(b);if(c)return a.signatureImport(c);throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)},signatureImportLax:function signatureImportLax(b){assert.isBuffer(b,messages.ECDSA_SIGNATURE_TYPE_INVALID),assert.isLengthGTZero(b,messages.ECDSA_SIGNATURE_LENGTH_INVALID);var c=der.signatureImportLax(b);if(c)return a.signatureImport(c);throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)},sign:function sign(b,c,d){assert.isBuffer(b,messages.MSG32_TYPE_INVALID),assert.isBufferLength(b,32,messages.MSG32_LENGTH_INVALID),assert.isBuffer(c,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(c,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID);var e=null,f=null;return void 0!==d&&(assert.isObject(d,messages.OPTIONS_TYPE_INVALID),void 0!==d.data&&(assert.isBuffer(d.data,messages.OPTIONS_DATA_TYPE_INVALID),assert.isBufferLength(d.data,32,messages.OPTIONS_DATA_LENGTH_INVALID),e=d.data),void 0!==d.noncefn&&(assert.isFunction(d.noncefn,messages.OPTIONS_NONCEFN_TYPE_INVALID),f=d.noncefn)),a.sign(b,c,f,e)},verify:function verify(b,c,d){return assert.isBuffer(b,messages.MSG32_TYPE_INVALID),assert.isBufferLength(b,32,messages.MSG32_LENGTH_INVALID),assert.isBuffer(c,messages.ECDSA_SIGNATURE_TYPE_INVALID),assert.isBufferLength(c,64,messages.ECDSA_SIGNATURE_LENGTH_INVALID),assert.isBuffer(d,messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(d,33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID),a.verify(b,c,d)},recover:function recover(b,c,d,e){return assert.isBuffer(b,messages.MSG32_TYPE_INVALID),assert.isBufferLength(b,32,messages.MSG32_LENGTH_INVALID),assert.isBuffer(c,messages.ECDSA_SIGNATURE_TYPE_INVALID),assert.isBufferLength(c,64,messages.ECDSA_SIGNATURE_LENGTH_INVALID),assert.isNumber(d,messages.RECOVERY_ID_TYPE_INVALID),assert.isNumberInInterval(d,-1,4,messages.RECOVERY_ID_VALUE_INVALID),e=initCompressedValue(e,!0),a.recover(b,c,d,e)},ecdh:function ecdh(b,c){return assert.isBuffer(b,messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(b,33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID),assert.isBuffer(c,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(c,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID),a.ecdh(b,c)},ecdhUnsafe:function ecdhUnsafe(b,c,d){return assert.isBuffer(b,messages.EC_PUBLIC_KEY_TYPE_INVALID),assert.isBufferLength2(b,33,65,messages.EC_PUBLIC_KEY_LENGTH_INVALID),assert.isBuffer(c,messages.EC_PRIVATE_KEY_TYPE_INVALID),assert.isBufferLength(c,32,messages.EC_PRIVATE_KEY_LENGTH_INVALID),d=initCompressedValue(d,!0),a.ecdhUnsafe(b,c,d)}}};

},{"./assert":238,"./der":239,"./messages.json":242}],242:[function(require,module,exports){
module.exports={
  "COMPRESSED_TYPE_INVALID": "compressed should be a boolean",
  "EC_PRIVATE_KEY_TYPE_INVALID": "private key should be a Buffer",
  "EC_PRIVATE_KEY_LENGTH_INVALID": "private key length is invalid",
  "EC_PRIVATE_KEY_TWEAK_ADD_FAIL": "tweak out of range or resulting private key is invalid",
  "EC_PRIVATE_KEY_TWEAK_MUL_FAIL": "tweak out of range",
  "EC_PRIVATE_KEY_EXPORT_DER_FAIL": "couldn't export to DER format",
  "EC_PRIVATE_KEY_IMPORT_DER_FAIL": "couldn't import from DER format",
  "EC_PUBLIC_KEYS_TYPE_INVALID": "public keys should be an Array",
  "EC_PUBLIC_KEYS_LENGTH_INVALID": "public keys Array should have at least 1 element",
  "EC_PUBLIC_KEY_TYPE_INVALID": "public key should be a Buffer",
  "EC_PUBLIC_KEY_LENGTH_INVALID": "public key length is invalid",
  "EC_PUBLIC_KEY_PARSE_FAIL": "the public key could not be parsed or is invalid",
  "EC_PUBLIC_KEY_CREATE_FAIL": "private was invalid, try again",
  "EC_PUBLIC_KEY_TWEAK_ADD_FAIL": "tweak out of range or resulting public key is invalid",
  "EC_PUBLIC_KEY_TWEAK_MUL_FAIL": "tweak out of range",
  "EC_PUBLIC_KEY_COMBINE_FAIL": "the sum of the public keys is not valid",
  "ECDH_FAIL": "scalar was invalid (zero or overflow)",
  "ECDSA_SIGNATURE_TYPE_INVALID": "signature should be a Buffer",
  "ECDSA_SIGNATURE_LENGTH_INVALID": "signature length is invalid",
  "ECDSA_SIGNATURE_PARSE_FAIL": "couldn't parse signature",
  "ECDSA_SIGNATURE_PARSE_DER_FAIL": "couldn't parse DER signature",
  "ECDSA_SIGNATURE_SERIALIZE_DER_FAIL": "couldn't serialize signature to DER format",
  "ECDSA_SIGN_FAIL": "nonce generation function failed or private key is invalid",
  "ECDSA_RECOVER_FAIL": "couldn't recover public key from signature",
  "MSG32_TYPE_INVALID": "message should be a Buffer",
  "MSG32_LENGTH_INVALID": "message length is invalid",
  "OPTIONS_TYPE_INVALID": "options should be an Object",
  "OPTIONS_DATA_TYPE_INVALID": "options.data should be a Buffer",
  "OPTIONS_DATA_LENGTH_INVALID": "options.data length is invalid",
  "OPTIONS_NONCEFN_TYPE_INVALID": "options.noncefn should be a Function",
  "RECOVERY_ID_TYPE_INVALID": "recovery should be a Number",
  "RECOVERY_ID_VALUE_INVALID": "recovery should have value between -1 and 4",
  "TWEAK_TYPE_INVALID": "tweak should be a Buffer",
  "TWEAK_LENGTH_INVALID": "tweak length is invalid"
}

},{}],243:[function(require,module,exports){
(function (process){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};;(function(a){'use strict';function b(c){var d={capacity:c||1,current:0,queue:[],firstHere:!1,take:function take(){if(!1===d.firstHere){d.current++,d.firstHere=!0;var e=1}else var e=0;var f={n:1};'function'==typeof arguments[0]?f.task=arguments[0]:f.n=arguments[0],2<=arguments.length&&('function'==typeof arguments[1]?f.task=arguments[1]:f.n=arguments[1]);var g=f.task;return f.task=function(){g(d.leave)},d.current+f.n-e>d.capacity?(1==e&&(d.current--,d.firstHere=!1),d.queue.push(f)):void(d.current+=f.n-e,f.task(d.leave),1==e&&(d.firstHere=!1))},leave:function leave(e){if(e=e||1,d.current-=e,!d.queue.length){if(0>d.current)throw new Error('leave called too many times.');return}var f=d.queue[0];f.n+d.current>d.capacity||(d.queue.shift(),d.current+=f.n,'undefined'!=typeof process&&process&&'function'==typeof process.nextTick?process.nextTick(f.task):setTimeout(f.task,0))}};return d};'object'==('undefined'==typeof exports?'undefined':_typeof(exports))?module.exports=b:'function'==typeof define&&define.amd?define(function(){return b}):a.semaphore=b})(void 0);

}).call(this,require('_process'))
},{"_process":213}],244:[function(require,module,exports){
(function (Buffer){
'use strict';// prototype class for hash functions
function Hash(a,b){this._block=new Buffer(a),this._finalSize=b,this._blockSize=a,this._len=0,this._s=0}Hash.prototype.update=function(a,b){'string'==typeof a&&(b=b||'utf8',a=new Buffer(a,b));for(var c=this._len+=a.length,d=this._s||0,e=0,g=this._block;d<c;){var h=Math.min(a.length,e+this._blockSize-d%this._blockSize),j=h-e;for(var k=0;k<j;k++)g[d%this._blockSize+k]=a[k+e];d+=j,e+=j,0==d%this._blockSize&&this._update(g)}return this._s=d,this},Hash.prototype.digest=function(a){// Suppose the length of the message M, in bits, is l
var b=8*this._len;// Append the bit 1 to the end of the message
this._block[this._len%this._blockSize]=128,this._block.fill(0,this._len%this._blockSize+1),b%(8*this._blockSize)>=8*this._finalSize&&(this._update(this._block),this._block.fill(0)),this._block.writeInt32BE(b,this._blockSize-4);var c=this._update(this._block)||this._hash();return a?c.toString(a):c},Hash.prototype._update=function(){throw new Error('_update must be implemented by subclass')},module.exports=Hash;

}).call(this,require("buffer").Buffer)
},{"buffer":62}],245:[function(require,module,exports){
'use strict';var _exports=module.exports=function(b){b=b.toLowerCase();var c=_exports[b];if(!c)throw new Error(b+' is not supported (we accept pull requests)');return new c};_exports.sha=require('./sha'),_exports.sha1=require('./sha1'),_exports.sha224=require('./sha224'),_exports.sha256=require('./sha256'),_exports.sha384=require('./sha384'),_exports.sha512=require('./sha512');

},{"./sha":246,"./sha1":247,"./sha224":248,"./sha256":249,"./sha384":250,"./sha512":251}],246:[function(require,module,exports){
(function (Buffer){
'use strict';/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */var inherits=require('inherits'),Hash=require('./hash'),K=[1518500249,1859775393,-1894007588,-899497514],W=Array(80);function Sha(){this.init(),this._w=W,Hash.call(this,64,56)}inherits(Sha,Hash),Sha.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this};function rotl5(f){return f<<5|f>>>27}function rotl30(f){return f<<30|f>>>2}function ft(f,g,h,k){return 0===f?g&h|~g&k:2===f?g&h|g&k|h&k:g^h^k}Sha.prototype._update=function(f){var g=this._w,h=0|this._a,k=0|this._b,l=0|this._c,m=0|this._d,n=0|this._e;for(var o=0;16>o;++o)g[o]=f.readInt32BE(4*o);for(;80>o;++o)g[o]=g[o-3]^g[o-8]^g[o-14]^g[o-16];for(var p=0;80>p;++p){var q=~~(p/20),r=0|rotl5(h)+ft(q,k,l,m)+n+g[p]+K[q];n=m,m=l,l=rotl30(k),k=h,h=r}this._a=0|h+this._a,this._b=0|k+this._b,this._c=0|l+this._c,this._d=0|m+this._d,this._e=0|n+this._e},Sha.prototype._hash=function(){var f=new Buffer(20);return f.writeInt32BE(0|this._a,0),f.writeInt32BE(0|this._b,4),f.writeInt32BE(0|this._c,8),f.writeInt32BE(0|this._d,12),f.writeInt32BE(0|this._e,16),f},module.exports=Sha;

}).call(this,require("buffer").Buffer)
},{"./hash":244,"buffer":62,"inherits":160}],247:[function(require,module,exports){
(function (Buffer){
'use strict';/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */var inherits=require('inherits'),Hash=require('./hash'),K=[1518500249,1859775393,-1894007588,-899497514],W=Array(80);function Sha1(){this.init(),this._w=W,Hash.call(this,64,56)}inherits(Sha1,Hash),Sha1.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this};function rotl1(f){return f<<1|f>>>31}function rotl5(f){return f<<5|f>>>27}function rotl30(f){return f<<30|f>>>2}function ft(f,g,h,k){return 0===f?g&h|~g&k:2===f?g&h|g&k|h&k:g^h^k}Sha1.prototype._update=function(f){var g=this._w,h=0|this._a,k=0|this._b,l=0|this._c,m=0|this._d,n=0|this._e;for(var o=0;16>o;++o)g[o]=f.readInt32BE(4*o);for(;80>o;++o)g[o]=rotl1(g[o-3]^g[o-8]^g[o-14]^g[o-16]);for(var p=0;80>p;++p){var q=~~(p/20),r=0|rotl5(h)+ft(q,k,l,m)+n+g[p]+K[q];n=m,m=l,l=rotl30(k),k=h,h=r}this._a=0|h+this._a,this._b=0|k+this._b,this._c=0|l+this._c,this._d=0|m+this._d,this._e=0|n+this._e},Sha1.prototype._hash=function(){var f=new Buffer(20);return f.writeInt32BE(0|this._a,0),f.writeInt32BE(0|this._b,4),f.writeInt32BE(0|this._c,8),f.writeInt32BE(0|this._d,12),f.writeInt32BE(0|this._e,16),f},module.exports=Sha1;

}).call(this,require("buffer").Buffer)
},{"./hash":244,"buffer":62,"inherits":160}],248:[function(require,module,exports){
(function (Buffer){
'use strict';/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */var inherits=require('inherits'),Sha256=require('./sha256'),Hash=require('./hash'),W=Array(64);function Sha224(){this.init(),this._w=W,Hash.call(this,64,56)}inherits(Sha224,Sha256),Sha224.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},Sha224.prototype._hash=function(){var a=new Buffer(28);return a.writeInt32BE(this._a,0),a.writeInt32BE(this._b,4),a.writeInt32BE(this._c,8),a.writeInt32BE(this._d,12),a.writeInt32BE(this._e,16),a.writeInt32BE(this._f,20),a.writeInt32BE(this._g,24),a},module.exports=Sha224;

}).call(this,require("buffer").Buffer)
},{"./hash":244,"./sha256":249,"buffer":62,"inherits":160}],249:[function(require,module,exports){
(function (Buffer){
'use strict';/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */var inherits=require('inherits'),Hash=require('./hash'),K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],W=Array(64);function Sha256(){this.init(),this._w=W,Hash.call(this,64,56)}inherits(Sha256,Hash),Sha256.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this};function ch(k,l,m){return m^k&(l^m)}function maj(k,l,m){return k&l|m&(k|l)}function sigma0(k){return(k>>>2|k<<30)^(k>>>13|k<<19)^(k>>>22|k<<10)}function sigma1(k){return(k>>>6|k<<26)^(k>>>11|k<<21)^(k>>>25|k<<7)}function gamma0(k){return(k>>>7|k<<25)^(k>>>18|k<<14)^k>>>3}function gamma1(k){return(k>>>17|k<<15)^(k>>>19|k<<13)^k>>>10}Sha256.prototype._update=function(k){var l=this._w,m=0|this._a,n=0|this._b,o=0|this._c,p=0|this._d,q=0|this._e,r=0|this._f,s=0|this._g,t=0|this._h;for(var u=0;16>u;++u)l[u]=k.readInt32BE(4*u);for(;64>u;++u)l[u]=0|gamma1(l[u-2])+l[u-7]+gamma0(l[u-15])+l[u-16];for(var v=0;64>v;++v){var w=0|t+sigma1(q)+ch(q,r,s)+K[v]+l[v],A=0|sigma0(m)+maj(m,n,o);t=s,s=r,r=q,q=0|p+w,p=o,o=n,n=m,m=0|w+A}this._a=0|m+this._a,this._b=0|n+this._b,this._c=0|o+this._c,this._d=0|p+this._d,this._e=0|q+this._e,this._f=0|r+this._f,this._g=0|s+this._g,this._h=0|t+this._h},Sha256.prototype._hash=function(){var k=new Buffer(32);return k.writeInt32BE(this._a,0),k.writeInt32BE(this._b,4),k.writeInt32BE(this._c,8),k.writeInt32BE(this._d,12),k.writeInt32BE(this._e,16),k.writeInt32BE(this._f,20),k.writeInt32BE(this._g,24),k.writeInt32BE(this._h,28),k},module.exports=Sha256;

}).call(this,require("buffer").Buffer)
},{"./hash":244,"buffer":62,"inherits":160}],250:[function(require,module,exports){
(function (Buffer){
'use strict';var inherits=require('inherits'),SHA512=require('./sha512'),Hash=require('./hash'),W=Array(160);function Sha384(){this.init(),this._w=W,Hash.call(this,128,112)}inherits(Sha384,SHA512),Sha384.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},Sha384.prototype._hash=function(){function a(c,d,e){b.writeInt32BE(c,e),b.writeInt32BE(d,e+4)}var b=new Buffer(48);return a(this._ah,this._al,0),a(this._bh,this._bl,8),a(this._ch,this._cl,16),a(this._dh,this._dl,24),a(this._eh,this._el,32),a(this._fh,this._fl,40),b},module.exports=Sha384;

}).call(this,require("buffer").Buffer)
},{"./hash":244,"./sha512":251,"buffer":62,"inherits":160}],251:[function(require,module,exports){
(function (Buffer){
'use strict';var inherits=require('inherits'),Hash=require('./hash'),K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],W=Array(160);function Sha512(){this.init(),this._w=W,Hash.call(this,128,112)}inherits(Sha512,Hash),Sha512.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this};function Ch(c,d,e){return e^c&(d^e)}function maj(c,d,e){return c&d|e&(c|d)}function sigma0(c,d){return(c>>>28|d<<4)^(d>>>2|c<<30)^(d>>>7|c<<25)}function sigma1(c,d){return(c>>>14|d<<18)^(c>>>18|d<<14)^(d>>>9|c<<23)}function Gamma0(c,d){return(c>>>1|d<<31)^(c>>>8|d<<24)^c>>>7}function Gamma0l(c,d){return(c>>>1|d<<31)^(c>>>8|d<<24)^(c>>>7|d<<25)}function Gamma1(c,d){return(c>>>19|d<<13)^(d>>>29|c<<3)^c>>>6}function Gamma1l(c,d){return(c>>>19|d<<13)^(d>>>29|c<<3)^(c>>>6|d<<26)}function getCarry(c,d){return c>>>0<d>>>0?1:0}Sha512.prototype._update=function(c){var d=this._w,e=0|this._ah,f=0|this._bh,g=0|this._ch,k=0|this._dh,m=0|this._eh,n=0|this._fh,o=0|this._gh,p=0|this._hh,q=0|this._al,r=0|this._bl,s=0|this._cl,t=0|this._dl,u=0|this._el,v=0|this._fl,w=0|this._gl,A=0|this._hl;for(var B=0;32>B;B+=2)d[B]=c.readInt32BE(4*B),d[B+1]=c.readInt32BE(4*B+4);for(;160>B;B+=2){var C=d[B-30],D=d[B-30+1],E=Gamma0(C,D),F=Gamma0l(D,C);C=d[B-4],D=d[B-4+1];var G=Gamma1(C,D),I=Gamma1l(D,C),J=d[B-14],L=d[B-14+1],N=d[B-32],O=d[B-32+1],P=0|F+L,Q=0|E+J+getCarry(P,F);// W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
P=0|P+I,Q=0|Q+G+getCarry(P,I),P=0|P+O,Q=0|Q+N+getCarry(P,O),d[B]=Q,d[B+1]=P}for(var R=0;160>R;R+=2){Q=d[R],P=d[R+1];var S=maj(e,f,g),T=maj(q,r,s),U=sigma0(e,q),V=sigma0(q,e),X=sigma1(m,u),Y=sigma1(u,m),Z=K[R],$=K[R+1],_=Ch(m,n,o),aa=Ch(u,v,w),ba=0|A+Y,ca=0|p+X+getCarry(ba,A);// t1 = h + sigma1 + ch + K[j] + W[j]
ba=0|ba+aa,ca=0|ca+_+getCarry(ba,aa),ba=0|ba+$,ca=0|ca+Z+getCarry(ba,$),ba=0|ba+P,ca=0|ca+Q+getCarry(ba,P);// t2 = sigma0 + maj
var da=0|V+T,ea=0|U+S+getCarry(da,V);p=o,A=w,o=n,w=v,n=m,v=u,u=0|t+ba,m=0|k+ca+getCarry(u,t),k=g,t=s,g=f,s=r,f=e,r=q,q=0|ba+da,e=0|ca+ea+getCarry(q,ba)}this._al=0|this._al+q,this._bl=0|this._bl+r,this._cl=0|this._cl+s,this._dl=0|this._dl+t,this._el=0|this._el+u,this._fl=0|this._fl+v,this._gl=0|this._gl+w,this._hl=0|this._hl+A,this._ah=0|this._ah+e+getCarry(this._al,q),this._bh=0|this._bh+f+getCarry(this._bl,r),this._ch=0|this._ch+g+getCarry(this._cl,s),this._dh=0|this._dh+k+getCarry(this._dl,t),this._eh=0|this._eh+m+getCarry(this._el,u),this._fh=0|this._fh+n+getCarry(this._fl,v),this._gh=0|this._gh+o+getCarry(this._gl,w),this._hh=0|this._hh+p+getCarry(this._hl,A)},Sha512.prototype._hash=function(){function c(e,f,g){d.writeInt32BE(e,g),d.writeInt32BE(f,g+4)}var d=new Buffer(64);return c(this._ah,this._al,0),c(this._bh,this._bl,8),c(this._ch,this._cl,16),c(this._dh,this._dl,24),c(this._eh,this._el,32),c(this._fh,this._fl,40),c(this._gh,this._gl,48),c(this._hh,this._hl,56),d},module.exports=Sha512;

}).call(this,require("buffer").Buffer)
},{"./hash":244,"buffer":62,"inherits":160}],252:[function(require,module,exports){
'use strict';module.exports=Stream;var EE=require('events').EventEmitter,inherits=require('inherits');inherits(Stream,EE),Stream.Readable=require('readable-stream/readable.js'),Stream.Writable=require('readable-stream/writable.js'),Stream.Duplex=require('readable-stream/duplex.js'),Stream.Transform=require('readable-stream/transform.js'),Stream.PassThrough=require('readable-stream/passthrough.js'),Stream.Stream=Stream;// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.
function Stream(){EE.call(this)}Stream.prototype.pipe=function(a,b){function c(k){a.writable&&!1===a.write(k)&&i.pause&&i.pause()}function d(){i.readable&&i.resume&&i.resume()}function e(){j||(j=!0,a.end())}function f(){j||(j=!0,'function'==typeof a.destroy&&a.destroy())}// don't leave dangling pipes when there are errors.
function g(k){if(h(),0===EE.listenerCount(this,'error'))throw k;// Unhandled stream error in pipe.
}// remove all the event listeners that were added.
function h(){i.removeListener('data',c),a.removeListener('drain',d),i.removeListener('end',e),i.removeListener('close',f),i.removeListener('error',g),a.removeListener('error',g),i.removeListener('end',h),i.removeListener('close',h),a.removeListener('close',h)}var i=this;i.on('data',c),a.on('drain',d),a._isStdio||b&&!1===b.end||(i.on('end',e),i.on('close',f));var j=!1;// Allow for unix-like usage: A.pipe(B).pipe(C)
return i.on('error',g),a.on('error',g),i.on('end',h),i.on('close',h),a.on('close',h),a.emit('pipe',i),a};

},{"events":148,"inherits":160,"readable-stream/duplex.js":222,"readable-stream/passthrough.js":229,"readable-stream/readable.js":230,"readable-stream/transform.js":231,"readable-stream/writable.js":232}],253:[function(require,module,exports){
'use strict';// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var Buffer=require('buffer').Buffer,isBufferEncoding=Buffer.isEncoding||function(a){switch(a&&a.toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':return!0;default:return!1;}};function assertEncoding(a){if(a&&!isBufferEncoding(a))throw new Error('Unknown encoding: '+a)}// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder=exports.StringDecoder=function(a){switch(this.encoding=(a||'utf8').toLowerCase().replace(/[-_]/,''),assertEncoding(a),this.encoding){case'utf8':this.surrogateSize=3;break;case'ucs2':case'utf16le':this.surrogateSize=2,this.detectIncompleteChar=utf16DetectIncompleteChar;break;case'base64':this.surrogateSize=3,this.detectIncompleteChar=base64DetectIncompleteChar;break;default:return void(this.write=passThroughWrite);}// Enough space to store all bytes of a single character. UTF-8 needs 4
// bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
this.charBuffer=new Buffer(6),this.charReceived=0,this.charLength=0};// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write=function(a){// if our last write ended with an incomplete multibyte character
for(var b='';this.charLength;){// determine how many remaining bytes this buffer has to offer for this char
var d=a.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:a.length;// add the new bytes to the char buffer
if(a.copy(this.charBuffer,this.charReceived,0,d),this.charReceived+=d,this.charReceived<this.charLength)// still not enough chars in this buffer? wait for more ...
return'';// remove bytes belonging to the current character from the buffer
a=a.slice(d,a.length),b=this.charBuffer.slice(0,this.charLength).toString(this.encoding);// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
var e=b.charCodeAt(b.length-1);if(55296<=e&&56319>=e){this.charLength+=this.surrogateSize,b='';continue}// if there are no more bytes in this buffer, just emit our char
if(this.charReceived=this.charLength=0,0===a.length)return b;break}// determine and set charLength / charReceived
this.detectIncompleteChar(a);var f=a.length;this.charLength&&(a.copy(this.charBuffer,0,a.length-this.charReceived,f),f-=this.charReceived),b+=a.toString(this.encoding,0,f);var f=b.length-1,e=b.charCodeAt(f);// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
if(55296<=e&&56319>=e){var g=this.surrogateSize;return this.charLength+=g,this.charReceived+=g,this.charBuffer.copy(this.charBuffer,g,0,g),a.copy(this.charBuffer,0,0,g),b.substring(0,f)}// or just emit the charStr
return b},StringDecoder.prototype.detectIncompleteChar=function(a){// Figure out if one of the last i bytes of our buffer announces an
// incomplete char.
for(// determine how many bytes we have to check at the end of this buffer
var b=3<=a.length?3:a.length;0<b;b--){var d=a[a.length-b];// See http://en.wikipedia.org/wiki/UTF-8#Description
// 110XXXXX
if(1==b&&6==d>>5){this.charLength=2;break}// 1110XXXX
if(2>=b&&14==d>>4){this.charLength=3;break}// 11110XXX
if(3>=b&&30==d>>3){this.charLength=4;break}}this.charReceived=b},StringDecoder.prototype.end=function(a){var b='';if(a&&a.length&&(b=this.write(a)),this.charReceived){var d=this.charReceived,e=this.charBuffer,f=this.encoding;b+=e.slice(0,d).toString(f)}return b};function passThroughWrite(a){return a.toString(this.encoding)}function utf16DetectIncompleteChar(a){this.charReceived=a.length%2,this.charLength=this.charReceived?2:0}function base64DetectIncompleteChar(a){this.charReceived=a.length%3,this.charLength=this.charReceived?3:0}

},{"buffer":62}],254:[function(require,module,exports){
"use strict";var nextTick=require("process/browser.js").nextTick,apply=Function.prototype.apply,slice=Array.prototype.slice,immediateIds={},nextImmediateId=0;// DOM APIs, for completeness
exports.setTimeout=function(){return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout)},exports.setInterval=function(){return new Timeout(apply.call(setInterval,window,arguments),clearInterval)},exports.clearTimeout=exports.clearInterval=function(a){a.close()};function Timeout(a,b){this._id=a,this._clearFn=b}Timeout.prototype.unref=Timeout.prototype.ref=function(){},Timeout.prototype.close=function(){this._clearFn.call(window,this._id)},exports.enroll=function(a,b){clearTimeout(a._idleTimeoutId),a._idleTimeout=b},exports.unenroll=function(a){clearTimeout(a._idleTimeoutId),a._idleTimeout=-1},exports._unrefActive=exports.active=function(a){clearTimeout(a._idleTimeoutId);var b=a._idleTimeout;0<=b&&(a._idleTimeoutId=setTimeout(function(){a._onTimeout&&a._onTimeout()},b))},exports.setImmediate="function"==typeof setImmediate?setImmediate:function(a){var b=nextImmediateId++,c=!(2>arguments.length)&&slice.call(arguments,1);return immediateIds[b]=!0,nextTick(function(){immediateIds[b]&&(c?a.apply(null,c):a.call(null),exports.clearImmediate(b))}),b},exports.clearImmediate="function"==typeof clearImmediate?clearImmediate:function(a){delete immediateIds[a]};

},{"process/browser.js":213}],255:[function(require,module,exports){
(function (global){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};/*! https://mths.be/utf8js v2.0.0 by @mathias */;(function(a){// Taken from https://mths.be/punycode
function b(s){for(var w,x,t=[],u=0,v=s.length;u<v;)w=s.charCodeAt(u++),55296<=w&&56319>=w&&u<v?(x=s.charCodeAt(u++),56320==(64512&x)?t.push(((1023&w)<<10)+(1023&x)+65536):(t.push(w),u--)):t.push(w);return t}// Taken from https://mths.be/punycode
function c(s){for(var v,t=s.length,u=-1,w='';++u<t;)v=s[u],65535<v&&(v-=65536,w+=l(55296|1023&v>>>10),v=56320|1023&v),w+=l(v);return w}function d(s){if(55296<=s&&57343>=s)throw Error('Lone surrogate U+'+s.toString(16).toUpperCase()+' is not a scalar value')}/*--------------------------------------------------------------------------*/function e(s,t){return l(128|63&s>>t)}function f(s){if(0==(4294967168&s))// 1-byte sequence
return l(s);var t='';return 0==(4294965248&s)?t=l(192|31&s>>6):0==(4294901760&s)?(d(s),t=l(224|15&s>>12),t+=e(s,6)):0==(4292870144&s)&&(t=l(240|7&s>>18),t+=e(s,12),t+=e(s,6)),t+=l(128|63&s),t}/*--------------------------------------------------------------------------*/function g(){if(o>=n)throw Error('Invalid byte index');var s=255&m[o];if(o++,128==(192&s))return 63&s;// If we end up here, it’s not a continuation byte
throw Error('Invalid continuation byte')}function h(){var s,t,u,v,w;if(o>n)throw Error('Invalid byte index');if(o==n)return!1;// Read first byte
// 1-byte sequence (no continuation bytes)
if(s=255&m[o],o++,0==(128&s))return s;// 2-byte sequence
if(192==(224&s)){var t=g();if(w=(31&s)<<6|t,128<=w)return w;throw Error('Invalid continuation byte')}// 3-byte sequence (may include unpaired surrogates)
if(224==(240&s)){if(t=g(),u=g(),w=(15&s)<<12|t<<6|u,2048<=w)return d(w),w;throw Error('Invalid continuation byte')}// 4-byte sequence
if(240==(248&s)&&(t=g(),u=g(),v=g(),w=(15&s)<<18|t<<12|u<<6|v,65536<=w&&1114111>=w))return w;throw Error('Invalid UTF-8 detected')}// Detect free variables `exports`
var i='object'==('undefined'==typeof exports?'undefined':_typeof(exports))&&exports,j='object'==('undefined'==typeof module?'undefined':_typeof(module))&&module&&module.exports==i&&module,k='object'==('undefined'==typeof global?'undefined':_typeof(global))&&global;// Detect free variable `module`
// Detect free variable `global`, from Node.js or Browserified code,
// and use it as `root`
(k.global===k||k.window===k)&&(a=k);/*--------------------------------------------------------------------------*/var l=String.fromCharCode,m,n,o,p={version:'2.0.0',encode:function encode(t){for(var x,u=b(t),v=u.length,w=-1,y='';++w<v;)x=u[w],y+=f(x);return y},decode:function decode(t){m=b(t),n=m.length,o=0;for(var v,u=[];!1!==(v=h());)u.push(v);return c(u)}/*--------------------------------------------------------------------------*/};// Some AMD build optimizers, like r.js, check for specific condition patterns
// like the following:
if('function'==typeof define&&'object'==_typeof(define.amd)&&define.amd)define(function(){return p});else if(!(i&&!i.nodeType))a.utf8=p;else if(j)j.exports=p;else{var q={}.hasOwnProperty;// in Narwhal or RingoJS v0.7.0-
for(var r in p)q.call(p,r)&&(i[r]=p[r])}})(void 0);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],256:[function(require,module,exports){
(function (global){
'use strict';module.exports=deprecate;/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */function deprecate(a,b){if(config('noDeprecation'))return a;var c=!1;return function(){if(!c){if(config('throwDeprecation'))throw new Error(b);else config('traceDeprecation')?console.trace(b):console.warn(b);c=!0}return a.apply(this,arguments)}}/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */function config(a){// accessing global.localStorage can trigger a DOMException in sandboxed iframes
try{if(!global.localStorage)return!1}catch(c){return!1}var b=global.localStorage[a];return null!=b&&'true'===(b+'').toLowerCase()}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],257:[function(require,module,exports){
arguments[4][160][0].apply(exports,arguments)
},{"dup":160}],258:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj};module.exports=function(b){return b&&'object'==('undefined'==typeof b?'undefined':_typeof(b))&&'function'==typeof b.copy&&'function'==typeof b.fill&&'function'==typeof b.readUInt8};

},{}],259:[function(require,module,exports){
(function (process,global){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},formatRegExp=/%[sdj%]/g;// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
exports.format=function(a){if(!isString(a)){var b=[];for(var c=0;c<arguments.length;c++)b.push(inspect(arguments[c]));return b.join(' ')}var c=1,g=arguments,h=g.length,j=(a+'').replace(formatRegExp,function(m){if('%%'===m)return'%';if(c>=h)return m;switch(m){case'%s':return g[c++]+'';case'%d':return+g[c++];case'%j':try{return JSON.stringify(g[c++])}catch(p){return'[Circular]'}default:return m;}});for(var k=g[c];c<h;k=g[++c])j+=isNull(k)||!isObject(k)?' '+k:' '+inspect(k);return j},exports.deprecate=function(a,b){// Allow for deprecating things in the process of starting up.
if(isUndefined(global.process))return function(){return exports.deprecate(a,b).apply(this,arguments)};if(!0===process.noDeprecation)return a;var c=!1;return function(){if(!c){if(process.throwDeprecation)throw new Error(b);else process.traceDeprecation?console.trace(b):console.error(b);c=!0}return a.apply(this,arguments)}};var debugs={},debugEnviron;exports.debuglog=function(a){if(isUndefined(debugEnviron)&&(debugEnviron=process.env.NODE_DEBUG||''),a=a.toUpperCase(),!debugs[a])if(new RegExp('\\b'+a+'\\b','i').test(debugEnviron)){var b=process.pid;debugs[a]=function(){var c=exports.format.apply(exports,arguments);console.error('%s %d: %s',a,b,c)}}else debugs[a]=function(){};return debugs[a]};/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 *//* legacy: obj, showHidden, depth, colors*/function inspect(a,b){// default options
var c={seen:[],stylize:stylizeNoColor};// legacy...
return 3<=arguments.length&&(c.depth=arguments[2]),4<=arguments.length&&(c.colors=arguments[3]),isBoolean(b)?c.showHidden=b:b&&exports._extend(c,b),isUndefined(c.showHidden)&&(c.showHidden=!1),isUndefined(c.depth)&&(c.depth=2),isUndefined(c.colors)&&(c.colors=!1),isUndefined(c.customInspect)&&(c.customInspect=!0),c.colors&&(c.stylize=stylizeWithColor),formatValue(c,a,c.depth)}exports.inspect=inspect,inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},inspect.styles={special:'cyan',number:'yellow',boolean:'yellow',undefined:'grey','null':'bold',string:'green',date:'magenta',// "name": intentionally not styling
regexp:'red'};function stylizeWithColor(a,b){var c=inspect.styles[b];return c?'\u001b['+inspect.colors[c][0]+'m'+a+'\u001b['+inspect.colors[c][1]+'m':a}function stylizeNoColor(a,b){return a}function arrayToHash(a){var b={};return a.forEach(function(c,g){b[c]=!0}),b}function formatValue(a,b,c){// Provide a hook for user-specified inspect functions.
// Check that value is an object with an inspect function on it
if(a.customInspect&&b&&isFunction(b.inspect)&&// Filter out the util module, it's inspect function is special
b.inspect!==exports.inspect&&// Also filter out any prototype objects using the circular check.
!(b.constructor&&b.constructor.prototype===b)){var g=b.inspect(c,a);return isString(g)||(g=formatValue(a,g,c)),g}// Primitive types cannot have properties
var h=formatPrimitive(a,b);if(h)return h;// Look up the keys of the object.
var j=Object.keys(b),k=arrayToHash(j);// IE doesn't make error fields non-enumerable
// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
if(a.showHidden&&(j=Object.getOwnPropertyNames(b)),isError(b)&&(0<=j.indexOf('message')||0<=j.indexOf('description')))return formatError(b);// Some type of object without properties can be shortcutted.
if(0===j.length){if(isFunction(b)){var m=b.name?': '+b.name:'';return a.stylize('[Function'+m+']','special')}if(isRegExp(b))return a.stylize(RegExp.prototype.toString.call(b),'regexp');if(isDate(b))return a.stylize(Date.prototype.toString.call(b),'date');if(isError(b))return formatError(b)}var p='',q=!1,r=['{','}'];// Make Array say that they are Array
// Make functions say that they are functions
if(isArray(b)&&(q=!0,r=['[',']']),isFunction(b)){var s=b.name?': '+b.name:'';p=' [Function'+s+']'}// Make RegExps say that they are RegExps
if(isRegExp(b)&&(p=' '+RegExp.prototype.toString.call(b)),isDate(b)&&(p=' '+Date.prototype.toUTCString.call(b)),isError(b)&&(p=' '+formatError(b)),0===j.length&&(!q||0==b.length))return r[0]+p+r[1];if(0>c)return isRegExp(b)?a.stylize(RegExp.prototype.toString.call(b),'regexp'):a.stylize('[Object]','special');a.seen.push(b);var t;return t=q?formatArray(a,b,c,k,j):j.map(function(u){return formatProperty(a,b,c,k,u,q)}),a.seen.pop(),reduceToSingleString(t,p,r)}function formatPrimitive(a,b){if(isUndefined(b))return a.stylize('undefined','undefined');if(isString(b)){var c='\''+JSON.stringify(b).replace(/^"|"$/g,'').replace(/'/g,'\\\'').replace(/\\"/g,'"')+'\'';return a.stylize(c,'string')}// For some reason typeof null is "object", so special case here.
return isNumber(b)?a.stylize(''+b,'number'):isBoolean(b)?a.stylize(''+b,'boolean'):isNull(b)?a.stylize('null','null'):void 0}function formatError(a){return'['+Error.prototype.toString.call(a)+']'}function formatArray(a,b,c,g,h){var j=[];for(var k=0,m=b.length;k<m;++k)hasOwnProperty(b,k+'')?j.push(formatProperty(a,b,c,g,k+'',!0)):j.push('');return h.forEach(function(p){p.match(/^\d+$/)||j.push(formatProperty(a,b,c,g,p,!0))}),j}function formatProperty(a,b,c,g,h,j){var k,m,p;if(p=Object.getOwnPropertyDescriptor(b,h)||{value:b[h]},p.get?p.set?m=a.stylize('[Getter/Setter]','special'):m=a.stylize('[Getter]','special'):p.set&&(m=a.stylize('[Setter]','special')),hasOwnProperty(g,h)||(k='['+h+']'),m||(0>a.seen.indexOf(p.value)?(m=isNull(c)?formatValue(a,p.value,null):formatValue(a,p.value,c-1),-1<m.indexOf('\n')&&(j?m=m.split('\n').map(function(q){return'  '+q}).join('\n').substr(2):m='\n'+m.split('\n').map(function(q){return'   '+q}).join('\n'))):m=a.stylize('[Circular]','special')),isUndefined(k)){if(j&&h.match(/^\d+$/))return m;k=JSON.stringify(''+h),k.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(k=k.substr(1,k.length-2),k=a.stylize(k,'name')):(k=k.replace(/'/g,'\\\'').replace(/\\"/g,'"').replace(/(^"|"$)/g,'\''),k=a.stylize(k,'string'))}return k+': '+m}function reduceToSingleString(a,b,c){var g=0,h=a.reduce(function(j,k){return g++,0<=k.indexOf('\n')&&g++,j+k.replace(/\u001b\[\d\d?m/g,'').length+1},0);return 60<h?c[0]+(''===b?'':b+'\n ')+' '+a.join(',\n  ')+' '+c[1]:c[0]+b+' '+a.join(', ')+' '+c[1]}// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(a){return Array.isArray(a)}exports.isArray=isArray;function isBoolean(a){return'boolean'==typeof a}exports.isBoolean=isBoolean;function isNull(a){return null===a}exports.isNull=isNull;function isNullOrUndefined(a){return null==a}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(a){return'number'==typeof a}exports.isNumber=isNumber;function isString(a){return'string'==typeof a}exports.isString=isString;function isSymbol(a){return'symbol'==('undefined'==typeof a?'undefined':_typeof(a))}exports.isSymbol=isSymbol;function isUndefined(a){return void 0===a}exports.isUndefined=isUndefined;function isRegExp(a){return isObject(a)&&'[object RegExp]'===objectToString(a)}exports.isRegExp=isRegExp;function isObject(a){return'object'==('undefined'==typeof a?'undefined':_typeof(a))&&null!==a}exports.isObject=isObject;function isDate(a){return isObject(a)&&'[object Date]'===objectToString(a)}exports.isDate=isDate;function isError(a){return isObject(a)&&('[object Error]'===objectToString(a)||a instanceof Error)}exports.isError=isError;function isFunction(a){return'function'==typeof a}exports.isFunction=isFunction;function isPrimitive(a){return null===a||'boolean'==typeof a||'number'==typeof a||'string'==typeof a||'symbol'==('undefined'==typeof a?'undefined':_typeof(a))||// ES6 symbol
'undefined'==typeof a}exports.isPrimitive=isPrimitive,exports.isBuffer=require('./support/isBuffer');function objectToString(a){return Object.prototype.toString.call(a)}function pad(a){return 10>a?'0'+a.toString(10):a.toString(10)}var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];// 26 Feb 16:19:34
function timestamp(){var a=new Date,b=[pad(a.getHours()),pad(a.getMinutes()),pad(a.getSeconds())].join(':');return[a.getDate(),months[a.getMonth()],b].join(' ')}// log is just a thin wrapper to console.log that prepends a timestamp
exports.log=function(){console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments))},exports.inherits=require('inherits'),exports._extend=function(a,b){// Don't do anything if add isn't an object
if(!b||!isObject(b))return a;for(var c=Object.keys(b),g=c.length;g--;)a[c[g]]=b[c[g]];return a};function hasOwnProperty(a,b){return Object.prototype.hasOwnProperty.call(a,b)}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":258,"_process":213,"inherits":257}],260:[function(require,module,exports){
(function (global){
"use strict";var rng;if(global.crypto&&crypto.getRandomValues){// WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
// Moderately fast, high quality
var _rnds8=new Uint8Array(16);rng=function rng(){return crypto.getRandomValues(_rnds8),_rnds8}}if(!rng){// Math.random()-based (RNG)
//
// If all else fails, use Math.random().  It's fast, but is of unspecified
// quality.
var _rnds=Array(16);rng=function rng(){for(var b,a=0;16>a;a++)0==(3&a)&&(b=4294967296*Math.random()),_rnds[a]=255&b>>>((3&a)<<3);return _rnds}}module.exports=rng;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],261:[function(require,module,exports){
'use strict';//     uuid.js
//
//     Copyright (c) 2010-2012 Robert Kieffer
//     MIT License - http://opensource.org/licenses/mit-license.php
// Unique ID creation requires a high quality random # generator.  We feature
// detect to determine the best RNG source, normalizing to a function that
// returns 128-bits of randomness, since that's what's usually required
var _rng=require('./rng'),_byteToHex=[],_hexToByte={};// Maps for number <-> hex string conversion
for(var i=0;256>i;i++)_byteToHex[i]=(i+256).toString(16).substr(1),_hexToByte[_byteToHex[i]]=i;// **`parse()` - Parse a UUID into it's component bytes**
function parse(a,c,d){var e=c&&d||0,f=0;// Zero out remaining bytes if string was short
for(c=c||[],a.toLowerCase().replace(/[0-9a-f]{2}/g,function(g){16>f&&(c[e+f++]=_hexToByte[g])});16>f;)c[e+f++]=0;return c}// **`unparse()` - Convert UUID byte array (ala parse()) into a string**
function unparse(a,c){var d=c||0,e=_byteToHex;return e[a[d++]]+e[a[d++]]+e[a[d++]]+e[a[d++]]+'-'+e[a[d++]]+e[a[d++]]+'-'+e[a[d++]]+e[a[d++]]+'-'+e[a[d++]]+e[a[d++]]+'-'+e[a[d++]]+e[a[d++]]+e[a[d++]]+e[a[d++]]+e[a[d++]]+e[a[d++]]}// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
// random #'s we need to init node and clockseq
var _seedBytes=_rng(),_nodeId=[1|_seedBytes[0],_seedBytes[1],_seedBytes[2],_seedBytes[3],_seedBytes[4],_seedBytes[5]],_clockseq=16383&(_seedBytes[6]<<8|_seedBytes[7]),_lastMSecs=0,_lastNSecs=0;// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
// Per 4.2.2, randomize (14 bit) clockseq
// Previous uuid creation time
// See https://github.com/broofa/node-uuid for API details
function v1(a,c,d){var e=c&&d||0,f=c||[];a=a||{};var g=void 0===a.clockseq?_clockseq:a.clockseq,h=void 0===a.msecs?new Date().getTime():a.msecs,j=void 0===a.nsecs?_lastNSecs+1:a.nsecs,k=h-_lastMSecs+(j-_lastNSecs)/10000;// UUID timestamps are 100 nano-second units since the Gregorian epoch,
// (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
// time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
// (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
// Per 4.2.1.2, use count of uuid's generated during the current clock
// cycle to simulate higher resolution clock
// Time since last uuid creation (in msecs)
// Per 4.2.1.2, Bump clockseq on clock regression
// Per 4.2.1.2 Throw error if too many uuids are requested
if(0>k&&void 0===a.clockseq&&(g=16383&g+1),(0>k||h>_lastMSecs)&&void 0===a.nsecs&&(j=0),10000<=j)throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');_lastMSecs=h,_lastNSecs=j,_clockseq=g,h+=12219292800000;// `time_low`
var l=(10000*(268435455&h)+j)%4294967296;f[e++]=255&l>>>24,f[e++]=255&l>>>16,f[e++]=255&l>>>8,f[e++]=255&l;// `time_mid`
var m=268435455&10000*(h/4294967296);f[e++]=255&m>>>8,f[e++]=255&m,f[e++]=16|15&m>>>24,f[e++]=255&m>>>16,f[e++]=128|g>>>8,f[e++]=255&g;// `node`
var o=a.node||_nodeId;for(var p=0;6>p;p++)f[e+p]=o[p];return c?c:unparse(f)}// **`v4()` - Generate random UUID**
// See https://github.com/broofa/node-uuid for API details
function v4(a,c,d){// Deprecated - 'format' argument, as supported in v1.2
var e=c&&d||0;'string'==typeof a&&(c='binary'==a?Array(16):null,a=null),a=a||{};var f=a.random||(a.rng||_rng)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
// Copy bytes to buffer, if provided
if(f[6]=64|15&f[6],f[8]=128|63&f[8],c)for(var g=0;16>g;g++)c[e+g]=f[g];return c||unparse(f)}// Export public API
var uuid=v4;uuid.v1=v1,uuid.v4=v4,uuid.parse=parse,uuid.unparse=unparse,module.exports=uuid;

},{"./rng":260}],262:[function(require,module,exports){
'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol?'symbol':typeof obj},indexOf=require('indexof'),Object_keys=function Object_keys(a){if(Object.keys)return Object.keys(a);var b=[];for(var c in a)b.push(c);return b},forEach=function forEach(a,b){if(a.forEach)return a.forEach(b);for(var c=0;c<a.length;c++)b(a[c],c,a)},defineProp=function(){try{return Object.defineProperty({},'_',{}),function(a,b,c){Object.defineProperty(a,b,{writable:!0,enumerable:!1,configurable:!0,value:c})}}catch(a){return function(b,c,d){b[c]=d}}}(),globals=['Array','Boolean','Date','Error','EvalError','Function','Infinity','JSON','Math','NaN','Number','Object','RangeError','ReferenceError','RegExp','String','SyntaxError','TypeError','URIError','decodeURI','decodeURIComponent','encodeURI','encodeURIComponent','escape','eval','isFinite','isNaN','parseFloat','parseInt','undefined','unescape'];function Context(){}Context.prototype={};var Script=exports.Script=function(b){return this instanceof Script?void(this.code=b):new Script(b)};Script.prototype.runInContext=function(a){if(!(a instanceof Context))throw new TypeError('needs a \'context\' argument.');var b=document.createElement('iframe');b.style||(b.style={}),b.style.display='none',document.body.appendChild(b);var c=b.contentWindow,d=c.eval,f=c.execScript;!d&&f&&(f.call(c,'null'),d=c.eval),forEach(Object_keys(a),function(j){c[j]=a[j]}),forEach(globals,function(j){a[j]&&(c[j]=a[j])});var g=Object_keys(c),h=d.call(c,this.code);return forEach(Object_keys(c),function(j){(j in a||-1===indexOf(g,j))&&(a[j]=c[j])}),forEach(globals,function(j){j in a||defineProp(a,j,c[j])}),document.body.removeChild(b),h},Script.prototype.runInThisContext=function(){return eval(this.code);// maybe...
},Script.prototype.runInNewContext=function(a){var b=Script.createContext(a),c=this.runInContext(b);return forEach(Object_keys(b),function(d){a[d]=b[d]}),c},forEach(Object_keys(Script.prototype),function(a){exports[a]=Script[a]=function(b){var c=Script(b);return c[a].apply(c,[].slice.call(arguments,1))}}),exports.createScript=function(a){return exports.Script(a)},exports.createContext=Script.createContext=function(a){var b=new Context;return'object'==('undefined'==typeof a?'undefined':_typeof(a))&&forEach(Object_keys(a),function(c){b[c]=a[c]}),b};

},{"indexof":159}],263:[function(require,module,exports){
"use strict";module.exports=extend;var hasOwnProperty=Object.prototype.hasOwnProperty;function extend(){var a={};for(var b=0;b<arguments.length;b++){var c=arguments[b];for(var d in c)hasOwnProperty.call(c,d)&&(a[d]=c[d])}return a}

},{}],264:[function(require,module,exports){
'use strict';module.exports={ABI:require('ethereumjs-abi'),Account:require('ethereumjs-account'),Block:require('ethereumjs-block'),Buffer:require('buffer'),BN:require('ethereumjs-util').BN,ICAP:require('ethereumjs-icap'),RLP:require('ethereumjs-util').rlp,Trie:require('merkle-patricia-tree'),Tx:require('ethereumjs-tx'),Units:require('ethereumjs-units'),Util:require('ethereumjs-util'),VM:require('ethereumjs-vm'),Wallet:require('ethereumjs-wallet'),WalletHD:require('ethereumjs-wallet/hdkey'),WalletThirdparty:require('ethereumjs-wallet/thirdparty')};

},{"buffer":62,"ethereumjs-abi":107,"ethereumjs-account":109,"ethereumjs-block":111,"ethereumjs-icap":116,"ethereumjs-tx":117,"ethereumjs-units":118,"ethereumjs-util":120,"ethereumjs-vm":121,"ethereumjs-wallet":146,"ethereumjs-wallet/hdkey":145,"ethereumjs-wallet/thirdparty":147,"merkle-patricia-tree":194}]},{},[264])(264)
});